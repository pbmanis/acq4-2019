(dp0
S'version'
p1
I22
sS'fileOrder'
p2
(lp3
S'C:\\Documents and Settings\\Experimenters\\luke\\acq4\\lib\\drivers\\nidaq\\NIDAQmx.h'
p4
asS'fileDefs'
p5
(dp6
N(dp7
S'functions'
p8
(dp9
sS'enums'
p10
(dp11
sS'variables'
p12
(dp13
sS'macros'
p14
(dp15
sS'unions'
p16
(dp17
sS'values'
p18
(dp19
sS'fnmacros'
p20
(dp21
sS'structs'
p22
(dp23
sS'types'
p24
(dp25
S'__int64'
p26
S'long long'
p27
sssS'NIDAQmx.h'
p28
(dp29
g8
(dp30
S'DAQmxSetSampClkSrc'
p31
((lp32
S'int32'
p33
aS'__stdcall'
p34
a((S'taskHandle'
p35
(lp36
S'TaskHandle'
p37
aNtp38
(S'data'
p39
(lp40
S'char'
p41
aS'*'
p42
aNtp43
tp44
tp45
sS'DAQmxSetCITwoEdgeSepSecondDigSyncEnable'
p46
((lp47
S'int32'
p48
ag34
a((S'taskHandle'
p49
(lp50
S'TaskHandle'
p51
aNtp52
(S'channel'
p53
(lp54
S'char'
p55
a(lp56
I-1
aaNtp57
(S'data'
p58
(lp59
S'bool32'
p60
aNtp61
tp62
tp63
sS'DAQmxTaskControl'
p64
((lp65
S'int32'
p66
ag34
a((S'taskHandle'
p67
(lp68
S'TaskHandle'
p69
aNtp70
(S'action'
p71
(lp72
S'int32'
p73
aNtp74
tp75
tp76
sS'DAQmxGetReadSleepTime'
p77
((lp78
S'int32'
p79
ag34
a((S'taskHandle'
p80
(lp81
S'TaskHandle'
p82
aNtp83
(S'data'
p84
(lp85
S'float64'
p86
ag42
aNtp87
tp88
tp89
sS'DAQmxGetCIDataXferMech'
p90
((lp91
S'int32'
p92
ag34
a((S'taskHandle'
p93
(lp94
S'TaskHandle'
p95
aNtp96
(S'channel'
p97
(lp98
S'char'
p99
a(lp100
I-1
aaNtp101
(S'data'
p102
(lp103
S'int32'
p104
ag42
aNtp105
tp106
tp107
sS'DAQmxResetAIDataXferCustomThreshold'
p108
((lp109
S'int32'
p110
ag34
a((S'taskHandle'
p111
(lp112
S'TaskHandle'
p113
aNtp114
(S'channel'
p115
(lp116
S'char'
p117
a(lp118
I-1
aaNtp119
tp120
tp121
sS'DAQmxLoadTask'
p122
((lp123
S'int32'
p124
ag34
a((S'taskName'
p125
(lp126
S'char'
p127
a(lp128
I-1
aaNtp129
(S'taskHandle'
p130
(lp131
S'TaskHandle'
p132
ag42
aNtp133
tp134
tp135
sS'DAQmxCreateAIResistanceChan'
p136
((lp137
S'int32'
p138
ag34
a((S'taskHandle'
p139
(lp140
S'TaskHandle'
p141
aNtp142
(S'physicalChannel'
p143
(lp144
S'char'
p145
a(lp146
I-1
aaNtp147
(S'nameToAssignToChannel'
p148
(lp149
S'char'
p150
a(lp151
I-1
aaNtp152
(S'minVal'
p153
(lp154
S'float64'
p155
aNtp156
(S'maxVal'
p157
(lp158
S'float64'
p159
aNtp160
(S'units'
p161
(lp162
S'int32'
p163
aNtp164
(S'resistanceConfig'
p165
(lp166
S'int32'
p167
aNtp168
(S'currentExcitSource'
p169
(lp170
S'int32'
p171
aNtp172
(S'currentExcitVal'
p173
(lp174
S'float64'
p175
aNtp176
(S'customScaleName'
p177
(lp178
S'char'
p179
a(lp180
I-1
aaNtp181
tp182
tp183
sS'DAQmxGetCICountEdgesActiveEdge'
p184
((lp185
S'int32'
p186
ag34
a((S'taskHandle'
p187
(lp188
S'TaskHandle'
p189
aNtp190
(S'channel'
p191
(lp192
S'char'
p193
a(lp194
I-1
aaNtp195
(S'data'
p196
(lp197
S'int32'
p198
ag42
aNtp199
tp200
tp201
sS'DAQmxGetSysDevNames'
p202
((lp203
S'int32'
p204
ag34
a((S'data'
p205
(lp206
S'char'
p207
ag42
aNtp208
(S'bufferSize'
p209
(lp210
S'uInt32'
p211
aNtp212
tp213
tp214
sS'DAQmxSwitchCreateScanList'
p215
((lp216
S'int32'
p217
ag34
a((S'scanList'
p218
(lp219
S'char'
p220
a(lp221
I-1
aaNtp222
(S'taskHandle'
p223
(lp224
S'TaskHandle'
p225
ag42
aNtp226
tp227
tp228
sS'DAQmxResetAITempUnits'
p229
((lp230
S'int32'
p231
ag34
a((S'taskHandle'
p232
(lp233
S'TaskHandle'
p234
aNtp235
(S'channel'
p236
(lp237
S'char'
p238
a(lp239
I-1
aaNtp240
tp241
tp242
sS'DAQmxGetAIStrainUnits'
p243
((lp244
S'int32'
p245
ag34
a((S'taskHandle'
p246
(lp247
S'TaskHandle'
p248
aNtp249
(S'channel'
p250
(lp251
S'char'
p252
a(lp253
I-1
aaNtp254
(S'data'
p255
(lp256
S'int32'
p257
ag42
aNtp258
tp259
tp260
sS'DAQmxGetSampClkDigFltrEnable'
p261
((lp262
S'int32'
p263
ag34
a((S'taskHandle'
p264
(lp265
S'TaskHandle'
p266
aNtp267
(S'data'
p268
(lp269
S'bool32'
p270
ag42
aNtp271
tp272
tp273
sS'DAQmxGetAIExcitActualVal'
p274
((lp275
S'int32'
p276
ag34
a((S'taskHandle'
p277
(lp278
S'TaskHandle'
p279
aNtp280
(S'channel'
p281
(lp282
S'char'
p283
a(lp284
I-1
aaNtp285
(S'data'
p286
(lp287
S'float64'
p288
ag42
aNtp289
tp290
tp291
sS'DAQmxGetCITimestampInitialSeconds'
p292
((lp293
S'int32'
p294
ag34
a((S'taskHandle'
p295
(lp296
S'TaskHandle'
p297
aNtp298
(S'channel'
p299
(lp300
S'char'
p301
a(lp302
I-1
aaNtp303
(S'data'
p304
(lp305
S'uInt32'
p306
ag42
aNtp307
tp308
tp309
sS'DAQmxSetCOPulseFreqInitialDelay'
p310
((lp311
S'int32'
p312
ag34
a((S'taskHandle'
p313
(lp314
S'TaskHandle'
p315
aNtp316
(S'channel'
p317
(lp318
S'char'
p319
a(lp320
I-1
aaNtp321
(S'data'
p322
(lp323
S'float64'
p324
aNtp325
tp326
tp327
sS'DAQmxSetSwitchDevAutoConnAnlgBus'
p328
((lp329
S'int32'
p330
ag34
a((S'deviceName'
p331
(lp332
S'char'
p333
a(lp334
I-1
aaNtp335
(S'data'
p336
(lp337
S'bool32'
p338
aNtp339
tp340
tp341
sS'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate'
p342
((lp343
S'int32'
p344
ag34
a((S'taskHandle'
p345
(lp346
S'TaskHandle'
p347
aNtp348
(S'data'
p349
(lp350
S'float64'
p351
aNtp352
tp353
tp354
sS'DAQmxSetCIEncoderBInputDigSyncEnable'
p355
((lp356
S'int32'
p357
ag34
a((S'taskHandle'
p358
(lp359
S'TaskHandle'
p360
aNtp361
(S'channel'
p362
(lp363
S'char'
p364
a(lp365
I-1
aaNtp366
(S'data'
p367
(lp368
S'bool32'
p369
aNtp370
tp371
tp372
sS'DAQmxResetAIChanCalScaleType'
p373
((lp374
S'int32'
p375
ag34
a((S'taskHandle'
p376
(lp377
S'TaskHandle'
p378
aNtp379
(S'channel'
p380
(lp381
S'char'
p382
a(lp383
I-1
aaNtp384
tp385
tp386
sS'DAQmxResetCIFreqDigSyncEnable'
p387
((lp388
S'int32'
p389
ag34
a((S'taskHandle'
p390
(lp391
S'TaskHandle'
p392
aNtp393
(S'channel'
p394
(lp395
S'char'
p396
a(lp397
I-1
aaNtp398
tp399
tp400
sS'DAQmxGetAIChanCalVerifRefVals'
p401
((lp402
S'int32'
p403
ag34
a((S'taskHandle'
p404
(lp405
S'TaskHandle'
p406
aNtp407
(S'channel'
p408
(lp409
S'char'
p410
a(lp411
I-1
aaNtp412
(S'data'
p413
(lp414
S'float64'
p415
ag42
aNtp416
(S'arraySizeInSamples'
p417
(lp418
S'uInt32'
p419
aNtp420
tp421
tp422
sS'DAQmxGetAnlgEdgeRefTrigSlope'
p423
((lp424
S'int32'
p425
ag34
a((S'taskHandle'
p426
(lp427
S'TaskHandle'
p428
aNtp429
(S'data'
p430
(lp431
S'int32'
p432
ag42
aNtp433
tp434
tp435
sS'DAQmxGetDigEdgeRefTrigEdge'
p436
((lp437
S'int32'
p438
ag34
a((S'taskHandle'
p439
(lp440
S'TaskHandle'
p441
aNtp442
(S'data'
p443
(lp444
S'int32'
p445
ag42
aNtp446
tp447
tp448
sS'DAQmxSetHshkTrigType'
p449
((lp450
S'int32'
p451
ag34
a((S'taskHandle'
p452
(lp453
S'TaskHandle'
p454
aNtp455
(S'data'
p456
(lp457
S'int32'
p458
aNtp459
tp460
tp461
sS'DAQmxSetWriteWaitMode'
p462
((lp463
S'int32'
p464
ag34
a((S'taskHandle'
p465
(lp466
S'TaskHandle'
p467
aNtp468
(S'data'
p469
(lp470
S'int32'
p471
aNtp472
tp473
tp474
sS'DAQmxSetAIConvSrc'
p475
((lp476
S'int32'
p477
ag34
a((S'taskHandle'
p478
(lp479
S'TaskHandle'
p480
aNtp481
(S'data'
p482
(lp483
S'char'
p484
ag42
aNtp485
tp486
tp487
sS'DAQmxTristateOutputTerm'
p488
((lp489
S'int32'
p490
ag34
a((S'outputTerminal'
p491
(lp492
S'char'
p493
a(lp494
I-1
aaNtp495
tp496
tp497
sS'DAQmxGetExportedSampClkOutputBehavior'
p498
((lp499
S'int32'
p500
ag34
a((S'taskHandle'
p501
(lp502
S'TaskHandle'
p503
aNtp504
(S'data'
p505
(lp506
S'int32'
p507
ag42
aNtp508
tp509
tp510
sS'DAQmxGetPersistedChanAllowInteractiveDeletion'
p511
((lp512
S'int32'
p513
ag34
a((S'channel'
p514
(lp515
S'char'
p516
a(lp517
I-1
aaNtp518
(S'data'
p519
(lp520
S'bool32'
p521
ag42
aNtp522
tp523
tp524
sS'DAQmxGetAIAccelSensitivityUnits'
p525
((lp526
S'int32'
p527
ag34
a((S'taskHandle'
p528
(lp529
S'TaskHandle'
p530
aNtp531
(S'channel'
p532
(lp533
S'char'
p534
a(lp535
I-1
aaNtp536
(S'data'
p537
(lp538
S'int32'
p539
ag42
aNtp540
tp541
tp542
sS'DAQmxCreateCITwoEdgeSepChan'
p543
((lp544
S'int32'
p545
ag34
a((S'taskHandle'
p546
(lp547
S'TaskHandle'
p548
aNtp549
(S'counter'
p550
(lp551
S'char'
p552
a(lp553
I-1
aaNtp554
(S'nameToAssignToChannel'
p555
(lp556
S'char'
p557
a(lp558
I-1
aaNtp559
(S'minVal'
p560
(lp561
S'float64'
p562
aNtp563
(S'maxVal'
p564
(lp565
S'float64'
p566
aNtp567
(S'units'
p568
(lp569
S'int32'
p570
aNtp571
(S'firstEdge'
p572
(lp573
S'int32'
p574
aNtp575
(S'secondEdge'
p576
(lp577
S'int32'
p578
aNtp579
(S'customScaleName'
p580
(lp581
S'char'
p582
a(lp583
I-1
aaNtp584
tp585
tp586
sS'DAQmxGetCISemiPeriodDigFltrMinPulseWidth'
p587
((lp588
S'int32'
p589
ag34
a((S'taskHandle'
p590
(lp591
S'TaskHandle'
p592
aNtp593
(S'channel'
p594
(lp595
S'char'
p596
a(lp597
I-1
aaNtp598
(S'data'
p599
(lp600
S'float64'
p601
ag42
aNtp602
tp603
tp604
sS'DAQmxRestoreLastExtCalConst'
p605
((lp606
S'int32'
p607
ag34
a((S'deviceName'
p608
(lp609
S'char'
p610
a(lp611
I-1
aaNtp612
tp613
tp614
sS'DAQmxSetHshkSampleInputDataWhen'
p615
((lp616
S'int32'
p617
ag34
a((S'taskHandle'
p618
(lp619
S'TaskHandle'
p620
aNtp621
(S'data'
p622
(lp623
S'int32'
p624
aNtp625
tp626
tp627
sS'DAQmxGetCITwoEdgeSepSecondDigFltrEnable'
p628
((lp629
S'int32'
p630
ag34
a((S'taskHandle'
p631
(lp632
S'TaskHandle'
p633
aNtp634
(S'channel'
p635
(lp636
S'char'
p637
a(lp638
I-1
aaNtp639
(S'data'
p640
(lp641
S'bool32'
p642
ag42
aNtp643
tp644
tp645
sS'DAQmxGetNthTaskChannel'
p646
((lp647
S'int32'
p648
ag34
a((S'taskHandle'
p649
(lp650
S'TaskHandle'
p651
aNtp652
(S'index'
p653
(lp654
S'uInt32'
p655
aNtp656
(S'buffer'
p657
(lp658
S'char'
p659
a(lp660
I-1
aaNtp661
(S'bufferSize'
p662
(lp663
S'int32'
p664
aNtp665
tp666
tp667
sS'DAQmxSetCIMin'
p668
((lp669
S'int32'
p670
ag34
a((S'taskHandle'
p671
(lp672
S'TaskHandle'
p673
aNtp674
(S'channel'
p675
(lp676
S'char'
p677
a(lp678
I-1
aaNtp679
(S'data'
p680
(lp681
S'float64'
p682
aNtp683
tp684
tp685
sS'DAQmxSetup1520Cal'
p686
((lp687
S'int32'
p688
ag34
a((S'calHandle'
p689
(lp690
S'uInt32'
p691
aNtp692
(S'channelNames'
p693
(lp694
S'char'
p695
a(lp696
I-1
aaNtp697
(S'gain'
p698
(lp699
S'float64'
p700
aNtp701
tp702
tp703
sS'DAQmxGetCIEncoderZInputDigFltrTimebaseSrc'
p704
((lp705
S'int32'
p706
ag34
a((S'taskHandle'
p707
(lp708
S'TaskHandle'
p709
aNtp710
(S'channel'
p711
(lp712
S'char'
p713
a(lp714
I-1
aaNtp715
(S'data'
p716
(lp717
S'char'
p718
ag42
aNtp719
(S'bufferSize'
p720
(lp721
S'uInt32'
p722
aNtp723
tp724
tp725
sS'DAQmxGetAITermCfg'
p726
((lp727
S'int32'
p728
ag34
a((S'taskHandle'
p729
(lp730
S'TaskHandle'
p731
aNtp732
(S'channel'
p733
(lp734
S'char'
p735
a(lp736
I-1
aaNtp737
(S'data'
p738
(lp739
S'int32'
p740
ag42
aNtp741
tp742
tp743
sS'DAQmxSetCICustomScaleName'
p744
((lp745
S'int32'
p746
ag34
a((S'taskHandle'
p747
(lp748
S'TaskHandle'
p749
aNtp750
(S'channel'
p751
(lp752
S'char'
p753
a(lp754
I-1
aaNtp755
(S'data'
p756
(lp757
S'char'
p758
ag42
aNtp759
tp760
tp761
sS'DAQmxSetAnlgWinStartTrigSrc'
p762
((lp763
S'int32'
p764
ag34
a((S'taskHandle'
p765
(lp766
S'TaskHandle'
p767
aNtp768
(S'data'
p769
(lp770
S'char'
p771
ag42
aNtp772
tp773
tp774
sS'DAQmxDisableRefTrig'
p775
((lp776
S'int32'
p777
ag34
a((S'taskHandle'
p778
(lp779
S'TaskHandle'
p780
aNtp781
tp782
tp783
sS'DAQmxResetAIBridgeShuntCalGainAdjust'
p784
((lp785
S'int32'
p786
ag34
a((S'taskHandle'
p787
(lp788
S'TaskHandle'
p789
aNtp790
(S'channel'
p791
(lp792
S'char'
p793
a(lp794
I-1
aaNtp795
tp796
tp797
sS'DAQmxSetAIThrmcplType'
p798
((lp799
S'int32'
p800
ag34
a((S'taskHandle'
p801
(lp802
S'TaskHandle'
p803
aNtp804
(S'channel'
p805
(lp806
S'char'
p807
a(lp808
I-1
aaNtp809
(S'data'
p810
(lp811
S'int32'
p812
aNtp813
tp814
tp815
sS'DAQmxResetExportedDividedSampClkTimebaseOutputTerm'
p816
((lp817
S'int32'
p818
ag34
a((S'taskHandle'
p819
(lp820
S'TaskHandle'
p821
aNtp822
tp823
tp824
sS'DAQmxResetAOMax'
p825
((lp826
S'int32'
p827
ag34
a((S'taskHandle'
p828
(lp829
S'TaskHandle'
p830
aNtp831
(S'channel'
p832
(lp833
S'char'
p834
a(lp835
I-1
aaNtp836
tp837
tp838
sS'DAQmxSetAIInputSrc'
p839
((lp840
S'int32'
p841
ag34
a((S'taskHandle'
p842
(lp843
S'TaskHandle'
p844
aNtp845
(S'channel'
p846
(lp847
S'char'
p848
a(lp849
I-1
aaNtp850
(S'data'
p851
(lp852
S'char'
p853
ag42
aNtp854
tp855
tp856
sS'DAQmxSetAnlgWinRefTrigWhen'
p857
((lp858
S'int32'
p859
ag34
a((S'taskHandle'
p860
(lp861
S'TaskHandle'
p862
aNtp863
(S'data'
p864
(lp865
S'int32'
p866
aNtp867
tp868
tp869
sS'DAQmxGetAIRawDataCompressionType'
p870
((lp871
S'int32'
p872
ag34
a((S'taskHandle'
p873
(lp874
S'TaskHandle'
p875
aNtp876
(S'channel'
p877
(lp878
S'char'
p879
a(lp880
I-1
aaNtp881
(S'data'
p882
(lp883
S'int32'
p884
ag42
aNtp885
tp886
tp887
sS'DAQmxMSeriesCalAdjust'
p888
((lp889
S'int32'
p890
ag34
a((S'calHandle'
p891
(lp892
S'uInt32'
p893
aNtp894
(S'referenceVoltage'
p895
(lp896
S'float64'
p897
aNtp898
tp899
tp900
sS'DAQmxGetAIACExcitWireMode'
p901
((lp902
S'int32'
p903
ag34
a((S'taskHandle'
p904
(lp905
S'TaskHandle'
p906
aNtp907
(S'channel'
p908
(lp909
S'char'
p910
a(lp911
I-1
aaNtp912
(S'data'
p913
(lp914
S'int32'
p915
ag42
aNtp916
tp917
tp918
sS'DAQmxCfgBurstHandshakingTimingImportClock'
p919
((lp920
S'int32'
p921
ag34
a((S'taskHandle'
p922
(lp923
S'TaskHandle'
p924
aNtp925
(S'sampleMode'
p926
(lp927
S'int32'
p928
aNtp929
(S'sampsPerChan'
p930
(lp931
S'uInt64'
p932
aNtp933
(S'sampleClkRate'
p934
(lp935
S'float64'
p936
aNtp937
(S'sampleClkSrc'
p938
(lp939
S'char'
p940
a(lp941
I-1
aaNtp942
(S'sampleClkActiveEdge'
p943
(lp944
S'int32'
p945
aNtp946
(S'pauseWhen'
p947
(lp948
S'int32'
p949
aNtp950
(S'readyEventActiveLevel'
p951
(lp952
S'int32'
p953
aNtp954
tp955
tp956
sS'DAQmxResetExported20MHzTimebaseOutputTerm'
p957
((lp958
S'int32'
p959
ag34
a((S'taskHandle'
p960
(lp961
S'TaskHandle'
p962
aNtp963
tp964
tp965
sS'DAQmxGetDigEdgeArmStartTrigSrc'
p966
((lp967
S'int32'
p968
ag34
a((S'taskHandle'
p969
(lp970
S'TaskHandle'
p971
aNtp972
(S'data'
p973
(lp974
S'char'
p975
ag42
aNtp976
(S'bufferSize'
p977
(lp978
S'uInt32'
p979
aNtp980
tp981
tp982
sS'DAQmxCreateAIVoltageChanWithExcit'
p983
((lp984
S'int32'
p985
ag34
a((S'taskHandle'
p986
(lp987
S'TaskHandle'
p988
aNtp989
(S'physicalChannel'
p990
(lp991
S'char'
p992
a(lp993
I-1
aaNtp994
(S'nameToAssignToChannel'
p995
(lp996
S'char'
p997
a(lp998
I-1
aaNtp999
(S'terminalConfig'
p1000
(lp1001
S'int32'
p1002
aNtp1003
(S'minVal'
p1004
(lp1005
S'float64'
p1006
aNtp1007
(S'maxVal'
p1008
(lp1009
S'float64'
p1010
aNtp1011
(S'units'
p1012
(lp1013
S'int32'
p1014
aNtp1015
(S'bridgeConfig'
p1016
(lp1017
S'int32'
p1018
aNtp1019
(S'voltageExcitSource'
p1020
(lp1021
S'int32'
p1022
aNtp1023
(S'voltageExcitVal'
p1024
(lp1025
S'float64'
p1026
aNtp1027
(S'useExcitForScaling'
p1028
(lp1029
S'bool32'
p1030
aNtp1031
(S'customScaleName'
p1032
(lp1033
S'char'
p1034
a(lp1035
I-1
aaNtp1036
tp1037
tp1038
sS'DAQmxSetCIPeriodDigFltrEnable'
p1039
((lp1040
S'int32'
p1041
ag34
a((S'taskHandle'
p1042
(lp1043
S'TaskHandle'
p1044
aNtp1045
(S'channel'
p1046
(lp1047
S'char'
p1048
a(lp1049
I-1
aaNtp1050
(S'data'
p1051
(lp1052
S'bool32'
p1053
aNtp1054
tp1055
tp1056
sS'DAQmxSetCICtrTimebaseDigFltrTimebaseSrc'
p1057
((lp1058
S'int32'
p1059
ag34
a((S'taskHandle'
p1060
(lp1061
S'TaskHandle'
p1062
aNtp1063
(S'channel'
p1064
(lp1065
S'char'
p1066
a(lp1067
I-1
aaNtp1068
(S'data'
p1069
(lp1070
S'char'
p1071
ag42
aNtp1072
tp1073
tp1074
sS'DAQmxGetAIACExcitFreq'
p1075
((lp1076
S'int32'
p1077
ag34
a((S'taskHandle'
p1078
(lp1079
S'TaskHandle'
p1080
aNtp1081
(S'channel'
p1082
(lp1083
S'char'
p1084
a(lp1085
I-1
aaNtp1086
(S'data'
p1087
(lp1088
S'float64'
p1089
ag42
aNtp1090
tp1091
tp1092
sS'DAQmxCreateTEDSAIMicrophoneChan'
p1093
((lp1094
S'int32'
p1095
ag34
a((S'taskHandle'
p1096
(lp1097
S'TaskHandle'
p1098
aNtp1099
(S'physicalChannel'
p1100
(lp1101
S'char'
p1102
a(lp1103
I-1
aaNtp1104
(S'nameToAssignToChannel'
p1105
(lp1106
S'char'
p1107
a(lp1108
I-1
aaNtp1109
(S'terminalConfig'
p1110
(lp1111
S'int32'
p1112
aNtp1113
(S'units'
p1114
(lp1115
S'int32'
p1116
aNtp1117
(S'maxSndPressLevel'
p1118
(lp1119
S'float64'
p1120
aNtp1121
(S'currentExcitSource'
p1122
(lp1123
S'int32'
p1124
aNtp1125
(S'currentExcitVal'
p1126
(lp1127
S'float64'
p1128
aNtp1129
(S'customScaleName'
p1130
(lp1131
S'char'
p1132
a(lp1133
I-1
aaNtp1134
tp1135
tp1136
sS'DAQmxCfgDigEdgeAdvTrig'
p1137
((lp1138
S'int32'
p1139
ag34
a((S'taskHandle'
p1140
(lp1141
S'TaskHandle'
p1142
aNtp1143
(S'triggerSource'
p1144
(lp1145
S'char'
p1146
a(lp1147
I-1
aaNtp1148
(S'triggerEdge'
p1149
(lp1150
S'int32'
p1151
aNtp1152
tp1153
tp1154
sS'DAQmxSSeriesCalAdjust'
p1155
((lp1156
S'int32'
p1157
ag34
a((S'calHandle'
p1158
(lp1159
S'uInt32'
p1160
aNtp1161
(S'referenceVoltage'
p1162
(lp1163
S'float64'
p1164
aNtp1165
tp1166
tp1167
sS'DAQmxGetDigEdgeAdvTrigEdge'
p1168
((lp1169
S'int32'
p1170
ag34
a((S'taskHandle'
p1171
(lp1172
S'TaskHandle'
p1173
aNtp1174
(S'data'
p1175
(lp1176
S'int32'
p1177
ag42
aNtp1178
tp1179
tp1180
sS'DAQmxGetCISemiPeriodDigFltrEnable'
p1181
((lp1182
S'int32'
p1183
ag34
a((S'taskHandle'
p1184
(lp1185
S'TaskHandle'
p1186
aNtp1187
(S'channel'
p1188
(lp1189
S'char'
p1190
a(lp1191
I-1
aaNtp1192
(S'data'
p1193
(lp1194
S'bool32'
p1195
ag42
aNtp1196
tp1197
tp1198
sS'DAQmxGetAnlgWinPauseTrigCoupling'
p1199
((lp1200
S'int32'
p1201
ag34
a((S'taskHandle'
p1202
(lp1203
S'TaskHandle'
p1204
aNtp1205
(S'data'
p1206
(lp1207
S'int32'
p1208
ag42
aNtp1209
tp1210
tp1211
sS'DAQmxResetCIFreqDiv'
p1212
((lp1213
S'int32'
p1214
ag34
a((S'taskHandle'
p1215
(lp1216
S'TaskHandle'
p1217
aNtp1218
(S'channel'
p1219
(lp1220
S'char'
p1221
a(lp1222
I-1
aaNtp1223
tp1224
tp1225
sS'DAQmxGetCOPulseDone'
p1226
((lp1227
S'int32'
p1228
ag34
a((S'taskHandle'
p1229
(lp1230
S'TaskHandle'
p1231
aNtp1232
(S'channel'
p1233
(lp1234
S'char'
p1235
a(lp1236
I-1
aaNtp1237
(S'data'
p1238
(lp1239
S'bool32'
p1240
ag42
aNtp1241
tp1242
tp1243
sS'DAQmxSetSampClkTimebaseRate'
p1244
((lp1245
S'int32'
p1246
ag34
a((S'taskHandle'
p1247
(lp1248
S'TaskHandle'
p1249
aNtp1250
(S'data'
p1251
(lp1252
S'float64'
p1253
aNtp1254
tp1255
tp1256
sS'DAQmxGetCIPulseWidthDigFltrTimebaseSrc'
p1257
((lp1258
S'int32'
p1259
ag34
a((S'taskHandle'
p1260
(lp1261
S'TaskHandle'
p1262
aNtp1263
(S'channel'
p1264
(lp1265
S'char'
p1266
a(lp1267
I-1
aaNtp1268
(S'data'
p1269
(lp1270
S'char'
p1271
ag42
aNtp1272
(S'bufferSize'
p1273
(lp1274
S'uInt32'
p1275
aNtp1276
tp1277
tp1278
sS'DAQmxCfgBurstHandshakingTimingExportClock'
p1279
((lp1280
S'int32'
p1281
ag34
a((S'taskHandle'
p1282
(lp1283
S'TaskHandle'
p1284
aNtp1285
(S'sampleMode'
p1286
(lp1287
S'int32'
p1288
aNtp1289
(S'sampsPerChan'
p1290
(lp1291
S'uInt64'
p1292
aNtp1293
(S'sampleClkRate'
p1294
(lp1295
S'float64'
p1296
aNtp1297
(S'sampleClkOutpTerm'
p1298
(lp1299
S'char'
p1300
a(lp1301
I-1
aaNtp1302
(S'sampleClkPulsePolarity'
p1303
(lp1304
S'int32'
p1305
aNtp1306
(S'pauseWhen'
p1307
(lp1308
S'int32'
p1309
aNtp1310
(S'readyEventActiveLevel'
p1311
(lp1312
S'int32'
p1313
aNtp1314
tp1315
tp1316
sS'DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc'
p1317
((lp1318
S'int32'
p1319
ag34
a((S'taskHandle'
p1320
(lp1321
S'TaskHandle'
p1322
aNtp1323
(S'data'
p1324
(lp1325
S'char'
p1326
ag42
aNtp1327
(S'bufferSize'
p1328
(lp1329
S'uInt32'
p1330
aNtp1331
tp1332
tp1333
sS'DAQmxGetAIChanCalExpDate'
p1334
((lp1335
S'int32'
p1336
ag34
a((S'taskHandle'
p1337
(lp1338
S'TaskHandle'
p1339
aNtp1340
(S'channelName'
p1341
(lp1342
S'char'
p1343
a(lp1344
I-1
aaNtp1345
(S'year'
p1346
(lp1347
S'uInt32'
p1348
ag42
aNtp1349
(S'month'
p1350
(lp1351
S'uInt32'
p1352
ag42
aNtp1353
(S'day'
p1354
(lp1355
S'uInt32'
p1356
ag42
aNtp1357
(S'hour'
p1358
(lp1359
S'uInt32'
p1360
ag42
aNtp1361
(S'minute'
p1362
(lp1363
S'uInt32'
p1364
ag42
aNtp1365
tp1366
tp1367
sS'DAQmxResetAICurrentShuntResistance'
p1368
((lp1369
S'int32'
p1370
ag34
a((S'taskHandle'
p1371
(lp1372
S'TaskHandle'
p1373
aNtp1374
(S'channel'
p1375
(lp1376
S'char'
p1377
a(lp1378
I-1
aaNtp1379
tp1380
tp1381
sS'DAQmxSetDIDataXferReqCond'
p1382
((lp1383
S'int32'
p1384
ag34
a((S'taskHandle'
p1385
(lp1386
S'TaskHandle'
p1387
aNtp1388
(S'channel'
p1389
(lp1390
S'char'
p1391
a(lp1392
I-1
aaNtp1393
(S'data'
p1394
(lp1395
S'int32'
p1396
aNtp1397
tp1398
tp1399
sS'DAQmxResetSampClkTimebaseActiveEdge'
p1400
((lp1401
S'int32'
p1402
ag34
a((S'taskHandle'
p1403
(lp1404
S'TaskHandle'
p1405
aNtp1406
tp1407
tp1408
sS'DAQmxGetRefClkRate'
p1409
((lp1410
S'int32'
p1411
ag34
a((S'taskHandle'
p1412
(lp1413
S'TaskHandle'
p1414
aNtp1415
(S'data'
p1416
(lp1417
S'float64'
p1418
ag42
aNtp1419
tp1420
tp1421
sS'DAQmxSetExportedCtrOutEventToggleIdleState'
p1422
((lp1423
S'int32'
p1424
ag34
a((S'taskHandle'
p1425
(lp1426
S'TaskHandle'
p1427
aNtp1428
(S'data'
p1429
(lp1430
S'int32'
p1431
aNtp1432
tp1433
tp1434
sS'DAQmxCreateTEDSAIVoltageChanWithExcit'
p1435
((lp1436
S'int32'
p1437
ag34
a((S'taskHandle'
p1438
(lp1439
S'TaskHandle'
p1440
aNtp1441
(S'physicalChannel'
p1442
(lp1443
S'char'
p1444
a(lp1445
I-1
aaNtp1446
(S'nameToAssignToChannel'
p1447
(lp1448
S'char'
p1449
a(lp1450
I-1
aaNtp1451
(S'terminalConfig'
p1452
(lp1453
S'int32'
p1454
aNtp1455
(S'minVal'
p1456
(lp1457
S'float64'
p1458
aNtp1459
(S'maxVal'
p1460
(lp1461
S'float64'
p1462
aNtp1463
(S'units'
p1464
(lp1465
S'int32'
p1466
aNtp1467
(S'voltageExcitSource'
p1468
(lp1469
S'int32'
p1470
aNtp1471
(S'voltageExcitVal'
p1472
(lp1473
S'float64'
p1474
aNtp1475
(S'customScaleName'
p1476
(lp1477
S'char'
p1478
a(lp1479
I-1
aaNtp1480
tp1481
tp1482
sS'DAQmxGetAILowpassEnable'
p1483
((lp1484
S'int32'
p1485
ag34
a((S'taskHandle'
p1486
(lp1487
S'TaskHandle'
p1488
aNtp1489
(S'channel'
p1490
(lp1491
S'char'
p1492
a(lp1493
I-1
aaNtp1494
(S'data'
p1495
(lp1496
S'bool32'
p1497
ag42
aNtp1498
tp1499
tp1500
sS'DAQmxSetSampClkDigFltrTimebaseSrc'
p1501
((lp1502
S'int32'
p1503
ag34
a((S'taskHandle'
p1504
(lp1505
S'TaskHandle'
p1506
aNtp1507
(S'data'
p1508
(lp1509
S'char'
p1510
ag42
aNtp1511
tp1512
tp1513
sS'DAQmxGetCOOutputType'
p1514
((lp1515
S'int32'
p1516
ag34
a((S'taskHandle'
p1517
(lp1518
S'TaskHandle'
p1519
aNtp1520
(S'channel'
p1521
(lp1522
S'char'
p1523
a(lp1524
I-1
aaNtp1525
(S'data'
p1526
(lp1527
S'int32'
p1528
ag42
aNtp1529
tp1530
tp1531
sS'DAQmxResetStartTrigDelay'
p1532
((lp1533
S'int32'
p1534
ag34
a((S'taskHandle'
p1535
(lp1536
S'TaskHandle'
p1537
aNtp1538
tp1539
tp1540
sS'DAQmxCreateTEDSAIResistanceChan'
p1541
((lp1542
S'int32'
p1543
ag34
a((S'taskHandle'
p1544
(lp1545
S'TaskHandle'
p1546
aNtp1547
(S'physicalChannel'
p1548
(lp1549
S'char'
p1550
a(lp1551
I-1
aaNtp1552
(S'nameToAssignToChannel'
p1553
(lp1554
S'char'
p1555
a(lp1556
I-1
aaNtp1557
(S'minVal'
p1558
(lp1559
S'float64'
p1560
aNtp1561
(S'maxVal'
p1562
(lp1563
S'float64'
p1564
aNtp1565
(S'units'
p1566
(lp1567
S'int32'
p1568
aNtp1569
(S'resistanceConfig'
p1570
(lp1571
S'int32'
p1572
aNtp1573
(S'currentExcitSource'
p1574
(lp1575
S'int32'
p1576
aNtp1577
(S'currentExcitVal'
p1578
(lp1579
S'float64'
p1580
aNtp1581
(S'customScaleName'
p1582
(lp1583
S'char'
p1584
a(lp1585
I-1
aaNtp1586
tp1587
tp1588
sS'DAQmxSetDigEdgeStartTrigEdge'
p1589
((lp1590
S'int32'
p1591
ag34
a((S'taskHandle'
p1592
(lp1593
S'TaskHandle'
p1594
aNtp1595
(S'data'
p1596
(lp1597
S'int32'
p1598
aNtp1599
tp1600
tp1601
sS'DAQmxSetCIFreqDigFltrMinPulseWidth'
p1602
((lp1603
S'int32'
p1604
ag34
a((S'taskHandle'
p1605
(lp1606
S'TaskHandle'
p1607
aNtp1608
(S'channel'
p1609
(lp1610
S'char'
p1611
a(lp1612
I-1
aaNtp1613
(S'data'
p1614
(lp1615
S'float64'
p1616
aNtp1617
tp1618
tp1619
sS'DAQmxSetCICountEdgesCountDirDigFltrEnable'
p1620
((lp1621
S'int32'
p1622
ag34
a((S'taskHandle'
p1623
(lp1624
S'TaskHandle'
p1625
aNtp1626
(S'channel'
p1627
(lp1628
S'char'
p1629
a(lp1630
I-1
aaNtp1631
(S'data'
p1632
(lp1633
S'bool32'
p1634
aNtp1635
tp1636
tp1637
sS'DAQmxSetDigEdgeStartTrigSrc'
p1638
((lp1639
S'int32'
p1640
ag34
a((S'taskHandle'
p1641
(lp1642
S'TaskHandle'
p1643
aNtp1644
(S'data'
p1645
(lp1646
S'char'
p1647
ag42
aNtp1648
tp1649
tp1650
sS'DAQmxResetTrigAttribute'
p1651
((lp1652
S'int32'
p1653
ag34
a((S'taskHandle'
p1654
(lp1655
S'TaskHandle'
p1656
aNtp1657
(S'attribute'
p1658
(lp1659
S'int32'
p1660
aNtp1661
tp1662
tp1663
sS'DAQmxGetExportedHshkEventPulseWidth'
p1664
((lp1665
S'int32'
p1666
ag34
a((S'taskHandle'
p1667
(lp1668
S'TaskHandle'
p1669
aNtp1670
(S'data'
p1671
(lp1672
S'float64'
p1673
ag42
aNtp1674
tp1675
tp1676
sS'DAQmxGetAIMax'
p1677
((lp1678
S'int32'
p1679
ag34
a((S'taskHandle'
p1680
(lp1681
S'TaskHandle'
p1682
aNtp1683
(S'channel'
p1684
(lp1685
S'char'
p1686
a(lp1687
I-1
aaNtp1688
(S'data'
p1689
(lp1690
S'float64'
p1691
ag42
aNtp1692
tp1693
tp1694
sS'DAQmxResetAODACRngLow'
p1695
((lp1696
S'int32'
p1697
ag34
a((S'taskHandle'
p1698
(lp1699
S'TaskHandle'
p1700
aNtp1701
(S'channel'
p1702
(lp1703
S'char'
p1704
a(lp1705
I-1
aaNtp1706
tp1707
tp1708
sS'DAQmxResetAISampAndHoldEnable'
p1709
((lp1710
S'int32'
p1711
ag34
a((S'taskHandle'
p1712
(lp1713
S'TaskHandle'
p1714
aNtp1715
(S'channel'
p1716
(lp1717
S'char'
p1718
a(lp1719
I-1
aaNtp1720
tp1721
tp1722
sS'DAQmxResetAIChanCalVerifAcqVals'
p1723
((lp1724
S'int32'
p1725
ag34
a((S'taskHandle'
p1726
(lp1727
S'TaskHandle'
p1728
aNtp1729
(S'channel'
p1730
(lp1731
S'char'
p1732
a(lp1733
I-1
aaNtp1734
tp1735
tp1736
sS'DAQmxSetAOTermCfg'
p1737
((lp1738
S'int32'
p1739
ag34
a((S'taskHandle'
p1740
(lp1741
S'TaskHandle'
p1742
aNtp1743
(S'channel'
p1744
(lp1745
S'char'
p1746
a(lp1747
I-1
aaNtp1748
(S'data'
p1749
(lp1750
S'int32'
p1751
aNtp1752
tp1753
tp1754
sS'DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc'
p1755
((lp1756
S'int32'
p1757
ag34
a((S'taskHandle'
p1758
(lp1759
S'TaskHandle'
p1760
aNtp1761
(S'channel'
p1762
(lp1763
S'char'
p1764
a(lp1765
I-1
aaNtp1766
(S'data'
p1767
(lp1768
S'char'
p1769
ag42
aNtp1770
tp1771
tp1772
sS'DAQmxResetCISemiPeriodDigFltrEnable'
p1773
((lp1774
S'int32'
p1775
ag34
a((S'taskHandle'
p1776
(lp1777
S'TaskHandle'
p1778
aNtp1779
(S'channel'
p1780
(lp1781
S'char'
p1782
a(lp1783
I-1
aaNtp1784
tp1785
tp1786
sS'DAQmxSetAODACRefSrc'
p1787
((lp1788
S'int32'
p1789
ag34
a((S'taskHandle'
p1790
(lp1791
S'TaskHandle'
p1792
aNtp1793
(S'channel'
p1794
(lp1795
S'char'
p1796
a(lp1797
I-1
aaNtp1798
(S'data'
p1799
(lp1800
S'int32'
p1801
aNtp1802
tp1803
tp1804
sS'DAQmxPerformBridgeOffsetNullingCal'
p1805
((lp1806
S'int32'
p1807
ag34
a((S'taskHandle'
p1808
(lp1809
S'TaskHandle'
p1810
aNtp1811
(S'channel'
p1812
(lp1813
S'char'
p1814
a(lp1815
I-1
aaNtp1816
tp1817
tp1818
sS'DAQmxGetCITwoEdgeSepUnits'
p1819
((lp1820
S'int32'
p1821
ag34
a((S'taskHandle'
p1822
(lp1823
S'TaskHandle'
p1824
aNtp1825
(S'channel'
p1826
(lp1827
S'char'
p1828
a(lp1829
I-1
aaNtp1830
(S'data'
p1831
(lp1832
S'int32'
p1833
ag42
aNtp1834
tp1835
tp1836
sS'DAQmxSetAIChanCalTableScaledVals'
p1837
((lp1838
S'int32'
p1839
ag34
a((S'taskHandle'
p1840
(lp1841
S'TaskHandle'
p1842
aNtp1843
(S'channel'
p1844
(lp1845
S'char'
p1846
a(lp1847
I-1
aaNtp1848
(S'data'
p1849
(lp1850
S'float64'
p1851
ag42
aNtp1852
(S'arraySizeInSamples'
p1853
(lp1854
S'uInt32'
p1855
aNtp1856
tp1857
tp1858
sS'DAQmxGetDOOutputDriveType'
p1859
((lp1860
S'int32'
p1861
ag34
a((S'taskHandle'
p1862
(lp1863
S'TaskHandle'
p1864
aNtp1865
(S'channel'
p1866
(lp1867
S'char'
p1868
a(lp1869
I-1
aaNtp1870
(S'data'
p1871
(lp1872
S'int32'
p1873
ag42
aNtp1874
tp1875
tp1876
sS'DAQmxResetAnlgLvlPauseTrigCoupling'
p1877
((lp1878
S'int32'
p1879
ag34
a((S'taskHandle'
p1880
(lp1881
S'TaskHandle'
p1882
aNtp1883
tp1884
tp1885
sS'DAQmxGetCIPeriodDigFltrEnable'
p1886
((lp1887
S'int32'
p1888
ag34
a((S'taskHandle'
p1889
(lp1890
S'TaskHandle'
p1891
aNtp1892
(S'channel'
p1893
(lp1894
S'char'
p1895
a(lp1896
I-1
aaNtp1897
(S'data'
p1898
(lp1899
S'bool32'
p1900
ag42
aNtp1901
tp1902
tp1903
sS'DAQmxResetDigEdgeAdvTrigSrc'
p1904
((lp1905
S'int32'
p1906
ag34
a((S'taskHandle'
p1907
(lp1908
S'TaskHandle'
p1909
aNtp1910
tp1911
tp1912
sS'DAQmxGetAIRawSampSize'
p1913
((lp1914
S'int32'
p1915
ag34
a((S'taskHandle'
p1916
(lp1917
S'TaskHandle'
p1918
aNtp1919
(S'channel'
p1920
(lp1921
S'char'
p1922
a(lp1923
I-1
aaNtp1924
(S'data'
p1925
(lp1926
S'uInt32'
p1927
ag42
aNtp1928
tp1929
tp1930
sS'DAQmxGetSampClkMaxRate'
p1931
((lp1932
S'int32'
p1933
ag34
a((S'taskHandle'
p1934
(lp1935
S'TaskHandle'
p1936
aNtp1937
(S'data'
p1938
(lp1939
S'float64'
p1940
ag42
aNtp1941
tp1942
tp1943
sS'DAQmxResetAnlgWinRefTrigSrc'
p1944
((lp1945
S'int32'
p1946
ag34
a((S'taskHandle'
p1947
(lp1948
S'TaskHandle'
p1949
aNtp1950
tp1951
tp1952
sS'DAQmxSetCIEncoderZInputDigFltrMinPulseWidth'
p1953
((lp1954
S'int32'
p1955
ag34
a((S'taskHandle'
p1956
(lp1957
S'TaskHandle'
p1958
aNtp1959
(S'channel'
p1960
(lp1961
S'char'
p1962
a(lp1963
I-1
aaNtp1964
(S'data'
p1965
(lp1966
S'float64'
p1967
aNtp1968
tp1969
tp1970
sS'DAQmxGetAnlgEdgeStartTrigCoupling'
p1971
((lp1972
S'int32'
p1973
ag34
a((S'taskHandle'
p1974
(lp1975
S'TaskHandle'
p1976
aNtp1977
(S'data'
p1978
(lp1979
S'int32'
p1980
ag42
aNtp1981
tp1982
tp1983
sS'DAQmxGetCITwoEdgeSepSecondEdge'
p1984
((lp1985
S'int32'
p1986
ag34
a((S'taskHandle'
p1987
(lp1988
S'TaskHandle'
p1989
aNtp1990
(S'channel'
p1991
(lp1992
S'char'
p1993
a(lp1994
I-1
aaNtp1995
(S'data'
p1996
(lp1997
S'int32'
p1998
ag42
aNtp1999
tp2000
tp2001
sS'DAQmxGetSampTimingType'
p2002
((lp2003
S'int32'
p2004
ag34
a((S'taskHandle'
p2005
(lp2006
S'TaskHandle'
p2007
aNtp2008
(S'data'
p2009
(lp2010
S'int32'
p2011
ag42
aNtp2012
tp2013
tp2014
sS'DAQmxSetCIEncoderBInputDigFltrMinPulseWidth'
p2015
((lp2016
S'int32'
p2017
ag34
a((S'taskHandle'
p2018
(lp2019
S'TaskHandle'
p2020
aNtp2021
(S'channel'
p2022
(lp2023
S'char'
p2024
a(lp2025
I-1
aaNtp2026
(S'data'
p2027
(lp2028
S'float64'
p2029
aNtp2030
tp2031
tp2032
sS'DAQmxGetDevCOPhysicalChans'
p2033
((lp2034
S'int32'
p2035
ag34
a((S'device'
p2036
(lp2037
S'char'
p2038
a(lp2039
I-1
aaNtp2040
(S'data'
p2041
(lp2042
S'char'
p2043
ag42
aNtp2044
(S'bufferSize'
p2045
(lp2046
S'uInt32'
p2047
aNtp2048
tp2049
tp2050
sS'DAQmxResetDigLvlPauseTrigDigFltrEnable'
p2051
((lp2052
S'int32'
p2053
ag34
a((S'taskHandle'
p2054
(lp2055
S'TaskHandle'
p2056
aNtp2057
tp2058
tp2059
sS'DAQmxSwitchWaitForSettling'
p2060
((lp2061
S'int32'
p2062
ag34
a((S'deviceName'
p2063
(lp2064
S'char'
p2065
a(lp2066
I-1
aaNtp2067
tp2068
tp2069
sS'DAQmxSetCIFreqDigFltrTimebaseSrc'
p2070
((lp2071
S'int32'
p2072
ag34
a((S'taskHandle'
p2073
(lp2074
S'TaskHandle'
p2075
aNtp2076
(S'channel'
p2077
(lp2078
S'char'
p2079
a(lp2080
I-1
aaNtp2081
(S'data'
p2082
(lp2083
S'char'
p2084
ag42
aNtp2085
tp2086
tp2087
sS'DAQmxGetAIChanCalHasValidCalInfo'
p2088
((lp2089
S'int32'
p2090
ag34
a((S'taskHandle'
p2091
(lp2092
S'TaskHandle'
p2093
aNtp2094
(S'channel'
p2095
(lp2096
S'char'
p2097
a(lp2098
I-1
aaNtp2099
(S'data'
p2100
(lp2101
S'bool32'
p2102
ag42
aNtp2103
tp2104
tp2105
sS'DAQmxResetCIEncoderAInputTerm'
p2106
((lp2107
S'int32'
p2108
ag34
a((S'taskHandle'
p2109
(lp2110
S'TaskHandle'
p2111
aNtp2112
(S'channel'
p2113
(lp2114
S'char'
p2115
a(lp2116
I-1
aaNtp2117
tp2118
tp2119
sS'DAQmxDeviceSupportsCal'
p2120
((lp2121
S'int32'
p2122
ag34
a((S'deviceName'
p2123
(lp2124
S'char'
p2125
a(lp2126
I-1
aaNtp2127
(S'calSupported'
p2128
(lp2129
S'bool32'
p2130
ag42
aNtp2131
tp2132
tp2133
sS'DAQmxGetCalUserDefinedInfoMaxSize'
p2134
((lp2135
S'int32'
p2136
ag34
a((S'deviceName'
p2137
(lp2138
S'char'
p2139
a(lp2140
I-1
aaNtp2141
(S'data'
p2142
(lp2143
S'uInt32'
p2144
ag42
aNtp2145
tp2146
tp2147
sS'DAQmxSetAIExcitActualVal'
p2148
((lp2149
S'int32'
p2150
ag34
a((S'taskHandle'
p2151
(lp2152
S'TaskHandle'
p2153
aNtp2154
(S'channel'
p2155
(lp2156
S'char'
p2157
a(lp2158
I-1
aaNtp2159
(S'data'
p2160
(lp2161
S'float64'
p2162
aNtp2163
tp2164
tp2165
sS'DAQmxSetWriteRegenMode'
p2166
((lp2167
S'int32'
p2168
ag34
a((S'taskHandle'
p2169
(lp2170
S'TaskHandle'
p2171
aNtp2172
(S'data'
p2173
(lp2174
S'int32'
p2175
aNtp2176
tp2177
tp2178
sS'DAQmxResetCIPeriodDigFltrTimebaseSrc'
p2179
((lp2180
S'int32'
p2181
ag34
a((S'taskHandle'
p2182
(lp2183
S'TaskHandle'
p2184
aNtp2185
(S'channel'
p2186
(lp2187
S'char'
p2188
a(lp2189
I-1
aaNtp2190
tp2191
tp2192
sS'DAQmxGetAnlgWinRefTrigBtm'
p2193
((lp2194
S'int32'
p2195
ag34
a((S'taskHandle'
p2196
(lp2197
S'TaskHandle'
p2198
aNtp2199
(S'data'
p2200
(lp2201
S'float64'
p2202
ag42
aNtp2203
tp2204
tp2205
sS'DAQmxResetAnlgLvlPauseTrigSrc'
p2206
((lp2207
S'int32'
p2208
ag34
a((S'taskHandle'
p2209
(lp2210
S'TaskHandle'
p2211
aNtp2212
tp2213
tp2214
sS'DAQmxGetAITEDSUnits'
p2215
((lp2216
S'int32'
p2217
ag34
a((S'taskHandle'
p2218
(lp2219
S'TaskHandle'
p2220
aNtp2221
(S'channel'
p2222
(lp2223
S'char'
p2224
a(lp2225
I-1
aaNtp2226
(S'data'
p2227
(lp2228
S'char'
p2229
ag42
aNtp2230
(S'bufferSize'
p2231
(lp2232
S'uInt32'
p2233
aNtp2234
tp2235
tp2236
sS'DAQmxGetExportedSyncPulseEventOutputTerm'
p2237
((lp2238
S'int32'
p2239
ag34
a((S'taskHandle'
p2240
(lp2241
S'TaskHandle'
p2242
aNtp2243
(S'data'
p2244
(lp2245
S'char'
p2246
ag42
aNtp2247
(S'bufferSize'
p2248
(lp2249
S'uInt32'
p2250
aNtp2251
tp2252
tp2253
sS'DAQmxResetCOPulseFreqInitialDelay'
p2254
((lp2255
S'int32'
p2256
ag34
a((S'taskHandle'
p2257
(lp2258
S'TaskHandle'
p2259
aNtp2260
(S'channel'
p2261
(lp2262
S'char'
p2263
a(lp2264
I-1
aaNtp2265
tp2266
tp2267
sS'DAQmxSetDODataXferMech'
p2268
((lp2269
S'int32'
p2270
ag34
a((S'taskHandle'
p2271
(lp2272
S'TaskHandle'
p2273
aNtp2274
(S'channel'
p2275
(lp2276
S'char'
p2277
a(lp2278
I-1
aaNtp2279
(S'data'
p2280
(lp2281
S'int32'
p2282
aNtp2283
tp2284
tp2285
sS'DAQmxGetExtendedErrorInfo'
p2286
((lp2287
S'int32'
p2288
ag34
a((S'errorString'
p2289
(lp2290
S'char'
p2291
a(lp2292
I-1
aaNtp2293
(S'bufferSize'
p2294
(lp2295
S'uInt32'
p2296
aNtp2297
tp2298
tp2299
sS'DAQmxSetReadOverWrite'
p2300
((lp2301
S'int32'
p2302
ag34
a((S'taskHandle'
p2303
(lp2304
S'TaskHandle'
p2305
aNtp2306
(S'data'
p2307
(lp2308
S'int32'
p2309
aNtp2310
tp2311
tp2312
sS'DAQmxCreateCILinEncoderChan'
p2313
((lp2314
S'int32'
p2315
ag34
a((S'taskHandle'
p2316
(lp2317
S'TaskHandle'
p2318
aNtp2319
(S'counter'
p2320
(lp2321
S'char'
p2322
a(lp2323
I-1
aaNtp2324
(S'nameToAssignToChannel'
p2325
(lp2326
S'char'
p2327
a(lp2328
I-1
aaNtp2329
(S'decodingType'
p2330
(lp2331
S'int32'
p2332
aNtp2333
(S'ZidxEnable'
p2334
(lp2335
S'bool32'
p2336
aNtp2337
(S'ZidxVal'
p2338
(lp2339
S'float64'
p2340
aNtp2341
(S'ZidxPhase'
p2342
(lp2343
S'int32'
p2344
aNtp2345
(S'units'
p2346
(lp2347
S'int32'
p2348
aNtp2349
(S'distPerPulse'
p2350
(lp2351
S'float64'
p2352
aNtp2353
(S'initialPos'
p2354
(lp2355
S'float64'
p2356
aNtp2357
(S'customScaleName'
p2358
(lp2359
S'char'
p2360
a(lp2361
I-1
aaNtp2362
tp2363
tp2364
sS'DAQmxResetReadRelativeTo'
p2365
((lp2366
S'int32'
p2367
ag34
a((S'taskHandle'
p2368
(lp2369
S'TaskHandle'
p2370
aNtp2371
tp2372
tp2373
sS'DAQmxSetHshkStartCond'
p2374
((lp2375
S'int32'
p2376
ag34
a((S'taskHandle'
p2377
(lp2378
S'TaskHandle'
p2379
aNtp2380
(S'data'
p2381
(lp2382
S'int32'
p2383
aNtp2384
tp2385
tp2386
sS'DAQmxGetDIDigFltrMinPulseWidth'
p2387
((lp2388
S'int32'
p2389
ag34
a((S'taskHandle'
p2390
(lp2391
S'TaskHandle'
p2392
aNtp2393
(S'channel'
p2394
(lp2395
S'char'
p2396
a(lp2397
I-1
aaNtp2398
(S'data'
p2399
(lp2400
S'float64'
p2401
ag42
aNtp2402
tp2403
tp2404
sS'DAQmxResetChanDescr'
p2405
((lp2406
S'int32'
p2407
ag34
a((S'taskHandle'
p2408
(lp2409
S'TaskHandle'
p2410
aNtp2411
(S'channel'
p2412
(lp2413
S'char'
p2414
a(lp2415
I-1
aaNtp2416
tp2417
tp2418
sS'DAQmxGetAILVDTSensitivity'
p2419
((lp2420
S'int32'
p2421
ag34
a((S'taskHandle'
p2422
(lp2423
S'TaskHandle'
p2424
aNtp2425
(S'channel'
p2426
(lp2427
S'char'
p2428
a(lp2429
I-1
aaNtp2430
(S'data'
p2431
(lp2432
S'float64'
p2433
ag42
aNtp2434
tp2435
tp2436
sS'DAQmxCfgHandshakingTiming'
p2437
((lp2438
S'int32'
p2439
ag34
a((S'taskHandle'
p2440
(lp2441
S'TaskHandle'
p2442
aNtp2443
(S'sampleMode'
p2444
(lp2445
S'int32'
p2446
aNtp2447
(S'sampsPerChan'
p2448
(lp2449
S'uInt64'
p2450
aNtp2451
tp2452
tp2453
sS'DAQmxGetSwitchChanMaxDCCarryPwr'
p2454
((lp2455
S'int32'
p2456
ag34
a((S'switchChannelName'
p2457
(lp2458
S'char'
p2459
a(lp2460
I-1
aaNtp2461
(S'data'
p2462
(lp2463
S'float64'
p2464
ag42
aNtp2465
tp2466
tp2467
sS'DAQmxGetScaleType'
p2468
((lp2469
S'int32'
p2470
ag34
a((S'scaleName'
p2471
(lp2472
S'char'
p2473
a(lp2474
I-1
aaNtp2475
(S'data'
p2476
(lp2477
S'int32'
p2478
ag42
aNtp2479
tp2480
tp2481
sS'DAQmxGetCICountEdgesTerm'
p2482
((lp2483
S'int32'
p2484
ag34
a((S'taskHandle'
p2485
(lp2486
S'TaskHandle'
p2487
aNtp2488
(S'channel'
p2489
(lp2490
S'char'
p2491
a(lp2492
I-1
aaNtp2493
(S'data'
p2494
(lp2495
S'char'
p2496
ag42
aNtp2497
(S'bufferSize'
p2498
(lp2499
S'uInt32'
p2500
aNtp2501
tp2502
tp2503
sS'DAQmxAddGlobalChansToTask'
p2504
((lp2505
S'int32'
p2506
ag34
a((S'taskHandle'
p2507
(lp2508
S'TaskHandle'
p2509
aNtp2510
(S'channelNames'
p2511
(lp2512
S'char'
p2513
a(lp2514
I-1
aaNtp2515
tp2516
tp2517
sS'DAQmxGetAnlgEdgeStartTrigLvl'
p2518
((lp2519
S'int32'
p2520
ag34
a((S'taskHandle'
p2521
(lp2522
S'TaskHandle'
p2523
aNtp2524
(S'data'
p2525
(lp2526
S'float64'
p2527
ag42
aNtp2528
tp2529
tp2530
sS'DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc'
p2531
((lp2532
S'int32'
p2533
ag34
a((S'taskHandle'
p2534
(lp2535
S'TaskHandle'
p2536
aNtp2537
(S'data'
p2538
(lp2539
S'char'
p2540
ag42
aNtp2541
tp2542
tp2543
sS'DAQmxSetCIEncoderAInputDigFltrEnable'
p2544
((lp2545
S'int32'
p2546
ag34
a((S'taskHandle'
p2547
(lp2548
S'TaskHandle'
p2549
aNtp2550
(S'channel'
p2551
(lp2552
S'char'
p2553
a(lp2554
I-1
aaNtp2555
(S'data'
p2556
(lp2557
S'bool32'
p2558
aNtp2559
tp2560
tp2561
sS'DAQmxGetSwitchChanAttribute'
p2562
((lp2563
S'int32'
p2564
aS'__cdecl'
p2565
a((S'switchChannelName'
p2566
(lp2567
S'char'
p2568
a(lp2569
I-1
aaNtp2570
(S'attribute'
p2571
(lp2572
S'int32'
p2573
aNtp2574
(S'value'
p2575
(lp2576
S'void'
p2577
ag42
aNtp2578
tp2579
tp2580
sS'DAQmxSetAIImpedance'
p2581
((lp2582
S'int32'
p2583
ag34
a((S'taskHandle'
p2584
(lp2585
S'TaskHandle'
p2586
aNtp2587
(S'channel'
p2588
(lp2589
S'char'
p2590
a(lp2591
I-1
aaNtp2592
(S'data'
p2593
(lp2594
S'float64'
p2595
aNtp2596
tp2597
tp2598
sS'DAQmxGetAOResolution'
p2599
((lp2600
S'int32'
p2601
ag34
a((S'taskHandle'
p2602
(lp2603
S'TaskHandle'
p2604
aNtp2605
(S'channel'
p2606
(lp2607
S'char'
p2608
a(lp2609
I-1
aaNtp2610
(S'data'
p2611
(lp2612
S'float64'
p2613
ag42
aNtp2614
tp2615
tp2616
sS'DAQmxGetCIFreqDigSyncEnable'
p2617
((lp2618
S'int32'
p2619
ag34
a((S'taskHandle'
p2620
(lp2621
S'TaskHandle'
p2622
aNtp2623
(S'channel'
p2624
(lp2625
S'char'
p2626
a(lp2627
I-1
aaNtp2628
(S'data'
p2629
(lp2630
S'bool32'
p2631
ag42
aNtp2632
tp2633
tp2634
sS'DAQmxWriteAnalogF64'
p2635
((lp2636
S'int32'
p2637
ag34
a((S'taskHandle'
p2638
(lp2639
S'TaskHandle'
p2640
aNtp2641
(S'numSampsPerChan'
p2642
(lp2643
S'int32'
p2644
aNtp2645
(S'autoStart'
p2646
(lp2647
S'bool32'
p2648
aNtp2649
(S'timeout'
p2650
(lp2651
S'float64'
p2652
aNtp2653
(S'dataLayout'
p2654
(lp2655
S'bool32'
p2656
aNtp2657
(S'writeArray'
p2658
(lp2659
S'float64'
p2660
a(lp2661
I-1
aaNtp2662
(S'sampsPerChanWritten'
p2663
(lp2664
S'int32'
p2665
ag42
aNtp2666
(S'reserved'
p2667
(lp2668
S'bool32'
p2669
ag42
aNtp2670
tp2671
tp2672
sS'DAQmxSetAIConvRate'
p2673
((lp2674
S'int32'
p2675
ag34
a((S'taskHandle'
p2676
(lp2677
S'TaskHandle'
p2678
aNtp2679
(S'data'
p2680
(lp2681
S'float64'
p2682
aNtp2683
tp2684
tp2685
sS'DAQmxGetExportedWatchdogExpiredEventOutputTerm'
p2686
((lp2687
S'int32'
p2688
ag34
a((S'taskHandle'
p2689
(lp2690
S'TaskHandle'
p2691
aNtp2692
(S'data'
p2693
(lp2694
S'char'
p2695
ag42
aNtp2696
(S'bufferSize'
p2697
(lp2698
S'uInt32'
p2699
aNtp2700
tp2701
tp2702
sS'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate'
p2703
((lp2704
S'int32'
p2705
ag34
a((S'taskHandle'
p2706
(lp2707
S'TaskHandle'
p2708
aNtp2709
(S'channel'
p2710
(lp2711
S'char'
p2712
a(lp2713
I-1
aaNtp2714
tp2715
tp2716
sS'DAQmxResetExportedRefTrigOutputTerm'
p2717
((lp2718
S'int32'
p2719
ag34
a((S'taskHandle'
p2720
(lp2721
S'TaskHandle'
p2722
aNtp2723
tp2724
tp2725
sS'DAQmxSetDigEdgeAdvTrigDigFltrEnable'
p2726
((lp2727
S'int32'
p2728
ag34
a((S'taskHandle'
p2729
(lp2730
S'TaskHandle'
p2731
aNtp2732
(S'data'
p2733
(lp2734
S'bool32'
p2735
aNtp2736
tp2737
tp2738
sS'DAQmxResetRealTimeAttribute'
p2739
((lp2740
S'int32'
p2741
ag34
a((S'taskHandle'
p2742
(lp2743
S'TaskHandle'
p2744
aNtp2745
(S'attribute'
p2746
(lp2747
S'int32'
p2748
aNtp2749
tp2750
tp2751
sS'DAQmxResetCIPeriodDigFltrTimebaseRate'
p2752
((lp2753
S'int32'
p2754
ag34
a((S'taskHandle'
p2755
(lp2756
S'TaskHandle'
p2757
aNtp2758
(S'channel'
p2759
(lp2760
S'char'
p2761
a(lp2762
I-1
aaNtp2763
tp2764
tp2765
sS'DAQmxSetCISemiPeriodDigFltrTimebaseSrc'
p2766
((lp2767
S'int32'
p2768
ag34
a((S'taskHandle'
p2769
(lp2770
S'TaskHandle'
p2771
aNtp2772
(S'channel'
p2773
(lp2774
S'char'
p2775
a(lp2776
I-1
aaNtp2777
(S'data'
p2778
(lp2779
S'char'
p2780
ag42
aNtp2781
tp2782
tp2783
sS'DAQmxResetDelayFromSampClkDelayUnits'
p2784
((lp2785
S'int32'
p2786
ag34
a((S'taskHandle'
p2787
(lp2788
S'TaskHandle'
p2789
aNtp2790
tp2791
tp2792
sS'DAQmxResetCIEncoderBInputDigFltrTimebaseRate'
p2793
((lp2794
S'int32'
p2795
ag34
a((S'taskHandle'
p2796
(lp2797
S'TaskHandle'
p2798
aNtp2799
(S'channel'
p2800
(lp2801
S'char'
p2802
a(lp2803
I-1
aaNtp2804
tp2805
tp2806
sS'DAQmxSetAOOutputImpedance'
p2807
((lp2808
S'int32'
p2809
ag34
a((S'taskHandle'
p2810
(lp2811
S'TaskHandle'
p2812
aNtp2813
(S'channel'
p2814
(lp2815
S'char'
p2816
a(lp2817
I-1
aaNtp2818
(S'data'
p2819
(lp2820
S'float64'
p2821
aNtp2822
tp2823
tp2824
sS'DAQmxGetBufferAttribute'
p2825
((lp2826
S'int32'
p2827
ag2565
a((S'taskHandle'
p2828
(lp2829
S'TaskHandle'
p2830
aNtp2831
(S'attribute'
p2832
(lp2833
S'int32'
p2834
aNtp2835
(S'value'
p2836
(lp2837
S'void'
p2838
ag42
aNtp2839
tp2840
tp2841
sS'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p2842
((lp2843
S'int32'
p2844
ag34
a((S'taskHandle'
p2845
(lp2846
S'TaskHandle'
p2847
aNtp2848
(S'channel'
p2849
(lp2850
S'char'
p2851
a(lp2852
I-1
aaNtp2853
(S'data'
p2854
(lp2855
S'char'
p2856
ag42
aNtp2857
tp2858
tp2859
sS'DAQmxResetAnlgWinStartTrigSrc'
p2860
((lp2861
S'int32'
p2862
ag34
a((S'taskHandle'
p2863
(lp2864
S'TaskHandle'
p2865
aNtp2866
tp2867
tp2868
sS'DAQmxResetAIResistanceCfg'
p2869
((lp2870
S'int32'
p2871
ag34
a((S'taskHandle'
p2872
(lp2873
S'TaskHandle'
p2874
aNtp2875
(S'channel'
p2876
(lp2877
S'char'
p2878
a(lp2879
I-1
aaNtp2880
tp2881
tp2882
sS'DAQmxESeriesCalAdjust'
p2883
((lp2884
S'int32'
p2885
ag34
a((S'calHandle'
p2886
(lp2887
S'uInt32'
p2888
aNtp2889
(S'referenceVoltage'
p2890
(lp2891
S'float64'
p2892
aNtp2893
tp2894
tp2895
sS'DAQmxResetAIChanCalDesc'
p2896
((lp2897
S'int32'
p2898
ag34
a((S'taskHandle'
p2899
(lp2900
S'TaskHandle'
p2901
aNtp2902
(S'channel'
p2903
(lp2904
S'char'
p2905
a(lp2906
I-1
aaNtp2907
tp2908
tp2909
sS'DAQmxResetDigEdgeArmStartTrigDigSyncEnable'
p2910
((lp2911
S'int32'
p2912
ag34
a((S'taskHandle'
p2913
(lp2914
S'TaskHandle'
p2915
aNtp2916
tp2917
tp2918
sS'DAQmxResetCIEncoderDecodingType'
p2919
((lp2920
S'int32'
p2921
ag34
a((S'taskHandle'
p2922
(lp2923
S'TaskHandle'
p2924
aNtp2925
(S'channel'
p2926
(lp2927
S'char'
p2928
a(lp2929
I-1
aaNtp2930
tp2931
tp2932
sS'DAQmxSetSampClkActiveEdge'
p2933
((lp2934
S'int32'
p2935
ag34
a((S'taskHandle'
p2936
(lp2937
S'TaskHandle'
p2938
aNtp2939
(S'data'
p2940
(lp2941
S'int32'
p2942
aNtp2943
tp2944
tp2945
sS'DAQmxResetCICtrTimebaseDigFltrMinPulseWidth'
p2946
((lp2947
S'int32'
p2948
ag34
a((S'taskHandle'
p2949
(lp2950
S'TaskHandle'
p2951
aNtp2952
(S'channel'
p2953
(lp2954
S'char'
p2955
a(lp2956
I-1
aaNtp2957
tp2958
tp2959
sS'DAQmxGetRealTimeConvLateErrorsToWarnings'
p2960
((lp2961
S'int32'
p2962
ag34
a((S'taskHandle'
p2963
(lp2964
S'TaskHandle'
p2965
aNtp2966
(S'data'
p2967
(lp2968
S'bool32'
p2969
ag42
aNtp2970
tp2971
tp2972
sS'DAQmxGetAOResolutionUnits'
p2973
((lp2974
S'int32'
p2975
ag34
a((S'taskHandle'
p2976
(lp2977
S'TaskHandle'
p2978
aNtp2979
(S'channel'
p2980
(lp2981
S'char'
p2982
a(lp2983
I-1
aaNtp2984
(S'data'
p2985
(lp2986
S'int32'
p2987
ag42
aNtp2988
tp2989
tp2990
sS'DAQmxSetCICtrTimebaseDigFltrTimebaseRate'
p2991
((lp2992
S'int32'
p2993
ag34
a((S'taskHandle'
p2994
(lp2995
S'TaskHandle'
p2996
aNtp2997
(S'channel'
p2998
(lp2999
S'char'
p3000
a(lp3001
I-1
aaNtp3002
(S'data'
p3003
(lp3004
S'float64'
p3005
aNtp3006
tp3007
tp3008
sS'DAQmxGetCIEncoderZInputTerm'
p3009
((lp3010
S'int32'
p3011
ag34
a((S'taskHandle'
p3012
(lp3013
S'TaskHandle'
p3014
aNtp3015
(S'channel'
p3016
(lp3017
S'char'
p3018
a(lp3019
I-1
aaNtp3020
(S'data'
p3021
(lp3022
S'char'
p3023
ag42
aNtp3024
(S'bufferSize'
p3025
(lp3026
S'uInt32'
p3027
aNtp3028
tp3029
tp3030
sS'DAQmxSetCIFreqDiv'
p3031
((lp3032
S'int32'
p3033
ag34
a((S'taskHandle'
p3034
(lp3035
S'TaskHandle'
p3036
aNtp3037
(S'channel'
p3038
(lp3039
S'char'
p3040
a(lp3041
I-1
aaNtp3042
(S'data'
p3043
(lp3044
S'uInt32'
p3045
aNtp3046
tp3047
tp3048
sS'DAQmxResetCIPeriodDigFltrEnable'
p3049
((lp3050
S'int32'
p3051
ag34
a((S'taskHandle'
p3052
(lp3053
S'TaskHandle'
p3054
aNtp3055
(S'channel'
p3056
(lp3057
S'char'
p3058
a(lp3059
I-1
aaNtp3060
tp3061
tp3062
sS'DAQmxResetHshkStartCond'
p3063
((lp3064
S'int32'
p3065
ag34
a((S'taskHandle'
p3066
(lp3067
S'TaskHandle'
p3068
aNtp3069
tp3070
tp3071
sS'DAQmxGetCIFreqUnits'
p3072
((lp3073
S'int32'
p3074
ag34
a((S'taskHandle'
p3075
(lp3076
S'TaskHandle'
p3077
aNtp3078
(S'channel'
p3079
(lp3080
S'char'
p3081
a(lp3082
I-1
aaNtp3083
(S'data'
p3084
(lp3085
S'int32'
p3086
ag42
aNtp3087
tp3088
tp3089
sS'DAQmxGetDigPatternStartTrigSrc'
p3090
((lp3091
S'int32'
p3092
ag34
a((S'taskHandle'
p3093
(lp3094
S'TaskHandle'
p3095
aNtp3096
(S'data'
p3097
(lp3098
S'char'
p3099
ag42
aNtp3100
(S'bufferSize'
p3101
(lp3102
S'uInt32'
p3103
aNtp3104
tp3105
tp3106
sS'DAQmxGetSampClkTimebaseActiveEdge'
p3107
((lp3108
S'int32'
p3109
ag34
a((S'taskHandle'
p3110
(lp3111
S'TaskHandle'
p3112
aNtp3113
(S'data'
p3114
(lp3115
S'int32'
p3116
ag42
aNtp3117
tp3118
tp3119
sS'DAQmxSetAnlgEdgeStartTrigSlope'
p3120
((lp3121
S'int32'
p3122
ag34
a((S'taskHandle'
p3123
(lp3124
S'TaskHandle'
p3125
aNtp3126
(S'data'
p3127
(lp3128
S'int32'
p3129
aNtp3130
tp3131
tp3132
sS'DAQmxGetDevProductType'
p3133
((lp3134
S'int32'
p3135
ag34
a((S'device'
p3136
(lp3137
S'char'
p3138
a(lp3139
I-1
aaNtp3140
(S'data'
p3141
(lp3142
S'char'
p3143
ag42
aNtp3144
(S'bufferSize'
p3145
(lp3146
S'uInt32'
p3147
aNtp3148
tp3149
tp3150
sS'DAQmxSetAILeadWireResistance'
p3151
((lp3152
S'int32'
p3153
ag34
a((S'taskHandle'
p3154
(lp3155
S'TaskHandle'
p3156
aNtp3157
(S'channel'
p3158
(lp3159
S'char'
p3160
a(lp3161
I-1
aaNtp3162
(S'data'
p3163
(lp3164
S'float64'
p3165
aNtp3166
tp3167
tp3168
sS'DAQmxGetCIEncoderAInputDigFltrEnable'
p3169
((lp3170
S'int32'
p3171
ag34
a((S'taskHandle'
p3172
(lp3173
S'TaskHandle'
p3174
aNtp3175
(S'channel'
p3176
(lp3177
S'char'
p3178
a(lp3179
I-1
aaNtp3180
(S'data'
p3181
(lp3182
S'bool32'
p3183
ag42
aNtp3184
tp3185
tp3186
sS'DAQmxGetExtCalLastTemp'
p3187
((lp3188
S'int32'
p3189
ag34
a((S'deviceName'
p3190
(lp3191
S'char'
p3192
a(lp3193
I-1
aaNtp3194
(S'data'
p3195
(lp3196
S'float64'
p3197
ag42
aNtp3198
tp3199
tp3200
sS'DAQmxGetCIMeasType'
p3201
((lp3202
S'int32'
p3203
ag34
a((S'taskHandle'
p3204
(lp3205
S'TaskHandle'
p3206
aNtp3207
(S'channel'
p3208
(lp3209
S'char'
p3210
a(lp3211
I-1
aaNtp3212
(S'data'
p3213
(lp3214
S'int32'
p3215
ag42
aNtp3216
tp3217
tp3218
sS'DAQmxResetAnlgWinPauseTrigCoupling'
p3219
((lp3220
S'int32'
p3221
ag34
a((S'taskHandle'
p3222
(lp3223
S'TaskHandle'
p3224
aNtp3225
tp3226
tp3227
sS'DAQmxGetWriteCurrWritePos'
p3228
((lp3229
S'int32'
p3230
ag34
a((S'taskHandle'
p3231
(lp3232
S'TaskHandle'
p3233
aNtp3234
(S'data'
p3235
(lp3236
S'uInt64'
p3237
ag42
aNtp3238
tp3239
tp3240
sS'DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate'
p3241
((lp3242
S'int32'
p3243
ag34
a((S'taskHandle'
p3244
(lp3245
S'TaskHandle'
p3246
aNtp3247
(S'channel'
p3248
(lp3249
S'char'
p3250
a(lp3251
I-1
aaNtp3252
(S'data'
p3253
(lp3254
S'float64'
p3255
ag42
aNtp3256
tp3257
tp3258
sS'DAQmxResetRealTimeConvLateErrorsToWarnings'
p3259
((lp3260
S'int32'
p3261
ag34
a((S'taskHandle'
p3262
(lp3263
S'TaskHandle'
p3264
aNtp3265
tp3266
tp3267
sS'DAQmxResetCITwoEdgeSepUnits'
p3268
((lp3269
S'int32'
p3270
ag34
a((S'taskHandle'
p3271
(lp3272
S'TaskHandle'
p3273
aNtp3274
(S'channel'
p3275
(lp3276
S'char'
p3277
a(lp3278
I-1
aaNtp3279
tp3280
tp3281
sS'DAQmxCreateLinScale'
p3282
((lp3283
S'int32'
p3284
ag34
a((S'name'
p3285
(lp3286
S'char'
p3287
a(lp3288
I-1
aaNtp3289
(S'slope'
p3290
(lp3291
S'float64'
p3292
aNtp3293
(S'yIntercept'
p3294
(lp3295
S'float64'
p3296
aNtp3297
(S'preScaledUnits'
p3298
(lp3299
S'int32'
p3300
aNtp3301
(S'scaledUnits'
p3302
(lp3303
S'char'
p3304
a(lp3305
I-1
aaNtp3306
tp3307
tp3308
sS'DAQmxResetAnlgEdgeStartTrigSrc'
p3309
((lp3310
S'int32'
p3311
ag34
a((S'taskHandle'
p3312
(lp3313
S'TaskHandle'
p3314
aNtp3315
tp3316
tp3317
sS'DAQmxResetReadSleepTime'
p3318
((lp3319
S'int32'
p3320
ag34
a((S'taskHandle'
p3321
(lp3322
S'TaskHandle'
p3323
aNtp3324
tp3325
tp3326
sS'DAQmxResetAnlgWinPauseTrigWhen'
p3327
((lp3328
S'int32'
p3329
ag34
a((S'taskHandle'
p3330
(lp3331
S'TaskHandle'
p3332
aNtp3333
tp3334
tp3335
sS'DAQmxSetExportedDividedSampClkTimebaseOutputTerm'
p3336
((lp3337
S'int32'
p3338
ag34
a((S'taskHandle'
p3339
(lp3340
S'TaskHandle'
p3341
aNtp3342
(S'data'
p3343
(lp3344
S'char'
p3345
ag42
aNtp3346
tp3347
tp3348
sS'DAQmxGetAODataXferMech'
p3349
((lp3350
S'int32'
p3351
ag34
a((S'taskHandle'
p3352
(lp3353
S'TaskHandle'
p3354
aNtp3355
(S'channel'
p3356
(lp3357
S'char'
p3358
a(lp3359
I-1
aaNtp3360
(S'data'
p3361
(lp3362
S'int32'
p3363
ag42
aNtp3364
tp3365
tp3366
sS'DAQmxGetCIFreqDiv'
p3367
((lp3368
S'int32'
p3369
ag34
a((S'taskHandle'
p3370
(lp3371
S'TaskHandle'
p3372
aNtp3373
(S'channel'
p3374
(lp3375
S'char'
p3376
a(lp3377
I-1
aaNtp3378
(S'data'
p3379
(lp3380
S'uInt32'
p3381
ag42
aNtp3382
tp3383
tp3384
sS'DAQmxSetScalePolyReverseCoeff'
p3385
((lp3386
S'int32'
p3387
ag34
a((S'scaleName'
p3388
(lp3389
S'char'
p3390
a(lp3391
I-1
aaNtp3392
(S'data'
p3393
(lp3394
S'float64'
p3395
ag42
aNtp3396
(S'arraySizeInSamples'
p3397
(lp3398
S'uInt32'
p3399
aNtp3400
tp3401
tp3402
sS'DAQmxGetAnlgEdgeRefTrigHyst'
p3403
((lp3404
S'int32'
p3405
ag34
a((S'taskHandle'
p3406
(lp3407
S'TaskHandle'
p3408
aNtp3409
(S'data'
p3410
(lp3411
S'float64'
p3412
ag42
aNtp3413
tp3414
tp3415
sS'DAQmxResetDigEdgeWatchdogExpirTrigEdge'
p3416
((lp3417
S'int32'
p3418
ag34
a((S'taskHandle'
p3419
(lp3420
S'TaskHandle'
p3421
aNtp3422
tp3423
tp3424
sS'DAQmxCfgChangeDetectionTiming'
p3425
((lp3426
S'int32'
p3427
ag34
a((S'taskHandle'
p3428
(lp3429
S'TaskHandle'
p3430
aNtp3431
(S'risingEdgeChan'
p3432
(lp3433
S'char'
p3434
a(lp3435
I-1
aaNtp3436
(S'fallingEdgeChan'
p3437
(lp3438
S'char'
p3439
a(lp3440
I-1
aaNtp3441
(S'sampleMode'
p3442
(lp3443
S'int32'
p3444
aNtp3445
(S'sampsPerChan'
p3446
(lp3447
S'uInt64'
p3448
aNtp3449
tp3450
tp3451
sS'DAQmxSetDigEdgeWatchdogExpirTrigSrc'
p3452
((lp3453
S'int32'
p3454
ag34
a((S'taskHandle'
p3455
(lp3456
S'TaskHandle'
p3457
aNtp3458
(S'data'
p3459
(lp3460
S'char'
p3461
ag42
aNtp3462
tp3463
tp3464
sS'DAQmxResetDODataXferMech'
p3465
((lp3466
S'int32'
p3467
ag34
a((S'taskHandle'
p3468
(lp3469
S'TaskHandle'
p3470
aNtp3471
(S'channel'
p3472
(lp3473
S'char'
p3474
a(lp3475
I-1
aaNtp3476
tp3477
tp3478
sS'DAQmxGetStartTrigRetriggerable'
p3479
((lp3480
S'int32'
p3481
ag34
a((S'taskHandle'
p3482
(lp3483
S'TaskHandle'
p3484
aNtp3485
(S'data'
p3486
(lp3487
S'bool32'
p3488
ag42
aNtp3489
tp3490
tp3491
sS'DAQmxResetCOPulseTicksInitialDelay'
p3492
((lp3493
S'int32'
p3494
ag34
a((S'taskHandle'
p3495
(lp3496
S'TaskHandle'
p3497
aNtp3498
(S'channel'
p3499
(lp3500
S'char'
p3501
a(lp3502
I-1
aaNtp3503
tp3504
tp3505
sS'DAQmxSetCILinEncoderInitialPos'
p3506
((lp3507
S'int32'
p3508
ag34
a((S'taskHandle'
p3509
(lp3510
S'TaskHandle'
p3511
aNtp3512
(S'channel'
p3513
(lp3514
S'char'
p3515
a(lp3516
I-1
aaNtp3517
(S'data'
p3518
(lp3519
S'float64'
p3520
aNtp3521
tp3522
tp3523
sS'DAQmxSwitchConnectMulti'
p3524
((lp3525
S'int32'
p3526
ag34
a((S'connectionList'
p3527
(lp3528
S'char'
p3529
a(lp3530
I-1
aaNtp3531
(S'waitForSettling'
p3532
(lp3533
S'bool32'
p3534
aNtp3535
tp3536
tp3537
sS'DAQmxGetSwitchDevNumRows'
p3538
((lp3539
S'int32'
p3540
ag34
a((S'deviceName'
p3541
(lp3542
S'char'
p3543
a(lp3544
I-1
aaNtp3545
(S'data'
p3546
(lp3547
S'uInt32'
p3548
ag42
aNtp3549
tp3550
tp3551
sS'DAQmxCreateDIChan'
p3552
((lp3553
S'int32'
p3554
ag34
a((S'taskHandle'
p3555
(lp3556
S'TaskHandle'
p3557
aNtp3558
(S'lines'
p3559
(lp3560
S'char'
p3561
a(lp3562
I-1
aaNtp3563
(S'nameToAssignToLines'
p3564
(lp3565
S'char'
p3566
a(lp3567
I-1
aaNtp3568
(S'lineGrouping'
p3569
(lp3570
S'int32'
p3571
aNtp3572
tp3573
tp3574
sS'DAQmxResetExportedAdvCmpltEventDelay'
p3575
((lp3576
S'int32'
p3577
ag34
a((S'taskHandle'
p3578
(lp3579
S'TaskHandle'
p3580
aNtp3581
tp3582
tp3583
sS'DAQmxGetAIMeasType'
p3584
((lp3585
S'int32'
p3586
ag34
a((S'taskHandle'
p3587
(lp3588
S'TaskHandle'
p3589
aNtp3590
(S'channel'
p3591
(lp3592
S'char'
p3593
a(lp3594
I-1
aaNtp3595
(S'data'
p3596
(lp3597
S'int32'
p3598
ag42
aNtp3599
tp3600
tp3601
sS'DAQmxResetCIEncoderBInputTerm'
p3602
((lp3603
S'int32'
p3604
ag34
a((S'taskHandle'
p3605
(lp3606
S'TaskHandle'
p3607
aNtp3608
(S'channel'
p3609
(lp3610
S'char'
p3611
a(lp3612
I-1
aaNtp3613
tp3614
tp3615
sS'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p3616
((lp3617
S'int32'
p3618
ag34
a((S'taskHandle'
p3619
(lp3620
S'TaskHandle'
p3621
aNtp3622
(S'data'
p3623
(lp3624
S'char'
p3625
ag42
aNtp3626
tp3627
tp3628
sS'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate'
p3629
((lp3630
S'int32'
p3631
ag34
a((S'taskHandle'
p3632
(lp3633
S'TaskHandle'
p3634
aNtp3635
(S'channel'
p3636
(lp3637
S'char'
p3638
a(lp3639
I-1
aaNtp3640
(S'data'
p3641
(lp3642
S'float64'
p3643
ag42
aNtp3644
tp3645
tp3646
sS'DAQmxSetCIEncoderAInputDigSyncEnable'
p3647
((lp3648
S'int32'
p3649
ag34
a((S'taskHandle'
p3650
(lp3651
S'TaskHandle'
p3652
aNtp3653
(S'channel'
p3654
(lp3655
S'char'
p3656
a(lp3657
I-1
aaNtp3658
(S'data'
p3659
(lp3660
S'bool32'
p3661
aNtp3662
tp3663
tp3664
sS'DAQmxGetAIThrmstrR1'
p3665
((lp3666
S'int32'
p3667
ag34
a((S'taskHandle'
p3668
(lp3669
S'TaskHandle'
p3670
aNtp3671
(S'channel'
p3672
(lp3673
S'char'
p3674
a(lp3675
I-1
aaNtp3676
(S'data'
p3677
(lp3678
S'float64'
p3679
ag42
aNtp3680
tp3681
tp3682
sS'DAQmxResetAnlgEdgeRefTrigSlope'
p3683
((lp3684
S'int32'
p3685
ag34
a((S'taskHandle'
p3686
(lp3687
S'TaskHandle'
p3688
aNtp3689
tp3690
tp3691
sS'DAQmxSetAnlgEdgeStartTrigHyst'
p3692
((lp3693
S'int32'
p3694
ag34
a((S'taskHandle'
p3695
(lp3696
S'TaskHandle'
p3697
aNtp3698
(S'data'
p3699
(lp3700
S'float64'
p3701
aNtp3702
tp3703
tp3704
sS'DAQmxResetAIBridgeShuntCalEnable'
p3705
((lp3706
S'int32'
p3707
ag34
a((S'taskHandle'
p3708
(lp3709
S'TaskHandle'
p3710
aNtp3711
(S'channel'
p3712
(lp3713
S'char'
p3714
a(lp3715
I-1
aaNtp3716
tp3717
tp3718
sS'DAQmxSetCISemiPeriodDigFltrMinPulseWidth'
p3719
((lp3720
S'int32'
p3721
ag34
a((S'taskHandle'
p3722
(lp3723
S'TaskHandle'
p3724
aNtp3725
(S'channel'
p3726
(lp3727
S'char'
p3728
a(lp3729
I-1
aaNtp3730
(S'data'
p3731
(lp3732
S'float64'
p3733
aNtp3734
tp3735
tp3736
sS'DAQmxGetCOPulseTimeInitialDelay'
p3737
((lp3738
S'int32'
p3739
ag34
a((S'taskHandle'
p3740
(lp3741
S'TaskHandle'
p3742
aNtp3743
(S'channel'
p3744
(lp3745
S'char'
p3746
a(lp3747
I-1
aaNtp3748
(S'data'
p3749
(lp3750
S'float64'
p3751
ag42
aNtp3752
tp3753
tp3754
sS'DAQmxResetChangeDetectDIFallingEdgePhysicalChans'
p3755
((lp3756
S'int32'
p3757
ag34
a((S'taskHandle'
p3758
(lp3759
S'TaskHandle'
p3760
aNtp3761
tp3762
tp3763
sS'DAQmxWriteCtrTicksScalar'
p3764
((lp3765
S'int32'
p3766
ag34
a((S'taskHandle'
p3767
(lp3768
S'TaskHandle'
p3769
aNtp3770
(S'autoStart'
p3771
(lp3772
S'bool32'
p3773
aNtp3774
(S'timeout'
p3775
(lp3776
S'float64'
p3777
aNtp3778
(S'highTicks'
p3779
(lp3780
S'uInt32'
p3781
aNtp3782
(S'lowTicks'
p3783
(lp3784
S'uInt32'
p3785
aNtp3786
(S'reserved'
p3787
(lp3788
S'bool32'
p3789
ag42
aNtp3790
tp3791
tp3792
sS'DAQmxResetRealTimeWaitForNextSampClkWaitMode'
p3793
((lp3794
S'int32'
p3795
ag34
a((S'taskHandle'
p3796
(lp3797
S'TaskHandle'
p3798
aNtp3799
tp3800
tp3801
sS'DAQmxGetAIAccelUnits'
p3802
((lp3803
S'int32'
p3804
ag34
a((S'taskHandle'
p3805
(lp3806
S'TaskHandle'
p3807
aNtp3808
(S'channel'
p3809
(lp3810
S'char'
p3811
a(lp3812
I-1
aaNtp3813
(S'data'
p3814
(lp3815
S'int32'
p3816
ag42
aNtp3817
tp3818
tp3819
sS'DAQmxSetDigLvlPauseTrigSrc'
p3820
((lp3821
S'int32'
p3822
ag34
a((S'taskHandle'
p3823
(lp3824
S'TaskHandle'
p3825
aNtp3826
(S'data'
p3827
(lp3828
S'char'
p3829
ag42
aNtp3830
tp3831
tp3832
sS'DAQmxGetAICurrentShuntResistance'
p3833
((lp3834
S'int32'
p3835
ag34
a((S'taskHandle'
p3836
(lp3837
S'TaskHandle'
p3838
aNtp3839
(S'channel'
p3840
(lp3841
S'char'
p3842
a(lp3843
I-1
aaNtp3844
(S'data'
p3845
(lp3846
S'float64'
p3847
ag42
aNtp3848
tp3849
tp3850
sS'DAQmxSetAIBridgeBalanceCoarsePot'
p3851
((lp3852
S'int32'
p3853
ag34
a((S'taskHandle'
p3854
(lp3855
S'TaskHandle'
p3856
aNtp3857
(S'channel'
p3858
(lp3859
S'char'
p3860
a(lp3861
I-1
aaNtp3862
(S'data'
p3863
(lp3864
S'int32'
p3865
aNtp3866
tp3867
tp3868
sS'DAQmxResetAIConvTimebaseSrc'
p3869
((lp3870
S'int32'
p3871
ag34
a((S'taskHandle'
p3872
(lp3873
S'TaskHandle'
p3874
aNtp3875
tp3876
tp3877
sS'DAQmxResetCICountEdgesCountDirDigFltrEnable'
p3878
((lp3879
S'int32'
p3880
ag34
a((S'taskHandle'
p3881
(lp3882
S'TaskHandle'
p3883
aNtp3884
(S'channel'
p3885
(lp3886
S'char'
p3887
a(lp3888
I-1
aaNtp3889
tp3890
tp3891
sS'DAQmxResetAIVoltageUnits'
p3892
((lp3893
S'int32'
p3894
ag34
a((S'taskHandle'
p3895
(lp3896
S'TaskHandle'
p3897
aNtp3898
(S'channel'
p3899
(lp3900
S'char'
p3901
a(lp3902
I-1
aaNtp3903
tp3904
tp3905
sS'DAQmxResetAIBridgeBalanceCoarsePot'
p3906
((lp3907
S'int32'
p3908
ag34
a((S'taskHandle'
p3909
(lp3910
S'TaskHandle'
p3911
aNtp3912
(S'channel'
p3913
(lp3914
S'char'
p3915
a(lp3916
I-1
aaNtp3917
tp3918
tp3919
sS'DAQmxSetExportedHshkEventOutputTerm'
p3920
((lp3921
S'int32'
p3922
ag34
a((S'taskHandle'
p3923
(lp3924
S'TaskHandle'
p3925
aNtp3926
(S'data'
p3927
(lp3928
S'char'
p3929
ag42
aNtp3930
tp3931
tp3932
sS'DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth'
p3933
((lp3934
S'int32'
p3935
ag34
a((S'taskHandle'
p3936
(lp3937
S'TaskHandle'
p3938
aNtp3939
(S'channel'
p3940
(lp3941
S'char'
p3942
a(lp3943
I-1
aaNtp3944
(S'data'
p3945
(lp3946
S'float64'
p3947
aNtp3948
tp3949
tp3950
sS'DAQmxSetAOMemMapEnable'
p3951
((lp3952
S'int32'
p3953
ag34
a((S'taskHandle'
p3954
(lp3955
S'TaskHandle'
p3956
aNtp3957
(S'channel'
p3958
(lp3959
S'char'
p3960
a(lp3961
I-1
aaNtp3962
(S'data'
p3963
(lp3964
S'bool32'
p3965
aNtp3966
tp3967
tp3968
sS'DAQmxGetAnlgEdgeStartTrigSrc'
p3969
((lp3970
S'int32'
p3971
ag34
a((S'taskHandle'
p3972
(lp3973
S'TaskHandle'
p3974
aNtp3975
(S'data'
p3976
(lp3977
S'char'
p3978
ag42
aNtp3979
(S'bufferSize'
p3980
(lp3981
S'uInt32'
p3982
aNtp3983
tp3984
tp3985
sS'DAQmxGetWatchdogExpirTrigType'
p3986
((lp3987
S'int32'
p3988
ag34
a((S'taskHandle'
p3989
(lp3990
S'TaskHandle'
p3991
aNtp3992
(S'data'
p3993
(lp3994
S'int32'
p3995
ag42
aNtp3996
tp3997
tp3998
sS'DAQmxSetAnlgWinPauseTrigCoupling'
p3999
((lp4000
S'int32'
p4001
ag34
a((S'taskHandle'
p4002
(lp4003
S'TaskHandle'
p4004
aNtp4005
(S'data'
p4006
(lp4007
S'int32'
p4008
aNtp4009
tp4010
tp4011
sS'DAQmxGetCITwoEdgeSepFirstEdge'
p4012
((lp4013
S'int32'
p4014
ag34
a((S'taskHandle'
p4015
(lp4016
S'TaskHandle'
p4017
aNtp4018
(S'channel'
p4019
(lp4020
S'char'
p4021
a(lp4022
I-1
aaNtp4023
(S'data'
p4024
(lp4025
S'int32'
p4026
ag42
aNtp4027
tp4028
tp4029
sS'DAQmxResetAOLoadImpedance'
p4030
((lp4031
S'int32'
p4032
ag34
a((S'taskHandle'
p4033
(lp4034
S'TaskHandle'
p4035
aNtp4036
(S'channel'
p4037
(lp4038
S'char'
p4039
a(lp4040
I-1
aaNtp4041
tp4042
tp4043
sS'DAQmxGetExportedAIConvClkPulsePolarity'
p4044
((lp4045
S'int32'
p4046
ag34
a((S'taskHandle'
p4047
(lp4048
S'TaskHandle'
p4049
aNtp4050
(S'data'
p4051
(lp4052
S'int32'
p4053
ag42
aNtp4054
tp4055
tp4056
sS'DAQmxCreateCIGPSTimestampChan'
p4057
((lp4058
S'int32'
p4059
ag34
a((S'taskHandle'
p4060
(lp4061
S'TaskHandle'
p4062
aNtp4063
(S'counter'
p4064
(lp4065
S'char'
p4066
a(lp4067
I-1
aaNtp4068
(S'nameToAssignToChannel'
p4069
(lp4070
S'char'
p4071
a(lp4072
I-1
aaNtp4073
(S'units'
p4074
(lp4075
S'int32'
p4076
aNtp4077
(S'syncMethod'
p4078
(lp4079
S'int32'
p4080
aNtp4081
(S'customScaleName'
p4082
(lp4083
S'char'
p4084
a(lp4085
I-1
aaNtp4086
tp4087
tp4088
sS'DAQmxSetAIExcitUseMultiplexed'
p4089
((lp4090
S'int32'
p4091
ag34
a((S'taskHandle'
p4092
(lp4093
S'TaskHandle'
p4094
aNtp4095
(S'channel'
p4096
(lp4097
S'char'
p4098
a(lp4099
I-1
aaNtp4100
(S'data'
p4101
(lp4102
S'bool32'
p4103
aNtp4104
tp4105
tp4106
sS'DAQmxGetAIForceReadFromChan'
p4107
((lp4108
S'int32'
p4109
ag34
a((S'taskHandle'
p4110
(lp4111
S'TaskHandle'
p4112
aNtp4113
(S'channel'
p4114
(lp4115
S'char'
p4116
a(lp4117
I-1
aaNtp4118
(S'data'
p4119
(lp4120
S'bool32'
p4121
ag42
aNtp4122
tp4123
tp4124
sS'DAQmxGetCICtrTimebaseDigFltrTimebaseRate'
p4125
((lp4126
S'int32'
p4127
ag34
a((S'taskHandle'
p4128
(lp4129
S'TaskHandle'
p4130
aNtp4131
(S'channel'
p4132
(lp4133
S'char'
p4134
a(lp4135
I-1
aaNtp4136
(S'data'
p4137
(lp4138
S'float64'
p4139
ag42
aNtp4140
tp4141
tp4142
sS'DAQmxSetAIChanCalVerifRefVals'
p4143
((lp4144
S'int32'
p4145
ag34
a((S'taskHandle'
p4146
(lp4147
S'TaskHandle'
p4148
aNtp4149
(S'channel'
p4150
(lp4151
S'char'
p4152
a(lp4153
I-1
aaNtp4154
(S'data'
p4155
(lp4156
S'float64'
p4157
ag42
aNtp4158
(S'arraySizeInSamples'
p4159
(lp4160
S'uInt32'
p4161
aNtp4162
tp4163
tp4164
sS'DAQmxResetHshkTrigType'
p4165
((lp4166
S'int32'
p4167
ag34
a((S'taskHandle'
p4168
(lp4169
S'TaskHandle'
p4170
aNtp4171
tp4172
tp4173
sS'DAQmxResetCIFreqTerm'
p4174
((lp4175
S'int32'
p4176
ag34
a((S'taskHandle'
p4177
(lp4178
S'TaskHandle'
p4179
aNtp4180
(S'channel'
p4181
(lp4182
S'char'
p4183
a(lp4184
I-1
aaNtp4185
tp4186
tp4187
sS'DAQmxSetWriteOffset'
p4188
((lp4189
S'int32'
p4190
ag34
a((S'taskHandle'
p4191
(lp4192
S'TaskHandle'
p4193
aNtp4194
(S'data'
p4195
(lp4196
S'int32'
p4197
aNtp4198
tp4199
tp4200
sS'DAQmxCreateCIAngEncoderChan'
p4201
((lp4202
S'int32'
p4203
ag34
a((S'taskHandle'
p4204
(lp4205
S'TaskHandle'
p4206
aNtp4207
(S'counter'
p4208
(lp4209
S'char'
p4210
a(lp4211
I-1
aaNtp4212
(S'nameToAssignToChannel'
p4213
(lp4214
S'char'
p4215
a(lp4216
I-1
aaNtp4217
(S'decodingType'
p4218
(lp4219
S'int32'
p4220
aNtp4221
(S'ZidxEnable'
p4222
(lp4223
S'bool32'
p4224
aNtp4225
(S'ZidxVal'
p4226
(lp4227
S'float64'
p4228
aNtp4229
(S'ZidxPhase'
p4230
(lp4231
S'int32'
p4232
aNtp4233
(S'units'
p4234
(lp4235
S'int32'
p4236
aNtp4237
(S'pulsesPerRev'
p4238
(lp4239
S'uInt32'
p4240
aNtp4241
(S'initialAngle'
p4242
(lp4243
S'float64'
p4244
aNtp4245
(S'customScaleName'
p4246
(lp4247
S'char'
p4248
a(lp4249
I-1
aaNtp4250
tp4251
tp4252
sS'DAQmxResetExportedCtrOutEventToggleIdleState'
p4253
((lp4254
S'int32'
p4255
ag34
a((S'taskHandle'
p4256
(lp4257
S'TaskHandle'
p4258
aNtp4259
tp4260
tp4261
sS'DAQmxSetWatchdogTimeout'
p4262
((lp4263
S'int32'
p4264
ag34
a((S'taskHandle'
p4265
(lp4266
S'TaskHandle'
p4267
aNtp4268
(S'data'
p4269
(lp4270
S'float64'
p4271
aNtp4272
tp4273
tp4274
sS'DAQmxResetCOPulseDutyCyc'
p4275
((lp4276
S'int32'
p4277
ag34
a((S'taskHandle'
p4278
(lp4279
S'TaskHandle'
p4280
aNtp4281
(S'channel'
p4282
(lp4283
S'char'
p4284
a(lp4285
I-1
aaNtp4286
tp4287
tp4288
sS'DAQmxSetAITempUnits'
p4289
((lp4290
S'int32'
p4291
ag34
a((S'taskHandle'
p4292
(lp4293
S'TaskHandle'
p4294
aNtp4295
(S'channel'
p4296
(lp4297
S'char'
p4298
a(lp4299
I-1
aaNtp4300
(S'data'
p4301
(lp4302
S'int32'
p4303
aNtp4304
tp4305
tp4306
sS'DAQmxResetAIMicrophoneSensitivity'
p4307
((lp4308
S'int32'
p4309
ag34
a((S'taskHandle'
p4310
(lp4311
S'TaskHandle'
p4312
aNtp4313
(S'channel'
p4314
(lp4315
S'char'
p4316
a(lp4317
I-1
aaNtp4318
tp4319
tp4320
sS'DAQmxSwitchGetMultiRelayPos'
p4321
((lp4322
S'int32'
p4323
ag34
a((S'relayList'
p4324
(lp4325
S'char'
p4326
a(lp4327
I-1
aaNtp4328
(S'relayPos'
p4329
(lp4330
S'uInt32'
p4331
a(lp4332
I-1
aaNtp4333
(S'relayPosArraySize'
p4334
(lp4335
S'uInt32'
p4336
aNtp4337
(S'numRelayPossRead'
p4338
(lp4339
S'uInt32'
p4340
ag42
aNtp4341
tp4342
tp4343
sS'DAQmxResetRealTimeNumOfWarmupIters'
p4344
((lp4345
S'int32'
p4346
ag34
a((S'taskHandle'
p4347
(lp4348
S'TaskHandle'
p4349
aNtp4350
tp4351
tp4352
sS'DAQmxSetWatchdogDOExpirState'
p4353
((lp4354
S'int32'
p4355
ag34
a((S'taskHandle'
p4356
(lp4357
S'TaskHandle'
p4358
aNtp4359
(S'channel'
p4360
(lp4361
S'char'
p4362
a(lp4363
I-1
aaNtp4364
(S'data'
p4365
(lp4366
S'int32'
p4367
aNtp4368
tp4369
tp4370
sS'DAQmxGetHshkStartCond'
p4371
((lp4372
S'int32'
p4373
ag34
a((S'taskHandle'
p4374
(lp4375
S'TaskHandle'
p4376
aNtp4377
(S'data'
p4378
(lp4379
S'int32'
p4380
ag42
aNtp4381
tp4382
tp4383
sS'DAQmxSetAIDataXferMech'
p4384
((lp4385
S'int32'
p4386
ag34
a((S'taskHandle'
p4387
(lp4388
S'TaskHandle'
p4389
aNtp4390
(S'channel'
p4391
(lp4392
S'char'
p4393
a(lp4394
I-1
aaNtp4395
(S'data'
p4396
(lp4397
S'int32'
p4398
aNtp4399
tp4400
tp4401
sS'DAQmxExportSignal'
p4402
((lp4403
S'int32'
p4404
ag34
a((S'taskHandle'
p4405
(lp4406
S'TaskHandle'
p4407
aNtp4408
(S'signalID'
p4409
(lp4410
S'int32'
p4411
aNtp4412
(S'outputTerminal'
p4413
(lp4414
S'char'
p4415
a(lp4416
I-1
aaNtp4417
tp4418
tp4419
sS'DAQmxSetExportedAdvTrigPulseWidthUnits'
p4420
((lp4421
S'int32'
p4422
ag34
a((S'taskHandle'
p4423
(lp4424
S'TaskHandle'
p4425
aNtp4426
(S'data'
p4427
(lp4428
S'int32'
p4429
aNtp4430
tp4431
tp4432
sS'DAQmxSetExportedCtrOutEventPulsePolarity'
p4433
((lp4434
S'int32'
p4435
ag34
a((S'taskHandle'
p4436
(lp4437
S'TaskHandle'
p4438
aNtp4439
(S'data'
p4440
(lp4441
S'int32'
p4442
aNtp4443
tp4444
tp4445
sS'DAQmxSetExportedRdyForXferEventOutputTerm'
p4446
((lp4447
S'int32'
p4448
ag34
a((S'taskHandle'
p4449
(lp4450
S'TaskHandle'
p4451
aNtp4452
(S'data'
p4453
(lp4454
S'char'
p4455
ag42
aNtp4456
tp4457
tp4458
sS'DAQmxSetStartTrigType'
p4459
((lp4460
S'int32'
p4461
ag34
a((S'taskHandle'
p4462
(lp4463
S'TaskHandle'
p4464
aNtp4465
(S'data'
p4466
(lp4467
S'int32'
p4468
aNtp4469
tp4470
tp4471
sS'DAQmxSetAILowpassEnable'
p4472
((lp4473
S'int32'
p4474
ag34
a((S'taskHandle'
p4475
(lp4476
S'TaskHandle'
p4477
aNtp4478
(S'channel'
p4479
(lp4480
S'char'
p4481
a(lp4482
I-1
aaNtp4483
(S'data'
p4484
(lp4485
S'bool32'
p4486
aNtp4487
tp4488
tp4489
sS'DAQmxGetAIMemMapEnable'
p4490
((lp4491
S'int32'
p4492
ag34
a((S'taskHandle'
p4493
(lp4494
S'TaskHandle'
p4495
aNtp4496
(S'channel'
p4497
(lp4498
S'char'
p4499
a(lp4500
I-1
aaNtp4501
(S'data'
p4502
(lp4503
S'bool32'
p4504
ag42
aNtp4505
tp4506
tp4507
sS'DAQmxResetAIRTDB'
p4508
((lp4509
S'int32'
p4510
ag34
a((S'taskHandle'
p4511
(lp4512
S'TaskHandle'
p4513
aNtp4514
(S'channel'
p4515
(lp4516
S'char'
p4517
a(lp4518
I-1
aaNtp4519
tp4520
tp4521
sS'DAQmxResetAIRTDC'
p4522
((lp4523
S'int32'
p4524
ag34
a((S'taskHandle'
p4525
(lp4526
S'TaskHandle'
p4527
aNtp4528
(S'channel'
p4529
(lp4530
S'char'
p4531
a(lp4532
I-1
aaNtp4533
tp4534
tp4535
sS'DAQmxResetAIRTDA'
p4536
((lp4537
S'int32'
p4538
ag34
a((S'taskHandle'
p4539
(lp4540
S'TaskHandle'
p4541
aNtp4542
(S'channel'
p4543
(lp4544
S'char'
p4545
a(lp4546
I-1
aaNtp4547
tp4548
tp4549
sS'DAQmxReadRaw'
p4550
((lp4551
S'int32'
p4552
ag34
a((S'taskHandle'
p4553
(lp4554
S'TaskHandle'
p4555
aNtp4556
(S'numSampsPerChan'
p4557
(lp4558
S'int32'
p4559
aNtp4560
(S'timeout'
p4561
(lp4562
S'float64'
p4563
aNtp4564
(S'readArray'
p4565
(lp4566
S'void'
p4567
ag42
aNtp4568
(S'arraySizeInBytes'
p4569
(lp4570
S'uInt32'
p4571
aNtp4572
(S'sampsRead'
p4573
(lp4574
S'int32'
p4575
ag42
aNtp4576
(S'numBytesPerSamp'
p4577
(lp4578
S'int32'
p4579
ag42
aNtp4580
(S'reserved'
p4581
(lp4582
S'bool32'
p4583
ag42
aNtp4584
tp4585
tp4586
sS'DAQmxResetReadAutoStart'
p4587
((lp4588
S'int32'
p4589
ag34
a((S'taskHandle'
p4590
(lp4591
S'TaskHandle'
p4592
aNtp4593
tp4594
tp4595
sS'DAQmxResetAIMin'
p4596
((lp4597
S'int32'
p4598
ag34
a((S'taskHandle'
p4599
(lp4600
S'TaskHandle'
p4601
aNtp4602
(S'channel'
p4603
(lp4604
S'char'
p4605
a(lp4606
I-1
aaNtp4607
tp4608
tp4609
sS'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate'
p4610
((lp4611
S'int32'
p4612
ag34
a((S'taskHandle'
p4613
(lp4614
S'TaskHandle'
p4615
aNtp4616
(S'channel'
p4617
(lp4618
S'char'
p4619
a(lp4620
I-1
aaNtp4621
(S'data'
p4622
(lp4623
S'float64'
p4624
aNtp4625
tp4626
tp4627
sS'DAQmxResetCIEncoderAInputDigFltrTimebaseRate'
p4628
((lp4629
S'int32'
p4630
ag34
a((S'taskHandle'
p4631
(lp4632
S'TaskHandle'
p4633
aNtp4634
(S'channel'
p4635
(lp4636
S'char'
p4637
a(lp4638
I-1
aaNtp4639
tp4640
tp4641
sS'DAQmxGetExportedAdvTrigPulseWidthUnits'
p4642
((lp4643
S'int32'
p4644
ag34
a((S'taskHandle'
p4645
(lp4646
S'TaskHandle'
p4647
aNtp4648
(S'data'
p4649
(lp4650
S'int32'
p4651
ag42
aNtp4652
tp4653
tp4654
sS'DAQmxResetCICountEdgesDir'
p4655
((lp4656
S'int32'
p4657
ag34
a((S'taskHandle'
p4658
(lp4659
S'TaskHandle'
p4660
aNtp4661
(S'channel'
p4662
(lp4663
S'char'
p4664
a(lp4665
I-1
aaNtp4666
tp4667
tp4668
sS'DAQmxResetAOIdleOutputBehavior'
p4669
((lp4670
S'int32'
p4671
ag34
a((S'taskHandle'
p4672
(lp4673
S'TaskHandle'
p4674
aNtp4675
(S'channel'
p4676
(lp4677
S'char'
p4678
a(lp4679
I-1
aaNtp4680
tp4681
tp4682
sS'DAQmxCreateAITempBuiltInSensorChan'
p4683
((lp4684
S'int32'
p4685
ag34
a((S'taskHandle'
p4686
(lp4687
S'TaskHandle'
p4688
aNtp4689
(S'physicalChannel'
p4690
(lp4691
S'char'
p4692
a(lp4693
I-1
aaNtp4694
(S'nameToAssignToChannel'
p4695
(lp4696
S'char'
p4697
a(lp4698
I-1
aaNtp4699
(S'units'
p4700
(lp4701
S'int32'
p4702
aNtp4703
tp4704
tp4705
sS'DAQmxResetRefClkRate'
p4706
((lp4707
S'int32'
p4708
ag34
a((S'taskHandle'
p4709
(lp4710
S'TaskHandle'
p4711
aNtp4712
tp4713
tp4714
sS'DAQmxSelfCal'
p4715
((lp4716
S'int32'
p4717
ag34
a((S'deviceName'
p4718
(lp4719
S'char'
p4720
a(lp4721
I-1
aaNtp4722
tp4723
tp4724
sS'DAQmxStopTask'
p4725
((lp4726
S'int32'
p4727
ag34
a((S'taskHandle'
p4728
(lp4729
S'TaskHandle'
p4730
aNtp4731
tp4732
tp4733
sS'DAQmxGetPhysicalChanTEDSMfgID'
p4734
((lp4735
S'int32'
p4736
ag34
a((S'physicalChannel'
p4737
(lp4738
S'char'
p4739
a(lp4740
I-1
aaNtp4741
(S'data'
p4742
(lp4743
S'uInt32'
p4744
ag42
aNtp4745
tp4746
tp4747
sS'DAQmxCreateAIFreqVoltageChan'
p4748
((lp4749
S'int32'
p4750
ag34
a((S'taskHandle'
p4751
(lp4752
S'TaskHandle'
p4753
aNtp4754
(S'physicalChannel'
p4755
(lp4756
S'char'
p4757
a(lp4758
I-1
aaNtp4759
(S'nameToAssignToChannel'
p4760
(lp4761
S'char'
p4762
a(lp4763
I-1
aaNtp4764
(S'minVal'
p4765
(lp4766
S'float64'
p4767
aNtp4768
(S'maxVal'
p4769
(lp4770
S'float64'
p4771
aNtp4772
(S'units'
p4773
(lp4774
S'int32'
p4775
aNtp4776
(S'thresholdLevel'
p4777
(lp4778
S'float64'
p4779
aNtp4780
(S'hysteresis'
p4781
(lp4782
S'float64'
p4783
aNtp4784
(S'customScaleName'
p4785
(lp4786
S'char'
p4787
a(lp4788
I-1
aaNtp4789
tp4790
tp4791
sS'DAQmxSetAIRVDTSensitivity'
p4792
((lp4793
S'int32'
p4794
ag34
a((S'taskHandle'
p4795
(lp4796
S'TaskHandle'
p4797
aNtp4798
(S'channel'
p4799
(lp4800
S'char'
p4801
a(lp4802
I-1
aaNtp4803
(S'data'
p4804
(lp4805
S'float64'
p4806
aNtp4807
tp4808
tp4809
sS'DAQmxGetExportedAdvCmpltEventPulsePolarity'
p4810
((lp4811
S'int32'
p4812
ag34
a((S'taskHandle'
p4813
(lp4814
S'TaskHandle'
p4815
aNtp4816
(S'data'
p4817
(lp4818
S'int32'
p4819
ag42
aNtp4820
tp4821
tp4822
sS'DAQmxGetCOPulseTicksInitialDelay'
p4823
((lp4824
S'int32'
p4825
ag34
a((S'taskHandle'
p4826
(lp4827
S'TaskHandle'
p4828
aNtp4829
(S'channel'
p4830
(lp4831
S'char'
p4832
a(lp4833
I-1
aaNtp4834
(S'data'
p4835
(lp4836
S'uInt32'
p4837
ag42
aNtp4838
tp4839
tp4840
sS'DAQmxGetReadWaitMode'
p4841
((lp4842
S'int32'
p4843
ag34
a((S'taskHandle'
p4844
(lp4845
S'TaskHandle'
p4846
aNtp4847
(S'data'
p4848
(lp4849
S'int32'
p4850
ag42
aNtp4851
tp4852
tp4853
sS'DAQmxGetDevDILines'
p4854
((lp4855
S'int32'
p4856
ag34
a((S'device'
p4857
(lp4858
S'char'
p4859
a(lp4860
I-1
aaNtp4861
(S'data'
p4862
(lp4863
S'char'
p4864
ag42
aNtp4865
(S'bufferSize'
p4866
(lp4867
S'uInt32'
p4868
aNtp4869
tp4870
tp4871
sS'DAQmxResetCOCtrTimebaseSrc'
p4872
((lp4873
S'int32'
p4874
ag34
a((S'taskHandle'
p4875
(lp4876
S'TaskHandle'
p4877
aNtp4878
(S'channel'
p4879
(lp4880
S'char'
p4881
a(lp4882
I-1
aaNtp4883
tp4884
tp4885
sS'DAQmxSetDOOutputDriveType'
p4886
((lp4887
S'int32'
p4888
ag34
a((S'taskHandle'
p4889
(lp4890
S'TaskHandle'
p4891
aNtp4892
(S'channel'
p4893
(lp4894
S'char'
p4895
a(lp4896
I-1
aaNtp4897
(S'data'
p4898
(lp4899
S'int32'
p4900
aNtp4901
tp4902
tp4903
sS'DAQmxResetExportedAIHoldCmpltEventOutputTerm'
p4904
((lp4905
S'int32'
p4906
ag34
a((S'taskHandle'
p4907
(lp4908
S'TaskHandle'
p4909
aNtp4910
tp4911
tp4912
sS'DAQmxGetAIBridgeBalanceFinePot'
p4913
((lp4914
S'int32'
p4915
ag34
a((S'taskHandle'
p4916
(lp4917
S'TaskHandle'
p4918
aNtp4919
(S'channel'
p4920
(lp4921
S'char'
p4922
a(lp4923
I-1
aaNtp4924
(S'data'
p4925
(lp4926
S'int32'
p4927
ag42
aNtp4928
tp4929
tp4930
sS'DAQmxSetAnlgWinRefTrigCoupling'
p4931
((lp4932
S'int32'
p4933
ag34
a((S'taskHandle'
p4934
(lp4935
S'TaskHandle'
p4936
aNtp4937
(S'data'
p4938
(lp4939
S'int32'
p4940
aNtp4941
tp4942
tp4943
sS'DAQmxSetInterlockedHshkTrigSrc'
p4944
((lp4945
S'int32'
p4946
ag34
a((S'taskHandle'
p4947
(lp4948
S'TaskHandle'
p4949
aNtp4950
(S'data'
p4951
(lp4952
S'char'
p4953
ag42
aNtp4954
tp4955
tp4956
sS'DAQmxGetScaleMapPreScaledMin'
p4957
((lp4958
S'int32'
p4959
ag34
a((S'scaleName'
p4960
(lp4961
S'char'
p4962
a(lp4963
I-1
aaNtp4964
(S'data'
p4965
(lp4966
S'float64'
p4967
ag42
aNtp4968
tp4969
tp4970
sS'DAQmxSetCIEncoderZInputDigFltrEnable'
p4971
((lp4972
S'int32'
p4973
ag34
a((S'taskHandle'
p4974
(lp4975
S'TaskHandle'
p4976
aNtp4977
(S'channel'
p4978
(lp4979
S'char'
p4980
a(lp4981
I-1
aaNtp4982
(S'data'
p4983
(lp4984
S'bool32'
p4985
aNtp4986
tp4987
tp4988
sS'DAQmxWriteBinaryU32'
p4989
((lp4990
S'int32'
p4991
ag34
a((S'taskHandle'
p4992
(lp4993
S'TaskHandle'
p4994
aNtp4995
(S'numSampsPerChan'
p4996
(lp4997
S'int32'
p4998
aNtp4999
(S'autoStart'
p5000
(lp5001
S'bool32'
p5002
aNtp5003
(S'timeout'
p5004
(lp5005
S'float64'
p5006
aNtp5007
(S'dataLayout'
p5008
(lp5009
S'bool32'
p5010
aNtp5011
(S'writeArray'
p5012
(lp5013
S'uInt32'
p5014
a(lp5015
I-1
aaNtp5016
(S'sampsPerChanWritten'
p5017
(lp5018
S'int32'
p5019
ag42
aNtp5020
(S'reserved'
p5021
(lp5022
S'bool32'
p5023
ag42
aNtp5024
tp5025
tp5026
sS'DAQmxGetCIPulseWidthUnits'
p5027
((lp5028
S'int32'
p5029
ag34
a((S'taskHandle'
p5030
(lp5031
S'TaskHandle'
p5032
aNtp5033
(S'channel'
p5034
(lp5035
S'char'
p5036
a(lp5037
I-1
aaNtp5038
(S'data'
p5039
(lp5040
S'int32'
p5041
ag42
aNtp5042
tp5043
tp5044
sS'DAQmxGetAIStrainGagePoissonRatio'
p5045
((lp5046
S'int32'
p5047
ag34
a((S'taskHandle'
p5048
(lp5049
S'TaskHandle'
p5050
aNtp5051
(S'channel'
p5052
(lp5053
S'char'
p5054
a(lp5055
I-1
aaNtp5056
(S'data'
p5057
(lp5058
S'float64'
p5059
ag42
aNtp5060
tp5061
tp5062
sS'DAQmxSetAIForceReadFromChan'
p5063
((lp5064
S'int32'
p5065
ag34
a((S'taskHandle'
p5066
(lp5067
S'TaskHandle'
p5068
aNtp5069
(S'channel'
p5070
(lp5071
S'char'
p5072
a(lp5073
I-1
aaNtp5074
(S'data'
p5075
(lp5076
S'bool32'
p5077
aNtp5078
tp5079
tp5080
sS'DAQmxSetAILowpassSwitchCapExtClkDiv'
p5081
((lp5082
S'int32'
p5083
ag34
a((S'taskHandle'
p5084
(lp5085
S'TaskHandle'
p5086
aNtp5087
(S'channel'
p5088
(lp5089
S'char'
p5090
a(lp5091
I-1
aaNtp5092
(S'data'
p5093
(lp5094
S'uInt32'
p5095
aNtp5096
tp5097
tp5098
sS'DAQmxResetSampClkDigSyncEnable'
p5099
((lp5100
S'int32'
p5101
ag34
a((S'taskHandle'
p5102
(lp5103
S'TaskHandle'
p5104
aNtp5105
tp5106
tp5107
sS'DAQmxResetAnlgEdgeStartTrigHyst'
p5108
((lp5109
S'int32'
p5110
ag34
a((S'taskHandle'
p5111
(lp5112
S'TaskHandle'
p5113
aNtp5114
tp5115
tp5116
sS'DAQmxGetDigEdgeAdvTrigSrc'
p5117
((lp5118
S'int32'
p5119
ag34
a((S'taskHandle'
p5120
(lp5121
S'TaskHandle'
p5122
aNtp5123
(S'data'
p5124
(lp5125
S'char'
p5126
ag42
aNtp5127
(S'bufferSize'
p5128
(lp5129
S'uInt32'
p5130
aNtp5131
tp5132
tp5133
sS'DAQmxSetExportedHshkEventInterlockedAssertOnStart'
p5134
((lp5135
S'int32'
p5136
ag34
a((S'taskHandle'
p5137
(lp5138
S'TaskHandle'
p5139
aNtp5140
(S'data'
p5141
(lp5142
S'bool32'
p5143
aNtp5144
tp5145
tp5146
sS'DAQmxSetCITwoEdgeSepUnits'
p5147
((lp5148
S'int32'
p5149
ag34
a((S'taskHandle'
p5150
(lp5151
S'TaskHandle'
p5152
aNtp5153
(S'channel'
p5154
(lp5155
S'char'
p5156
a(lp5157
I-1
aaNtp5158
(S'data'
p5159
(lp5160
S'int32'
p5161
aNtp5162
tp5163
tp5164
sS'DAQmxSetReadAutoStart'
p5165
((lp5166
S'int32'
p5167
ag34
a((S'taskHandle'
p5168
(lp5169
S'TaskHandle'
p5170
aNtp5171
(S'data'
p5172
(lp5173
S'bool32'
p5174
aNtp5175
tp5176
tp5177
sS'DAQmxSetCISemiPeriodStartingEdge'
p5178
((lp5179
S'int32'
p5180
ag34
a((S'taskHandle'
p5181
(lp5182
S'TaskHandle'
p5183
aNtp5184
(S'channel'
p5185
(lp5186
S'char'
p5187
a(lp5188
I-1
aaNtp5189
(S'data'
p5190
(lp5191
S'int32'
p5192
aNtp5193
tp5194
tp5195
sS'DAQmxResetAIForceReadFromChan'
p5196
((lp5197
S'int32'
p5198
ag34
a((S'taskHandle'
p5199
(lp5200
S'TaskHandle'
p5201
aNtp5202
(S'channel'
p5203
(lp5204
S'char'
p5205
a(lp5206
I-1
aaNtp5207
tp5208
tp5209
sS'DAQmxGetArmStartTrigType'
p5210
((lp5211
S'int32'
p5212
ag34
a((S'taskHandle'
p5213
(lp5214
S'TaskHandle'
p5215
aNtp5216
(S'data'
p5217
(lp5218
S'int32'
p5219
ag42
aNtp5220
tp5221
tp5222
sS'DAQmxGetAIConvMaxRate'
p5223
((lp5224
S'int32'
p5225
ag34
a((S'taskHandle'
p5226
(lp5227
S'TaskHandle'
p5228
aNtp5229
(S'data'
p5230
(lp5231
S'float64'
p5232
ag42
aNtp5233
tp5234
tp5235
sS'DAQmxSetDigEdgeStartTrigDigSyncEnable'
p5236
((lp5237
S'int32'
p5238
ag34
a((S'taskHandle'
p5239
(lp5240
S'TaskHandle'
p5241
aNtp5242
(S'data'
p5243
(lp5244
S'bool32'
p5245
aNtp5246
tp5247
tp5248
sS'DAQmxGetTaskNumChans'
p5249
((lp5250
S'int32'
p5251
ag34
a((S'taskHandle'
p5252
(lp5253
S'TaskHandle'
p5254
aNtp5255
(S'data'
p5256
(lp5257
S'uInt32'
p5258
ag42
aNtp5259
tp5260
tp5261
sS'DAQmxResetAOTermCfg'
p5262
((lp5263
S'int32'
p5264
ag34
a((S'taskHandle'
p5265
(lp5266
S'TaskHandle'
p5267
aNtp5268
(S'channel'
p5269
(lp5270
S'char'
p5271
a(lp5272
I-1
aaNtp5273
tp5274
tp5275
sS'DAQmxSetCIPulseWidthDigSyncEnable'
p5276
((lp5277
S'int32'
p5278
ag34
a((S'taskHandle'
p5279
(lp5280
S'TaskHandle'
p5281
aNtp5282
(S'channel'
p5283
(lp5284
S'char'
p5285
a(lp5286
I-1
aaNtp5287
(S'data'
p5288
(lp5289
S'bool32'
p5290
aNtp5291
tp5292
tp5293
sS'DAQmxGetAIACExcitSyncEnable'
p5294
((lp5295
S'int32'
p5296
ag34
a((S'taskHandle'
p5297
(lp5298
S'TaskHandle'
p5299
aNtp5300
(S'channel'
p5301
(lp5302
S'char'
p5303
a(lp5304
I-1
aaNtp5305
(S'data'
p5306
(lp5307
S'bool32'
p5308
ag42
aNtp5309
tp5310
tp5311
sS'DAQmxSetAIExcitDCorAC'
p5312
((lp5313
S'int32'
p5314
ag34
a((S'taskHandle'
p5315
(lp5316
S'TaskHandle'
p5317
aNtp5318
(S'channel'
p5319
(lp5320
S'char'
p5321
a(lp5322
I-1
aaNtp5323
(S'data'
p5324
(lp5325
S'int32'
p5326
aNtp5327
tp5328
tp5329
sS'DAQmxSetScaleMapScaledMin'
p5330
((lp5331
S'int32'
p5332
ag34
a((S'scaleName'
p5333
(lp5334
S'char'
p5335
a(lp5336
I-1
aaNtp5337
(S'data'
p5338
(lp5339
S'float64'
p5340
aNtp5341
tp5342
tp5343
sS'DAQmxResetAnlgWinStartTrigTop'
p5344
((lp5345
S'int32'
p5346
ag34
a((S'taskHandle'
p5347
(lp5348
S'TaskHandle'
p5349
aNtp5350
tp5351
tp5352
sS'DAQmxResetAnlgEdgeRefTrigHyst'
p5353
((lp5354
S'int32'
p5355
ag34
a((S'taskHandle'
p5356
(lp5357
S'TaskHandle'
p5358
aNtp5359
tp5360
tp5361
sS'DAQmxCfgInputBuffer'
p5362
((lp5363
S'int32'
p5364
ag34
a((S'taskHandle'
p5365
(lp5366
S'TaskHandle'
p5367
aNtp5368
(S'numSampsPerChan'
p5369
(lp5370
S'uInt32'
p5371
aNtp5372
tp5373
tp5374
sS'DAQmxGetExtCalRecommendedInterval'
p5375
((lp5376
S'int32'
p5377
ag34
a((S'deviceName'
p5378
(lp5379
S'char'
p5380
a(lp5381
I-1
aaNtp5382
(S'data'
p5383
(lp5384
S'uInt32'
p5385
ag42
aNtp5386
tp5387
tp5388
sS'DAQmxResetCIMin'
p5389
((lp5390
S'int32'
p5391
ag34
a((S'taskHandle'
p5392
(lp5393
S'TaskHandle'
p5394
aNtp5395
(S'channel'
p5396
(lp5397
S'char'
p5398
a(lp5399
I-1
aaNtp5400
tp5401
tp5402
sS'DAQmxResetDIDigFltrEnable'
p5403
((lp5404
S'int32'
p5405
ag34
a((S'taskHandle'
p5406
(lp5407
S'TaskHandle'
p5408
aNtp5409
(S'channel'
p5410
(lp5411
S'char'
p5412
a(lp5413
I-1
aaNtp5414
tp5415
tp5416
sS'DAQmxResetCOCtrTimebaseActiveEdge'
p5417
((lp5418
S'int32'
p5419
ag34
a((S'taskHandle'
p5420
(lp5421
S'TaskHandle'
p5422
aNtp5423
(S'channel'
p5424
(lp5425
S'char'
p5426
a(lp5427
I-1
aaNtp5428
tp5429
tp5430
sS'DAQmxGetAIConvTimebaseDiv'
p5431
((lp5432
S'int32'
p5433
ag34
a((S'taskHandle'
p5434
(lp5435
S'TaskHandle'
p5436
aNtp5437
(S'data'
p5438
(lp5439
S'uInt32'
p5440
ag42
aNtp5441
tp5442
tp5443
sS'DAQmxGetExportedHshkEventInterlockedDeassertDelay'
p5444
((lp5445
S'int32'
p5446
ag34
a((S'taskHandle'
p5447
(lp5448
S'TaskHandle'
p5449
aNtp5450
(S'data'
p5451
(lp5452
S'float64'
p5453
ag42
aNtp5454
tp5455
tp5456
sS'DAQmxResetCIPulseWidthDigFltrMinPulseWidth'
p5457
((lp5458
S'int32'
p5459
ag34
a((S'taskHandle'
p5460
(lp5461
S'TaskHandle'
p5462
aNtp5463
(S'channel'
p5464
(lp5465
S'char'
p5466
a(lp5467
I-1
aaNtp5468
tp5469
tp5470
sS'DAQmxResetCIFreqDigFltrTimebaseRate'
p5471
((lp5472
S'int32'
p5473
ag34
a((S'taskHandle'
p5474
(lp5475
S'TaskHandle'
p5476
aNtp5477
(S'channel'
p5478
(lp5479
S'char'
p5480
a(lp5481
I-1
aaNtp5482
tp5483
tp5484
sS'DAQmxGetAOCurrentUnits'
p5485
((lp5486
S'int32'
p5487
ag34
a((S'taskHandle'
p5488
(lp5489
S'TaskHandle'
p5490
aNtp5491
(S'channel'
p5492
(lp5493
S'char'
p5494
a(lp5495
I-1
aaNtp5496
(S'data'
p5497
(lp5498
S'int32'
p5499
ag42
aNtp5500
tp5501
tp5502
sS'DAQmxSetAIBridgeNomResistance'
p5503
((lp5504
S'int32'
p5505
ag34
a((S'taskHandle'
p5506
(lp5507
S'TaskHandle'
p5508
aNtp5509
(S'channel'
p5510
(lp5511
S'char'
p5512
a(lp5513
I-1
aaNtp5514
(S'data'
p5515
(lp5516
S'float64'
p5517
aNtp5518
tp5519
tp5520
sS'DAQmxResetCISemiPeriodTerm'
p5521
((lp5522
S'int32'
p5523
ag34
a((S'taskHandle'
p5524
(lp5525
S'TaskHandle'
p5526
aNtp5527
(S'channel'
p5528
(lp5529
S'char'
p5530
a(lp5531
I-1
aaNtp5532
tp5533
tp5534
sS'DAQmxSetAIGain'
p5535
((lp5536
S'int32'
p5537
ag34
a((S'taskHandle'
p5538
(lp5539
S'TaskHandle'
p5540
aNtp5541
(S'channel'
p5542
(lp5543
S'char'
p5544
a(lp5545
I-1
aaNtp5546
(S'data'
p5547
(lp5548
S'float64'
p5549
aNtp5550
tp5551
tp5552
sS'DAQmxGetWriteSpaceAvail'
p5553
((lp5554
S'int32'
p5555
ag34
a((S'taskHandle'
p5556
(lp5557
S'TaskHandle'
p5558
aNtp5559
(S'data'
p5560
(lp5561
S'uInt32'
p5562
ag42
aNtp5563
tp5564
tp5565
sS'DAQmxGetCOPulseFreqUnits'
p5566
((lp5567
S'int32'
p5568
ag34
a((S'taskHandle'
p5569
(lp5570
S'TaskHandle'
p5571
aNtp5572
(S'channel'
p5573
(lp5574
S'char'
p5575
a(lp5576
I-1
aaNtp5577
(S'data'
p5578
(lp5579
S'int32'
p5580
ag42
aNtp5581
tp5582
tp5583
sS'DAQmxGetChanIsGlobal'
p5584
((lp5585
S'int32'
p5586
ag34
a((S'taskHandle'
p5587
(lp5588
S'TaskHandle'
p5589
aNtp5590
(S'channel'
p5591
(lp5592
S'char'
p5593
a(lp5594
I-1
aaNtp5595
(S'data'
p5596
(lp5597
S'bool32'
p5598
ag42
aNtp5599
tp5600
tp5601
sS'DAQmxResetDigPatternRefTrigSrc'
p5602
((lp5603
S'int32'
p5604
ag34
a((S'taskHandle'
p5605
(lp5606
S'TaskHandle'
p5607
aNtp5608
tp5609
tp5610
sS'DAQmxGetAIChanCalCalDate'
p5611
((lp5612
S'int32'
p5613
ag34
a((S'taskHandle'
p5614
(lp5615
S'TaskHandle'
p5616
aNtp5617
(S'channelName'
p5618
(lp5619
S'char'
p5620
a(lp5621
I-1
aaNtp5622
(S'year'
p5623
(lp5624
S'uInt32'
p5625
ag42
aNtp5626
(S'month'
p5627
(lp5628
S'uInt32'
p5629
ag42
aNtp5630
(S'day'
p5631
(lp5632
S'uInt32'
p5633
ag42
aNtp5634
(S'hour'
p5635
(lp5636
S'uInt32'
p5637
ag42
aNtp5638
(S'minute'
p5639
(lp5640
S'uInt32'
p5641
ag42
aNtp5642
tp5643
tp5644
sS'DAQmxGetAICustomScaleName'
p5645
((lp5646
S'int32'
p5647
ag34
a((S'taskHandle'
p5648
(lp5649
S'TaskHandle'
p5650
aNtp5651
(S'channel'
p5652
(lp5653
S'char'
p5654
a(lp5655
I-1
aaNtp5656
(S'data'
p5657
(lp5658
S'char'
p5659
ag42
aNtp5660
(S'bufferSize'
p5661
(lp5662
S'uInt32'
p5663
aNtp5664
tp5665
tp5666
sS'DAQmxResetAIRVDTSensitivityUnits'
p5667
((lp5668
S'int32'
p5669
ag34
a((S'taskHandle'
p5670
(lp5671
S'TaskHandle'
p5672
aNtp5673
(S'channel'
p5674
(lp5675
S'char'
p5676
a(lp5677
I-1
aaNtp5678
tp5679
tp5680
sS'DAQmxResetCIPulseWidthDigSyncEnable'
p5681
((lp5682
S'int32'
p5683
ag34
a((S'taskHandle'
p5684
(lp5685
S'TaskHandle'
p5686
aNtp5687
(S'channel'
p5688
(lp5689
S'char'
p5690
a(lp5691
I-1
aaNtp5692
tp5693
tp5694
sS'DAQmxSetSyncPulseSrc'
p5695
((lp5696
S'int32'
p5697
ag34
a((S'taskHandle'
p5698
(lp5699
S'TaskHandle'
p5700
aNtp5701
(S'data'
p5702
(lp5703
S'char'
p5704
ag42
aNtp5705
tp5706
tp5707
sS'DAQmxResetDigEdgeArmStartTrigSrc'
p5708
((lp5709
S'int32'
p5710
ag34
a((S'taskHandle'
p5711
(lp5712
S'TaskHandle'
p5713
aNtp5714
tp5715
tp5716
sS'DAQmxGetAnlgLvlPauseTrigCoupling'
p5717
((lp5718
S'int32'
p5719
ag34
a((S'taskHandle'
p5720
(lp5721
S'TaskHandle'
p5722
aNtp5723
(S'data'
p5724
(lp5725
S'int32'
p5726
ag42
aNtp5727
tp5728
tp5729
sS'DAQmxGetCINumPossiblyInvalidSamps'
p5730
((lp5731
S'int32'
p5732
ag34
a((S'taskHandle'
p5733
(lp5734
S'TaskHandle'
p5735
aNtp5736
(S'channel'
p5737
(lp5738
S'char'
p5739
a(lp5740
I-1
aaNtp5741
(S'data'
p5742
(lp5743
S'uInt32'
p5744
ag42
aNtp5745
tp5746
tp5747
sS'DAQmxResetStartTrigRetriggerable'
p5748
((lp5749
S'int32'
p5750
ag34
a((S'taskHandle'
p5751
(lp5752
S'TaskHandle'
p5753
aNtp5754
tp5755
tp5756
sS'DAQmxResetCIDupCountPrevent'
p5757
((lp5758
S'int32'
p5759
ag34
a((S'taskHandle'
p5760
(lp5761
S'TaskHandle'
p5762
aNtp5763
(S'channel'
p5764
(lp5765
S'char'
p5766
a(lp5767
I-1
aaNtp5768
tp5769
tp5770
sS'DAQmxResetExportedRdyForXferEventOutputTerm'
p5771
((lp5772
S'int32'
p5773
ag34
a((S'taskHandle'
p5774
(lp5775
S'TaskHandle'
p5776
aNtp5777
tp5778
tp5779
sS'DAQmxGetAIConvTimebaseSrc'
p5780
((lp5781
S'int32'
p5782
ag34
a((S'taskHandle'
p5783
(lp5784
S'TaskHandle'
p5785
aNtp5786
(S'data'
p5787
(lp5788
S'int32'
p5789
ag42
aNtp5790
tp5791
tp5792
sS'DAQmxGetDigEdgeWatchdogExpirTrigEdge'
p5793
((lp5794
S'int32'
p5795
ag34
a((S'taskHandle'
p5796
(lp5797
S'TaskHandle'
p5798
aNtp5799
(S'data'
p5800
(lp5801
S'int32'
p5802
ag42
aNtp5803
tp5804
tp5805
sS'DAQmxSetAnlgEdgeRefTrigCoupling'
p5806
((lp5807
S'int32'
p5808
ag34
a((S'taskHandle'
p5809
(lp5810
S'TaskHandle'
p5811
aNtp5812
(S'data'
p5813
(lp5814
S'int32'
p5815
aNtp5816
tp5817
tp5818
sS'DAQmxResetRealTimeWriteRecoveryMode'
p5819
((lp5820
S'int32'
p5821
ag34
a((S'taskHandle'
p5822
(lp5823
S'TaskHandle'
p5824
aNtp5825
tp5826
tp5827
sS'DAQmxSetAIEnhancedAliasRejectionEnable'
p5828
((lp5829
S'int32'
p5830
ag34
a((S'taskHandle'
p5831
(lp5832
S'TaskHandle'
p5833
aNtp5834
(S'channel'
p5835
(lp5836
S'char'
p5837
a(lp5838
I-1
aaNtp5839
(S'data'
p5840
(lp5841
S'bool32'
p5842
aNtp5843
tp5844
tp5845
sS'DAQmxGetDigPatternRefTrigWhen'
p5846
((lp5847
S'int32'
p5848
ag34
a((S'taskHandle'
p5849
(lp5850
S'TaskHandle'
p5851
aNtp5852
(S'data'
p5853
(lp5854
S'int32'
p5855
ag42
aNtp5856
tp5857
tp5858
sS'DAQmxGetCIPeriodDigFltrTimebaseSrc'
p5859
((lp5860
S'int32'
p5861
ag34
a((S'taskHandle'
p5862
(lp5863
S'TaskHandle'
p5864
aNtp5865
(S'channel'
p5866
(lp5867
S'char'
p5868
a(lp5869
I-1
aaNtp5870
(S'data'
p5871
(lp5872
S'char'
p5873
ag42
aNtp5874
(S'bufferSize'
p5875
(lp5876
S'uInt32'
p5877
aNtp5878
tp5879
tp5880
sS'DAQmxGetSwitchDevRelayList'
p5881
((lp5882
S'int32'
p5883
ag34
a((S'deviceName'
p5884
(lp5885
S'char'
p5886
a(lp5887
I-1
aaNtp5888
(S'data'
p5889
(lp5890
S'char'
p5891
ag42
aNtp5892
(S'bufferSize'
p5893
(lp5894
S'uInt32'
p5895
aNtp5896
tp5897
tp5898
sS'DAQmxResetAIBridgeBalanceFinePot'
p5899
((lp5900
S'int32'
p5901
ag34
a((S'taskHandle'
p5902
(lp5903
S'TaskHandle'
p5904
aNtp5905
(S'channel'
p5906
(lp5907
S'char'
p5908
a(lp5909
I-1
aaNtp5910
tp5911
tp5912
sS'DAQmxGetCICountEdgesDir'
p5913
((lp5914
S'int32'
p5915
ag34
a((S'taskHandle'
p5916
(lp5917
S'TaskHandle'
p5918
aNtp5919
(S'channel'
p5920
(lp5921
S'char'
p5922
a(lp5923
I-1
aaNtp5924
(S'data'
p5925
(lp5926
S'int32'
p5927
ag42
aNtp5928
tp5929
tp5930
sS'DAQmxGetScaleTableScaledVals'
p5931
((lp5932
S'int32'
p5933
ag34
a((S'scaleName'
p5934
(lp5935
S'char'
p5936
a(lp5937
I-1
aaNtp5938
(S'data'
p5939
(lp5940
S'float64'
p5941
ag42
aNtp5942
(S'arraySizeInSamples'
p5943
(lp5944
S'uInt32'
p5945
aNtp5946
tp5947
tp5948
sS'DAQmxGetStartTrigDelay'
p5949
((lp5950
S'int32'
p5951
ag34
a((S'taskHandle'
p5952
(lp5953
S'TaskHandle'
p5954
aNtp5955
(S'data'
p5956
(lp5957
S'float64'
p5958
ag42
aNtp5959
tp5960
tp5961
sS'DAQmxGetCITCReached'
p5962
((lp5963
S'int32'
p5964
ag34
a((S'taskHandle'
p5965
(lp5966
S'TaskHandle'
p5967
aNtp5968
(S'channel'
p5969
(lp5970
S'char'
p5971
a(lp5972
I-1
aaNtp5973
(S'data'
p5974
(lp5975
S'bool32'
p5976
ag42
aNtp5977
tp5978
tp5979
sS'DAQmxSetAISampAndHoldEnable'
p5980
((lp5981
S'int32'
p5982
ag34
a((S'taskHandle'
p5983
(lp5984
S'TaskHandle'
p5985
aNtp5986
(S'channel'
p5987
(lp5988
S'char'
p5989
a(lp5990
I-1
aaNtp5991
(S'data'
p5992
(lp5993
S'bool32'
p5994
aNtp5995
tp5996
tp5997
sS'DAQmxResetAIExcitUseForScaling'
p5998
((lp5999
S'int32'
p6000
ag34
a((S'taskHandle'
p6001
(lp6002
S'TaskHandle'
p6003
aNtp6004
(S'channel'
p6005
(lp6006
S'char'
p6007
a(lp6008
I-1
aaNtp6009
tp6010
tp6011
sS'DAQmxSaveGlobalChan'
p6012
((lp6013
S'int32'
p6014
ag34
a((S'taskHandle'
p6015
(lp6016
S'TaskHandle'
p6017
aNtp6018
(S'channelName'
p6019
(lp6020
S'char'
p6021
a(lp6022
I-1
aaNtp6023
(S'saveAs'
p6024
(lp6025
S'char'
p6026
a(lp6027
I-1
aaNtp6028
(S'author'
p6029
(lp6030
S'char'
p6031
a(lp6032
I-1
aaNtp6033
(S'options'
p6034
(lp6035
S'uInt32'
p6036
aNtp6037
tp6038
tp6039
sS'DAQmxSCBaseboardCalAdjust'
p6040
((lp6041
S'int32'
p6042
ag34
a((S'calHandle'
p6043
(lp6044
S'uInt32'
p6045
aNtp6046
(S'referenceVoltage'
p6047
(lp6048
S'float64'
p6049
aNtp6050
tp6051
tp6052
sS'DAQmxSetCISemiPeriodDigFltrTimebaseRate'
p6053
((lp6054
S'int32'
p6055
ag34
a((S'taskHandle'
p6056
(lp6057
S'TaskHandle'
p6058
aNtp6059
(S'channel'
p6060
(lp6061
S'char'
p6062
a(lp6063
I-1
aaNtp6064
(S'data'
p6065
(lp6066
S'float64'
p6067
aNtp6068
tp6069
tp6070
sS'DAQmxGetPersistedScaleAllowInteractiveDeletion'
p6071
((lp6072
S'int32'
p6073
ag34
a((S'scaleName'
p6074
(lp6075
S'char'
p6076
a(lp6077
I-1
aaNtp6078
(S'data'
p6079
(lp6080
S'bool32'
p6081
ag42
aNtp6082
tp6083
tp6084
sS'DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p6085
((lp6086
S'int32'
p6087
ag34
a((S'taskHandle'
p6088
(lp6089
S'TaskHandle'
p6090
aNtp6091
(S'data'
p6092
(lp6093
S'float64'
p6094
aNtp6095
tp6096
tp6097
sS'DAQmxGetExportedChangeDetectEventOutputTerm'
p6098
((lp6099
S'int32'
p6100
ag34
a((S'taskHandle'
p6101
(lp6102
S'TaskHandle'
p6103
aNtp6104
(S'data'
p6105
(lp6106
S'char'
p6107
ag42
aNtp6108
(S'bufferSize'
p6109
(lp6110
S'uInt32'
p6111
aNtp6112
tp6113
tp6114
sS'DAQmxSetAODACRefExtSrc'
p6115
((lp6116
S'int32'
p6117
ag34
a((S'taskHandle'
p6118
(lp6119
S'TaskHandle'
p6120
aNtp6121
(S'channel'
p6122
(lp6123
S'char'
p6124
a(lp6125
I-1
aaNtp6126
(S'data'
p6127
(lp6128
S'char'
p6129
ag42
aNtp6130
tp6131
tp6132
sS'DAQmxSetAIThrmcplCJCVal'
p6133
((lp6134
S'int32'
p6135
ag34
a((S'taskHandle'
p6136
(lp6137
S'TaskHandle'
p6138
aNtp6139
(S'channel'
p6140
(lp6141
S'char'
p6142
a(lp6143
I-1
aaNtp6144
(S'data'
p6145
(lp6146
S'float64'
p6147
aNtp6148
tp6149
tp6150
sS'DAQmxResetAIRVDTUnits'
p6151
((lp6152
S'int32'
p6153
ag34
a((S'taskHandle'
p6154
(lp6155
S'TaskHandle'
p6156
aNtp6157
(S'channel'
p6158
(lp6159
S'char'
p6160
a(lp6161
I-1
aaNtp6162
tp6163
tp6164
sS'DAQmxResetDigEdgeArmStartTrigDigFltrEnable'
p6165
((lp6166
S'int32'
p6167
ag34
a((S'taskHandle'
p6168
(lp6169
S'TaskHandle'
p6170
aNtp6171
tp6172
tp6173
sS'DAQmxSetCIEncoderAInputTerm'
p6174
((lp6175
S'int32'
p6176
ag34
a((S'taskHandle'
p6177
(lp6178
S'TaskHandle'
p6179
aNtp6180
(S'channel'
p6181
(lp6182
S'char'
p6183
a(lp6184
I-1
aaNtp6185
(S'data'
p6186
(lp6187
S'char'
p6188
ag42
aNtp6189
tp6190
tp6191
sS'DAQmxSetAIRawDataCompressionType'
p6192
((lp6193
S'int32'
p6194
ag34
a((S'taskHandle'
p6195
(lp6196
S'TaskHandle'
p6197
aNtp6198
(S'channel'
p6199
(lp6200
S'char'
p6201
a(lp6202
I-1
aaNtp6203
(S'data'
p6204
(lp6205
S'int32'
p6206
aNtp6207
tp6208
tp6209
sS'DAQmxResetArmStartTrigType'
p6210
((lp6211
S'int32'
p6212
ag34
a((S'taskHandle'
p6213
(lp6214
S'TaskHandle'
p6215
aNtp6216
tp6217
tp6218
sS'DAQmxResetTimingAttribute'
p6219
((lp6220
S'int32'
p6221
ag34
a((S'taskHandle'
p6222
(lp6223
S'TaskHandle'
p6224
aNtp6225
(S'attribute'
p6226
(lp6227
S'int32'
p6228
aNtp6229
tp6230
tp6231
sS'DAQmxCreateCIFreqChan'
p6232
((lp6233
S'int32'
p6234
ag34
a((S'taskHandle'
p6235
(lp6236
S'TaskHandle'
p6237
aNtp6238
(S'counter'
p6239
(lp6240
S'char'
p6241
a(lp6242
I-1
aaNtp6243
(S'nameToAssignToChannel'
p6244
(lp6245
S'char'
p6246
a(lp6247
I-1
aaNtp6248
(S'minVal'
p6249
(lp6250
S'float64'
p6251
aNtp6252
(S'maxVal'
p6253
(lp6254
S'float64'
p6255
aNtp6256
(S'units'
p6257
(lp6258
S'int32'
p6259
aNtp6260
(S'edge'
p6261
(lp6262
S'int32'
p6263
aNtp6264
(S'measMethod'
p6265
(lp6266
S'int32'
p6267
aNtp6268
(S'measTime'
p6269
(lp6270
S'float64'
p6271
aNtp6272
(S'divisor'
p6273
(lp6274
S'uInt32'
p6275
aNtp6276
(S'customScaleName'
p6277
(lp6278
S'char'
p6279
a(lp6280
I-1
aaNtp6281
tp6282
tp6283
sS'DAQmxGetCIEncoderAInputDigFltrMinPulseWidth'
p6284
((lp6285
S'int32'
p6286
ag34
a((S'taskHandle'
p6287
(lp6288
S'TaskHandle'
p6289
aNtp6290
(S'channel'
p6291
(lp6292
S'char'
p6293
a(lp6294
I-1
aaNtp6295
(S'data'
p6296
(lp6297
S'float64'
p6298
ag42
aNtp6299
tp6300
tp6301
sS'DAQmxGetSwitchChanMaxDCVoltage'
p6302
((lp6303
S'int32'
p6304
ag34
a((S'switchChannelName'
p6305
(lp6306
S'char'
p6307
a(lp6308
I-1
aaNtp6309
(S'data'
p6310
(lp6311
S'float64'
p6312
ag42
aNtp6313
tp6314
tp6315
sS'DAQmxGetAnlgEdgeRefTrigLvl'
p6316
((lp6317
S'int32'
p6318
ag34
a((S'taskHandle'
p6319
(lp6320
S'TaskHandle'
p6321
aNtp6322
(S'data'
p6323
(lp6324
S'float64'
p6325
ag42
aNtp6326
tp6327
tp6328
sS'DAQmxGetExportedChangeDetectEventPulsePolarity'
p6329
((lp6330
S'int32'
p6331
ag34
a((S'taskHandle'
p6332
(lp6333
S'TaskHandle'
p6334
aNtp6335
(S'data'
p6336
(lp6337
S'int32'
p6338
ag42
aNtp6339
tp6340
tp6341
sS'DAQmxGetAIResolution'
p6342
((lp6343
S'int32'
p6344
ag34
a((S'taskHandle'
p6345
(lp6346
S'TaskHandle'
p6347
aNtp6348
(S'channel'
p6349
(lp6350
S'char'
p6351
a(lp6352
I-1
aaNtp6353
(S'data'
p6354
(lp6355
S'float64'
p6356
ag42
aNtp6357
tp6358
tp6359
sS'DAQmxResetAODataXferReqCond'
p6360
((lp6361
S'int32'
p6362
ag34
a((S'taskHandle'
p6363
(lp6364
S'TaskHandle'
p6365
aNtp6366
(S'channel'
p6367
(lp6368
S'char'
p6369
a(lp6370
I-1
aaNtp6371
tp6372
tp6373
sS'DAQmxGetAOLoadImpedance'
p6374
((lp6375
S'int32'
p6376
ag34
a((S'taskHandle'
p6377
(lp6378
S'TaskHandle'
p6379
aNtp6380
(S'channel'
p6381
(lp6382
S'char'
p6383
a(lp6384
I-1
aaNtp6385
(S'data'
p6386
(lp6387
S'float64'
p6388
ag42
aNtp6389
tp6390
tp6391
sS'DAQmxResetAODACRefAllowConnToGnd'
p6392
((lp6393
S'int32'
p6394
ag34
a((S'taskHandle'
p6395
(lp6396
S'TaskHandle'
p6397
aNtp6398
(S'channel'
p6399
(lp6400
S'char'
p6401
a(lp6402
I-1
aaNtp6403
tp6404
tp6405
sS'DAQmxResetSwitchScanBreakMode'
p6406
((lp6407
S'int32'
p6408
ag34
a((S'taskHandle'
p6409
(lp6410
S'TaskHandle'
p6411
aNtp6412
tp6413
tp6414
sS'DAQmxResetExported10MHzRefClkOutputTerm'
p6415
((lp6416
S'int32'
p6417
ag34
a((S'taskHandle'
p6418
(lp6419
S'TaskHandle'
p6420
aNtp6421
tp6422
tp6423
sS'DAQmxSetSwitchChanUsage'
p6424
((lp6425
S'int32'
p6426
ag34
a((S'switchChannelName'
p6427
(lp6428
S'char'
p6429
a(lp6430
I-1
aaNtp6431
(S'data'
p6432
(lp6433
S'int32'
p6434
aNtp6435
tp6436
tp6437
sS'DAQmxSetCIPeriodTerm'
p6438
((lp6439
S'int32'
p6440
ag34
a((S'taskHandle'
p6441
(lp6442
S'TaskHandle'
p6443
aNtp6444
(S'channel'
p6445
(lp6446
S'char'
p6447
a(lp6448
I-1
aaNtp6449
(S'data'
p6450
(lp6451
S'char'
p6452
ag42
aNtp6453
tp6454
tp6455
sS'DAQmxGetCIPeriodDigFltrTimebaseRate'
p6456
((lp6457
S'int32'
p6458
ag34
a((S'taskHandle'
p6459
(lp6460
S'TaskHandle'
p6461
aNtp6462
(S'channel'
p6463
(lp6464
S'char'
p6465
a(lp6466
I-1
aaNtp6467
(S'data'
p6468
(lp6469
S'float64'
p6470
ag42
aNtp6471
tp6472
tp6473
sS'DAQmxSetExportedAIHoldCmpltEventOutputTerm'
p6474
((lp6475
S'int32'
p6476
ag34
a((S'taskHandle'
p6477
(lp6478
S'TaskHandle'
p6479
aNtp6480
(S'data'
p6481
(lp6482
S'char'
p6483
ag42
aNtp6484
tp6485
tp6486
sS'DAQmxGetAIExcitVal'
p6487
((lp6488
S'int32'
p6489
ag34
a((S'taskHandle'
p6490
(lp6491
S'TaskHandle'
p6492
aNtp6493
(S'channel'
p6494
(lp6495
S'char'
p6496
a(lp6497
I-1
aaNtp6498
(S'data'
p6499
(lp6500
S'float64'
p6501
ag42
aNtp6502
tp6503
tp6504
sS'DAQmxSetDigEdgeArmStartTrigEdge'
p6505
((lp6506
S'int32'
p6507
ag34
a((S'taskHandle'
p6508
(lp6509
S'TaskHandle'
p6510
aNtp6511
(S'data'
p6512
(lp6513
S'int32'
p6514
aNtp6515
tp6516
tp6517
sS'DAQmxSetSampClkTimebaseActiveEdge'
p6518
((lp6519
S'int32'
p6520
ag34
a((S'taskHandle'
p6521
(lp6522
S'TaskHandle'
p6523
aNtp6524
(S'data'
p6525
(lp6526
S'int32'
p6527
aNtp6528
tp6529
tp6530
sS'DAQmxCreateAIDeviceTempChan'
p6531
((lp6532
S'int32'
p6533
ag34
a((S'taskHandle'
p6534
(lp6535
S'TaskHandle'
p6536
aNtp6537
(S'physicalChannel'
p6538
(lp6539
S'char'
p6540
a(lp6541
I-1
aaNtp6542
(S'nameToAssignToChannel'
p6543
(lp6544
S'char'
p6545
a(lp6546
I-1
aaNtp6547
(S'units'
p6548
(lp6549
S'int32'
p6550
aNtp6551
tp6552
tp6553
sS'DAQmxCreateCOPulseChanFreq'
p6554
((lp6555
S'int32'
p6556
ag34
a((S'taskHandle'
p6557
(lp6558
S'TaskHandle'
p6559
aNtp6560
(S'counter'
p6561
(lp6562
S'char'
p6563
a(lp6564
I-1
aaNtp6565
(S'nameToAssignToChannel'
p6566
(lp6567
S'char'
p6568
a(lp6569
I-1
aaNtp6570
(S'units'
p6571
(lp6572
S'int32'
p6573
aNtp6574
(S'idleState'
p6575
(lp6576
S'int32'
p6577
aNtp6578
(S'initialDelay'
p6579
(lp6580
S'float64'
p6581
aNtp6582
(S'freq'
p6583
(lp6584
S'float64'
p6585
aNtp6586
(S'dutyCycle'
p6587
(lp6588
S'float64'
p6589
aNtp6590
tp6591
tp6592
sS'DAQmxGetAITempUnits'
p6593
((lp6594
S'int32'
p6595
ag34
a((S'taskHandle'
p6596
(lp6597
S'TaskHandle'
p6598
aNtp6599
(S'channel'
p6600
(lp6601
S'char'
p6602
a(lp6603
I-1
aaNtp6604
(S'data'
p6605
(lp6606
S'int32'
p6607
ag42
aNtp6608
tp6609
tp6610
sS'DAQmxGetAOUseOnlyOnBrdMem'
p6611
((lp6612
S'int32'
p6613
ag34
a((S'taskHandle'
p6614
(lp6615
S'TaskHandle'
p6616
aNtp6617
(S'channel'
p6618
(lp6619
S'char'
p6620
a(lp6621
I-1
aaNtp6622
(S'data'
p6623
(lp6624
S'bool32'
p6625
ag42
aNtp6626
tp6627
tp6628
sS'DAQmxGetAOOutputType'
p6629
((lp6630
S'int32'
p6631
ag34
a((S'taskHandle'
p6632
(lp6633
S'TaskHandle'
p6634
aNtp6635
(S'channel'
p6636
(lp6637
S'char'
p6638
a(lp6639
I-1
aaNtp6640
(S'data'
p6641
(lp6642
S'int32'
p6643
ag42
aNtp6644
tp6645
tp6646
sS'DAQmxResetCITwoEdgeSepSecondDigFltrEnable'
p6647
((lp6648
S'int32'
p6649
ag34
a((S'taskHandle'
p6650
(lp6651
S'TaskHandle'
p6652
aNtp6653
(S'channel'
p6654
(lp6655
S'char'
p6656
a(lp6657
I-1
aaNtp6658
tp6659
tp6660
sS'DAQmxGetRealTimeWaitForNextSampClkWaitMode'
p6661
((lp6662
S'int32'
p6663
ag34
a((S'taskHandle'
p6664
(lp6665
S'TaskHandle'
p6666
aNtp6667
(S'data'
p6668
(lp6669
S'int32'
p6670
ag42
aNtp6671
tp6672
tp6673
sS'DAQmxSetRealTimeConvLateErrorsToWarnings'
p6674
((lp6675
S'int32'
p6676
ag34
a((S'taskHandle'
p6677
(lp6678
S'TaskHandle'
p6679
aNtp6680
(S'data'
p6681
(lp6682
S'bool32'
p6683
aNtp6684
tp6685
tp6686
sS'DAQmxResetCOPulseTimeInitialDelay'
p6687
((lp6688
S'int32'
p6689
ag34
a((S'taskHandle'
p6690
(lp6691
S'TaskHandle'
p6692
aNtp6693
(S'channel'
p6694
(lp6695
S'char'
p6696
a(lp6697
I-1
aaNtp6698
tp6699
tp6700
sS'DAQmxSetCIEncoderZInputTerm'
p6701
((lp6702
S'int32'
p6703
ag34
a((S'taskHandle'
p6704
(lp6705
S'TaskHandle'
p6706
aNtp6707
(S'channel'
p6708
(lp6709
S'char'
p6710
a(lp6711
I-1
aaNtp6712
(S'data'
p6713
(lp6714
S'char'
p6715
ag42
aNtp6716
tp6717
tp6718
sS'DAQmxGetScaleScaledUnits'
p6719
((lp6720
S'int32'
p6721
ag34
a((S'scaleName'
p6722
(lp6723
S'char'
p6724
a(lp6725
I-1
aaNtp6726
(S'data'
p6727
(lp6728
S'char'
p6729
ag42
aNtp6730
(S'bufferSize'
p6731
(lp6732
S'uInt32'
p6733
aNtp6734
tp6735
tp6736
sS'DAQmxSetAITermCfg'
p6737
((lp6738
S'int32'
p6739
ag34
a((S'taskHandle'
p6740
(lp6741
S'TaskHandle'
p6742
aNtp6743
(S'channel'
p6744
(lp6745
S'char'
p6746
a(lp6747
I-1
aaNtp6748
(S'data'
p6749
(lp6750
S'int32'
p6751
aNtp6752
tp6753
tp6754
sS'DAQmxResetExportedStartTrigOutputTerm'
p6755
((lp6756
S'int32'
p6757
ag34
a((S'taskHandle'
p6758
(lp6759
S'TaskHandle'
p6760
aNtp6761
tp6762
tp6763
sS'DAQmxGetCIEncoderBInputDigFltrTimebaseRate'
p6764
((lp6765
S'int32'
p6766
ag34
a((S'taskHandle'
p6767
(lp6768
S'TaskHandle'
p6769
aNtp6770
(S'channel'
p6771
(lp6772
S'char'
p6773
a(lp6774
I-1
aaNtp6775
(S'data'
p6776
(lp6777
S'float64'
p6778
ag42
aNtp6779
tp6780
tp6781
sS'DAQmxReadCounterScalarU32'
p6782
((lp6783
S'int32'
p6784
ag34
a((S'taskHandle'
p6785
(lp6786
S'TaskHandle'
p6787
aNtp6788
(S'timeout'
p6789
(lp6790
S'float64'
p6791
aNtp6792
(S'value'
p6793
(lp6794
S'uInt32'
p6795
ag42
aNtp6796
(S'reserved'
p6797
(lp6798
S'bool32'
p6799
ag42
aNtp6800
tp6801
tp6802
sS'DAQmxResetAIAccelSensitivity'
p6803
((lp6804
S'int32'
p6805
ag34
a((S'taskHandle'
p6806
(lp6807
S'TaskHandle'
p6808
aNtp6809
(S'channel'
p6810
(lp6811
S'char'
p6812
a(lp6813
I-1
aaNtp6814
tp6815
tp6816
sS'DAQmxResetCOCtrTimebaseDigFltrEnable'
p6817
((lp6818
S'int32'
p6819
ag34
a((S'taskHandle'
p6820
(lp6821
S'TaskHandle'
p6822
aNtp6823
(S'channel'
p6824
(lp6825
S'char'
p6826
a(lp6827
I-1
aaNtp6828
tp6829
tp6830
sS'DAQmxSetCICtrTimebaseSrc'
p6831
((lp6832
S'int32'
p6833
ag34
a((S'taskHandle'
p6834
(lp6835
S'TaskHandle'
p6836
aNtp6837
(S'channel'
p6838
(lp6839
S'char'
p6840
a(lp6841
I-1
aaNtp6842
(S'data'
p6843
(lp6844
S'char'
p6845
ag42
aNtp6846
tp6847
tp6848
sS'DAQmxResetCICountEdgesDirTerm'
p6849
((lp6850
S'int32'
p6851
ag34
a((S'taskHandle'
p6852
(lp6853
S'TaskHandle'
p6854
aNtp6855
(S'channel'
p6856
(lp6857
S'char'
p6858
a(lp6859
I-1
aaNtp6860
tp6861
tp6862
sS'DAQmxResetAIBridgeInitialVoltage'
p6863
((lp6864
S'int32'
p6865
ag34
a((S'taskHandle'
p6866
(lp6867
S'TaskHandle'
p6868
aNtp6869
(S'channel'
p6870
(lp6871
S'char'
p6872
a(lp6873
I-1
aaNtp6874
tp6875
tp6876
sS'DAQmxGetExportedHshkEventOutputTerm'
p6877
((lp6878
S'int32'
p6879
ag34
a((S'taskHandle'
p6880
(lp6881
S'TaskHandle'
p6882
aNtp6883
(S'data'
p6884
(lp6885
S'char'
p6886
ag42
aNtp6887
(S'bufferSize'
p6888
(lp6889
S'uInt32'
p6890
aNtp6891
tp6892
tp6893
sS'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p6894
((lp6895
S'int32'
p6896
ag34
a((S'taskHandle'
p6897
(lp6898
S'TaskHandle'
p6899
aNtp6900
(S'channel'
p6901
(lp6902
S'char'
p6903
a(lp6904
I-1
aaNtp6905
(S'data'
p6906
(lp6907
S'char'
p6908
ag42
aNtp6909
(S'bufferSize'
p6910
(lp6911
S'uInt32'
p6912
aNtp6913
tp6914
tp6915
sS'DAQmxSetCIPulseWidthTerm'
p6916
((lp6917
S'int32'
p6918
ag34
a((S'taskHandle'
p6919
(lp6920
S'TaskHandle'
p6921
aNtp6922
(S'channel'
p6923
(lp6924
S'char'
p6925
a(lp6926
I-1
aaNtp6927
(S'data'
p6928
(lp6929
S'char'
p6930
ag42
aNtp6931
tp6932
tp6933
sS'DAQmxSetExportedHshkEventInterlockedDeassertDelay'
p6934
((lp6935
S'int32'
p6936
ag34
a((S'taskHandle'
p6937
(lp6938
S'TaskHandle'
p6939
aNtp6940
(S'data'
p6941
(lp6942
S'float64'
p6943
aNtp6944
tp6945
tp6946
sS'DAQmxResetAIConvSrc'
p6947
((lp6948
S'int32'
p6949
ag34
a((S'taskHandle'
p6950
(lp6951
S'TaskHandle'
p6952
aNtp6953
tp6954
tp6955
sS'DAQmxSetCIDataXferMech'
p6956
((lp6957
S'int32'
p6958
ag34
a((S'taskHandle'
p6959
(lp6960
S'TaskHandle'
p6961
aNtp6962
(S'channel'
p6963
(lp6964
S'char'
p6965
a(lp6966
I-1
aaNtp6967
(S'data'
p6968
(lp6969
S'int32'
p6970
aNtp6971
tp6972
tp6973
sS'DAQmxCreateAIAccelChan'
p6974
((lp6975
S'int32'
p6976
ag34
a((S'taskHandle'
p6977
(lp6978
S'TaskHandle'
p6979
aNtp6980
(S'physicalChannel'
p6981
(lp6982
S'char'
p6983
a(lp6984
I-1
aaNtp6985
(S'nameToAssignToChannel'
p6986
(lp6987
S'char'
p6988
a(lp6989
I-1
aaNtp6990
(S'terminalConfig'
p6991
(lp6992
S'int32'
p6993
aNtp6994
(S'minVal'
p6995
(lp6996
S'float64'
p6997
aNtp6998
(S'maxVal'
p6999
(lp7000
S'float64'
p7001
aNtp7002
(S'units'
p7003
(lp7004
S'int32'
p7005
aNtp7006
(S'sensitivity'
p7007
(lp7008
S'float64'
p7009
aNtp7010
(S'sensitivityUnits'
p7011
(lp7012
S'int32'
p7013
aNtp7014
(S'currentExcitSource'
p7015
(lp7016
S'int32'
p7017
aNtp7018
(S'currentExcitVal'
p7019
(lp7020
S'float64'
p7021
aNtp7022
(S'customScaleName'
p7023
(lp7024
S'char'
p7025
a(lp7026
I-1
aaNtp7027
tp7028
tp7029
sS'DAQmxSetDIDigFltrEnable'
p7030
((lp7031
S'int32'
p7032
ag34
a((S'taskHandle'
p7033
(lp7034
S'TaskHandle'
p7035
aNtp7036
(S'channel'
p7037
(lp7038
S'char'
p7039
a(lp7040
I-1
aaNtp7041
(S'data'
p7042
(lp7043
S'bool32'
p7044
aNtp7045
tp7046
tp7047
sS'DAQmxGetAILowpassCutoffFreq'
p7048
((lp7049
S'int32'
p7050
ag34
a((S'taskHandle'
p7051
(lp7052
S'TaskHandle'
p7053
aNtp7054
(S'channel'
p7055
(lp7056
S'char'
p7057
a(lp7058
I-1
aaNtp7059
(S'data'
p7060
(lp7061
S'float64'
p7062
ag42
aNtp7063
tp7064
tp7065
sS'DAQmxResetHshkDelayAfterXfer'
p7066
((lp7067
S'int32'
p7068
ag34
a((S'taskHandle'
p7069
(lp7070
S'TaskHandle'
p7071
aNtp7072
tp7073
tp7074
sS'DAQmxWriteAnalogScalarF64'
p7075
((lp7076
S'int32'
p7077
ag34
a((S'taskHandle'
p7078
(lp7079
S'TaskHandle'
p7080
aNtp7081
(S'autoStart'
p7082
(lp7083
S'bool32'
p7084
aNtp7085
(S'timeout'
p7086
(lp7087
S'float64'
p7088
aNtp7089
(S'value'
p7090
(lp7091
S'float64'
p7092
aNtp7093
(S'reserved'
p7094
(lp7095
S'bool32'
p7096
ag42
aNtp7097
tp7098
tp7099
sS'DAQmxResetCOCtrTimebaseDigFltrTimebaseRate'
p7100
((lp7101
S'int32'
p7102
ag34
a((S'taskHandle'
p7103
(lp7104
S'TaskHandle'
p7105
aNtp7106
(S'channel'
p7107
(lp7108
S'char'
p7109
a(lp7110
I-1
aaNtp7111
tp7112
tp7113
sS'DAQmxGetWriteTotalSampPerChanGenerated'
p7114
((lp7115
S'int32'
p7116
ag34
a((S'taskHandle'
p7117
(lp7118
S'TaskHandle'
p7119
aNtp7120
(S'data'
p7121
(lp7122
S'uInt64'
p7123
ag42
aNtp7124
tp7125
tp7126
sS'DAQmxSetCIFreqTerm'
p7127
((lp7128
S'int32'
p7129
ag34
a((S'taskHandle'
p7130
(lp7131
S'TaskHandle'
p7132
aNtp7133
(S'channel'
p7134
(lp7135
S'char'
p7136
a(lp7137
I-1
aaNtp7138
(S'data'
p7139
(lp7140
S'char'
p7141
ag42
aNtp7142
tp7143
tp7144
sS'DAQmxSetCIPulseWidthUnits'
p7145
((lp7146
S'int32'
p7147
ag34
a((S'taskHandle'
p7148
(lp7149
S'TaskHandle'
p7150
aNtp7151
(S'channel'
p7152
(lp7153
S'char'
p7154
a(lp7155
I-1
aaNtp7156
(S'data'
p7157
(lp7158
S'int32'
p7159
aNtp7160
tp7161
tp7162
sS'DAQmxSetCIPeriodDigSyncEnable'
p7163
((lp7164
S'int32'
p7165
ag34
a((S'taskHandle'
p7166
(lp7167
S'TaskHandle'
p7168
aNtp7169
(S'channel'
p7170
(lp7171
S'char'
p7172
a(lp7173
I-1
aaNtp7174
(S'data'
p7175
(lp7176
S'bool32'
p7177
aNtp7178
tp7179
tp7180
sS'DAQmxResetCICountEdgesDigFltrTimebaseSrc'
p7181
((lp7182
S'int32'
p7183
ag34
a((S'taskHandle'
p7184
(lp7185
S'TaskHandle'
p7186
aNtp7187
(S'channel'
p7188
(lp7189
S'char'
p7190
a(lp7191
I-1
aaNtp7192
tp7193
tp7194
sS'DAQmxResetCIPulseWidthDigFltrEnable'
p7195
((lp7196
S'int32'
p7197
ag34
a((S'taskHandle'
p7198
(lp7199
S'TaskHandle'
p7200
aNtp7201
(S'channel'
p7202
(lp7203
S'char'
p7204
a(lp7205
I-1
aaNtp7206
tp7207
tp7208
sS'DAQmxResetSampClkTimebaseDiv'
p7209
((lp7210
S'int32'
p7211
ag34
a((S'taskHandle'
p7212
(lp7213
S'TaskHandle'
p7214
aNtp7215
tp7216
tp7217
sS'DAQmxResetAIExcitSrc'
p7218
((lp7219
S'int32'
p7220
ag34
a((S'taskHandle'
p7221
(lp7222
S'TaskHandle'
p7223
aNtp7224
(S'channel'
p7225
(lp7226
S'char'
p7227
a(lp7228
I-1
aaNtp7229
tp7230
tp7231
sS'DAQmxResetAnlgWinRefTrigWhen'
p7232
((lp7233
S'int32'
p7234
ag34
a((S'taskHandle'
p7235
(lp7236
S'TaskHandle'
p7237
aNtp7238
tp7239
tp7240
sS'DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc'
p7241
((lp7242
S'int32'
p7243
ag34
a((S'taskHandle'
p7244
(lp7245
S'TaskHandle'
p7246
aNtp7247
(S'channel'
p7248
(lp7249
S'char'
p7250
a(lp7251
I-1
aaNtp7252
tp7253
tp7254
sS'DAQmxSetAIChanCalVerifAcqVals'
p7255
((lp7256
S'int32'
p7257
ag34
a((S'taskHandle'
p7258
(lp7259
S'TaskHandle'
p7260
aNtp7261
(S'channel'
p7262
(lp7263
S'char'
p7264
a(lp7265
I-1
aaNtp7266
(S'data'
p7267
(lp7268
S'float64'
p7269
ag42
aNtp7270
(S'arraySizeInSamples'
p7271
(lp7272
S'uInt32'
p7273
aNtp7274
tp7275
tp7276
sS'DAQmxGetDIDataXferReqCond'
p7277
((lp7278
S'int32'
p7279
ag34
a((S'taskHandle'
p7280
(lp7281
S'TaskHandle'
p7282
aNtp7283
(S'channel'
p7284
(lp7285
S'char'
p7286
a(lp7287
I-1
aaNtp7288
(S'data'
p7289
(lp7290
S'int32'
p7291
ag42
aNtp7292
tp7293
tp7294
sS'DAQmxSwitchSetTopologyAndReset'
p7295
((lp7296
S'int32'
p7297
ag34
a((S'deviceName'
p7298
(lp7299
S'char'
p7300
a(lp7301
I-1
aaNtp7302
(S'newTopology'
p7303
(lp7304
S'char'
p7305
a(lp7306
I-1
aaNtp7307
tp7308
tp7309
sS'DAQmxGetAOCustomScaleName'
p7310
((lp7311
S'int32'
p7312
ag34
a((S'taskHandle'
p7313
(lp7314
S'TaskHandle'
p7315
aNtp7316
(S'channel'
p7317
(lp7318
S'char'
p7319
a(lp7320
I-1
aaNtp7321
(S'data'
p7322
(lp7323
S'char'
p7324
ag42
aNtp7325
(S'bufferSize'
p7326
(lp7327
S'uInt32'
p7328
aNtp7329
tp7330
tp7331
sS'DAQmxGetSwitchDevSettlingTime'
p7332
((lp7333
S'int32'
p7334
ag34
a((S'deviceName'
p7335
(lp7336
S'char'
p7337
a(lp7338
I-1
aaNtp7339
(S'data'
p7340
(lp7341
S'float64'
p7342
ag42
aNtp7343
tp7344
tp7345
sS'DAQmxGetAIBridgeCfg'
p7346
((lp7347
S'int32'
p7348
ag34
a((S'taskHandle'
p7349
(lp7350
S'TaskHandle'
p7351
aNtp7352
(S'channel'
p7353
(lp7354
S'char'
p7355
a(lp7356
I-1
aaNtp7357
(S'data'
p7358
(lp7359
S'int32'
p7360
ag42
aNtp7361
tp7362
tp7363
sS'DAQmxGetCIPrescaler'
p7364
((lp7365
S'int32'
p7366
ag34
a((S'taskHandle'
p7367
(lp7368
S'TaskHandle'
p7369
aNtp7370
(S'channel'
p7371
(lp7372
S'char'
p7373
a(lp7374
I-1
aaNtp7375
(S'data'
p7376
(lp7377
S'uInt32'
p7378
ag42
aNtp7379
tp7380
tp7381
sS'DAQmxCreateDOChan'
p7382
((lp7383
S'int32'
p7384
ag34
a((S'taskHandle'
p7385
(lp7386
S'TaskHandle'
p7387
aNtp7388
(S'lines'
p7389
(lp7390
S'char'
p7391
a(lp7392
I-1
aaNtp7393
(S'nameToAssignToLines'
p7394
(lp7395
S'char'
p7396
a(lp7397
I-1
aaNtp7398
(S'lineGrouping'
p7399
(lp7400
S'int32'
p7401
aNtp7402
tp7403
tp7404
sS'DAQmxGetSwitchChanMaxDCSwitchCurrent'
p7405
((lp7406
S'int32'
p7407
ag34
a((S'switchChannelName'
p7408
(lp7409
S'char'
p7410
a(lp7411
I-1
aaNtp7412
(S'data'
p7413
(lp7414
S'float64'
p7415
ag42
aNtp7416
tp7417
tp7418
sS'DAQmxResetAILowpassSwitchCapOutClkDiv'
p7419
((lp7420
S'int32'
p7421
ag34
a((S'taskHandle'
p7422
(lp7423
S'TaskHandle'
p7424
aNtp7425
(S'channel'
p7426
(lp7427
S'char'
p7428
a(lp7429
I-1
aaNtp7430
tp7431
tp7432
sS'DAQmxSetCOPulseTicksInitialDelay'
p7433
((lp7434
S'int32'
p7435
ag34
a((S'taskHandle'
p7436
(lp7437
S'TaskHandle'
p7438
aNtp7439
(S'channel'
p7440
(lp7441
S'char'
p7442
a(lp7443
I-1
aaNtp7444
(S'data'
p7445
(lp7446
S'uInt32'
p7447
aNtp7448
tp7449
tp7450
sS'DAQmxGetDigEdgeArmStartTrigDigFltrEnable'
p7451
((lp7452
S'int32'
p7453
ag34
a((S'taskHandle'
p7454
(lp7455
S'TaskHandle'
p7456
aNtp7457
(S'data'
p7458
(lp7459
S'bool32'
p7460
ag42
aNtp7461
tp7462
tp7463
sS'DAQmxResetCOPulseLowTime'
p7464
((lp7465
S'int32'
p7466
ag34
a((S'taskHandle'
p7467
(lp7468
S'TaskHandle'
p7469
aNtp7470
(S'channel'
p7471
(lp7472
S'char'
p7473
a(lp7474
I-1
aaNtp7475
tp7476
tp7477
sS'DAQmxResetCOPulseHighTime'
p7478
((lp7479
S'int32'
p7480
ag34
a((S'taskHandle'
p7481
(lp7482
S'TaskHandle'
p7483
aNtp7484
(S'channel'
p7485
(lp7486
S'char'
p7487
a(lp7488
I-1
aaNtp7489
tp7490
tp7491
sS'DAQmxGetOnDemandSimultaneousAOEnable'
p7492
((lp7493
S'int32'
p7494
ag34
a((S'taskHandle'
p7495
(lp7496
S'TaskHandle'
p7497
aNtp7498
(S'data'
p7499
(lp7500
S'bool32'
p7501
ag42
aNtp7502
tp7503
tp7504
sS'DAQmxSetScalePreScaledUnits'
p7505
((lp7506
S'int32'
p7507
ag34
a((S'scaleName'
p7508
(lp7509
S'char'
p7510
a(lp7511
I-1
aaNtp7512
(S'data'
p7513
(lp7514
S'int32'
p7515
aNtp7516
tp7517
tp7518
sS'DAQmxSetAnlgWinPauseTrigTop'
p7519
((lp7520
S'int32'
p7521
ag34
a((S'taskHandle'
p7522
(lp7523
S'TaskHandle'
p7524
aNtp7525
(S'data'
p7526
(lp7527
S'float64'
p7528
aNtp7529
tp7530
tp7531
sS'DAQmxGetAOMax'
p7532
((lp7533
S'int32'
p7534
ag34
a((S'taskHandle'
p7535
(lp7536
S'TaskHandle'
p7537
aNtp7538
(S'channel'
p7539
(lp7540
S'char'
p7541
a(lp7542
I-1
aaNtp7543
(S'data'
p7544
(lp7545
S'float64'
p7546
ag42
aNtp7547
tp7548
tp7549
sS'DAQmxDisableAdvTrig'
p7550
((lp7551
S'int32'
p7552
ag34
a((S'taskHandle'
p7553
(lp7554
S'TaskHandle'
p7555
aNtp7556
tp7557
tp7558
sS'DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc'
p7559
((lp7560
S'int32'
p7561
ag34
a((S'taskHandle'
p7562
(lp7563
S'TaskHandle'
p7564
aNtp7565
(S'data'
p7566
(lp7567
S'char'
p7568
ag42
aNtp7569
tp7570
tp7571
sS'DAQmxSetCICountEdgesActiveEdge'
p7572
((lp7573
S'int32'
p7574
ag34
a((S'taskHandle'
p7575
(lp7576
S'TaskHandle'
p7577
aNtp7578
(S'channel'
p7579
(lp7580
S'char'
p7581
a(lp7582
I-1
aaNtp7583
(S'data'
p7584
(lp7585
S'int32'
p7586
aNtp7587
tp7588
tp7589
sS'DAQmxGetAIRawSampJustification'
p7590
((lp7591
S'int32'
p7592
ag34
a((S'taskHandle'
p7593
(lp7594
S'TaskHandle'
p7595
aNtp7596
(S'channel'
p7597
(lp7598
S'char'
p7599
a(lp7600
I-1
aaNtp7601
(S'data'
p7602
(lp7603
S'int32'
p7604
ag42
aNtp7605
tp7606
tp7607
sS'DAQmxGetAODACOffsetSrc'
p7608
((lp7609
S'int32'
p7610
ag34
a((S'taskHandle'
p7611
(lp7612
S'TaskHandle'
p7613
aNtp7614
(S'channel'
p7615
(lp7616
S'char'
p7617
a(lp7618
I-1
aaNtp7619
(S'data'
p7620
(lp7621
S'int32'
p7622
ag42
aNtp7623
tp7624
tp7625
sS'DAQmxSetAICoupling'
p7626
((lp7627
S'int32'
p7628
ag34
a((S'taskHandle'
p7629
(lp7630
S'TaskHandle'
p7631
aNtp7632
(S'channel'
p7633
(lp7634
S'char'
p7635
a(lp7636
I-1
aaNtp7637
(S'data'
p7638
(lp7639
S'int32'
p7640
aNtp7641
tp7642
tp7643
sS'DAQmxResetCIPulseWidthTerm'
p7644
((lp7645
S'int32'
p7646
ag34
a((S'taskHandle'
p7647
(lp7648
S'TaskHandle'
p7649
aNtp7650
(S'channel'
p7651
(lp7652
S'char'
p7653
a(lp7654
I-1
aaNtp7655
tp7656
tp7657
sS'DAQmxResetExportedAdvCmpltEventPulsePolarity'
p7658
((lp7659
S'int32'
p7660
ag34
a((S'taskHandle'
p7661
(lp7662
S'TaskHandle'
p7663
aNtp7664
tp7665
tp7666
sS'DAQmxResetAODACRefSrc'
p7667
((lp7668
S'int32'
p7669
ag34
a((S'taskHandle'
p7670
(lp7671
S'TaskHandle'
p7672
aNtp7673
(S'channel'
p7674
(lp7675
S'char'
p7676
a(lp7677
I-1
aaNtp7678
tp7679
tp7680
sS'DAQmxResetExportedSampClkPulsePolarity'
p7681
((lp7682
S'int32'
p7683
ag34
a((S'taskHandle'
p7684
(lp7685
S'TaskHandle'
p7686
aNtp7687
tp7688
tp7689
sS'DAQmxResetExportedSampClkTimebaseOutputTerm'
p7690
((lp7691
S'int32'
p7692
ag34
a((S'taskHandle'
p7693
(lp7694
S'TaskHandle'
p7695
aNtp7696
tp7697
tp7698
sS'DAQmxResetAIChanCalVerifRefVals'
p7699
((lp7700
S'int32'
p7701
ag34
a((S'taskHandle'
p7702
(lp7703
S'TaskHandle'
p7704
aNtp7705
(S'channel'
p7706
(lp7707
S'char'
p7708
a(lp7709
I-1
aaNtp7710
tp7711
tp7712
sS'DAQmxSetReadChannelsToRead'
p7713
((lp7714
S'int32'
p7715
ag34
a((S'taskHandle'
p7716
(lp7717
S'TaskHandle'
p7718
aNtp7719
(S'data'
p7720
(lp7721
S'char'
p7722
ag42
aNtp7723
tp7724
tp7725
sS'DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate'
p7726
((lp7727
S'int32'
p7728
ag34
a((S'taskHandle'
p7729
(lp7730
S'TaskHandle'
p7731
aNtp7732
tp7733
tp7734
sS'DAQmxSetAIExcitSrc'
p7735
((lp7736
S'int32'
p7737
ag34
a((S'taskHandle'
p7738
(lp7739
S'TaskHandle'
p7740
aNtp7741
(S'channel'
p7742
(lp7743
S'char'
p7744
a(lp7745
I-1
aaNtp7746
(S'data'
p7747
(lp7748
S'int32'
p7749
aNtp7750
tp7751
tp7752
sS'DAQmxWaitForNextSampleClock'
p7753
((lp7754
S'int32'
p7755
ag34
a((S'taskHandle'
p7756
(lp7757
S'TaskHandle'
p7758
aNtp7759
(S'timeout'
p7760
(lp7761
S'float64'
p7762
aNtp7763
(S'isLate'
p7764
(lp7765
S'bool32'
p7766
ag42
aNtp7767
tp7768
tp7769
sS'DAQmxGetSwitchChanImpedance'
p7770
((lp7771
S'int32'
p7772
ag34
a((S'switchChannelName'
p7773
(lp7774
S'char'
p7775
a(lp7776
I-1
aaNtp7777
(S'data'
p7778
(lp7779
S'float64'
p7780
ag42
aNtp7781
tp7782
tp7783
sS'DAQmxGetCIPeriodMeasMeth'
p7784
((lp7785
S'int32'
p7786
ag34
a((S'taskHandle'
p7787
(lp7788
S'TaskHandle'
p7789
aNtp7790
(S'channel'
p7791
(lp7792
S'char'
p7793
a(lp7794
I-1
aaNtp7795
(S'data'
p7796
(lp7797
S'int32'
p7798
ag42
aNtp7799
tp7800
tp7801
sS'DAQmxResetCICtrTimebaseActiveEdge'
p7802
((lp7803
S'int32'
p7804
ag34
a((S'taskHandle'
p7805
(lp7806
S'TaskHandle'
p7807
aNtp7808
(S'channel'
p7809
(lp7810
S'char'
p7811
a(lp7812
I-1
aaNtp7813
tp7814
tp7815
sS'DAQmxSetAnlgWinRefTrigBtm'
p7816
((lp7817
S'int32'
p7818
ag34
a((S'taskHandle'
p7819
(lp7820
S'TaskHandle'
p7821
aNtp7822
(S'data'
p7823
(lp7824
S'float64'
p7825
aNtp7826
tp7827
tp7828
sS'DAQmxSetDigEdgeAdvTrigEdge'
p7829
((lp7830
S'int32'
p7831
ag34
a((S'taskHandle'
p7832
(lp7833
S'TaskHandle'
p7834
aNtp7835
(S'data'
p7836
(lp7837
S'int32'
p7838
aNtp7839
tp7840
tp7841
sS'DAQmxCfgImplicitTiming'
p7842
((lp7843
S'int32'
p7844
ag34
a((S'taskHandle'
p7845
(lp7846
S'TaskHandle'
p7847
aNtp7848
(S'sampleMode'
p7849
(lp7850
S'int32'
p7851
aNtp7852
(S'sampsPerChan'
p7853
(lp7854
S'uInt64'
p7855
aNtp7856
tp7857
tp7858
sS'DAQmxGetExportedHshkEventInterlockedAssertOnStart'
p7859
((lp7860
S'int32'
p7861
ag34
a((S'taskHandle'
p7862
(lp7863
S'TaskHandle'
p7864
aNtp7865
(S'data'
p7866
(lp7867
S'bool32'
p7868
ag42
aNtp7869
tp7870
tp7871
sS'DAQmxSetCOCtrTimebaseDigFltrTimebaseRate'
p7872
((lp7873
S'int32'
p7874
ag34
a((S'taskHandle'
p7875
(lp7876
S'TaskHandle'
p7877
aNtp7878
(S'channel'
p7879
(lp7880
S'char'
p7881
a(lp7882
I-1
aaNtp7883
(S'data'
p7884
(lp7885
S'float64'
p7886
aNtp7887
tp7888
tp7889
sS'DAQmxSetCIPeriodMeasTime'
p7890
((lp7891
S'int32'
p7892
ag34
a((S'taskHandle'
p7893
(lp7894
S'TaskHandle'
p7895
aNtp7896
(S'channel'
p7897
(lp7898
S'char'
p7899
a(lp7900
I-1
aaNtp7901
(S'data'
p7902
(lp7903
S'float64'
p7904
aNtp7905
tp7906
tp7907
sS'DAQmxSetAIRngLow'
p7908
((lp7909
S'int32'
p7910
ag34
a((S'taskHandle'
p7911
(lp7912
S'TaskHandle'
p7913
aNtp7914
(S'channel'
p7915
(lp7916
S'char'
p7917
a(lp7918
I-1
aaNtp7919
(S'data'
p7920
(lp7921
S'float64'
p7922
aNtp7923
tp7924
tp7925
sS'DAQmxResetRefClkSrc'
p7926
((lp7927
S'int32'
p7928
ag34
a((S'taskHandle'
p7929
(lp7930
S'TaskHandle'
p7931
aNtp7932
tp7933
tp7934
sS'DAQmxGetAODACRefSrc'
p7935
((lp7936
S'int32'
p7937
ag34
a((S'taskHandle'
p7938
(lp7939
S'TaskHandle'
p7940
aNtp7941
(S'channel'
p7942
(lp7943
S'char'
p7944
a(lp7945
I-1
aaNtp7946
(S'data'
p7947
(lp7948
S'int32'
p7949
ag42
aNtp7950
tp7951
tp7952
sS'DAQmxSetAnlgEdgeRefTrigLvl'
p7953
((lp7954
S'int32'
p7955
ag34
a((S'taskHandle'
p7956
(lp7957
S'TaskHandle'
p7958
aNtp7959
(S'data'
p7960
(lp7961
S'float64'
p7962
aNtp7963
tp7964
tp7965
sS'DAQmxCreateAIVoltageChan'
p7966
((lp7967
S'int32'
p7968
ag34
a((S'taskHandle'
p7969
(lp7970
S'TaskHandle'
p7971
aNtp7972
(S'physicalChannel'
p7973
(lp7974
S'char'
p7975
a(lp7976
I-1
aaNtp7977
(S'nameToAssignToChannel'
p7978
(lp7979
S'char'
p7980
a(lp7981
I-1
aaNtp7982
(S'terminalConfig'
p7983
(lp7984
S'int32'
p7985
aNtp7986
(S'minVal'
p7987
(lp7988
S'float64'
p7989
aNtp7990
(S'maxVal'
p7991
(lp7992
S'float64'
p7993
aNtp7994
(S'units'
p7995
(lp7996
S'int32'
p7997
aNtp7998
(S'customScaleName'
p7999
(lp8000
S'char'
p8001
a(lp8002
I-1
aaNtp8003
tp8004
tp8005
sS'DAQmxGetCITimestampUnits'
p8006
((lp8007
S'int32'
p8008
ag34
a((S'taskHandle'
p8009
(lp8010
S'TaskHandle'
p8011
aNtp8012
(S'channel'
p8013
(lp8014
S'char'
p8015
a(lp8016
I-1
aaNtp8017
(S'data'
p8018
(lp8019
S'int32'
p8020
ag42
aNtp8021
tp8022
tp8023
sS'DAQmxGetAILowpassSwitchCapExtClkFreq'
p8024
((lp8025
S'int32'
p8026
ag34
a((S'taskHandle'
p8027
(lp8028
S'TaskHandle'
p8029
aNtp8030
(S'channel'
p8031
(lp8032
S'char'
p8033
a(lp8034
I-1
aaNtp8035
(S'data'
p8036
(lp8037
S'float64'
p8038
ag42
aNtp8039
tp8040
tp8041
sS'DAQmxGetChangeDetectDIFallingEdgePhysicalChans'
p8042
((lp8043
S'int32'
p8044
ag34
a((S'taskHandle'
p8045
(lp8046
S'TaskHandle'
p8047
aNtp8048
(S'data'
p8049
(lp8050
S'char'
p8051
ag42
aNtp8052
(S'bufferSize'
p8053
(lp8054
S'uInt32'
p8055
aNtp8056
tp8057
tp8058
sS'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate'
p8059
((lp8060
S'int32'
p8061
ag34
a((S'taskHandle'
p8062
(lp8063
S'TaskHandle'
p8064
aNtp8065
(S'data'
p8066
(lp8067
S'float64'
p8068
ag42
aNtp8069
tp8070
tp8071
sS'DAQmxGetDevPCIBusNum'
p8072
((lp8073
S'int32'
p8074
ag34
a((S'device'
p8075
(lp8076
S'char'
p8077
a(lp8078
I-1
aaNtp8079
(S'data'
p8080
(lp8081
S'uInt32'
p8082
ag42
aNtp8083
tp8084
tp8085
sS'DAQmxSetCIPeriodStartingEdge'
p8086
((lp8087
S'int32'
p8088
ag34
a((S'taskHandle'
p8089
(lp8090
S'TaskHandle'
p8091
aNtp8092
(S'channel'
p8093
(lp8094
S'char'
p8095
a(lp8096
I-1
aaNtp8097
(S'data'
p8098
(lp8099
S'int32'
p8100
aNtp8101
tp8102
tp8103
sS'DAQmxSetExportedChangeDetectEventPulsePolarity'
p8104
((lp8105
S'int32'
p8106
ag34
a((S'taskHandle'
p8107
(lp8108
S'TaskHandle'
p8109
aNtp8110
(S'data'
p8111
(lp8112
S'int32'
p8113
aNtp8114
tp8115
tp8116
sS'DAQmxGetDevProductNum'
p8117
((lp8118
S'int32'
p8119
ag34
a((S'device'
p8120
(lp8121
S'char'
p8122
a(lp8123
I-1
aaNtp8124
(S'data'
p8125
(lp8126
S'uInt32'
p8127
ag42
aNtp8128
tp8129
tp8130
sS'DAQmxResetCITimestampUnits'
p8131
((lp8132
S'int32'
p8133
ag34
a((S'taskHandle'
p8134
(lp8135
S'TaskHandle'
p8136
aNtp8137
(S'channel'
p8138
(lp8139
S'char'
p8140
a(lp8141
I-1
aaNtp8142
tp8143
tp8144
sS'DAQmxGetDevCIPhysicalChans'
p8145
((lp8146
S'int32'
p8147
ag34
a((S'device'
p8148
(lp8149
S'char'
p8150
a(lp8151
I-1
aaNtp8152
(S'data'
p8153
(lp8154
S'char'
p8155
ag42
aNtp8156
(S'bufferSize'
p8157
(lp8158
S'uInt32'
p8159
aNtp8160
tp8161
tp8162
sS'DAQmxGetCICountEdgesDigFltrTimebaseSrc'
p8163
((lp8164
S'int32'
p8165
ag34
a((S'taskHandle'
p8166
(lp8167
S'TaskHandle'
p8168
aNtp8169
(S'channel'
p8170
(lp8171
S'char'
p8172
a(lp8173
I-1
aaNtp8174
(S'data'
p8175
(lp8176
S'char'
p8177
ag42
aNtp8178
(S'bufferSize'
p8179
(lp8180
S'uInt32'
p8181
aNtp8182
tp8183
tp8184
sS'DAQmxGetExportedAdvCmpltEventPulseWidth'
p8185
((lp8186
S'int32'
p8187
ag34
a((S'taskHandle'
p8188
(lp8189
S'TaskHandle'
p8190
aNtp8191
(S'data'
p8192
(lp8193
S'float64'
p8194
ag42
aNtp8195
tp8196
tp8197
sS'DAQmxGetAIDitherEnable'
p8198
((lp8199
S'int32'
p8200
ag34
a((S'taskHandle'
p8201
(lp8202
S'TaskHandle'
p8203
aNtp8204
(S'channel'
p8205
(lp8206
S'char'
p8207
a(lp8208
I-1
aaNtp8209
(S'data'
p8210
(lp8211
S'bool32'
p8212
ag42
aNtp8213
tp8214
tp8215
sS'DAQmxResetCIPeriodDigSyncEnable'
p8216
((lp8217
S'int32'
p8218
ag34
a((S'taskHandle'
p8219
(lp8220
S'TaskHandle'
p8221
aNtp8222
(S'channel'
p8223
(lp8224
S'char'
p8225
a(lp8226
I-1
aaNtp8227
tp8228
tp8229
sS'DAQmxSetCOCtrTimebaseDigFltrEnable'
p8230
((lp8231
S'int32'
p8232
ag34
a((S'taskHandle'
p8233
(lp8234
S'TaskHandle'
p8235
aNtp8236
(S'channel'
p8237
(lp8238
S'char'
p8239
a(lp8240
I-1
aaNtp8241
(S'data'
p8242
(lp8243
S'bool32'
p8244
aNtp8245
tp8246
tp8247
sS'DAQmxSetAIFreqUnits'
p8248
((lp8249
S'int32'
p8250
ag34
a((S'taskHandle'
p8251
(lp8252
S'TaskHandle'
p8253
aNtp8254
(S'channel'
p8255
(lp8256
S'char'
p8257
a(lp8258
I-1
aaNtp8259
(S'data'
p8260
(lp8261
S'int32'
p8262
aNtp8263
tp8264
tp8265
sS'DAQmxSetAIStrainGageCfg'
p8266
((lp8267
S'int32'
p8268
ag34
a((S'taskHandle'
p8269
(lp8270
S'TaskHandle'
p8271
aNtp8272
(S'channel'
p8273
(lp8274
S'char'
p8275
a(lp8276
I-1
aaNtp8277
(S'data'
p8278
(lp8279
S'int32'
p8280
aNtp8281
tp8282
tp8283
sS'DAQmxResetWatchdogTimeout'
p8284
((lp8285
S'int32'
p8286
ag34
a((S'taskHandle'
p8287
(lp8288
S'TaskHandle'
p8289
aNtp8290
tp8291
tp8292
sS'DAQmxResetAIDitherEnable'
p8293
((lp8294
S'int32'
p8295
ag34
a((S'taskHandle'
p8296
(lp8297
S'TaskHandle'
p8298
aNtp8299
(S'channel'
p8300
(lp8301
S'char'
p8302
a(lp8303
I-1
aaNtp8304
tp8305
tp8306
sS'DAQmxGetAISampAndHoldEnable'
p8307
((lp8308
S'int32'
p8309
ag34
a((S'taskHandle'
p8310
(lp8311
S'TaskHandle'
p8312
aNtp8313
(S'channel'
p8314
(lp8315
S'char'
p8316
a(lp8317
I-1
aaNtp8318
(S'data'
p8319
(lp8320
S'bool32'
p8321
ag42
aNtp8322
tp8323
tp8324
sS'DAQmxGetDigEdgeStartTrigSrc'
p8325
((lp8326
S'int32'
p8327
ag34
a((S'taskHandle'
p8328
(lp8329
S'TaskHandle'
p8330
aNtp8331
(S'data'
p8332
(lp8333
S'char'
p8334
ag42
aNtp8335
(S'bufferSize'
p8336
(lp8337
S'uInt32'
p8338
aNtp8339
tp8340
tp8341
sS'DAQmxSetCOPulseHighTicks'
p8342
((lp8343
S'int32'
p8344
ag34
a((S'taskHandle'
p8345
(lp8346
S'TaskHandle'
p8347
aNtp8348
(S'channel'
p8349
(lp8350
S'char'
p8351
a(lp8352
I-1
aaNtp8353
(S'data'
p8354
(lp8355
S'uInt32'
p8356
aNtp8357
tp8358
tp8359
sS'DAQmxWriteBinaryU16'
p8360
((lp8361
S'int32'
p8362
ag34
a((S'taskHandle'
p8363
(lp8364
S'TaskHandle'
p8365
aNtp8366
(S'numSampsPerChan'
p8367
(lp8368
S'int32'
p8369
aNtp8370
(S'autoStart'
p8371
(lp8372
S'bool32'
p8373
aNtp8374
(S'timeout'
p8375
(lp8376
S'float64'
p8377
aNtp8378
(S'dataLayout'
p8379
(lp8380
S'bool32'
p8381
aNtp8382
(S'writeArray'
p8383
(lp8384
S'uInt16'
p8385
a(lp8386
I-1
aaNtp8387
(S'sampsPerChanWritten'
p8388
(lp8389
S'int32'
p8390
ag42
aNtp8391
(S'reserved'
p8392
(lp8393
S'bool32'
p8394
ag42
aNtp8395
tp8396
tp8397
sS'DAQmxSetAIChanCalPolyForwardCoeff'
p8398
((lp8399
S'int32'
p8400
ag34
a((S'taskHandle'
p8401
(lp8402
S'TaskHandle'
p8403
aNtp8404
(S'channel'
p8405
(lp8406
S'char'
p8407
a(lp8408
I-1
aaNtp8409
(S'data'
p8410
(lp8411
S'float64'
p8412
ag42
aNtp8413
(S'arraySizeInSamples'
p8414
(lp8415
S'uInt32'
p8416
aNtp8417
tp8418
tp8419
sS'DAQmxGetAIConvActiveEdge'
p8420
((lp8421
S'int32'
p8422
ag34
a((S'taskHandle'
p8423
(lp8424
S'TaskHandle'
p8425
aNtp8426
(S'data'
p8427
(lp8428
S'int32'
p8429
ag42
aNtp8430
tp8431
tp8432
sS'DAQmxSetCICountEdgesDigSyncEnable'
p8433
((lp8434
S'int32'
p8435
ag34
a((S'taskHandle'
p8436
(lp8437
S'TaskHandle'
p8438
aNtp8439
(S'channel'
p8440
(lp8441
S'char'
p8442
a(lp8443
I-1
aaNtp8444
(S'data'
p8445
(lp8446
S'bool32'
p8447
aNtp8448
tp8449
tp8450
sS'DAQmxCfgAnlgEdgeStartTrig'
p8451
((lp8452
S'int32'
p8453
ag34
a((S'taskHandle'
p8454
(lp8455
S'TaskHandle'
p8456
aNtp8457
(S'triggerSource'
p8458
(lp8459
S'char'
p8460
a(lp8461
I-1
aaNtp8462
(S'triggerSlope'
p8463
(lp8464
S'int32'
p8465
aNtp8466
(S'triggerLevel'
p8467
(lp8468
S'float64'
p8469
aNtp8470
tp8471
tp8472
sS'DAQmxSetCalUserDefinedInfo'
p8473
((lp8474
S'int32'
p8475
ag34
a((S'deviceName'
p8476
(lp8477
S'char'
p8478
a(lp8479
I-1
aaNtp8480
(S'data'
p8481
(lp8482
S'char'
p8483
ag42
aNtp8484
tp8485
tp8486
sS'DAQmxGetReadDigitalLinesBytesPerChan'
p8487
((lp8488
S'int32'
p8489
ag34
a((S'taskHandle'
p8490
(lp8491
S'TaskHandle'
p8492
aNtp8493
(S'data'
p8494
(lp8495
S'uInt32'
p8496
ag42
aNtp8497
tp8498
tp8499
sS'DAQmxResetAIConvTimebaseDiv'
p8500
((lp8501
S'int32'
p8502
ag34
a((S'taskHandle'
p8503
(lp8504
S'TaskHandle'
p8505
aNtp8506
tp8507
tp8508
sS'DAQmxGetPhysicalChanTEDSModelNum'
p8509
((lp8510
S'int32'
p8511
ag34
a((S'physicalChannel'
p8512
(lp8513
S'char'
p8514
a(lp8515
I-1
aaNtp8516
(S'data'
p8517
(lp8518
S'uInt32'
p8519
ag42
aNtp8520
tp8521
tp8522
sS'DAQmxGetSampClkDigSyncEnable'
p8523
((lp8524
S'int32'
p8525
ag34
a((S'taskHandle'
p8526
(lp8527
S'TaskHandle'
p8528
aNtp8529
(S'data'
p8530
(lp8531
S'bool32'
p8532
ag42
aNtp8533
tp8534
tp8535
sS'DAQmxGetSwitchChanMaxACSwitchPwr'
p8536
((lp8537
S'int32'
p8538
ag34
a((S'switchChannelName'
p8539
(lp8540
S'char'
p8541
a(lp8542
I-1
aaNtp8543
(S'data'
p8544
(lp8545
S'float64'
p8546
ag42
aNtp8547
tp8548
tp8549
sS'DAQmxSetAIAccelSensitivityUnits'
p8550
((lp8551
S'int32'
p8552
ag34
a((S'taskHandle'
p8553
(lp8554
S'TaskHandle'
p8555
aNtp8556
(S'channel'
p8557
(lp8558
S'char'
p8559
a(lp8560
I-1
aaNtp8561
(S'data'
p8562
(lp8563
S'int32'
p8564
aNtp8565
tp8566
tp8567
sS'DAQmxResetAnlgWinPauseTrigBtm'
p8568
((lp8569
S'int32'
p8570
ag34
a((S'taskHandle'
p8571
(lp8572
S'TaskHandle'
p8573
aNtp8574
tp8575
tp8576
sS'DAQmxResetWriteRelativeTo'
p8577
((lp8578
S'int32'
p8579
ag34
a((S'taskHandle'
p8580
(lp8581
S'TaskHandle'
p8582
aNtp8583
tp8584
tp8585
sS'DAQmxResetAIExcitActualVal'
p8586
((lp8587
S'int32'
p8588
ag34
a((S'taskHandle'
p8589
(lp8590
S'TaskHandle'
p8591
aNtp8592
(S'channel'
p8593
(lp8594
S'char'
p8595
a(lp8596
I-1
aaNtp8597
tp8598
tp8599
sS'DAQmxSetSampClkTimebaseSrc'
p8600
((lp8601
S'int32'
p8602
ag34
a((S'taskHandle'
p8603
(lp8604
S'TaskHandle'
p8605
aNtp8606
(S'data'
p8607
(lp8608
S'char'
p8609
ag42
aNtp8610
tp8611
tp8612
sS'DAQmxResetChangeDetectDIRisingEdgePhysicalChans'
p8613
((lp8614
S'int32'
p8615
ag34
a((S'taskHandle'
p8616
(lp8617
S'TaskHandle'
p8618
aNtp8619
tp8620
tp8621
sS'DAQmxGetExportedSampClkPulsePolarity'
p8622
((lp8623
S'int32'
p8624
ag34
a((S'taskHandle'
p8625
(lp8626
S'TaskHandle'
p8627
aNtp8628
(S'data'
p8629
(lp8630
S'int32'
p8631
ag42
aNtp8632
tp8633
tp8634
sS'DAQmxGetSwitchChanMaxDCSwitchPwr'
p8635
((lp8636
S'int32'
p8637
ag34
a((S'switchChannelName'
p8638
(lp8639
S'char'
p8640
a(lp8641
I-1
aaNtp8642
(S'data'
p8643
(lp8644
S'float64'
p8645
ag42
aNtp8646
tp8647
tp8648
sS'DAQmxGetDigEdgeStartTrigEdge'
p8649
((lp8650
S'int32'
p8651
ag34
a((S'taskHandle'
p8652
(lp8653
S'TaskHandle'
p8654
aNtp8655
(S'data'
p8656
(lp8657
S'int32'
p8658
ag42
aNtp8659
tp8660
tp8661
sS'DAQmxIsReadOrWriteLate'
p8662
((lp8663
S'bool32'
p8664
ag34
a((S'errorCode'
p8665
(lp8666
S'int32'
p8667
aNtp8668
tp8669
tp8670
sS'DAQmxGetDigEdgeArmStartTrigDigSyncEnable'
p8671
((lp8672
S'int32'
p8673
ag34
a((S'taskHandle'
p8674
(lp8675
S'TaskHandle'
p8676
aNtp8677
(S'data'
p8678
(lp8679
S'bool32'
p8680
ag42
aNtp8681
tp8682
tp8683
sS'DAQmxSetAnlgWinRefTrigSrc'
p8684
((lp8685
S'int32'
p8686
ag34
a((S'taskHandle'
p8687
(lp8688
S'TaskHandle'
p8689
aNtp8690
(S'data'
p8691
(lp8692
S'char'
p8693
ag42
aNtp8694
tp8695
tp8696
sS'DAQmxGetExportedCtrOutEventPulsePolarity'
p8697
((lp8698
S'int32'
p8699
ag34
a((S'taskHandle'
p8700
(lp8701
S'TaskHandle'
p8702
aNtp8703
(S'data'
p8704
(lp8705
S'int32'
p8706
ag42
aNtp8707
tp8708
tp8709
sS'DAQmxSetCIFreqMeasMeth'
p8710
((lp8711
S'int32'
p8712
ag34
a((S'taskHandle'
p8713
(lp8714
S'TaskHandle'
p8715
aNtp8716
(S'channel'
p8717
(lp8718
S'char'
p8719
a(lp8720
I-1
aaNtp8721
(S'data'
p8722
(lp8723
S'int32'
p8724
aNtp8725
tp8726
tp8727
sS'DAQmxResetAIChanCalTablePreScaledVals'
p8728
((lp8729
S'int32'
p8730
ag34
a((S'taskHandle'
p8731
(lp8732
S'TaskHandle'
p8733
aNtp8734
(S'channel'
p8735
(lp8736
S'char'
p8737
a(lp8738
I-1
aaNtp8739
tp8740
tp8741
sS'DAQmxResetAIConvActiveEdge'
p8742
((lp8743
S'int32'
p8744
ag34
a((S'taskHandle'
p8745
(lp8746
S'TaskHandle'
p8747
aNtp8748
tp8749
tp8750
sS'DAQmxGetScaleLinYIntercept'
p8751
((lp8752
S'int32'
p8753
ag34
a((S'scaleName'
p8754
(lp8755
S'char'
p8756
a(lp8757
I-1
aaNtp8758
(S'data'
p8759
(lp8760
S'float64'
p8761
ag42
aNtp8762
tp8763
tp8764
sS'DAQmxAdjust1102Cal'
p8765
((lp8766
S'int32'
p8767
ag34
a((S'calHandle'
p8768
(lp8769
S'uInt32'
p8770
aNtp8771
(S'refVoltage'
p8772
(lp8773
S'float64'
p8774
aNtp8775
(S'measOutput'
p8776
(lp8777
S'float64'
p8778
aNtp8779
tp8780
tp8781
sS'DAQmxGetCICtrTimebaseActiveEdge'
p8782
((lp8783
S'int32'
p8784
ag34
a((S'taskHandle'
p8785
(lp8786
S'TaskHandle'
p8787
aNtp8788
(S'channel'
p8789
(lp8790
S'char'
p8791
a(lp8792
I-1
aaNtp8793
(S'data'
p8794
(lp8795
S'int32'
p8796
ag42
aNtp8797
tp8798
tp8799
sS'DAQmxResetCICtrTimebaseSrc'
p8800
((lp8801
S'int32'
p8802
ag34
a((S'taskHandle'
p8803
(lp8804
S'TaskHandle'
p8805
aNtp8806
(S'channel'
p8807
(lp8808
S'char'
p8809
a(lp8810
I-1
aaNtp8811
tp8812
tp8813
sS'DAQmxResetBufOutputOnbrdBufSize'
p8814
((lp8815
S'int32'
p8816
ag34
a((S'taskHandle'
p8817
(lp8818
S'TaskHandle'
p8819
aNtp8820
tp8821
tp8822
sS'DAQmxSetDelayFromSampClkDelayUnits'
p8823
((lp8824
S'int32'
p8825
ag34
a((S'taskHandle'
p8826
(lp8827
S'TaskHandle'
p8828
aNtp8829
(S'data'
p8830
(lp8831
S'int32'
p8832
aNtp8833
tp8834
tp8835
sS'DAQmxSetAIChanCalCalDate'
p8836
((lp8837
S'int32'
p8838
ag34
a((S'taskHandle'
p8839
(lp8840
S'TaskHandle'
p8841
aNtp8842
(S'channelName'
p8843
(lp8844
S'char'
p8845
a(lp8846
I-1
aaNtp8847
(S'year'
p8848
(lp8849
S'uInt32'
p8850
aNtp8851
(S'month'
p8852
(lp8853
S'uInt32'
p8854
aNtp8855
(S'day'
p8856
(lp8857
S'uInt32'
p8858
aNtp8859
(S'hour'
p8860
(lp8861
S'uInt32'
p8862
aNtp8863
(S'minute'
p8864
(lp8865
S'uInt32'
p8866
aNtp8867
tp8868
tp8869
sS'DAQmxSetScaleMapPreScaledMax'
p8870
((lp8871
S'int32'
p8872
ag34
a((S'scaleName'
p8873
(lp8874
S'char'
p8875
a(lp8876
I-1
aaNtp8877
(S'data'
p8878
(lp8879
S'float64'
p8880
aNtp8881
tp8882
tp8883
sS'DAQmxGetBufOutputOnbrdBufSize'
p8884
((lp8885
S'int32'
p8886
ag34
a((S'taskHandle'
p8887
(lp8888
S'TaskHandle'
p8889
aNtp8890
(S'data'
p8891
(lp8892
S'uInt32'
p8893
ag42
aNtp8894
tp8895
tp8896
sS'DAQmxSetDITristate'
p8897
((lp8898
S'int32'
p8899
ag34
a((S'taskHandle'
p8900
(lp8901
S'TaskHandle'
p8902
aNtp8903
(S'channel'
p8904
(lp8905
S'char'
p8906
a(lp8907
I-1
aaNtp8908
(S'data'
p8909
(lp8910
S'bool32'
p8911
aNtp8912
tp8913
tp8914
sS'DAQmxSetCIAngEncoderInitialAngle'
p8915
((lp8916
S'int32'
p8917
ag34
a((S'taskHandle'
p8918
(lp8919
S'TaskHandle'
p8920
aNtp8921
(S'channel'
p8922
(lp8923
S'char'
p8924
a(lp8925
I-1
aaNtp8926
(S'data'
p8927
(lp8928
S'float64'
p8929
aNtp8930
tp8931
tp8932
sS'DAQmxSetWriteRelativeTo'
p8933
((lp8934
S'int32'
p8935
ag34
a((S'taskHandle'
p8936
(lp8937
S'TaskHandle'
p8938
aNtp8939
(S'data'
p8940
(lp8941
S'int32'
p8942
aNtp8943
tp8944
tp8945
sS'DAQmxSetReadRelativeTo'
p8946
((lp8947
S'int32'
p8948
ag34
a((S'taskHandle'
p8949
(lp8950
S'TaskHandle'
p8951
aNtp8952
(S'data'
p8953
(lp8954
S'int32'
p8955
aNtp8956
tp8957
tp8958
sS'DAQmxGetAIRVDTSensitivity'
p8959
((lp8960
S'int32'
p8961
ag34
a((S'taskHandle'
p8962
(lp8963
S'TaskHandle'
p8964
aNtp8965
(S'channel'
p8966
(lp8967
S'char'
p8968
a(lp8969
I-1
aaNtp8970
(S'data'
p8971
(lp8972
S'float64'
p8973
ag42
aNtp8974
tp8975
tp8976
sS'DAQmxResetDigEdgeStartTrigDigSyncEnable'
p8977
((lp8978
S'int32'
p8979
ag34
a((S'taskHandle'
p8980
(lp8981
S'TaskHandle'
p8982
aNtp8983
tp8984
tp8985
sS'DAQmxGetDODataXferMech'
p8986
((lp8987
S'int32'
p8988
ag34
a((S'taskHandle'
p8989
(lp8990
S'TaskHandle'
p8991
aNtp8992
(S'channel'
p8993
(lp8994
S'char'
p8995
a(lp8996
I-1
aaNtp8997
(S'data'
p8998
(lp8999
S'int32'
p9000
ag42
aNtp9001
tp9002
tp9003
sS'DAQmxSetAIRTDR0'
p9004
((lp9005
S'int32'
p9006
ag34
a((S'taskHandle'
p9007
(lp9008
S'TaskHandle'
p9009
aNtp9010
(S'channel'
p9011
(lp9012
S'char'
p9013
a(lp9014
I-1
aaNtp9015
(S'data'
p9016
(lp9017
S'float64'
p9018
aNtp9019
tp9020
tp9021
sS'DAQmxResetAOUseOnlyOnBrdMem'
p9022
((lp9023
S'int32'
p9024
ag34
a((S'taskHandle'
p9025
(lp9026
S'TaskHandle'
p9027
aNtp9028
(S'channel'
p9029
(lp9030
S'char'
p9031
a(lp9032
I-1
aaNtp9033
tp9034
tp9035
sS'DAQmxGetCIEncoderAInputDigFltrTimebaseSrc'
p9036
((lp9037
S'int32'
p9038
ag34
a((S'taskHandle'
p9039
(lp9040
S'TaskHandle'
p9041
aNtp9042
(S'channel'
p9043
(lp9044
S'char'
p9045
a(lp9046
I-1
aaNtp9047
(S'data'
p9048
(lp9049
S'char'
p9050
ag42
aNtp9051
(S'bufferSize'
p9052
(lp9053
S'uInt32'
p9054
aNtp9055
tp9056
tp9057
sS'DAQmxGetDevDOPorts'
p9058
((lp9059
S'int32'
p9060
ag34
a((S'device'
p9061
(lp9062
S'char'
p9063
a(lp9064
I-1
aaNtp9065
(S'data'
p9066
(lp9067
S'char'
p9068
ag42
aNtp9069
(S'bufferSize'
p9070
(lp9071
S'uInt32'
p9072
aNtp9073
tp9074
tp9075
sS'DAQmxGetCIEncoderAInputDigSyncEnable'
p9076
((lp9077
S'int32'
p9078
ag34
a((S'taskHandle'
p9079
(lp9080
S'TaskHandle'
p9081
aNtp9082
(S'channel'
p9083
(lp9084
S'char'
p9085
a(lp9086
I-1
aaNtp9087
(S'data'
p9088
(lp9089
S'bool32'
p9090
ag42
aNtp9091
tp9092
tp9093
sS'DAQmxGetAICoupling'
p9094
((lp9095
S'int32'
p9096
ag34
a((S'taskHandle'
p9097
(lp9098
S'TaskHandle'
p9099
aNtp9100
(S'channel'
p9101
(lp9102
S'char'
p9103
a(lp9104
I-1
aaNtp9105
(S'data'
p9106
(lp9107
S'int32'
p9108
ag42
aNtp9109
tp9110
tp9111
sS'DAQmxSetExportedCtrOutEventOutputTerm'
p9112
((lp9113
S'int32'
p9114
ag34
a((S'taskHandle'
p9115
(lp9116
S'TaskHandle'
p9117
aNtp9118
(S'data'
p9119
(lp9120
S'char'
p9121
ag42
aNtp9122
tp9123
tp9124
sS'DAQmxSetScaleTablePreScaledVals'
p9125
((lp9126
S'int32'
p9127
ag34
a((S'scaleName'
p9128
(lp9129
S'char'
p9130
a(lp9131
I-1
aaNtp9132
(S'data'
p9133
(lp9134
S'float64'
p9135
ag42
aNtp9136
(S'arraySizeInSamples'
p9137
(lp9138
S'uInt32'
p9139
aNtp9140
tp9141
tp9142
sS'DAQmxResetAIDataXferMech'
p9143
((lp9144
S'int32'
p9145
ag34
a((S'taskHandle'
p9146
(lp9147
S'TaskHandle'
p9148
aNtp9149
(S'channel'
p9150
(lp9151
S'char'
p9152
a(lp9153
I-1
aaNtp9154
tp9155
tp9156
sS'DAQmxSetReadWaitMode'
p9157
((lp9158
S'int32'
p9159
ag34
a((S'taskHandle'
p9160
(lp9161
S'TaskHandle'
p9162
aNtp9163
(S'data'
p9164
(lp9165
S'int32'
p9166
aNtp9167
tp9168
tp9169
sS'DAQmxSetExportedSampClkPulsePolarity'
p9170
((lp9171
S'int32'
p9172
ag34
a((S'taskHandle'
p9173
(lp9174
S'TaskHandle'
p9175
aNtp9176
(S'data'
p9177
(lp9178
S'int32'
p9179
aNtp9180
tp9181
tp9182
sS'DAQmxGetCITwoEdgeSepSecondDigSyncEnable'
p9183
((lp9184
S'int32'
p9185
ag34
a((S'taskHandle'
p9186
(lp9187
S'TaskHandle'
p9188
aNtp9189
(S'channel'
p9190
(lp9191
S'char'
p9192
a(lp9193
I-1
aaNtp9194
(S'data'
p9195
(lp9196
S'bool32'
p9197
ag42
aNtp9198
tp9199
tp9200
sS'DAQmxResetCIAngEncoderInitialAngle'
p9201
((lp9202
S'int32'
p9203
ag34
a((S'taskHandle'
p9204
(lp9205
S'TaskHandle'
p9206
aNtp9207
(S'channel'
p9208
(lp9209
S'char'
p9210
a(lp9211
I-1
aaNtp9212
tp9213
tp9214
sS'DAQmxSetCIPulseWidthDigFltrTimebaseSrc'
p9215
((lp9216
S'int32'
p9217
ag34
a((S'taskHandle'
p9218
(lp9219
S'TaskHandle'
p9220
aNtp9221
(S'channel'
p9222
(lp9223
S'char'
p9224
a(lp9225
I-1
aaNtp9226
(S'data'
p9227
(lp9228
S'char'
p9229
ag42
aNtp9230
tp9231
tp9232
sS'DAQmxResetStartTrigType'
p9233
((lp9234
S'int32'
p9235
ag34
a((S'taskHandle'
p9236
(lp9237
S'TaskHandle'
p9238
aNtp9239
tp9240
tp9241
sS'DAQmxResetAODACRefConnToGnd'
p9242
((lp9243
S'int32'
p9244
ag34
a((S'taskHandle'
p9245
(lp9246
S'TaskHandle'
p9247
aNtp9248
(S'channel'
p9249
(lp9250
S'char'
p9251
a(lp9252
I-1
aaNtp9253
tp9254
tp9255
sS'DAQmxSetAIThrmstrC'
p9256
((lp9257
S'int32'
p9258
ag34
a((S'taskHandle'
p9259
(lp9260
S'TaskHandle'
p9261
aNtp9262
(S'channel'
p9263
(lp9264
S'char'
p9265
a(lp9266
I-1
aaNtp9267
(S'data'
p9268
(lp9269
S'float64'
p9270
aNtp9271
tp9272
tp9273
sS'DAQmxSetAIThrmstrB'
p9274
((lp9275
S'int32'
p9276
ag34
a((S'taskHandle'
p9277
(lp9278
S'TaskHandle'
p9279
aNtp9280
(S'channel'
p9281
(lp9282
S'char'
p9283
a(lp9284
I-1
aaNtp9285
(S'data'
p9286
(lp9287
S'float64'
p9288
aNtp9289
tp9290
tp9291
sS'DAQmxSetAIThrmstrA'
p9292
((lp9293
S'int32'
p9294
ag34
a((S'taskHandle'
p9295
(lp9296
S'TaskHandle'
p9297
aNtp9298
(S'channel'
p9299
(lp9300
S'char'
p9301
a(lp9302
I-1
aaNtp9303
(S'data'
p9304
(lp9305
S'float64'
p9306
aNtp9307
tp9308
tp9309
sS'DAQmxReadBinaryI16'
p9310
((lp9311
S'int32'
p9312
ag34
a((S'taskHandle'
p9313
(lp9314
S'TaskHandle'
p9315
aNtp9316
(S'numSampsPerChan'
p9317
(lp9318
S'int32'
p9319
aNtp9320
(S'timeout'
p9321
(lp9322
S'float64'
p9323
aNtp9324
(S'fillMode'
p9325
(lp9326
S'bool32'
p9327
aNtp9328
(S'readArray'
p9329
(lp9330
S'int16'
p9331
a(lp9332
I-1
aaNtp9333
(S'arraySizeInSamps'
p9334
(lp9335
S'uInt32'
p9336
aNtp9337
(S'sampsPerChanRead'
p9338
(lp9339
S'int32'
p9340
ag42
aNtp9341
(S'reserved'
p9342
(lp9343
S'bool32'
p9344
ag42
aNtp9345
tp9346
tp9347
sS'DAQmxGetAIChanCalTablePreScaledVals'
p9348
((lp9349
S'int32'
p9350
ag34
a((S'taskHandle'
p9351
(lp9352
S'TaskHandle'
p9353
aNtp9354
(S'channel'
p9355
(lp9356
S'char'
p9357
a(lp9358
I-1
aaNtp9359
(S'data'
p9360
(lp9361
S'float64'
p9362
ag42
aNtp9363
(S'arraySizeInSamples'
p9364
(lp9365
S'uInt32'
p9366
aNtp9367
tp9368
tp9369
sS'DAQmxGetSampClkTimebaseMasterTimebaseDiv'
p9370
((lp9371
S'int32'
p9372
ag34
a((S'taskHandle'
p9373
(lp9374
S'TaskHandle'
p9375
aNtp9376
(S'data'
p9377
(lp9378
S'uInt32'
p9379
ag42
aNtp9380
tp9381
tp9382
sS'DAQmxDeleteSavedGlobalChan'
p9383
((lp9384
S'int32'
p9385
ag34
a((S'channelName'
p9386
(lp9387
S'char'
p9388
a(lp9389
I-1
aaNtp9390
tp9391
tp9392
sS'DAQmxGetExportedAdvTrigOutputTerm'
p9393
((lp9394
S'int32'
p9395
ag34
a((S'taskHandle'
p9396
(lp9397
S'TaskHandle'
p9398
aNtp9399
(S'data'
p9400
(lp9401
S'char'
p9402
ag42
aNtp9403
(S'bufferSize'
p9404
(lp9405
S'uInt32'
p9406
aNtp9407
tp9408
tp9409
sS'DAQmxGetAIInputSrc'
p9410
((lp9411
S'int32'
p9412
ag34
a((S'taskHandle'
p9413
(lp9414
S'TaskHandle'
p9415
aNtp9416
(S'channel'
p9417
(lp9418
S'char'
p9419
a(lp9420
I-1
aaNtp9421
(S'data'
p9422
(lp9423
S'char'
p9424
ag42
aNtp9425
(S'bufferSize'
p9426
(lp9427
S'uInt32'
p9428
aNtp9429
tp9430
tp9431
sS'DAQmxSwitchGetSingleRelayCount'
p9432
((lp9433
S'int32'
p9434
ag34
a((S'relayName'
p9435
(lp9436
S'char'
p9437
a(lp9438
I-1
aaNtp9439
(S'count'
p9440
(lp9441
S'uInt32'
p9442
ag42
aNtp9443
tp9444
tp9445
sS'DAQmxGetCICountEdgesDigFltrEnable'
p9446
((lp9447
S'int32'
p9448
ag34
a((S'taskHandle'
p9449
(lp9450
S'TaskHandle'
p9451
aNtp9452
(S'channel'
p9453
(lp9454
S'char'
p9455
a(lp9456
I-1
aaNtp9457
(S'data'
p9458
(lp9459
S'bool32'
p9460
ag42
aNtp9461
tp9462
tp9463
sS'DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc'
p9464
((lp9465
S'int32'
p9466
ag34
a((S'taskHandle'
p9467
(lp9468
S'TaskHandle'
p9469
aNtp9470
(S'data'
p9471
(lp9472
S'char'
p9473
ag42
aNtp9474
(S'bufferSize'
p9475
(lp9476
S'uInt32'
p9477
aNtp9478
tp9479
tp9480
sS'DAQmxGetCIEncoderDecodingType'
p9481
((lp9482
S'int32'
p9483
ag34
a((S'taskHandle'
p9484
(lp9485
S'TaskHandle'
p9486
aNtp9487
(S'channel'
p9488
(lp9489
S'char'
p9490
a(lp9491
I-1
aaNtp9492
(S'data'
p9493
(lp9494
S'int32'
p9495
ag42
aNtp9496
tp9497
tp9498
sS'DAQmxResetCICountEdgesDigFltrTimebaseRate'
p9499
((lp9500
S'int32'
p9501
ag34
a((S'taskHandle'
p9502
(lp9503
S'TaskHandle'
p9504
aNtp9505
(S'channel'
p9506
(lp9507
S'char'
p9508
a(lp9509
I-1
aaNtp9510
tp9511
tp9512
sS'DAQmxAdjustDSAAOCal'
p9513
((lp9514
S'int32'
p9515
ag34
a((S'calHandle'
p9516
(lp9517
S'uInt32'
p9518
aNtp9519
(S'channel'
p9520
(lp9521
S'uInt32'
p9522
aNtp9523
(S'requestedLowVoltage'
p9524
(lp9525
S'float64'
p9526
aNtp9527
(S'actualLowVoltage'
p9528
(lp9529
S'float64'
p9530
aNtp9531
(S'requestedHighVoltage'
p9532
(lp9533
S'float64'
p9534
aNtp9535
(S'actualHighVoltage'
p9536
(lp9537
S'float64'
p9538
aNtp9539
(S'gainSetting'
p9540
(lp9541
S'float64'
p9542
aNtp9543
tp9544
tp9545
sS'DAQmxSetAODACOffsetSrc'
p9546
((lp9547
S'int32'
p9548
ag34
a((S'taskHandle'
p9549
(lp9550
S'TaskHandle'
p9551
aNtp9552
(S'channel'
p9553
(lp9554
S'char'
p9555
a(lp9556
I-1
aaNtp9557
(S'data'
p9558
(lp9559
S'int32'
p9560
aNtp9561
tp9562
tp9563
sS'DAQmxGetCIPeriodMeasTime'
p9564
((lp9565
S'int32'
p9566
ag34
a((S'taskHandle'
p9567
(lp9568
S'TaskHandle'
p9569
aNtp9570
(S'channel'
p9571
(lp9572
S'char'
p9573
a(lp9574
I-1
aaNtp9575
(S'data'
p9576
(lp9577
S'float64'
p9578
ag42
aNtp9579
tp9580
tp9581
sS'DAQmxSetDigEdgeArmStartTrigDigSyncEnable'
p9582
((lp9583
S'int32'
p9584
ag34
a((S'taskHandle'
p9585
(lp9586
S'TaskHandle'
p9587
aNtp9588
(S'data'
p9589
(lp9590
S'bool32'
p9591
aNtp9592
tp9593
tp9594
sS'DAQmxResetAIBridgeNomResistance'
p9595
((lp9596
S'int32'
p9597
ag34
a((S'taskHandle'
p9598
(lp9599
S'TaskHandle'
p9600
aNtp9601
(S'channel'
p9602
(lp9603
S'char'
p9604
a(lp9605
I-1
aaNtp9606
tp9607
tp9608
sS'DAQmxGetCIEncoderBInputDigFltrEnable'
p9609
((lp9610
S'int32'
p9611
ag34
a((S'taskHandle'
p9612
(lp9613
S'TaskHandle'
p9614
aNtp9615
(S'channel'
p9616
(lp9617
S'char'
p9618
a(lp9619
I-1
aaNtp9620
(S'data'
p9621
(lp9622
S'bool32'
p9623
ag42
aNtp9624
tp9625
tp9626
sS'DAQmxResetAIChanCalOperatorName'
p9627
((lp9628
S'int32'
p9629
ag34
a((S'taskHandle'
p9630
(lp9631
S'TaskHandle'
p9632
aNtp9633
(S'channel'
p9634
(lp9635
S'char'
p9636
a(lp9637
I-1
aaNtp9638
tp9639
tp9640
sS'DAQmxGetCIMax'
p9641
((lp9642
S'int32'
p9643
ag34
a((S'taskHandle'
p9644
(lp9645
S'TaskHandle'
p9646
aNtp9647
(S'channel'
p9648
(lp9649
S'char'
p9650
a(lp9651
I-1
aaNtp9652
(S'data'
p9653
(lp9654
S'float64'
p9655
ag42
aNtp9656
tp9657
tp9658
sS'DAQmxResetCIEncoderZIndexPhase'
p9659
((lp9660
S'int32'
p9661
ag34
a((S'taskHandle'
p9662
(lp9663
S'TaskHandle'
p9664
aNtp9665
(S'channel'
p9666
(lp9667
S'char'
p9668
a(lp9669
I-1
aaNtp9670
tp9671
tp9672
sS'DAQmxResetCOAutoIncrCnt'
p9673
((lp9674
S'int32'
p9675
ag34
a((S'taskHandle'
p9676
(lp9677
S'TaskHandle'
p9678
aNtp9679
(S'channel'
p9680
(lp9681
S'char'
p9682
a(lp9683
I-1
aaNtp9684
tp9685
tp9686
sS'DAQmxSetSyncPulseMinDelayToStart'
p9687
((lp9688
S'int32'
p9689
ag34
a((S'taskHandle'
p9690
(lp9691
S'TaskHandle'
p9692
aNtp9693
(S'data'
p9694
(lp9695
S'float64'
p9696
aNtp9697
tp9698
tp9699
sS'DAQmxResetAODACOffsetSrc'
p9700
((lp9701
S'int32'
p9702
ag34
a((S'taskHandle'
p9703
(lp9704
S'TaskHandle'
p9705
aNtp9706
(S'channel'
p9707
(lp9708
S'char'
p9709
a(lp9710
I-1
aaNtp9711
tp9712
tp9713
sS'DAQmxGetPhysicalChanTEDSVersionNum'
p9714
((lp9715
S'int32'
p9716
ag34
a((S'physicalChannel'
p9717
(lp9718
S'char'
p9719
a(lp9720
I-1
aaNtp9721
(S'data'
p9722
(lp9723
S'uInt32'
p9724
ag42
aNtp9725
tp9726
tp9727
sS'DAQmxResetExportedAdvTrigPulseWidthUnits'
p9728
((lp9729
S'int32'
p9730
ag34
a((S'taskHandle'
p9731
(lp9732
S'TaskHandle'
p9733
aNtp9734
tp9735
tp9736
sS'DAQmxResetCIPeriodTerm'
p9737
((lp9738
S'int32'
p9739
ag34
a((S'taskHandle'
p9740
(lp9741
S'TaskHandle'
p9742
aNtp9743
(S'channel'
p9744
(lp9745
S'char'
p9746
a(lp9747
I-1
aaNtp9748
tp9749
tp9750
sS'DAQmxResetDigEdgeWatchdogExpirTrigSrc'
p9751
((lp9752
S'int32'
p9753
ag34
a((S'taskHandle'
p9754
(lp9755
S'TaskHandle'
p9756
aNtp9757
tp9758
tp9759
sS'DAQmxResetExportedSampClkOutputBehavior'
p9760
((lp9761
S'int32'
p9762
ag34
a((S'taskHandle'
p9763
(lp9764
S'TaskHandle'
p9765
aNtp9766
tp9767
tp9768
sS'DAQmxResetCIEncoderAInputDigFltrEnable'
p9769
((lp9770
S'int32'
p9771
ag34
a((S'taskHandle'
p9772
(lp9773
S'TaskHandle'
p9774
aNtp9775
(S'channel'
p9776
(lp9777
S'char'
p9778
a(lp9779
I-1
aaNtp9780
tp9781
tp9782
sS'DAQmxGetAnlgLvlPauseTrigWhen'
p9783
((lp9784
S'int32'
p9785
ag34
a((S'taskHandle'
p9786
(lp9787
S'TaskHandle'
p9788
aNtp9789
(S'data'
p9790
(lp9791
S'int32'
p9792
ag42
aNtp9793
tp9794
tp9795
sS'DAQmxSetCIPeriodMeasMeth'
p9796
((lp9797
S'int32'
p9798
ag34
a((S'taskHandle'
p9799
(lp9800
S'TaskHandle'
p9801
aNtp9802
(S'channel'
p9803
(lp9804
S'char'
p9805
a(lp9806
I-1
aaNtp9807
(S'data'
p9808
(lp9809
S'int32'
p9810
aNtp9811
tp9812
tp9813
sS'DAQmxSetCIPulseWidthDigFltrEnable'
p9814
((lp9815
S'int32'
p9816
ag34
a((S'taskHandle'
p9817
(lp9818
S'TaskHandle'
p9819
aNtp9820
(S'channel'
p9821
(lp9822
S'char'
p9823
a(lp9824
I-1
aaNtp9825
(S'data'
p9826
(lp9827
S'bool32'
p9828
aNtp9829
tp9830
tp9831
sS'DAQmxGetCOCtrTimebaseMasterTimebaseDiv'
p9832
((lp9833
S'int32'
p9834
ag34
a((S'taskHandle'
p9835
(lp9836
S'TaskHandle'
p9837
aNtp9838
(S'channel'
p9839
(lp9840
S'char'
p9841
a(lp9842
I-1
aaNtp9843
(S'data'
p9844
(lp9845
S'uInt32'
p9846
ag42
aNtp9847
tp9848
tp9849
sS'DAQmxGetCIEncoderBInputTerm'
p9850
((lp9851
S'int32'
p9852
ag34
a((S'taskHandle'
p9853
(lp9854
S'TaskHandle'
p9855
aNtp9856
(S'channel'
p9857
(lp9858
S'char'
p9859
a(lp9860
I-1
aaNtp9861
(S'data'
p9862
(lp9863
S'char'
p9864
ag42
aNtp9865
(S'bufferSize'
p9866
(lp9867
S'uInt32'
p9868
aNtp9869
tp9870
tp9871
sS'DAQmxCreateCIPeriodChan'
p9872
((lp9873
S'int32'
p9874
ag34
a((S'taskHandle'
p9875
(lp9876
S'TaskHandle'
p9877
aNtp9878
(S'counter'
p9879
(lp9880
S'char'
p9881
a(lp9882
I-1
aaNtp9883
(S'nameToAssignToChannel'
p9884
(lp9885
S'char'
p9886
a(lp9887
I-1
aaNtp9888
(S'minVal'
p9889
(lp9890
S'float64'
p9891
aNtp9892
(S'maxVal'
p9893
(lp9894
S'float64'
p9895
aNtp9896
(S'units'
p9897
(lp9898
S'int32'
p9899
aNtp9900
(S'edge'
p9901
(lp9902
S'int32'
p9903
aNtp9904
(S'measMethod'
p9905
(lp9906
S'int32'
p9907
aNtp9908
(S'measTime'
p9909
(lp9910
S'float64'
p9911
aNtp9912
(S'divisor'
p9913
(lp9914
S'uInt32'
p9915
aNtp9916
(S'customScaleName'
p9917
(lp9918
S'char'
p9919
a(lp9920
I-1
aaNtp9921
tp9922
tp9923
sS'DAQmxResetSampClkDigFltrTimebaseSrc'
p9924
((lp9925
S'int32'
p9926
ag34
a((S'taskHandle'
p9927
(lp9928
S'TaskHandle'
p9929
aNtp9930
tp9931
tp9932
sS'DAQmxResetAIConvRate'
p9933
((lp9934
S'int32'
p9935
ag34
a((S'taskHandle'
p9936
(lp9937
S'TaskHandle'
p9938
aNtp9939
tp9940
tp9941
sS'DAQmxSetSampQuantSampMode'
p9942
((lp9943
S'int32'
p9944
ag34
a((S'taskHandle'
p9945
(lp9946
S'TaskHandle'
p9947
aNtp9948
(S'data'
p9949
(lp9950
S'int32'
p9951
aNtp9952
tp9953
tp9954
sS'DAQmxResetCIPeriodMeasMeth'
p9955
((lp9956
S'int32'
p9957
ag34
a((S'taskHandle'
p9958
(lp9959
S'TaskHandle'
p9960
aNtp9961
(S'channel'
p9962
(lp9963
S'char'
p9964
a(lp9965
I-1
aaNtp9966
tp9967
tp9968
sS'DAQmxSetAILowpassSwitchCapClkSrc'
p9969
((lp9970
S'int32'
p9971
ag34
a((S'taskHandle'
p9972
(lp9973
S'TaskHandle'
p9974
aNtp9975
(S'channel'
p9976
(lp9977
S'char'
p9978
a(lp9979
I-1
aaNtp9980
(S'data'
p9981
(lp9982
S'int32'
p9983
aNtp9984
tp9985
tp9986
sS'DAQmxResetCOPulseHighTicks'
p9987
((lp9988
S'int32'
p9989
ag34
a((S'taskHandle'
p9990
(lp9991
S'TaskHandle'
p9992
aNtp9993
(S'channel'
p9994
(lp9995
S'char'
p9996
a(lp9997
I-1
aaNtp9998
tp9999
tp10000
sS'DAQmxGetChanType'
p10001
((lp10002
S'int32'
p10003
ag34
a((S'taskHandle'
p10004
(lp10005
S'TaskHandle'
p10006
aNtp10007
(S'channel'
p10008
(lp10009
S'char'
p10010
a(lp10011
I-1
aaNtp10012
(S'data'
p10013
(lp10014
S'int32'
p10015
ag42
aNtp10016
tp10017
tp10018
sS'DAQmxGetAODACRngLow'
p10019
((lp10020
S'int32'
p10021
ag34
a((S'taskHandle'
p10022
(lp10023
S'TaskHandle'
p10024
aNtp10025
(S'channel'
p10026
(lp10027
S'char'
p10028
a(lp10029
I-1
aaNtp10030
(S'data'
p10031
(lp10032
S'float64'
p10033
ag42
aNtp10034
tp10035
tp10036
sS'DAQmxResetRealTimeReportMissedSamp'
p10037
((lp10038
S'int32'
p10039
ag34
a((S'taskHandle'
p10040
(lp10041
S'TaskHandle'
p10042
aNtp10043
tp10044
tp10045
sS'DAQmxResetCICountEdgesInitialCnt'
p10046
((lp10047
S'int32'
p10048
ag34
a((S'taskHandle'
p10049
(lp10050
S'TaskHandle'
p10051
aNtp10052
(S'channel'
p10053
(lp10054
S'char'
p10055
a(lp10056
I-1
aaNtp10057
tp10058
tp10059
sS'DAQmxGetCITwoEdgeSepFirstDigSyncEnable'
p10060
((lp10061
S'int32'
p10062
ag34
a((S'taskHandle'
p10063
(lp10064
S'TaskHandle'
p10065
aNtp10066
(S'channel'
p10067
(lp10068
S'char'
p10069
a(lp10070
I-1
aaNtp10071
(S'data'
p10072
(lp10073
S'bool32'
p10074
ag42
aNtp10075
tp10076
tp10077
sS'DAQmxCreateCOPulseChanTicks'
p10078
((lp10079
S'int32'
p10080
ag34
a((S'taskHandle'
p10081
(lp10082
S'TaskHandle'
p10083
aNtp10084
(S'counter'
p10085
(lp10086
S'char'
p10087
a(lp10088
I-1
aaNtp10089
(S'nameToAssignToChannel'
p10090
(lp10091
S'char'
p10092
a(lp10093
I-1
aaNtp10094
(S'sourceTerminal'
p10095
(lp10096
S'char'
p10097
a(lp10098
I-1
aaNtp10099
(S'idleState'
p10100
(lp10101
S'int32'
p10102
aNtp10103
(S'initialDelay'
p10104
(lp10105
S'int32'
p10106
aNtp10107
(S'lowTicks'
p10108
(lp10109
S'int32'
p10110
aNtp10111
(S'highTicks'
p10112
(lp10113
S'int32'
p10114
aNtp10115
tp10116
tp10117
sS'DAQmxResetCIPeriodStartingEdge'
p10118
((lp10119
S'int32'
p10120
ag34
a((S'taskHandle'
p10121
(lp10122
S'TaskHandle'
p10123
aNtp10124
(S'channel'
p10125
(lp10126
S'char'
p10127
a(lp10128
I-1
aaNtp10129
tp10130
tp10131
sS'DAQmxResetCOCtrTimebaseDigSyncEnable'
p10132
((lp10133
S'int32'
p10134
ag34
a((S'taskHandle'
p10135
(lp10136
S'TaskHandle'
p10137
aNtp10138
(S'channel'
p10139
(lp10140
S'char'
p10141
a(lp10142
I-1
aaNtp10143
tp10144
tp10145
sS'DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate'
p10146
((lp10147
S'int32'
p10148
ag34
a((S'taskHandle'
p10149
(lp10150
S'TaskHandle'
p10151
aNtp10152
(S'data'
p10153
(lp10154
S'float64'
p10155
ag42
aNtp10156
tp10157
tp10158
sS'DAQmxGetExportedAIConvClkOutputTerm'
p10159
((lp10160
S'int32'
p10161
ag34
a((S'taskHandle'
p10162
(lp10163
S'TaskHandle'
p10164
aNtp10165
(S'data'
p10166
(lp10167
S'char'
p10168
ag42
aNtp10169
(S'bufferSize'
p10170
(lp10171
S'uInt32'
p10172
aNtp10173
tp10174
tp10175
sS'DAQmxResetCISemiPeriodDigSyncEnable'
p10176
((lp10177
S'int32'
p10178
ag34
a((S'taskHandle'
p10179
(lp10180
S'TaskHandle'
p10181
aNtp10182
(S'channel'
p10183
(lp10184
S'char'
p10185
a(lp10186
I-1
aaNtp10187
tp10188
tp10189
sS'DAQmxResetRefTrigPretrigSamples'
p10190
((lp10191
S'int32'
p10192
ag34
a((S'taskHandle'
p10193
(lp10194
S'TaskHandle'
p10195
aNtp10196
tp10197
tp10198
sS'DAQmxSetAICurrentShuntResistance'
p10199
((lp10200
S'int32'
p10201
ag34
a((S'taskHandle'
p10202
(lp10203
S'TaskHandle'
p10204
aNtp10205
(S'channel'
p10206
(lp10207
S'char'
p10208
a(lp10209
I-1
aaNtp10210
(S'data'
p10211
(lp10212
S'float64'
p10213
aNtp10214
tp10215
tp10216
sS'DAQmxResetAIRngHigh'
p10217
((lp10218
S'int32'
p10219
ag34
a((S'taskHandle'
p10220
(lp10221
S'TaskHandle'
p10222
aNtp10223
(S'channel'
p10224
(lp10225
S'char'
p10226
a(lp10227
I-1
aaNtp10228
tp10229
tp10230
sS'DAQmxResetAILowpassSwitchCapExtClkDiv'
p10231
((lp10232
S'int32'
p10233
ag34
a((S'taskHandle'
p10234
(lp10235
S'TaskHandle'
p10236
aNtp10237
(S'channel'
p10238
(lp10239
S'char'
p10240
a(lp10241
I-1
aaNtp10242
tp10243
tp10244
sS'DAQmxSetCICountEdgesDigFltrEnable'
p10245
((lp10246
S'int32'
p10247
ag34
a((S'taskHandle'
p10248
(lp10249
S'TaskHandle'
p10250
aNtp10251
(S'channel'
p10252
(lp10253
S'char'
p10254
a(lp10255
I-1
aaNtp10256
(S'data'
p10257
(lp10258
S'bool32'
p10259
aNtp10260
tp10261
tp10262
sS'DAQmxResetExportedChangeDetectEventPulsePolarity'
p10263
((lp10264
S'int32'
p10265
ag34
a((S'taskHandle'
p10266
(lp10267
S'TaskHandle'
p10268
aNtp10269
tp10270
tp10271
sS'DAQmxGetExportedRefTrigOutputTerm'
p10272
((lp10273
S'int32'
p10274
ag34
a((S'taskHandle'
p10275
(lp10276
S'TaskHandle'
p10277
aNtp10278
(S'data'
p10279
(lp10280
S'char'
p10281
ag42
aNtp10282
(S'bufferSize'
p10283
(lp10284
S'uInt32'
p10285
aNtp10286
tp10287
tp10288
sS'DAQmxSetExportedCtrOutEventOutputBehavior'
p10289
((lp10290
S'int32'
p10291
ag34
a((S'taskHandle'
p10292
(lp10293
S'TaskHandle'
p10294
aNtp10295
(S'data'
p10296
(lp10297
S'int32'
p10298
aNtp10299
tp10300
tp10301
sS'DAQmxGetDevAIPhysicalChans'
p10302
((lp10303
S'int32'
p10304
ag34
a((S'device'
p10305
(lp10306
S'char'
p10307
a(lp10308
I-1
aaNtp10309
(S'data'
p10310
(lp10311
S'char'
p10312
ag42
aNtp10313
(S'bufferSize'
p10314
(lp10315
S'uInt32'
p10316
aNtp10317
tp10318
tp10319
sS'DAQmxGetAIStrainGageGageFactor'
p10320
((lp10321
S'int32'
p10322
ag34
a((S'taskHandle'
p10323
(lp10324
S'TaskHandle'
p10325
aNtp10326
(S'channel'
p10327
(lp10328
S'char'
p10329
a(lp10330
I-1
aaNtp10331
(S'data'
p10332
(lp10333
S'float64'
p10334
ag42
aNtp10335
tp10336
tp10337
sS'DAQmxGetPersistedTaskAuthor'
p10338
((lp10339
S'int32'
p10340
ag34
a((S'taskName'
p10341
(lp10342
S'char'
p10343
a(lp10344
I-1
aaNtp10345
(S'data'
p10346
(lp10347
S'char'
p10348
ag42
aNtp10349
(S'bufferSize'
p10350
(lp10351
S'uInt32'
p10352
aNtp10353
tp10354
tp10355
sS'DAQmxResetAIRawDataCompressionType'
p10356
((lp10357
S'int32'
p10358
ag34
a((S'taskHandle'
p10359
(lp10360
S'TaskHandle'
p10361
aNtp10362
(S'channel'
p10363
(lp10364
S'char'
p10365
a(lp10366
I-1
aaNtp10367
tp10368
tp10369
sS'DAQmxResetReadReadAllAvailSamp'
p10370
((lp10371
S'int32'
p10372
ag34
a((S'taskHandle'
p10373
(lp10374
S'TaskHandle'
p10375
aNtp10376
tp10377
tp10378
sS'DAQmxSetAIConvTimebaseSrc'
p10379
((lp10380
S'int32'
p10381
ag34
a((S'taskHandle'
p10382
(lp10383
S'TaskHandle'
p10384
aNtp10385
(S'data'
p10386
(lp10387
S'int32'
p10388
aNtp10389
tp10390
tp10391
sS'DAQmxCreateTEDSAIThrmcplChan'
p10392
((lp10393
S'int32'
p10394
ag34
a((S'taskHandle'
p10395
(lp10396
S'TaskHandle'
p10397
aNtp10398
(S'physicalChannel'
p10399
(lp10400
S'char'
p10401
a(lp10402
I-1
aaNtp10403
(S'nameToAssignToChannel'
p10404
(lp10405
S'char'
p10406
a(lp10407
I-1
aaNtp10408
(S'minVal'
p10409
(lp10410
S'float64'
p10411
aNtp10412
(S'maxVal'
p10413
(lp10414
S'float64'
p10415
aNtp10416
(S'units'
p10417
(lp10418
S'int32'
p10419
aNtp10420
(S'cjcSource'
p10421
(lp10422
S'int32'
p10423
aNtp10424
(S'cjcVal'
p10425
(lp10426
S'float64'
p10427
aNtp10428
(S'cjcChannel'
p10429
(lp10430
S'char'
p10431
a(lp10432
I-1
aaNtp10433
tp10434
tp10435
sS'DAQmxGetAIBridgeBalanceCoarsePot'
p10436
((lp10437
S'int32'
p10438
ag34
a((S'taskHandle'
p10439
(lp10440
S'TaskHandle'
p10441
aNtp10442
(S'channel'
p10443
(lp10444
S'char'
p10445
a(lp10446
I-1
aaNtp10447
(S'data'
p10448
(lp10449
S'int32'
p10450
ag42
aNtp10451
tp10452
tp10453
sS'DAQmxSetScaleTableScaledVals'
p10454
((lp10455
S'int32'
p10456
ag34
a((S'scaleName'
p10457
(lp10458
S'char'
p10459
a(lp10460
I-1
aaNtp10461
(S'data'
p10462
(lp10463
S'float64'
p10464
ag42
aNtp10465
(S'arraySizeInSamples'
p10466
(lp10467
S'uInt32'
p10468
aNtp10469
tp10470
tp10471
sS'DAQmxGetDigEdgeRefTrigSrc'
p10472
((lp10473
S'int32'
p10474
ag34
a((S'taskHandle'
p10475
(lp10476
S'TaskHandle'
p10477
aNtp10478
(S'data'
p10479
(lp10480
S'char'
p10481
ag42
aNtp10482
(S'bufferSize'
p10483
(lp10484
S'uInt32'
p10485
aNtp10486
tp10487
tp10488
sS'DAQmxGetCOCtrTimebaseActiveEdge'
p10489
((lp10490
S'int32'
p10491
ag34
a((S'taskHandle'
p10492
(lp10493
S'TaskHandle'
p10494
aNtp10495
(S'channel'
p10496
(lp10497
S'char'
p10498
a(lp10499
I-1
aaNtp10500
(S'data'
p10501
(lp10502
S'int32'
p10503
ag42
aNtp10504
tp10505
tp10506
sS'DAQmxGetCIEncoderBInputDigFltrMinPulseWidth'
p10507
((lp10508
S'int32'
p10509
ag34
a((S'taskHandle'
p10510
(lp10511
S'TaskHandle'
p10512
aNtp10513
(S'channel'
p10514
(lp10515
S'char'
p10516
a(lp10517
I-1
aaNtp10518
(S'data'
p10519
(lp10520
S'float64'
p10521
ag42
aNtp10522
tp10523
tp10524
sS'DAQmxGetExportedSampClkOutputTerm'
p10525
((lp10526
S'int32'
p10527
ag34
a((S'taskHandle'
p10528
(lp10529
S'TaskHandle'
p10530
aNtp10531
(S'data'
p10532
(lp10533
S'char'
p10534
ag42
aNtp10535
(S'bufferSize'
p10536
(lp10537
S'uInt32'
p10538
aNtp10539
tp10540
tp10541
sS'DAQmxSetAOReglitchEnable'
p10542
((lp10543
S'int32'
p10544
ag34
a((S'taskHandle'
p10545
(lp10546
S'TaskHandle'
p10547
aNtp10548
(S'channel'
p10549
(lp10550
S'char'
p10551
a(lp10552
I-1
aaNtp10553
(S'data'
p10554
(lp10555
S'bool32'
p10556
aNtp10557
tp10558
tp10559
sS'DAQmxGetCIPulseWidthTerm'
p10560
((lp10561
S'int32'
p10562
ag34
a((S'taskHandle'
p10563
(lp10564
S'TaskHandle'
p10565
aNtp10566
(S'channel'
p10567
(lp10568
S'char'
p10569
a(lp10570
I-1
aaNtp10571
(S'data'
p10572
(lp10573
S'char'
p10574
ag42
aNtp10575
(S'bufferSize'
p10576
(lp10577
S'uInt32'
p10578
aNtp10579
tp10580
tp10581
sS'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate'
p10582
((lp10583
S'int32'
p10584
ag34
a((S'taskHandle'
p10585
(lp10586
S'TaskHandle'
p10587
aNtp10588
(S'channel'
p10589
(lp10590
S'char'
p10591
a(lp10592
I-1
aaNtp10593
(S'data'
p10594
(lp10595
S'float64'
p10596
aNtp10597
tp10598
tp10599
sS'DAQmxGetWriteDigitalLinesBytesPerChan'
p10600
((lp10601
S'int32'
p10602
ag34
a((S'taskHandle'
p10603
(lp10604
S'TaskHandle'
p10605
aNtp10606
(S'data'
p10607
(lp10608
S'uInt32'
p10609
ag42
aNtp10610
tp10611
tp10612
sS'DAQmxSetExportedHshkEventPulsePolarity'
p10613
((lp10614
S'int32'
p10615
ag34
a((S'taskHandle'
p10616
(lp10617
S'TaskHandle'
p10618
aNtp10619
(S'data'
p10620
(lp10621
S'int32'
p10622
aNtp10623
tp10624
tp10625
sS'DAQmxSetAIFreqHyst'
p10626
((lp10627
S'int32'
p10628
ag34
a((S'taskHandle'
p10629
(lp10630
S'TaskHandle'
p10631
aNtp10632
(S'channel'
p10633
(lp10634
S'char'
p10635
a(lp10636
I-1
aaNtp10637
(S'data'
p10638
(lp10639
S'float64'
p10640
aNtp10641
tp10642
tp10643
sS'DAQmxGetSwitchScanBreakMode'
p10644
((lp10645
S'int32'
p10646
ag34
a((S'taskHandle'
p10647
(lp10648
S'TaskHandle'
p10649
aNtp10650
(S'data'
p10651
(lp10652
S'int32'
p10653
ag42
aNtp10654
tp10655
tp10656
sS'DAQmxSetReadReadAllAvailSamp'
p10657
((lp10658
S'int32'
p10659
ag34
a((S'taskHandle'
p10660
(lp10661
S'TaskHandle'
p10662
aNtp10663
(S'data'
p10664
(lp10665
S'bool32'
p10666
aNtp10667
tp10668
tp10669
sS'DAQmxResetCISemiPeriodDigFltrMinPulseWidth'
p10670
((lp10671
S'int32'
p10672
ag34
a((S'taskHandle'
p10673
(lp10674
S'TaskHandle'
p10675
aNtp10676
(S'channel'
p10677
(lp10678
S'char'
p10679
a(lp10680
I-1
aaNtp10681
tp10682
tp10683
sS'DAQmxGetAIRVDTSensitivityUnits'
p10684
((lp10685
S'int32'
p10686
ag34
a((S'taskHandle'
p10687
(lp10688
S'TaskHandle'
p10689
aNtp10690
(S'channel'
p10691
(lp10692
S'char'
p10693
a(lp10694
I-1
aaNtp10695
(S'data'
p10696
(lp10697
S'int32'
p10698
ag42
aNtp10699
tp10700
tp10701
sS'DAQmxSendSoftwareTrigger'
p10702
((lp10703
S'int32'
p10704
ag34
a((S'taskHandle'
p10705
(lp10706
S'TaskHandle'
p10707
aNtp10708
(S'triggerID'
p10709
(lp10710
S'int32'
p10711
aNtp10712
tp10713
tp10714
sS'DAQmxSetAIMin'
p10715
((lp10716
S'int32'
p10717
ag34
a((S'taskHandle'
p10718
(lp10719
S'TaskHandle'
p10720
aNtp10721
(S'channel'
p10722
(lp10723
S'char'
p10724
a(lp10725
I-1
aaNtp10726
(S'data'
p10727
(lp10728
S'float64'
p10729
aNtp10730
tp10731
tp10732
sS'DAQmxGetSampQuantSampMode'
p10733
((lp10734
S'int32'
p10735
ag34
a((S'taskHandle'
p10736
(lp10737
S'TaskHandle'
p10738
aNtp10739
(S'data'
p10740
(lp10741
S'int32'
p10742
ag42
aNtp10743
tp10744
tp10745
sS'DAQmxGetCICountEdgesDigFltrMinPulseWidth'
p10746
((lp10747
S'int32'
p10748
ag34
a((S'taskHandle'
p10749
(lp10750
S'TaskHandle'
p10751
aNtp10752
(S'channel'
p10753
(lp10754
S'char'
p10755
a(lp10756
I-1
aaNtp10757
(S'data'
p10758
(lp10759
S'float64'
p10760
ag42
aNtp10761
tp10762
tp10763
sS'DAQmxGetAOVoltageUnits'
p10764
((lp10765
S'int32'
p10766
ag34
a((S'taskHandle'
p10767
(lp10768
S'TaskHandle'
p10769
aNtp10770
(S'channel'
p10771
(lp10772
S'char'
p10773
a(lp10774
I-1
aaNtp10775
(S'data'
p10776
(lp10777
S'int32'
p10778
ag42
aNtp10779
tp10780
tp10781
sS'DAQmxResetSampQuantSampPerChan'
p10782
((lp10783
S'int32'
p10784
ag34
a((S'taskHandle'
p10785
(lp10786
S'TaskHandle'
p10787
aNtp10788
tp10789
tp10790
sS'DAQmxResetCITimestampInitialSeconds'
p10791
((lp10792
S'int32'
p10793
ag34
a((S'taskHandle'
p10794
(lp10795
S'TaskHandle'
p10796
aNtp10797
(S'channel'
p10798
(lp10799
S'char'
p10800
a(lp10801
I-1
aaNtp10802
tp10803
tp10804
sS'DAQmxGetAIBridgeShuntCalEnable'
p10805
((lp10806
S'int32'
p10807
ag34
a((S'taskHandle'
p10808
(lp10809
S'TaskHandle'
p10810
aNtp10811
(S'channel'
p10812
(lp10813
S'char'
p10814
a(lp10815
I-1
aaNtp10816
(S'data'
p10817
(lp10818
S'bool32'
p10819
ag42
aNtp10820
tp10821
tp10822
sS'DAQmxResetAIStrainGageGageFactor'
p10823
((lp10824
S'int32'
p10825
ag34
a((S'taskHandle'
p10826
(lp10827
S'TaskHandle'
p10828
aNtp10829
(S'channel'
p10830
(lp10831
S'char'
p10832
a(lp10833
I-1
aaNtp10834
tp10835
tp10836
sS'DAQmxSetDigEdgeRefTrigSrc'
p10837
((lp10838
S'int32'
p10839
ag34
a((S'taskHandle'
p10840
(lp10841
S'TaskHandle'
p10842
aNtp10843
(S'data'
p10844
(lp10845
S'char'
p10846
ag42
aNtp10847
tp10848
tp10849
sS'DAQmxResetAOReglitchEnable'
p10850
((lp10851
S'int32'
p10852
ag34
a((S'taskHandle'
p10853
(lp10854
S'TaskHandle'
p10855
aNtp10856
(S'channel'
p10857
(lp10858
S'char'
p10859
a(lp10860
I-1
aaNtp10861
tp10862
tp10863
sS'DAQmxSetAIVoltageUnits'
p10864
((lp10865
S'int32'
p10866
ag34
a((S'taskHandle'
p10867
(lp10868
S'TaskHandle'
p10869
aNtp10870
(S'channel'
p10871
(lp10872
S'char'
p10873
a(lp10874
I-1
aaNtp10875
(S'data'
p10876
(lp10877
S'int32'
p10878
aNtp10879
tp10880
tp10881
sS'DAQmxGetAIThrmcplCJCChan'
p10882
((lp10883
S'int32'
p10884
ag34
a((S'taskHandle'
p10885
(lp10886
S'TaskHandle'
p10887
aNtp10888
(S'channel'
p10889
(lp10890
S'char'
p10891
a(lp10892
I-1
aaNtp10893
(S'data'
p10894
(lp10895
S'char'
p10896
ag42
aNtp10897
(S'bufferSize'
p10898
(lp10899
S'uInt32'
p10900
aNtp10901
tp10902
tp10903
sS'DAQmxResetCIEncoderBInputDigSyncEnable'
p10904
((lp10905
S'int32'
p10906
ag34
a((S'taskHandle'
p10907
(lp10908
S'TaskHandle'
p10909
aNtp10910
(S'channel'
p10911
(lp10912
S'char'
p10913
a(lp10914
I-1
aaNtp10915
tp10916
tp10917
sS'DAQmxGetSwitchChanMaxACCarryCurrent'
p10918
((lp10919
S'int32'
p10920
ag34
a((S'switchChannelName'
p10921
(lp10922
S'char'
p10923
a(lp10924
I-1
aaNtp10925
(S'data'
p10926
(lp10927
S'float64'
p10928
ag42
aNtp10929
tp10930
tp10931
sS'DAQmxResetAODACRngHigh'
p10932
((lp10933
S'int32'
p10934
ag34
a((S'taskHandle'
p10935
(lp10936
S'TaskHandle'
p10937
aNtp10938
(S'channel'
p10939
(lp10940
S'char'
p10941
a(lp10942
I-1
aaNtp10943
tp10944
tp10945
sS'DAQmxSetExportedAIHoldCmpltEventPulsePolarity'
p10946
((lp10947
S'int32'
p10948
ag34
a((S'taskHandle'
p10949
(lp10950
S'TaskHandle'
p10951
aNtp10952
(S'data'
p10953
(lp10954
S'int32'
p10955
aNtp10956
tp10957
tp10958
sS'DAQmxGetDigPatternStartTrigWhen'
p10959
((lp10960
S'int32'
p10961
ag34
a((S'taskHandle'
p10962
(lp10963
S'TaskHandle'
p10964
aNtp10965
(S'data'
p10966
(lp10967
S'int32'
p10968
ag42
aNtp10969
tp10970
tp10971
sS'DAQmxGetDevPCIDevNum'
p10972
((lp10973
S'int32'
p10974
ag34
a((S'device'
p10975
(lp10976
S'char'
p10977
a(lp10978
I-1
aaNtp10979
(S'data'
p10980
(lp10981
S'uInt32'
p10982
ag42
aNtp10983
tp10984
tp10985
sS'DAQmxGetMasterTimebaseRate'
p10986
((lp10987
S'int32'
p10988
ag34
a((S'taskHandle'
p10989
(lp10990
S'TaskHandle'
p10991
aNtp10992
(S'data'
p10993
(lp10994
S'float64'
p10995
ag42
aNtp10996
tp10997
tp10998
sS'DAQmxResetCICtrTimebaseMasterTimebaseDiv'
p10999
((lp11000
S'int32'
p11001
ag34
a((S'taskHandle'
p11002
(lp11003
S'TaskHandle'
p11004
aNtp11005
(S'channel'
p11006
(lp11007
S'char'
p11008
a(lp11009
I-1
aaNtp11010
tp11011
tp11012
sS'DAQmxGetCICountEdgesInitialCnt'
p11013
((lp11014
S'int32'
p11015
ag34
a((S'taskHandle'
p11016
(lp11017
S'TaskHandle'
p11018
aNtp11019
(S'channel'
p11020
(lp11021
S'char'
p11022
a(lp11023
I-1
aaNtp11024
(S'data'
p11025
(lp11026
S'uInt32'
p11027
ag42
aNtp11028
tp11029
tp11030
sS'DAQmxResetCICountEdgesDigFltrEnable'
p11031
((lp11032
S'int32'
p11033
ag34
a((S'taskHandle'
p11034
(lp11035
S'TaskHandle'
p11036
aNtp11037
(S'channel'
p11038
(lp11039
S'char'
p11040
a(lp11041
I-1
aaNtp11042
tp11043
tp11044
sS'DAQmxResetReadChannelsToRead'
p11045
((lp11046
S'int32'
p11047
ag34
a((S'taskHandle'
p11048
(lp11049
S'TaskHandle'
p11050
aNtp11051
tp11052
tp11053
sS'DAQmxResetAOMemMapEnable'
p11054
((lp11055
S'int32'
p11056
ag34
a((S'taskHandle'
p11057
(lp11058
S'TaskHandle'
p11059
aNtp11060
(S'channel'
p11061
(lp11062
S'char'
p11063
a(lp11064
I-1
aaNtp11065
tp11066
tp11067
sS'DAQmxSetCITwoEdgeSepSecondTerm'
p11068
((lp11069
S'int32'
p11070
ag34
a((S'taskHandle'
p11071
(lp11072
S'TaskHandle'
p11073
aNtp11074
(S'channel'
p11075
(lp11076
S'char'
p11077
a(lp11078
I-1
aaNtp11079
(S'data'
p11080
(lp11081
S'char'
p11082
ag42
aNtp11083
tp11084
tp11085
sS'DAQmxGetDigPatternRefTrigPattern'
p11086
((lp11087
S'int32'
p11088
ag34
a((S'taskHandle'
p11089
(lp11090
S'TaskHandle'
p11091
aNtp11092
(S'data'
p11093
(lp11094
S'char'
p11095
ag42
aNtp11096
(S'bufferSize'
p11097
(lp11098
S'uInt32'
p11099
aNtp11100
tp11101
tp11102
sS'DAQmxResetAIACExcitSyncEnable'
p11103
((lp11104
S'int32'
p11105
ag34
a((S'taskHandle'
p11106
(lp11107
S'TaskHandle'
p11108
aNtp11109
(S'channel'
p11110
(lp11111
S'char'
p11112
a(lp11113
I-1
aaNtp11114
tp11115
tp11116
sS'DAQmxSetAOMax'
p11117
((lp11118
S'int32'
p11119
ag34
a((S'taskHandle'
p11120
(lp11121
S'TaskHandle'
p11122
aNtp11123
(S'channel'
p11124
(lp11125
S'char'
p11126
a(lp11127
I-1
aaNtp11128
(S'data'
p11129
(lp11130
S'float64'
p11131
aNtp11132
tp11133
tp11134
sS'DAQmxResetCIFreqUnits'
p11135
((lp11136
S'int32'
p11137
ag34
a((S'taskHandle'
p11138
(lp11139
S'TaskHandle'
p11140
aNtp11141
(S'channel'
p11142
(lp11143
S'char'
p11144
a(lp11145
I-1
aaNtp11146
tp11147
tp11148
sS'DAQmxSetAILVDTSensitivity'
p11149
((lp11150
S'int32'
p11151
ag34
a((S'taskHandle'
p11152
(lp11153
S'TaskHandle'
p11154
aNtp11155
(S'channel'
p11156
(lp11157
S'char'
p11158
a(lp11159
I-1
aaNtp11160
(S'data'
p11161
(lp11162
S'float64'
p11163
aNtp11164
tp11165
tp11166
sS'DAQmxResetAIAtten'
p11167
((lp11168
S'int32'
p11169
ag34
a((S'taskHandle'
p11170
(lp11171
S'TaskHandle'
p11172
aNtp11173
(S'channel'
p11174
(lp11175
S'char'
p11176
a(lp11177
I-1
aaNtp11178
tp11179
tp11180
sS'DAQmxSetCIFreqDigSyncEnable'
p11181
((lp11182
S'int32'
p11183
ag34
a((S'taskHandle'
p11184
(lp11185
S'TaskHandle'
p11186
aNtp11187
(S'channel'
p11188
(lp11189
S'char'
p11190
a(lp11191
I-1
aaNtp11192
(S'data'
p11193
(lp11194
S'bool32'
p11195
aNtp11196
tp11197
tp11198
sS'DAQmxResetCICountEdgesDigSyncEnable'
p11199
((lp11200
S'int32'
p11201
ag34
a((S'taskHandle'
p11202
(lp11203
S'TaskHandle'
p11204
aNtp11205
(S'channel'
p11206
(lp11207
S'char'
p11208
a(lp11209
I-1
aaNtp11210
tp11211
tp11212
sS'DAQmxGetReadAutoStart'
p11213
((lp11214
S'int32'
p11215
ag34
a((S'taskHandle'
p11216
(lp11217
S'TaskHandle'
p11218
aNtp11219
(S'data'
p11220
(lp11221
S'bool32'
p11222
ag42
aNtp11223
tp11224
tp11225
sS'DAQmxGetChanDescr'
p11226
((lp11227
S'int32'
p11228
ag34
a((S'taskHandle'
p11229
(lp11230
S'TaskHandle'
p11231
aNtp11232
(S'channel'
p11233
(lp11234
S'char'
p11235
a(lp11236
I-1
aaNtp11237
(S'data'
p11238
(lp11239
S'char'
p11240
ag42
aNtp11241
(S'bufferSize'
p11242
(lp11243
S'uInt32'
p11244
aNtp11245
tp11246
tp11247
sS'DAQmxResetCOPulseTimeUnits'
p11248
((lp11249
S'int32'
p11250
ag34
a((S'taskHandle'
p11251
(lp11252
S'TaskHandle'
p11253
aNtp11254
(S'channel'
p11255
(lp11256
S'char'
p11257
a(lp11258
I-1
aaNtp11259
tp11260
tp11261
sS'DAQmxSetCIEncoderZInputDigSyncEnable'
p11262
((lp11263
S'int32'
p11264
ag34
a((S'taskHandle'
p11265
(lp11266
S'TaskHandle'
p11267
aNtp11268
(S'channel'
p11269
(lp11270
S'char'
p11271
a(lp11272
I-1
aaNtp11273
(S'data'
p11274
(lp11275
S'bool32'
p11276
aNtp11277
tp11278
tp11279
sS'DAQmxSetAnlgWinRefTrigTop'
p11280
((lp11281
S'int32'
p11282
ag34
a((S'taskHandle'
p11283
(lp11284
S'TaskHandle'
p11285
aNtp11286
(S'data'
p11287
(lp11288
S'float64'
p11289
aNtp11290
tp11291
tp11292
sS'DAQmxGetAIStrainGageCfg'
p11293
((lp11294
S'int32'
p11295
ag34
a((S'taskHandle'
p11296
(lp11297
S'TaskHandle'
p11298
aNtp11299
(S'channel'
p11300
(lp11301
S'char'
p11302
a(lp11303
I-1
aaNtp11304
(S'data'
p11305
(lp11306
S'int32'
p11307
ag42
aNtp11308
tp11309
tp11310
sS'DAQmxSetAIChanCalDesc'
p11311
((lp11312
S'int32'
p11313
ag34
a((S'taskHandle'
p11314
(lp11315
S'TaskHandle'
p11316
aNtp11317
(S'channel'
p11318
(lp11319
S'char'
p11320
a(lp11321
I-1
aaNtp11322
(S'data'
p11323
(lp11324
S'char'
p11325
ag42
aNtp11326
tp11327
tp11328
sS'DAQmxSetAOVoltageUnits'
p11329
((lp11330
S'int32'
p11331
ag34
a((S'taskHandle'
p11332
(lp11333
S'TaskHandle'
p11334
aNtp11335
(S'channel'
p11336
(lp11337
S'char'
p11338
a(lp11339
I-1
aaNtp11340
(S'data'
p11341
(lp11342
S'int32'
p11343
aNtp11344
tp11345
tp11346
sS'DAQmxResetExportedRdyForXferEventLvlActiveLvl'
p11347
((lp11348
S'int32'
p11349
ag34
a((S'taskHandle'
p11350
(lp11351
S'TaskHandle'
p11352
aNtp11353
tp11354
tp11355
sS'DAQmxResetCITwoEdgeSepSecondDigSyncEnable'
p11356
((lp11357
S'int32'
p11358
ag34
a((S'taskHandle'
p11359
(lp11360
S'TaskHandle'
p11361
aNtp11362
(S'channel'
p11363
(lp11364
S'char'
p11365
a(lp11366
I-1
aaNtp11367
tp11368
tp11369
sS'DAQmxGetScalePolyReverseCoeff'
p11370
((lp11371
S'int32'
p11372
ag34
a((S'scaleName'
p11373
(lp11374
S'char'
p11375
a(lp11376
I-1
aaNtp11377
(S'data'
p11378
(lp11379
S'float64'
p11380
ag42
aNtp11381
(S'arraySizeInSamples'
p11382
(lp11383
S'uInt32'
p11384
aNtp11385
tp11386
tp11387
sS'DAQmxGetPhysicalChanTEDSBitStream'
p11388
((lp11389
S'int32'
p11390
ag34
a((S'physicalChannel'
p11391
(lp11392
S'char'
p11393
a(lp11394
I-1
aaNtp11395
(S'data'
p11396
(lp11397
S'uInt8'
p11398
ag42
aNtp11399
(S'arraySizeInSamples'
p11400
(lp11401
S'uInt32'
p11402
aNtp11403
tp11404
tp11405
sS'DAQmxSetAILowpassSwitchCapExtClkFreq'
p11406
((lp11407
S'int32'
p11408
ag34
a((S'taskHandle'
p11409
(lp11410
S'TaskHandle'
p11411
aNtp11412
(S'channel'
p11413
(lp11414
S'char'
p11415
a(lp11416
I-1
aaNtp11417
(S'data'
p11418
(lp11419
S'float64'
p11420
aNtp11421
tp11422
tp11423
sS'DAQmxGetChangeDetectDIRisingEdgePhysicalChans'
p11424
((lp11425
S'int32'
p11426
ag34
a((S'taskHandle'
p11427
(lp11428
S'TaskHandle'
p11429
aNtp11430
(S'data'
p11431
(lp11432
S'char'
p11433
ag42
aNtp11434
(S'bufferSize'
p11435
(lp11436
S'uInt32'
p11437
aNtp11438
tp11439
tp11440
sS'DAQmxResetAIStrainGageCfg'
p11441
((lp11442
S'int32'
p11443
ag34
a((S'taskHandle'
p11444
(lp11445
S'TaskHandle'
p11446
aNtp11447
(S'channel'
p11448
(lp11449
S'char'
p11450
a(lp11451
I-1
aaNtp11452
tp11453
tp11454
sS'DAQmxSetCIEncoderAInputDigFltrMinPulseWidth'
p11455
((lp11456
S'int32'
p11457
ag34
a((S'taskHandle'
p11458
(lp11459
S'TaskHandle'
p11460
aNtp11461
(S'channel'
p11462
(lp11463
S'char'
p11464
a(lp11465
I-1
aaNtp11466
(S'data'
p11467
(lp11468
S'float64'
p11469
aNtp11470
tp11471
tp11472
sS'DAQmxResetReadAttribute'
p11473
((lp11474
S'int32'
p11475
ag34
a((S'taskHandle'
p11476
(lp11477
S'TaskHandle'
p11478
aNtp11479
(S'attribute'
p11480
(lp11481
S'int32'
p11482
aNtp11483
tp11484
tp11485
sS'DAQmxSetAILowpassSwitchCapOutClkDiv'
p11486
((lp11487
S'int32'
p11488
ag34
a((S'taskHandle'
p11489
(lp11490
S'TaskHandle'
p11491
aNtp11492
(S'channel'
p11493
(lp11494
S'char'
p11495
a(lp11496
I-1
aaNtp11497
(S'data'
p11498
(lp11499
S'uInt32'
p11500
aNtp11501
tp11502
tp11503
sS'DAQmxGetDONumLines'
p11504
((lp11505
S'int32'
p11506
ag34
a((S'taskHandle'
p11507
(lp11508
S'TaskHandle'
p11509
aNtp11510
(S'channel'
p11511
(lp11512
S'char'
p11513
a(lp11514
I-1
aaNtp11515
(S'data'
p11516
(lp11517
S'uInt32'
p11518
ag42
aNtp11519
tp11520
tp11521
sS'DAQmxSetAILossyLSBRemovalCompressedSampSize'
p11522
((lp11523
S'int32'
p11524
ag34
a((S'taskHandle'
p11525
(lp11526
S'TaskHandle'
p11527
aNtp11528
(S'channel'
p11529
(lp11530
S'char'
p11531
a(lp11532
I-1
aaNtp11533
(S'data'
p11534
(lp11535
S'uInt32'
p11536
aNtp11537
tp11538
tp11539
sS'DAQmxSetCITimestampInitialSeconds'
p11540
((lp11541
S'int32'
p11542
ag34
a((S'taskHandle'
p11543
(lp11544
S'TaskHandle'
p11545
aNtp11546
(S'channel'
p11547
(lp11548
S'char'
p11549
a(lp11550
I-1
aaNtp11551
(S'data'
p11552
(lp11553
S'uInt32'
p11554
aNtp11555
tp11556
tp11557
sS'DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate'
p11558
((lp11559
S'int32'
p11560
ag34
a((S'taskHandle'
p11561
(lp11562
S'TaskHandle'
p11563
aNtp11564
(S'data'
p11565
(lp11566
S'float64'
p11567
ag42
aNtp11568
tp11569
tp11570
sS'DAQmxGetCOAutoIncrCnt'
p11571
((lp11572
S'int32'
p11573
ag34
a((S'taskHandle'
p11574
(lp11575
S'TaskHandle'
p11576
aNtp11577
(S'channel'
p11578
(lp11579
S'char'
p11580
a(lp11581
I-1
aaNtp11582
(S'data'
p11583
(lp11584
S'uInt32'
p11585
ag42
aNtp11586
tp11587
tp11588
sS'DAQmxSetDODataXferReqCond'
p11589
((lp11590
S'int32'
p11591
ag34
a((S'taskHandle'
p11592
(lp11593
S'TaskHandle'
p11594
aNtp11595
(S'channel'
p11596
(lp11597
S'char'
p11598
a(lp11599
I-1
aaNtp11600
(S'data'
p11601
(lp11602
S'int32'
p11603
aNtp11604
tp11605
tp11606
sS'DAQmxCfgAnlgWindowRefTrig'
p11607
((lp11608
S'int32'
p11609
ag34
a((S'taskHandle'
p11610
(lp11611
S'TaskHandle'
p11612
aNtp11613
(S'triggerSource'
p11614
(lp11615
S'char'
p11616
a(lp11617
I-1
aaNtp11618
(S'triggerWhen'
p11619
(lp11620
S'int32'
p11621
aNtp11622
(S'windowTop'
p11623
(lp11624
S'float64'
p11625
aNtp11626
(S'windowBottom'
p11627
(lp11628
S'float64'
p11629
aNtp11630
(S'pretriggerSamples'
p11631
(lp11632
S'uInt32'
p11633
aNtp11634
tp11635
tp11636
sS'DAQmxSetDigPatternRefTrigPattern'
p11637
((lp11638
S'int32'
p11639
ag34
a((S'taskHandle'
p11640
(lp11641
S'TaskHandle'
p11642
aNtp11643
(S'data'
p11644
(lp11645
S'char'
p11646
ag42
aNtp11647
tp11648
tp11649
sS'DAQmxResetExportedSyncPulseEventOutputTerm'
p11650
((lp11651
S'int32'
p11652
ag34
a((S'taskHandle'
p11653
(lp11654
S'TaskHandle'
p11655
aNtp11656
tp11657
tp11658
sS'DAQmxGetCIPulseWidthDigFltrEnable'
p11659
((lp11660
S'int32'
p11661
ag34
a((S'taskHandle'
p11662
(lp11663
S'TaskHandle'
p11664
aNtp11665
(S'channel'
p11666
(lp11667
S'char'
p11668
a(lp11669
I-1
aaNtp11670
(S'data'
p11671
(lp11672
S'bool32'
p11673
ag42
aNtp11674
tp11675
tp11676
sS'DAQmxGetDevPXIChassisNum'
p11677
((lp11678
S'int32'
p11679
ag34
a((S'device'
p11680
(lp11681
S'char'
p11682
a(lp11683
I-1
aaNtp11684
(S'data'
p11685
(lp11686
S'uInt32'
p11687
ag42
aNtp11688
tp11689
tp11690
sS'DAQmxGetSwitchChanMaxACCarryPwr'
p11691
((lp11692
S'int32'
p11693
ag34
a((S'switchChannelName'
p11694
(lp11695
S'char'
p11696
a(lp11697
I-1
aaNtp11698
(S'data'
p11699
(lp11700
S'float64'
p11701
ag42
aNtp11702
tp11703
tp11704
sS'DAQmxGetAIBridgeInitialVoltage'
p11705
((lp11706
S'int32'
p11707
ag34
a((S'taskHandle'
p11708
(lp11709
S'TaskHandle'
p11710
aNtp11711
(S'channel'
p11712
(lp11713
S'char'
p11714
a(lp11715
I-1
aaNtp11716
(S'data'
p11717
(lp11718
S'float64'
p11719
ag42
aNtp11720
tp11721
tp11722
sS'DAQmxSetAnlgLvlPauseTrigCoupling'
p11723
((lp11724
S'int32'
p11725
ag34
a((S'taskHandle'
p11726
(lp11727
S'TaskHandle'
p11728
aNtp11729
(S'data'
p11730
(lp11731
S'int32'
p11732
aNtp11733
tp11734
tp11735
sS'DAQmxResetCICountEdgesCountDirDigSyncEnable'
p11736
((lp11737
S'int32'
p11738
ag34
a((S'taskHandle'
p11739
(lp11740
S'TaskHandle'
p11741
aNtp11742
(S'channel'
p11743
(lp11744
S'char'
p11745
a(lp11746
I-1
aaNtp11747
tp11748
tp11749
sS'DAQmxResetSampClkRate'
p11750
((lp11751
S'int32'
p11752
ag34
a((S'taskHandle'
p11753
(lp11754
S'TaskHandle'
p11755
aNtp11756
tp11757
tp11758
sS'DAQmxGetAIRngLow'
p11759
((lp11760
S'int32'
p11761
ag34
a((S'taskHandle'
p11762
(lp11763
S'TaskHandle'
p11764
aNtp11765
(S'channel'
p11766
(lp11767
S'char'
p11768
a(lp11769
I-1
aaNtp11770
(S'data'
p11771
(lp11772
S'float64'
p11773
ag42
aNtp11774
tp11775
tp11776
sS'DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth'
p11777
((lp11778
S'int32'
p11779
ag34
a((S'taskHandle'
p11780
(lp11781
S'TaskHandle'
p11782
aNtp11783
tp11784
tp11785
sS'DAQmxResetWatchdogDOExpirState'
p11786
((lp11787
S'int32'
p11788
ag34
a((S'taskHandle'
p11789
(lp11790
S'TaskHandle'
p11791
aNtp11792
(S'channel'
p11793
(lp11794
S'char'
p11795
a(lp11796
I-1
aaNtp11797
tp11798
tp11799
sS'DAQmxGetAODACRefConnToGnd'
p11800
((lp11801
S'int32'
p11802
ag34
a((S'taskHandle'
p11803
(lp11804
S'TaskHandle'
p11805
aNtp11806
(S'channel'
p11807
(lp11808
S'char'
p11809
a(lp11810
I-1
aaNtp11811
(S'data'
p11812
(lp11813
S'bool32'
p11814
ag42
aNtp11815
tp11816
tp11817
sS'DAQmxSetAIChanCalScaleType'
p11818
((lp11819
S'int32'
p11820
ag34
a((S'taskHandle'
p11821
(lp11822
S'TaskHandle'
p11823
aNtp11824
(S'channel'
p11825
(lp11826
S'char'
p11827
a(lp11828
I-1
aaNtp11829
(S'data'
p11830
(lp11831
S'int32'
p11832
aNtp11833
tp11834
tp11835
sS'DAQmxGetSelfCalSupported'
p11836
((lp11837
S'int32'
p11838
ag34
a((S'deviceName'
p11839
(lp11840
S'char'
p11841
a(lp11842
I-1
aaNtp11843
(S'data'
p11844
(lp11845
S'bool32'
p11846
ag42
aNtp11847
tp11848
tp11849
sS'DAQmxGetPersistedTaskAllowInteractiveDeletion'
p11850
((lp11851
S'int32'
p11852
ag34
a((S'taskName'
p11853
(lp11854
S'char'
p11855
a(lp11856
I-1
aaNtp11857
(S'data'
p11858
(lp11859
S'bool32'
p11860
ag42
aNtp11861
tp11862
tp11863
sS'DAQmxGetCOCtrTimebaseDigFltrTimebaseRate'
p11864
((lp11865
S'int32'
p11866
ag34
a((S'taskHandle'
p11867
(lp11868
S'TaskHandle'
p11869
aNtp11870
(S'channel'
p11871
(lp11872
S'char'
p11873
a(lp11874
I-1
aaNtp11875
(S'data'
p11876
(lp11877
S'float64'
p11878
ag42
aNtp11879
tp11880
tp11881
sS'DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth'
p11882
((lp11883
S'int32'
p11884
ag34
a((S'taskHandle'
p11885
(lp11886
S'TaskHandle'
p11887
aNtp11888
(S'channel'
p11889
(lp11890
S'char'
p11891
a(lp11892
I-1
aaNtp11893
tp11894
tp11895
sS'DAQmxGetAODACOffsetExtSrc'
p11896
((lp11897
S'int32'
p11898
ag34
a((S'taskHandle'
p11899
(lp11900
S'TaskHandle'
p11901
aNtp11902
(S'channel'
p11903
(lp11904
S'char'
p11905
a(lp11906
I-1
aaNtp11907
(S'data'
p11908
(lp11909
S'char'
p11910
ag42
aNtp11911
(S'bufferSize'
p11912
(lp11913
S'uInt32'
p11914
aNtp11915
tp11916
tp11917
sS'DAQmxResetAIExcitDCorAC'
p11918
((lp11919
S'int32'
p11920
ag34
a((S'taskHandle'
p11921
(lp11922
S'TaskHandle'
p11923
aNtp11924
(S'channel'
p11925
(lp11926
S'char'
p11927
a(lp11928
I-1
aaNtp11929
tp11930
tp11931
sS'DAQmxGetCOCtrTimebaseRate'
p11932
((lp11933
S'int32'
p11934
ag34
a((S'taskHandle'
p11935
(lp11936
S'TaskHandle'
p11937
aNtp11938
(S'channel'
p11939
(lp11940
S'char'
p11941
a(lp11942
I-1
aaNtp11943
(S'data'
p11944
(lp11945
S'float64'
p11946
ag42
aNtp11947
tp11948
tp11949
sS'DAQmxSetCOPulseIdleState'
p11950
((lp11951
S'int32'
p11952
ag34
a((S'taskHandle'
p11953
(lp11954
S'TaskHandle'
p11955
aNtp11956
(S'channel'
p11957
(lp11958
S'char'
p11959
a(lp11960
I-1
aaNtp11961
(S'data'
p11962
(lp11963
S'int32'
p11964
aNtp11965
tp11966
tp11967
sS'DAQmxGetSwitchChanBandwidth'
p11968
((lp11969
S'int32'
p11970
ag34
a((S'switchChannelName'
p11971
(lp11972
S'char'
p11973
a(lp11974
I-1
aaNtp11975
(S'data'
p11976
(lp11977
S'float64'
p11978
ag42
aNtp11979
tp11980
tp11981
sS'DAQmxSetAIRTDType'
p11982
((lp11983
S'int32'
p11984
ag34
a((S'taskHandle'
p11985
(lp11986
S'TaskHandle'
p11987
aNtp11988
(S'channel'
p11989
(lp11990
S'char'
p11991
a(lp11992
I-1
aaNtp11993
(S'data'
p11994
(lp11995
S'int32'
p11996
aNtp11997
tp11998
tp11999
sS'DAQmxSetAIChanCalEnableCal'
p12000
((lp12001
S'int32'
p12002
ag34
a((S'taskHandle'
p12003
(lp12004
S'TaskHandle'
p12005
aNtp12006
(S'channel'
p12007
(lp12008
S'char'
p12009
a(lp12010
I-1
aaNtp12011
(S'data'
p12012
(lp12013
S'bool32'
p12014
aNtp12015
tp12016
tp12017
sS'DAQmxGetAIBridgeShuntCalSelect'
p12018
((lp12019
S'int32'
p12020
ag34
a((S'taskHandle'
p12021
(lp12022
S'TaskHandle'
p12023
aNtp12024
(S'channel'
p12025
(lp12026
S'char'
p12027
a(lp12028
I-1
aaNtp12029
(S'data'
p12030
(lp12031
S'int32'
p12032
ag42
aNtp12033
tp12034
tp12035
sS'DAQmxGetDigEdgeWatchdogExpirTrigSrc'
p12036
((lp12037
S'int32'
p12038
ag34
a((S'taskHandle'
p12039
(lp12040
S'TaskHandle'
p12041
aNtp12042
(S'data'
p12043
(lp12044
S'char'
p12045
ag42
aNtp12046
(S'bufferSize'
p12047
(lp12048
S'uInt32'
p12049
aNtp12050
tp12051
tp12052
sS'DAQmxGetHshkSampleInputDataWhen'
p12053
((lp12054
S'int32'
p12055
ag34
a((S'taskHandle'
p12056
(lp12057
S'TaskHandle'
p12058
aNtp12059
(S'data'
p12060
(lp12061
S'int32'
p12062
ag42
aNtp12063
tp12064
tp12065
sS'DAQmxGetInterlockedHshkTrigAssertedLvl'
p12066
((lp12067
S'int32'
p12068
ag34
a((S'taskHandle'
p12069
(lp12070
S'TaskHandle'
p12071
aNtp12072
(S'data'
p12073
(lp12074
S'int32'
p12075
ag42
aNtp12076
tp12077
tp12078
sS'DAQmxGetCIEncoderZInputDigSyncEnable'
p12079
((lp12080
S'int32'
p12081
ag34
a((S'taskHandle'
p12082
(lp12083
S'TaskHandle'
p12084
aNtp12085
(S'channel'
p12086
(lp12087
S'char'
p12088
a(lp12089
I-1
aaNtp12090
(S'data'
p12091
(lp12092
S'bool32'
p12093
ag42
aNtp12094
tp12095
tp12096
sS'DAQmxResetAnlgWinRefTrigTop'
p12097
((lp12098
S'int32'
p12099
ag34
a((S'taskHandle'
p12100
(lp12101
S'TaskHandle'
p12102
aNtp12103
tp12104
tp12105
sS'DAQmxGetAIExcitSrc'
p12106
((lp12107
S'int32'
p12108
ag34
a((S'taskHandle'
p12109
(lp12110
S'TaskHandle'
p12111
aNtp12112
(S'channel'
p12113
(lp12114
S'char'
p12115
a(lp12116
I-1
aaNtp12117
(S'data'
p12118
(lp12119
S'int32'
p12120
ag42
aNtp12121
tp12122
tp12123
sS'DAQmxSetAdvTrigType'
p12124
((lp12125
S'int32'
p12126
ag34
a((S'taskHandle'
p12127
(lp12128
S'TaskHandle'
p12129
aNtp12130
(S'data'
p12131
(lp12132
S'int32'
p12133
aNtp12134
tp12135
tp12136
sS'DAQmxResetAILeadWireResistance'
p12137
((lp12138
S'int32'
p12139
ag34
a((S'taskHandle'
p12140
(lp12141
S'TaskHandle'
p12142
aNtp12143
(S'channel'
p12144
(lp12145
S'char'
p12146
a(lp12147
I-1
aaNtp12148
tp12149
tp12150
sS'DAQmxResetDITristate'
p12151
((lp12152
S'int32'
p12153
ag34
a((S'taskHandle'
p12154
(lp12155
S'TaskHandle'
p12156
aNtp12157
(S'channel'
p12158
(lp12159
S'char'
p12160
a(lp12161
I-1
aaNtp12162
tp12163
tp12164
sS'DAQmxSetAODACRefConnToGnd'
p12165
((lp12166
S'int32'
p12167
ag34
a((S'taskHandle'
p12168
(lp12169
S'TaskHandle'
p12170
aNtp12171
(S'channel'
p12172
(lp12173
S'char'
p12174
a(lp12175
I-1
aaNtp12176
(S'data'
p12177
(lp12178
S'bool32'
p12179
aNtp12180
tp12181
tp12182
sS'DAQmxResetCIEncoderZIndexEnable'
p12183
((lp12184
S'int32'
p12185
ag34
a((S'taskHandle'
p12186
(lp12187
S'TaskHandle'
p12188
aNtp12189
(S'channel'
p12190
(lp12191
S'char'
p12192
a(lp12193
I-1
aaNtp12194
tp12195
tp12196
sS'DAQmxCfgDigPatternRefTrig'
p12197
((lp12198
S'int32'
p12199
ag34
a((S'taskHandle'
p12200
(lp12201
S'TaskHandle'
p12202
aNtp12203
(S'triggerSource'
p12204
(lp12205
S'char'
p12206
a(lp12207
I-1
aaNtp12208
(S'triggerPattern'
p12209
(lp12210
S'char'
p12211
a(lp12212
I-1
aaNtp12213
(S'triggerWhen'
p12214
(lp12215
S'int32'
p12216
aNtp12217
(S'pretriggerSamples'
p12218
(lp12219
S'uInt32'
p12220
aNtp12221
tp12222
tp12223
sS'DAQmxResetWriteSleepTime'
p12224
((lp12225
S'int32'
p12226
ag34
a((S'taskHandle'
p12227
(lp12228
S'TaskHandle'
p12229
aNtp12230
tp12231
tp12232
sS'DAQmxResetSampClkTimebaseRate'
p12233
((lp12234
S'int32'
p12235
ag34
a((S'taskHandle'
p12236
(lp12237
S'TaskHandle'
p12238
aNtp12239
tp12240
tp12241
sS'DAQmxResetAnlgEdgeStartTrigSlope'
p12242
((lp12243
S'int32'
p12244
ag34
a((S'taskHandle'
p12245
(lp12246
S'TaskHandle'
p12247
aNtp12248
tp12249
tp12250
sS'DAQmxSetAIResistanceUnits'
p12251
((lp12252
S'int32'
p12253
ag34
a((S'taskHandle'
p12254
(lp12255
S'TaskHandle'
p12256
aNtp12257
(S'channel'
p12258
(lp12259
S'char'
p12260
a(lp12261
I-1
aaNtp12262
(S'data'
p12263
(lp12264
S'int32'
p12265
aNtp12266
tp12267
tp12268
sS'DAQmxGetAIDataXferMech'
p12269
((lp12270
S'int32'
p12271
ag34
a((S'taskHandle'
p12272
(lp12273
S'TaskHandle'
p12274
aNtp12275
(S'channel'
p12276
(lp12277
S'char'
p12278
a(lp12279
I-1
aaNtp12280
(S'data'
p12281
(lp12282
S'int32'
p12283
ag42
aNtp12284
tp12285
tp12286
sS'DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc'
p12287
((lp12288
S'int32'
p12289
ag34
a((S'taskHandle'
p12290
(lp12291
S'TaskHandle'
p12292
aNtp12293
tp12294
tp12295
sS'DAQmxGetAICurrentShuntLoc'
p12296
((lp12297
S'int32'
p12298
ag34
a((S'taskHandle'
p12299
(lp12300
S'TaskHandle'
p12301
aNtp12302
(S'channel'
p12303
(lp12304
S'char'
p12305
a(lp12306
I-1
aaNtp12307
(S'data'
p12308
(lp12309
S'int32'
p12310
ag42
aNtp12311
tp12312
tp12313
sS'DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p12314
((lp12315
S'int32'
p12316
ag34
a((S'taskHandle'
p12317
(lp12318
S'TaskHandle'
p12319
aNtp12320
(S'channel'
p12321
(lp12322
S'char'
p12323
a(lp12324
I-1
aaNtp12325
(S'data'
p12326
(lp12327
S'float64'
p12328
ag42
aNtp12329
tp12330
tp12331
sS'DAQmxGetAIThrmstrC'
p12332
((lp12333
S'int32'
p12334
ag34
a((S'taskHandle'
p12335
(lp12336
S'TaskHandle'
p12337
aNtp12338
(S'channel'
p12339
(lp12340
S'char'
p12341
a(lp12342
I-1
aaNtp12343
(S'data'
p12344
(lp12345
S'float64'
p12346
ag42
aNtp12347
tp12348
tp12349
sS'DAQmxGetDevBusType'
p12350
((lp12351
S'int32'
p12352
ag34
a((S'device'
p12353
(lp12354
S'char'
p12355
a(lp12356
I-1
aaNtp12357
(S'data'
p12358
(lp12359
S'int32'
p12360
ag42
aNtp12361
tp12362
tp12363
sS'DAQmxSetReadSleepTime'
p12364
((lp12365
S'int32'
p12366
ag34
a((S'taskHandle'
p12367
(lp12368
S'TaskHandle'
p12369
aNtp12370
(S'data'
p12371
(lp12372
S'float64'
p12373
aNtp12374
tp12375
tp12376
sS'DAQmxGetCIAngEncoderUnits'
p12377
((lp12378
S'int32'
p12379
ag34
a((S'taskHandle'
p12380
(lp12381
S'TaskHandle'
p12382
aNtp12383
(S'channel'
p12384
(lp12385
S'char'
p12386
a(lp12387
I-1
aaNtp12388
(S'data'
p12389
(lp12390
S'int32'
p12391
ag42
aNtp12392
tp12393
tp12394
sS'DAQmxGetRefTrigType'
p12395
((lp12396
S'int32'
p12397
ag34
a((S'taskHandle'
p12398
(lp12399
S'TaskHandle'
p12400
aNtp12401
(S'data'
p12402
(lp12403
S'int32'
p12404
ag42
aNtp12405
tp12406
tp12407
sS'DAQmxGetSwitchDevSettled'
p12408
((lp12409
S'int32'
p12410
ag34
a((S'deviceName'
p12411
(lp12412
S'char'
p12413
a(lp12414
I-1
aaNtp12415
(S'data'
p12416
(lp12417
S'bool32'
p12418
ag42
aNtp12419
tp12420
tp12421
sS'DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate'
p12422
((lp12423
S'int32'
p12424
ag34
a((S'taskHandle'
p12425
(lp12426
S'TaskHandle'
p12427
aNtp12428
(S'channel'
p12429
(lp12430
S'char'
p12431
a(lp12432
I-1
aaNtp12433
tp12434
tp12435
sS'DAQmxResetAISoundPressureUnits'
p12436
((lp12437
S'int32'
p12438
ag34
a((S'taskHandle'
p12439
(lp12440
S'TaskHandle'
p12441
aNtp12442
(S'channel'
p12443
(lp12444
S'char'
p12445
a(lp12446
I-1
aaNtp12447
tp12448
tp12449
sS'DAQmxSetAILowpassCutoffFreq'
p12450
((lp12451
S'int32'
p12452
ag34
a((S'taskHandle'
p12453
(lp12454
S'TaskHandle'
p12455
aNtp12456
(S'channel'
p12457
(lp12458
S'char'
p12459
a(lp12460
I-1
aaNtp12461
(S'data'
p12462
(lp12463
S'float64'
p12464
aNtp12465
tp12466
tp12467
sS'DAQmxResetAIDataXferReqCond'
p12468
((lp12469
S'int32'
p12470
ag34
a((S'taskHandle'
p12471
(lp12472
S'TaskHandle'
p12473
aNtp12474
(S'channel'
p12475
(lp12476
S'char'
p12477
a(lp12478
I-1
aaNtp12479
tp12480
tp12481
sS'DAQmxGetInterlockedHshkTrigSrc'
p12482
((lp12483
S'int32'
p12484
ag34
a((S'taskHandle'
p12485
(lp12486
S'TaskHandle'
p12487
aNtp12488
(S'data'
p12489
(lp12490
S'char'
p12491
ag42
aNtp12492
(S'bufferSize'
p12493
(lp12494
S'uInt32'
p12495
aNtp12496
tp12497
tp12498
sS'DAQmxGetExportedSampClkTimebaseOutputTerm'
p12499
((lp12500
S'int32'
p12501
ag34
a((S'taskHandle'
p12502
(lp12503
S'TaskHandle'
p12504
aNtp12505
(S'data'
p12506
(lp12507
S'char'
p12508
ag42
aNtp12509
(S'bufferSize'
p12510
(lp12511
S'uInt32'
p12512
aNtp12513
tp12514
tp12515
sS'DAQmxSetPauseTrigType'
p12516
((lp12517
S'int32'
p12518
ag34
a((S'taskHandle'
p12519
(lp12520
S'TaskHandle'
p12521
aNtp12522
(S'data'
p12523
(lp12524
S'int32'
p12525
aNtp12526
tp12527
tp12528
sS'DAQmxGetCIGPSSyncSrc'
p12529
((lp12530
S'int32'
p12531
ag34
a((S'taskHandle'
p12532
(lp12533
S'TaskHandle'
p12534
aNtp12535
(S'channel'
p12536
(lp12537
S'char'
p12538
a(lp12539
I-1
aaNtp12540
(S'data'
p12541
(lp12542
S'char'
p12543
ag42
aNtp12544
(S'bufferSize'
p12545
(lp12546
S'uInt32'
p12547
aNtp12548
tp12549
tp12550
sS'DAQmxSetBufOutputBufSize'
p12551
((lp12552
S'int32'
p12553
ag34
a((S'taskHandle'
p12554
(lp12555
S'TaskHandle'
p12556
aNtp12557
(S'data'
p12558
(lp12559
S'uInt32'
p12560
aNtp12561
tp12562
tp12563
sS'DAQmxAdjust1520Cal'
p12564
((lp12565
S'int32'
p12566
ag34
a((S'calHandle'
p12567
(lp12568
S'uInt32'
p12569
aNtp12570
(S'refVoltage'
p12571
(lp12572
S'float64'
p12573
aNtp12574
(S'measOutput'
p12575
(lp12576
S'float64'
p12577
aNtp12578
tp12579
tp12580
sS'DAQmxResetExportedWatchdogExpiredEventOutputTerm'
p12581
((lp12582
S'int32'
p12583
ag34
a((S'taskHandle'
p12584
(lp12585
S'TaskHandle'
p12586
aNtp12587
tp12588
tp12589
sS'DAQmxResetWatchdogAttribute'
p12590
((lp12591
S'int32'
p12592
ag34
a((S'taskHandle'
p12593
(lp12594
S'TaskHandle'
p12595
aNtp12596
(S'lines'
p12597
(lp12598
S'char'
p12599
a(lp12600
I-1
aaNtp12601
(S'attribute'
p12602
(lp12603
S'int32'
p12604
aNtp12605
tp12606
tp12607
sS'DAQmxSetAIDitherEnable'
p12608
((lp12609
S'int32'
p12610
ag34
a((S'taskHandle'
p12611
(lp12612
S'TaskHandle'
p12613
aNtp12614
(S'channel'
p12615
(lp12616
S'char'
p12617
a(lp12618
I-1
aaNtp12619
(S'data'
p12620
(lp12621
S'bool32'
p12622
aNtp12623
tp12624
tp12625
sS'DAQmxCreateMapScale'
p12626
((lp12627
S'int32'
p12628
ag34
a((S'name'
p12629
(lp12630
S'char'
p12631
a(lp12632
I-1
aaNtp12633
(S'prescaledMin'
p12634
(lp12635
S'float64'
p12636
aNtp12637
(S'prescaledMax'
p12638
(lp12639
S'float64'
p12640
aNtp12641
(S'scaledMin'
p12642
(lp12643
S'float64'
p12644
aNtp12645
(S'scaledMax'
p12646
(lp12647
S'float64'
p12648
aNtp12649
(S'preScaledUnits'
p12650
(lp12651
S'int32'
p12652
aNtp12653
(S'scaledUnits'
p12654
(lp12655
S'char'
p12656
a(lp12657
I-1
aaNtp12658
tp12659
tp12660
sS'DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc'
p12661
((lp12662
S'int32'
p12663
ag34
a((S'taskHandle'
p12664
(lp12665
S'TaskHandle'
p12666
aNtp12667
(S'channel'
p12668
(lp12669
S'char'
p12670
a(lp12671
I-1
aaNtp12672
(S'data'
p12673
(lp12674
S'char'
p12675
ag42
aNtp12676
(S'bufferSize'
p12677
(lp12678
S'uInt32'
p12679
aNtp12680
tp12681
tp12682
sS'DAQmxGetSampClkActiveEdge'
p12683
((lp12684
S'int32'
p12685
ag34
a((S'taskHandle'
p12686
(lp12687
S'TaskHandle'
p12688
aNtp12689
(S'data'
p12690
(lp12691
S'int32'
p12692
ag42
aNtp12693
tp12694
tp12695
sS'DAQmxResetCIPeriodUnits'
p12696
((lp12697
S'int32'
p12698
ag34
a((S'taskHandle'
p12699
(lp12700
S'TaskHandle'
p12701
aNtp12702
(S'channel'
p12703
(lp12704
S'char'
p12705
a(lp12706
I-1
aaNtp12707
tp12708
tp12709
sS'DAQmxGetAIMin'
p12710
((lp12711
S'int32'
p12712
ag34
a((S'taskHandle'
p12713
(lp12714
S'TaskHandle'
p12715
aNtp12716
(S'channel'
p12717
(lp12718
S'char'
p12719
a(lp12720
I-1
aaNtp12721
(S'data'
p12722
(lp12723
S'float64'
p12724
ag42
aNtp12725
tp12726
tp12727
sS'DAQmxSetAnlgEdgeRefTrigHyst'
p12728
((lp12729
S'int32'
p12730
ag34
a((S'taskHandle'
p12731
(lp12732
S'TaskHandle'
p12733
aNtp12734
(S'data'
p12735
(lp12736
S'float64'
p12737
aNtp12738
tp12739
tp12740
sS'DAQmxResetCIPeriodDiv'
p12741
((lp12742
S'int32'
p12743
ag34
a((S'taskHandle'
p12744
(lp12745
S'TaskHandle'
p12746
aNtp12747
(S'channel'
p12748
(lp12749
S'char'
p12750
a(lp12751
I-1
aaNtp12752
tp12753
tp12754
sS'DAQmxResetSwitchScanRepeatMode'
p12755
((lp12756
S'int32'
p12757
ag34
a((S'taskHandle'
p12758
(lp12759
S'TaskHandle'
p12760
aNtp12761
tp12762
tp12763
sS'DAQmxSetCITwoEdgeSepSecondDigFltrEnable'
p12764
((lp12765
S'int32'
p12766
ag34
a((S'taskHandle'
p12767
(lp12768
S'TaskHandle'
p12769
aNtp12770
(S'channel'
p12771
(lp12772
S'char'
p12773
a(lp12774
I-1
aaNtp12775
(S'data'
p12776
(lp12777
S'bool32'
p12778
aNtp12779
tp12780
tp12781
sS'DAQmxSetExportedSampClkTimebaseOutputTerm'
p12782
((lp12783
S'int32'
p12784
ag34
a((S'taskHandle'
p12785
(lp12786
S'TaskHandle'
p12787
aNtp12788
(S'data'
p12789
(lp12790
S'char'
p12791
ag42
aNtp12792
tp12793
tp12794
sS'DAQmxGetAIConvSrc'
p12795
((lp12796
S'int32'
p12797
ag34
a((S'taskHandle'
p12798
(lp12799
S'TaskHandle'
p12800
aNtp12801
(S'data'
p12802
(lp12803
S'char'
p12804
ag42
aNtp12805
(S'bufferSize'
p12806
(lp12807
S'uInt32'
p12808
aNtp12809
tp12810
tp12811
sS'DAQmxSetCIMax'
p12812
((lp12813
S'int32'
p12814
ag34
a((S'taskHandle'
p12815
(lp12816
S'TaskHandle'
p12817
aNtp12818
(S'channel'
p12819
(lp12820
S'char'
p12821
a(lp12822
I-1
aaNtp12823
(S'data'
p12824
(lp12825
S'float64'
p12826
aNtp12827
tp12828
tp12829
sS'DAQmxResetAIMemMapEnable'
p12830
((lp12831
S'int32'
p12832
ag34
a((S'taskHandle'
p12833
(lp12834
S'TaskHandle'
p12835
aNtp12836
(S'channel'
p12837
(lp12838
S'char'
p12839
a(lp12840
I-1
aaNtp12841
tp12842
tp12843
sS'DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p12844
((lp12845
S'int32'
p12846
ag34
a((S'taskHandle'
p12847
(lp12848
S'TaskHandle'
p12849
aNtp12850
(S'channel'
p12851
(lp12852
S'char'
p12853
a(lp12854
I-1
aaNtp12855
(S'data'
p12856
(lp12857
S'float64'
p12858
aNtp12859
tp12860
tp12861
sS'DAQmxResetDigEdgeArmStartTrigEdge'
p12862
((lp12863
S'int32'
p12864
ag34
a((S'taskHandle'
p12865
(lp12866
S'TaskHandle'
p12867
aNtp12868
tp12869
tp12870
sS'DAQmxSetCIPulseWidthDigFltrMinPulseWidth'
p12871
((lp12872
S'int32'
p12873
ag34
a((S'taskHandle'
p12874
(lp12875
S'TaskHandle'
p12876
aNtp12877
(S'channel'
p12878
(lp12879
S'char'
p12880
a(lp12881
I-1
aaNtp12882
(S'data'
p12883
(lp12884
S'float64'
p12885
aNtp12886
tp12887
tp12888
sS'DAQmxSetCISemiPeriodUnits'
p12889
((lp12890
S'int32'
p12891
ag34
a((S'taskHandle'
p12892
(lp12893
S'TaskHandle'
p12894
aNtp12895
(S'channel'
p12896
(lp12897
S'char'
p12898
a(lp12899
I-1
aaNtp12900
(S'data'
p12901
(lp12902
S'int32'
p12903
aNtp12904
tp12905
tp12906
sS'DAQmxResetAISoundPressureMaxSoundPressureLvl'
p12907
((lp12908
S'int32'
p12909
ag34
a((S'taskHandle'
p12910
(lp12911
S'TaskHandle'
p12912
aNtp12913
(S'channel'
p12914
(lp12915
S'char'
p12916
a(lp12917
I-1
aaNtp12918
tp12919
tp12920
sS'DAQmxGetSwitchDevSwitchChanList'
p12921
((lp12922
S'int32'
p12923
ag34
a((S'deviceName'
p12924
(lp12925
S'char'
p12926
a(lp12927
I-1
aaNtp12928
(S'data'
p12929
(lp12930
S'char'
p12931
ag42
aNtp12932
(S'bufferSize'
p12933
(lp12934
S'uInt32'
p12935
aNtp12936
tp12937
tp12938
sS'DAQmxGetCIEncoderAInputTerm'
p12939
((lp12940
S'int32'
p12941
ag34
a((S'taskHandle'
p12942
(lp12943
S'TaskHandle'
p12944
aNtp12945
(S'channel'
p12946
(lp12947
S'char'
p12948
a(lp12949
I-1
aaNtp12950
(S'data'
p12951
(lp12952
S'char'
p12953
ag42
aNtp12954
(S'bufferSize'
p12955
(lp12956
S'uInt32'
p12957
aNtp12958
tp12959
tp12960
sS'DAQmxGetAnlgEdgeRefTrigCoupling'
p12961
((lp12962
S'int32'
p12963
ag34
a((S'taskHandle'
p12964
(lp12965
S'TaskHandle'
p12966
aNtp12967
(S'data'
p12968
(lp12969
S'int32'
p12970
ag42
aNtp12971
tp12972
tp12973
sS'DAQmxResetAILVDTUnits'
p12974
((lp12975
S'int32'
p12976
ag34
a((S'taskHandle'
p12977
(lp12978
S'TaskHandle'
p12979
aNtp12980
(S'channel'
p12981
(lp12982
S'char'
p12983
a(lp12984
I-1
aaNtp12985
tp12986
tp12987
sS'DAQmxResetCIEncoderBInputDigFltrEnable'
p12988
((lp12989
S'int32'
p12990
ag34
a((S'taskHandle'
p12991
(lp12992
S'TaskHandle'
p12993
aNtp12994
(S'channel'
p12995
(lp12996
S'char'
p12997
a(lp12998
I-1
aaNtp12999
tp13000
tp13001
sS'DAQmxGetScaleMapScaledMin'
p13002
((lp13003
S'int32'
p13004
ag34
a((S'scaleName'
p13005
(lp13006
S'char'
p13007
a(lp13008
I-1
aaNtp13009
(S'data'
p13010
(lp13011
S'float64'
p13012
ag42
aNtp13013
tp13014
tp13015
sS'DAQmxGetReadTotalSampPerChanAcquired'
p13016
((lp13017
S'int32'
p13018
ag34
a((S'taskHandle'
p13019
(lp13020
S'TaskHandle'
p13021
aNtp13022
(S'data'
p13023
(lp13024
S'uInt64'
p13025
ag42
aNtp13026
tp13027
tp13028
sS'DAQmxSetWriteSleepTime'
p13029
((lp13030
S'int32'
p13031
ag34
a((S'taskHandle'
p13032
(lp13033
S'TaskHandle'
p13034
aNtp13035
(S'data'
p13036
(lp13037
S'float64'
p13038
aNtp13039
tp13040
tp13041
sS'DAQmxCreateTEDSAIStrainGageChan'
p13042
((lp13043
S'int32'
p13044
ag34
a((S'taskHandle'
p13045
(lp13046
S'TaskHandle'
p13047
aNtp13048
(S'physicalChannel'
p13049
(lp13050
S'char'
p13051
a(lp13052
I-1
aaNtp13053
(S'nameToAssignToChannel'
p13054
(lp13055
S'char'
p13056
a(lp13057
I-1
aaNtp13058
(S'minVal'
p13059
(lp13060
S'float64'
p13061
aNtp13062
(S'maxVal'
p13063
(lp13064
S'float64'
p13065
aNtp13066
(S'units'
p13067
(lp13068
S'int32'
p13069
aNtp13070
(S'voltageExcitSource'
p13071
(lp13072
S'int32'
p13073
aNtp13074
(S'voltageExcitVal'
p13075
(lp13076
S'float64'
p13077
aNtp13078
(S'initialBridgeVoltage'
p13079
(lp13080
S'float64'
p13081
aNtp13082
(S'leadWireResistance'
p13083
(lp13084
S'float64'
p13085
aNtp13086
(S'customScaleName'
p13087
(lp13088
S'char'
p13089
a(lp13090
I-1
aaNtp13091
tp13092
tp13093
sS'DAQmxGetAOIdleOutputBehavior'
p13094
((lp13095
S'int32'
p13096
ag34
a((S'taskHandle'
p13097
(lp13098
S'TaskHandle'
p13099
aNtp13100
(S'channel'
p13101
(lp13102
S'char'
p13103
a(lp13104
I-1
aaNtp13105
(S'data'
p13106
(lp13107
S'int32'
p13108
ag42
aNtp13109
tp13110
tp13111
sS'DAQmxSetAOResolutionUnits'
p13112
((lp13113
S'int32'
p13114
ag34
a((S'taskHandle'
p13115
(lp13116
S'TaskHandle'
p13117
aNtp13118
(S'channel'
p13119
(lp13120
S'char'
p13121
a(lp13122
I-1
aaNtp13123
(S'data'
p13124
(lp13125
S'int32'
p13126
aNtp13127
tp13128
tp13129
sS'DAQmxGetAIRVDTUnits'
p13130
((lp13131
S'int32'
p13132
ag34
a((S'taskHandle'
p13133
(lp13134
S'TaskHandle'
p13135
aNtp13136
(S'channel'
p13137
(lp13138
S'char'
p13139
a(lp13140
I-1
aaNtp13141
(S'data'
p13142
(lp13143
S'int32'
p13144
ag42
aNtp13145
tp13146
tp13147
sS'DAQmxGetAIExcitVoltageOrCurrent'
p13148
((lp13149
S'int32'
p13150
ag34
a((S'taskHandle'
p13151
(lp13152
S'TaskHandle'
p13153
aNtp13154
(S'channel'
p13155
(lp13156
S'char'
p13157
a(lp13158
I-1
aaNtp13159
(S'data'
p13160
(lp13161
S'int32'
p13162
ag42
aNtp13163
tp13164
tp13165
sS'DAQmxResetAIResistanceUnits'
p13166
((lp13167
S'int32'
p13168
ag34
a((S'taskHandle'
p13169
(lp13170
S'TaskHandle'
p13171
aNtp13172
(S'channel'
p13173
(lp13174
S'char'
p13175
a(lp13176
I-1
aaNtp13177
tp13178
tp13179
sS'DAQmxSetCICountEdgesDir'
p13180
((lp13181
S'int32'
p13182
ag34
a((S'taskHandle'
p13183
(lp13184
S'TaskHandle'
p13185
aNtp13186
(S'channel'
p13187
(lp13188
S'char'
p13189
a(lp13190
I-1
aaNtp13191
(S'data'
p13192
(lp13193
S'int32'
p13194
aNtp13195
tp13196
tp13197
sS'DAQmxResetAIBridgeCfg'
p13198
((lp13199
S'int32'
p13200
ag34
a((S'taskHandle'
p13201
(lp13202
S'TaskHandle'
p13203
aNtp13204
(S'channel'
p13205
(lp13206
S'char'
p13207
a(lp13208
I-1
aaNtp13209
tp13210
tp13211
sS'DAQmxGetAILeadWireResistance'
p13212
((lp13213
S'int32'
p13214
ag34
a((S'taskHandle'
p13215
(lp13216
S'TaskHandle'
p13217
aNtp13218
(S'channel'
p13219
(lp13220
S'char'
p13221
a(lp13222
I-1
aaNtp13223
(S'data'
p13224
(lp13225
S'float64'
p13226
ag42
aNtp13227
tp13228
tp13229
sS'DAQmxResetExportedHshkEventInterlockedAssertOnStart'
p13230
((lp13231
S'int32'
p13232
ag34
a((S'taskHandle'
p13233
(lp13234
S'TaskHandle'
p13235
aNtp13236
tp13237
tp13238
sS'DAQmxAdjustDSAAICal'
p13239
((lp13240
S'int32'
p13241
ag34
a((S'calHandle'
p13242
(lp13243
S'uInt32'
p13244
aNtp13245
(S'referenceVoltage'
p13246
(lp13247
S'float64'
p13248
aNtp13249
tp13250
tp13251
sS'DAQmxResetCOPulseFreq'
p13252
((lp13253
S'int32'
p13254
ag34
a((S'taskHandle'
p13255
(lp13256
S'TaskHandle'
p13257
aNtp13258
(S'channel'
p13259
(lp13260
S'char'
p13261
a(lp13262
I-1
aaNtp13263
tp13264
tp13265
sS'DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p13266
((lp13267
S'int32'
p13268
ag34
a((S'taskHandle'
p13269
(lp13270
S'TaskHandle'
p13271
aNtp13272
(S'data'
p13273
(lp13274
S'float64'
p13275
ag42
aNtp13276
tp13277
tp13278
sS'DAQmxGetExported20MHzTimebaseOutputTerm'
p13279
((lp13280
S'int32'
p13281
ag34
a((S'taskHandle'
p13282
(lp13283
S'TaskHandle'
p13284
aNtp13285
(S'data'
p13286
(lp13287
S'char'
p13288
ag42
aNtp13289
(S'bufferSize'
p13290
(lp13291
S'uInt32'
p13292
aNtp13293
tp13294
tp13295
sS'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p13296
((lp13297
S'int32'
p13298
ag34
a((S'taskHandle'
p13299
(lp13300
S'TaskHandle'
p13301
aNtp13302
(S'data'
p13303
(lp13304
S'char'
p13305
ag42
aNtp13306
(S'bufferSize'
p13307
(lp13308
S'uInt32'
p13309
aNtp13310
tp13311
tp13312
sS'DAQmxResetCIPulseWidthDigFltrTimebaseRate'
p13313
((lp13314
S'int32'
p13315
ag34
a((S'taskHandle'
p13316
(lp13317
S'TaskHandle'
p13318
aNtp13319
(S'channel'
p13320
(lp13321
S'char'
p13322
a(lp13323
I-1
aaNtp13324
tp13325
tp13326
sS'DAQmxResetCIPulseWidthDigFltrTimebaseSrc'
p13327
((lp13328
S'int32'
p13329
ag34
a((S'taskHandle'
p13330
(lp13331
S'TaskHandle'
p13332
aNtp13333
(S'channel'
p13334
(lp13335
S'char'
p13336
a(lp13337
I-1
aaNtp13338
tp13339
tp13340
sS'DAQmxSetCIEncoderZInputDigFltrTimebaseSrc'
p13341
((lp13342
S'int32'
p13343
ag34
a((S'taskHandle'
p13344
(lp13345
S'TaskHandle'
p13346
aNtp13347
(S'channel'
p13348
(lp13349
S'char'
p13350
a(lp13351
I-1
aaNtp13352
(S'data'
p13353
(lp13354
S'char'
p13355
ag42
aNtp13356
tp13357
tp13358
sS'DAQmxGetPersistedChanAllowInteractiveEditing'
p13359
((lp13360
S'int32'
p13361
ag34
a((S'channel'
p13362
(lp13363
S'char'
p13364
a(lp13365
I-1
aaNtp13366
(S'data'
p13367
(lp13368
S'bool32'
p13369
ag42
aNtp13370
tp13371
tp13372
sS'DAQmxResetAIThrmstrR1'
p13373
((lp13374
S'int32'
p13375
ag34
a((S'taskHandle'
p13376
(lp13377
S'TaskHandle'
p13378
aNtp13379
(S'channel'
p13380
(lp13381
S'char'
p13382
a(lp13383
I-1
aaNtp13384
tp13385
tp13386
sS'DAQmxGetAODataXferReqCond'
p13387
((lp13388
S'int32'
p13389
ag34
a((S'taskHandle'
p13390
(lp13391
S'TaskHandle'
p13392
aNtp13393
(S'channel'
p13394
(lp13395
S'char'
p13396
a(lp13397
I-1
aaNtp13398
(S'data'
p13399
(lp13400
S'int32'
p13401
ag42
aNtp13402
tp13403
tp13404
sS'DAQmxResetDODataXferReqCond'
p13405
((lp13406
S'int32'
p13407
ag34
a((S'taskHandle'
p13408
(lp13409
S'TaskHandle'
p13410
aNtp13411
(S'channel'
p13412
(lp13413
S'char'
p13414
a(lp13415
I-1
aaNtp13416
tp13417
tp13418
sS'DAQmxResetAIEnhancedAliasRejectionEnable'
p13419
((lp13420
S'int32'
p13421
ag34
a((S'taskHandle'
p13422
(lp13423
S'TaskHandle'
p13424
aNtp13425
(S'channel'
p13426
(lp13427
S'char'
p13428
a(lp13429
I-1
aaNtp13430
tp13431
tp13432
sS'DAQmxResetCITwoEdgeSepSecondTerm'
p13433
((lp13434
S'int32'
p13435
ag34
a((S'taskHandle'
p13436
(lp13437
S'TaskHandle'
p13438
aNtp13439
(S'channel'
p13440
(lp13441
S'char'
p13442
a(lp13443
I-1
aaNtp13444
tp13445
tp13446
sS'DAQmxSetScaleLinSlope'
p13447
((lp13448
S'int32'
p13449
ag34
a((S'scaleName'
p13450
(lp13451
S'char'
p13452
a(lp13453
I-1
aaNtp13454
(S'data'
p13455
(lp13456
S'float64'
p13457
aNtp13458
tp13459
tp13460
sS'DAQmxResetExportedAdvCmpltEventPulseWidth'
p13461
((lp13462
S'int32'
p13463
ag34
a((S'taskHandle'
p13464
(lp13465
S'TaskHandle'
p13466
aNtp13467
tp13468
tp13469
sS'DAQmxGetSampClkTimebaseSrc'
p13470
((lp13471
S'int32'
p13472
ag34
a((S'taskHandle'
p13473
(lp13474
S'TaskHandle'
p13475
aNtp13476
(S'data'
p13477
(lp13478
S'char'
p13479
ag42
aNtp13480
(S'bufferSize'
p13481
(lp13482
S'uInt32'
p13483
aNtp13484
tp13485
tp13486
sS'DAQmxGetBufInputOnbrdBufSize'
p13487
((lp13488
S'int32'
p13489
ag34
a((S'taskHandle'
p13490
(lp13491
S'TaskHandle'
p13492
aNtp13493
(S'data'
p13494
(lp13495
S'uInt32'
p13496
ag42
aNtp13497
tp13498
tp13499
sS'DAQmxReadBinaryI32'
p13500
((lp13501
S'int32'
p13502
ag34
a((S'taskHandle'
p13503
(lp13504
S'TaskHandle'
p13505
aNtp13506
(S'numSampsPerChan'
p13507
(lp13508
S'int32'
p13509
aNtp13510
(S'timeout'
p13511
(lp13512
S'float64'
p13513
aNtp13514
(S'fillMode'
p13515
(lp13516
S'bool32'
p13517
aNtp13518
(S'readArray'
p13519
(lp13520
S'int32'
p13521
a(lp13522
I-1
aaNtp13523
(S'arraySizeInSamps'
p13524
(lp13525
S'uInt32'
p13526
aNtp13527
(S'sampsPerChanRead'
p13528
(lp13529
S'int32'
p13530
ag42
aNtp13531
(S'reserved'
p13532
(lp13533
S'bool32'
p13534
ag42
aNtp13535
tp13536
tp13537
sS'DAQmxSetOnDemandSimultaneousAOEnable'
p13538
((lp13539
S'int32'
p13540
ag34
a((S'taskHandle'
p13541
(lp13542
S'TaskHandle'
p13543
aNtp13544
(S'data'
p13545
(lp13546
S'bool32'
p13547
aNtp13548
tp13549
tp13550
sS'DAQmxResetAnlgWinStartTrigWhen'
p13551
((lp13552
S'int32'
p13553
ag34
a((S'taskHandle'
p13554
(lp13555
S'TaskHandle'
p13556
aNtp13557
tp13558
tp13559
sS'DAQmxCreateAIRTDChan'
p13560
((lp13561
S'int32'
p13562
ag34
a((S'taskHandle'
p13563
(lp13564
S'TaskHandle'
p13565
aNtp13566
(S'physicalChannel'
p13567
(lp13568
S'char'
p13569
a(lp13570
I-1
aaNtp13571
(S'nameToAssignToChannel'
p13572
(lp13573
S'char'
p13574
a(lp13575
I-1
aaNtp13576
(S'minVal'
p13577
(lp13578
S'float64'
p13579
aNtp13580
(S'maxVal'
p13581
(lp13582
S'float64'
p13583
aNtp13584
(S'units'
p13585
(lp13586
S'int32'
p13587
aNtp13588
(S'rtdType'
p13589
(lp13590
S'int32'
p13591
aNtp13592
(S'resistanceConfig'
p13593
(lp13594
S'int32'
p13595
aNtp13596
(S'currentExcitSource'
p13597
(lp13598
S'int32'
p13599
aNtp13600
(S'currentExcitVal'
p13601
(lp13602
S'float64'
p13603
aNtp13604
(S'r0'
p13605
(lp13606
S'float64'
p13607
aNtp13608
tp13609
tp13610
sS'DAQmxGetWatchdogTimeout'
p13611
((lp13612
S'int32'
p13613
ag34
a((S'taskHandle'
p13614
(lp13615
S'TaskHandle'
p13616
aNtp13617
(S'data'
p13618
(lp13619
S'float64'
p13620
ag42
aNtp13621
tp13622
tp13623
sS'DAQmxResetDOInvertLines'
p13624
((lp13625
S'int32'
p13626
ag34
a((S'taskHandle'
p13627
(lp13628
S'TaskHandle'
p13629
aNtp13630
(S'channel'
p13631
(lp13632
S'char'
p13633
a(lp13634
I-1
aaNtp13635
tp13636
tp13637
sS'DAQmxSetCIFreqStartingEdge'
p13638
((lp13639
S'int32'
p13640
ag34
a((S'taskHandle'
p13641
(lp13642
S'TaskHandle'
p13643
aNtp13644
(S'channel'
p13645
(lp13646
S'char'
p13647
a(lp13648
I-1
aaNtp13649
(S'data'
p13650
(lp13651
S'int32'
p13652
aNtp13653
tp13654
tp13655
sS'DAQmxResetCIEncoderAInputDigSyncEnable'
p13656
((lp13657
S'int32'
p13658
ag34
a((S'taskHandle'
p13659
(lp13660
S'TaskHandle'
p13661
aNtp13662
(S'channel'
p13663
(lp13664
S'char'
p13665
a(lp13666
I-1
aaNtp13667
tp13668
tp13669
sS'DAQmxSetAIChanCalTablePreScaledVals'
p13670
((lp13671
S'int32'
p13672
ag34
a((S'taskHandle'
p13673
(lp13674
S'TaskHandle'
p13675
aNtp13676
(S'channel'
p13677
(lp13678
S'char'
p13679
a(lp13680
I-1
aaNtp13681
(S'data'
p13682
(lp13683
S'float64'
p13684
ag42
aNtp13685
(S'arraySizeInSamples'
p13686
(lp13687
S'uInt32'
p13688
aNtp13689
tp13690
tp13691
sS'DAQmxResetAIInputSrc'
p13692
((lp13693
S'int32'
p13694
ag34
a((S'taskHandle'
p13695
(lp13696
S'TaskHandle'
p13697
aNtp13698
(S'channel'
p13699
(lp13700
S'char'
p13701
a(lp13702
I-1
aaNtp13703
tp13704
tp13705
sS'DAQmxResetCIEncoderZInputDigSyncEnable'
p13706
((lp13707
S'int32'
p13708
ag34
a((S'taskHandle'
p13709
(lp13710
S'TaskHandle'
p13711
aNtp13712
(S'channel'
p13713
(lp13714
S'char'
p13715
a(lp13716
I-1
aaNtp13717
tp13718
tp13719
sS'DAQmxResetCIEncoderZInputDigFltrEnable'
p13720
((lp13721
S'int32'
p13722
ag34
a((S'taskHandle'
p13723
(lp13724
S'TaskHandle'
p13725
aNtp13726
(S'channel'
p13727
(lp13728
S'char'
p13729
a(lp13730
I-1
aaNtp13731
tp13732
tp13733
sS'DAQmxResetDOOutputDriveType'
p13734
((lp13735
S'int32'
p13736
ag34
a((S'taskHandle'
p13737
(lp13738
S'TaskHandle'
p13739
aNtp13740
(S'channel'
p13741
(lp13742
S'char'
p13743
a(lp13744
I-1
aaNtp13745
tp13746
tp13747
sS'DAQmxSetAnlgWinStartTrigBtm'
p13748
((lp13749
S'int32'
p13750
ag34
a((S'taskHandle'
p13751
(lp13752
S'TaskHandle'
p13753
aNtp13754
(S'data'
p13755
(lp13756
S'float64'
p13757
aNtp13758
tp13759
tp13760
sS'DAQmxGetDevIsSimulated'
p13761
((lp13762
S'int32'
p13763
ag34
a((S'device'
p13764
(lp13765
S'char'
p13766
a(lp13767
I-1
aaNtp13768
(S'data'
p13769
(lp13770
S'bool32'
p13771
ag42
aNtp13772
tp13773
tp13774
sS'DAQmxResetAOCurrentUnits'
p13775
((lp13776
S'int32'
p13777
ag34
a((S'taskHandle'
p13778
(lp13779
S'TaskHandle'
p13780
aNtp13781
(S'channel'
p13782
(lp13783
S'char'
p13784
a(lp13785
I-1
aaNtp13786
tp13787
tp13788
sS'DAQmxWriteDigitalU16'
p13789
((lp13790
S'int32'
p13791
ag34
a((S'taskHandle'
p13792
(lp13793
S'TaskHandle'
p13794
aNtp13795
(S'numSampsPerChan'
p13796
(lp13797
S'int32'
p13798
aNtp13799
(S'autoStart'
p13800
(lp13801
S'bool32'
p13802
aNtp13803
(S'timeout'
p13804
(lp13805
S'float64'
p13806
aNtp13807
(S'dataLayout'
p13808
(lp13809
S'bool32'
p13810
aNtp13811
(S'writeArray'
p13812
(lp13813
S'uInt16'
p13814
a(lp13815
I-1
aaNtp13816
(S'sampsPerChanWritten'
p13817
(lp13818
S'int32'
p13819
ag42
aNtp13820
(S'reserved'
p13821
(lp13822
S'bool32'
p13823
ag42
aNtp13824
tp13825
tp13826
sS'DAQmxSetMasterTimebaseSrc'
p13827
((lp13828
S'int32'
p13829
ag34
a((S'taskHandle'
p13830
(lp13831
S'TaskHandle'
p13832
aNtp13833
(S'data'
p13834
(lp13835
S'char'
p13836
ag42
aNtp13837
tp13838
tp13839
sS'DAQmxResetExportedCtrOutEventOutputBehavior'
p13840
((lp13841
S'int32'
p13842
ag34
a((S'taskHandle'
p13843
(lp13844
S'TaskHandle'
p13845
aNtp13846
tp13847
tp13848
sS'DAQmxResetAIExcitVal'
p13849
((lp13850
S'int32'
p13851
ag34
a((S'taskHandle'
p13852
(lp13853
S'TaskHandle'
p13854
aNtp13855
(S'channel'
p13856
(lp13857
S'char'
p13858
a(lp13859
I-1
aaNtp13860
tp13861
tp13862
sS'DAQmxGetSampClkSrc'
p13863
((lp13864
S'int32'
p13865
ag34
a((S'taskHandle'
p13866
(lp13867
S'TaskHandle'
p13868
aNtp13869
(S'data'
p13870
(lp13871
S'char'
p13872
ag42
aNtp13873
(S'bufferSize'
p13874
(lp13875
S'uInt32'
p13876
aNtp13877
tp13878
tp13879
sS'DAQmxSetScaleLinYIntercept'
p13880
((lp13881
S'int32'
p13882
ag34
a((S'scaleName'
p13883
(lp13884
S'char'
p13885
a(lp13886
I-1
aaNtp13887
(S'data'
p13888
(lp13889
S'float64'
p13890
aNtp13891
tp13892
tp13893
sS'DAQmxCreateTEDSAIVoltageChan'
p13894
((lp13895
S'int32'
p13896
ag34
a((S'taskHandle'
p13897
(lp13898
S'TaskHandle'
p13899
aNtp13900
(S'physicalChannel'
p13901
(lp13902
S'char'
p13903
a(lp13904
I-1
aaNtp13905
(S'nameToAssignToChannel'
p13906
(lp13907
S'char'
p13908
a(lp13909
I-1
aaNtp13910
(S'terminalConfig'
p13911
(lp13912
S'int32'
p13913
aNtp13914
(S'minVal'
p13915
(lp13916
S'float64'
p13917
aNtp13918
(S'maxVal'
p13919
(lp13920
S'float64'
p13921
aNtp13922
(S'units'
p13923
(lp13924
S'int32'
p13925
aNtp13926
(S'customScaleName'
p13927
(lp13928
S'char'
p13929
a(lp13930
I-1
aaNtp13931
tp13932
tp13933
sS'DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc'
p13934
((lp13935
S'int32'
p13936
ag34
a((S'taskHandle'
p13937
(lp13938
S'TaskHandle'
p13939
aNtp13940
tp13941
tp13942
sS'DAQmxSetAOLoadImpedance'
p13943
((lp13944
S'int32'
p13945
ag34
a((S'taskHandle'
p13946
(lp13947
S'TaskHandle'
p13948
aNtp13949
(S'channel'
p13950
(lp13951
S'char'
p13952
a(lp13953
I-1
aaNtp13954
(S'data'
p13955
(lp13956
S'float64'
p13957
aNtp13958
tp13959
tp13960
sS'DAQmxResetExportedAdvCmpltEventOutputTerm'
p13961
((lp13962
S'int32'
p13963
ag34
a((S'taskHandle'
p13964
(lp13965
S'TaskHandle'
p13966
aNtp13967
tp13968
tp13969
sS'DAQmxCreateTEDSAIPosRVDTChan'
p13970
((lp13971
S'int32'
p13972
ag34
a((S'taskHandle'
p13973
(lp13974
S'TaskHandle'
p13975
aNtp13976
(S'physicalChannel'
p13977
(lp13978
S'char'
p13979
a(lp13980
I-1
aaNtp13981
(S'nameToAssignToChannel'
p13982
(lp13983
S'char'
p13984
a(lp13985
I-1
aaNtp13986
(S'minVal'
p13987
(lp13988
S'float64'
p13989
aNtp13990
(S'maxVal'
p13991
(lp13992
S'float64'
p13993
aNtp13994
(S'units'
p13995
(lp13996
S'int32'
p13997
aNtp13998
(S'voltageExcitSource'
p13999
(lp14000
S'int32'
p14001
aNtp14002
(S'voltageExcitVal'
p14003
(lp14004
S'float64'
p14005
aNtp14006
(S'voltageExcitFreq'
p14007
(lp14008
S'float64'
p14009
aNtp14010
(S'ACExcitWireMode'
p14011
(lp14012
S'int32'
p14013
aNtp14014
(S'customScaleName'
p14015
(lp14016
S'char'
p14017
a(lp14018
I-1
aaNtp14019
tp14020
tp14021
sS'DAQmxGetCIPulseWidthDigSyncEnable'
p14022
((lp14023
S'int32'
p14024
ag34
a((S'taskHandle'
p14025
(lp14026
S'TaskHandle'
p14027
aNtp14028
(S'channel'
p14029
(lp14030
S'char'
p14031
a(lp14032
I-1
aaNtp14033
(S'data'
p14034
(lp14035
S'bool32'
p14036
ag42
aNtp14037
tp14038
tp14039
sS'DAQmxGetCOOutputState'
p14040
((lp14041
S'int32'
p14042
ag34
a((S'taskHandle'
p14043
(lp14044
S'TaskHandle'
p14045
aNtp14046
(S'channel'
p14047
(lp14048
S'char'
p14049
a(lp14050
I-1
aaNtp14051
(S'data'
p14052
(lp14053
S'int32'
p14054
ag42
aNtp14055
tp14056
tp14057
sS'DAQmxGetAILowpassSwitchCapClkSrc'
p14058
((lp14059
S'int32'
p14060
ag34
a((S'taskHandle'
p14061
(lp14062
S'TaskHandle'
p14063
aNtp14064
(S'channel'
p14065
(lp14066
S'char'
p14067
a(lp14068
I-1
aaNtp14069
(S'data'
p14070
(lp14071
S'int32'
p14072
ag42
aNtp14073
tp14074
tp14075
sS'DAQmxSetExportedAdvTrigOutputTerm'
p14076
((lp14077
S'int32'
p14078
ag34
a((S'taskHandle'
p14079
(lp14080
S'TaskHandle'
p14081
aNtp14082
(S'data'
p14083
(lp14084
S'char'
p14085
ag42
aNtp14086
tp14087
tp14088
sS'DAQmxSetAnlgWinStartTrigCoupling'
p14089
((lp14090
S'int32'
p14091
ag34
a((S'taskHandle'
p14092
(lp14093
S'TaskHandle'
p14094
aNtp14095
(S'data'
p14096
(lp14097
S'int32'
p14098
aNtp14099
tp14100
tp14101
sS'DAQmxGetDINumLines'
p14102
((lp14103
S'int32'
p14104
ag34
a((S'taskHandle'
p14105
(lp14106
S'TaskHandle'
p14107
aNtp14108
(S'channel'
p14109
(lp14110
S'char'
p14111
a(lp14112
I-1
aaNtp14113
(S'data'
p14114
(lp14115
S'uInt32'
p14116
ag42
aNtp14117
tp14118
tp14119
sS'DAQmxResetDIDigFltrMinPulseWidth'
p14120
((lp14121
S'int32'
p14122
ag34
a((S'taskHandle'
p14123
(lp14124
S'TaskHandle'
p14125
aNtp14126
(S'channel'
p14127
(lp14128
S'char'
p14129
a(lp14130
I-1
aaNtp14131
tp14132
tp14133
sS'DAQmxGetAIExcitDCorAC'
p14134
((lp14135
S'int32'
p14136
ag34
a((S'taskHandle'
p14137
(lp14138
S'TaskHandle'
p14139
aNtp14140
(S'channel'
p14141
(lp14142
S'char'
p14143
a(lp14144
I-1
aaNtp14145
(S'data'
p14146
(lp14147
S'int32'
p14148
ag42
aNtp14149
tp14150
tp14151
sS'DAQmxGetExportedAdvCmpltEventOutputTerm'
p14152
((lp14153
S'int32'
p14154
ag34
a((S'taskHandle'
p14155
(lp14156
S'TaskHandle'
p14157
aNtp14158
(S'data'
p14159
(lp14160
S'char'
p14161
ag42
aNtp14162
(S'bufferSize'
p14163
(lp14164
S'uInt32'
p14165
aNtp14166
tp14167
tp14168
sS'DAQmxResetStartTrigDelayUnits'
p14169
((lp14170
S'int32'
p14171
ag34
a((S'taskHandle'
p14172
(lp14173
S'TaskHandle'
p14174
aNtp14175
tp14176
tp14177
sS'DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth'
p14178
((lp14179
S'int32'
p14180
ag34
a((S'taskHandle'
p14181
(lp14182
S'TaskHandle'
p14183
aNtp14184
tp14185
tp14186
sS'DAQmxConnectTerms'
p14187
((lp14188
S'int32'
p14189
ag34
a((S'sourceTerminal'
p14190
(lp14191
S'char'
p14192
a(lp14193
I-1
aaNtp14194
(S'destinationTerminal'
p14195
(lp14196
S'char'
p14197
a(lp14198
I-1
aaNtp14199
(S'signalModifiers'
p14200
(lp14201
S'int32'
p14202
aNtp14203
tp14204
tp14205
sS'DAQmxGetExportedAdvTrigPulsePolarity'
p14206
((lp14207
S'int32'
p14208
ag34
a((S'taskHandle'
p14209
(lp14210
S'TaskHandle'
p14211
aNtp14212
(S'data'
p14213
(lp14214
S'int32'
p14215
ag42
aNtp14216
tp14217
tp14218
sS'DAQmxSetDigEdgeArmStartTrigSrc'
p14219
((lp14220
S'int32'
p14221
ag34
a((S'taskHandle'
p14222
(lp14223
S'TaskHandle'
p14224
aNtp14225
(S'data'
p14226
(lp14227
S'char'
p14228
ag42
aNtp14229
tp14230
tp14231
sS'DAQmxGetCILinEncoderDistPerPulse'
p14232
((lp14233
S'int32'
p14234
ag34
a((S'taskHandle'
p14235
(lp14236
S'TaskHandle'
p14237
aNtp14238
(S'channel'
p14239
(lp14240
S'char'
p14241
a(lp14242
I-1
aaNtp14243
(S'data'
p14244
(lp14245
S'float64'
p14246
ag42
aNtp14247
tp14248
tp14249
sS'DAQmxGetAIChanCalVerifAcqVals'
p14250
((lp14251
S'int32'
p14252
ag34
a((S'taskHandle'
p14253
(lp14254
S'TaskHandle'
p14255
aNtp14256
(S'channel'
p14257
(lp14258
S'char'
p14259
a(lp14260
I-1
aaNtp14261
(S'data'
p14262
(lp14263
S'float64'
p14264
ag42
aNtp14265
(S'arraySizeInSamples'
p14266
(lp14267
S'uInt32'
p14268
aNtp14269
tp14270
tp14271
sS'DAQmxSetAnlgLvlPauseTrigHyst'
p14272
((lp14273
S'int32'
p14274
ag34
a((S'taskHandle'
p14275
(lp14276
S'TaskHandle'
p14277
aNtp14278
(S'data'
p14279
(lp14280
S'float64'
p14281
aNtp14282
tp14283
tp14284
sS'DAQmxGetSwitchDevNumColumns'
p14285
((lp14286
S'int32'
p14287
ag34
a((S'deviceName'
p14288
(lp14289
S'char'
p14290
a(lp14291
I-1
aaNtp14292
(S'data'
p14293
(lp14294
S'uInt32'
p14295
ag42
aNtp14296
tp14297
tp14298
sS'DAQmxSetCITwoEdgeSepFirstDigSyncEnable'
p14299
((lp14300
S'int32'
p14301
ag34
a((S'taskHandle'
p14302
(lp14303
S'TaskHandle'
p14304
aNtp14305
(S'channel'
p14306
(lp14307
S'char'
p14308
a(lp14309
I-1
aaNtp14310
(S'data'
p14311
(lp14312
S'bool32'
p14313
aNtp14314
tp14315
tp14316
sS'DAQmxSetAIAutoZeroMode'
p14317
((lp14318
S'int32'
p14319
ag34
a((S'taskHandle'
p14320
(lp14321
S'TaskHandle'
p14322
aNtp14323
(S'channel'
p14324
(lp14325
S'char'
p14326
a(lp14327
I-1
aaNtp14328
(S'data'
p14329
(lp14330
S'int32'
p14331
aNtp14332
tp14333
tp14334
sS'DAQmxSetAIFreqThreshVoltage'
p14335
((lp14336
S'int32'
p14337
ag34
a((S'taskHandle'
p14338
(lp14339
S'TaskHandle'
p14340
aNtp14341
(S'channel'
p14342
(lp14343
S'char'
p14344
a(lp14345
I-1
aaNtp14346
(S'data'
p14347
(lp14348
S'float64'
p14349
aNtp14350
tp14351
tp14352
sS'DAQmxGetAnlgWinPauseTrigBtm'
p14353
((lp14354
S'int32'
p14355
ag34
a((S'taskHandle'
p14356
(lp14357
S'TaskHandle'
p14358
aNtp14359
(S'data'
p14360
(lp14361
S'float64'
p14362
ag42
aNtp14363
tp14364
tp14365
sS'DAQmxResetDigEdgeAdvTrigDigFltrEnable'
p14366
((lp14367
S'int32'
p14368
ag34
a((S'taskHandle'
p14369
(lp14370
S'TaskHandle'
p14371
aNtp14372
tp14373
tp14374
sS'DAQmxSetExportedAdvCmpltEventPulsePolarity'
p14375
((lp14376
S'int32'
p14377
ag34
a((S'taskHandle'
p14378
(lp14379
S'TaskHandle'
p14380
aNtp14381
(S'data'
p14382
(lp14383
S'int32'
p14384
aNtp14385
tp14386
tp14387
sS'DAQmxGetSelfCalLastDateAndTime'
p14388
((lp14389
S'int32'
p14390
ag34
a((S'deviceName'
p14391
(lp14392
S'char'
p14393
a(lp14394
I-1
aaNtp14395
(S'year'
p14396
(lp14397
S'uInt32'
p14398
ag42
aNtp14399
(S'month'
p14400
(lp14401
S'uInt32'
p14402
ag42
aNtp14403
(S'day'
p14404
(lp14405
S'uInt32'
p14406
ag42
aNtp14407
(S'hour'
p14408
(lp14409
S'uInt32'
p14410
ag42
aNtp14411
(S'minute'
p14412
(lp14413
S'uInt32'
p14414
ag42
aNtp14415
tp14416
tp14417
sS'DAQmxGetCIFreqMeasMeth'
p14418
((lp14419
S'int32'
p14420
ag34
a((S'taskHandle'
p14421
(lp14422
S'TaskHandle'
p14423
aNtp14424
(S'channel'
p14425
(lp14426
S'char'
p14427
a(lp14428
I-1
aaNtp14429
(S'data'
p14430
(lp14431
S'int32'
p14432
ag42
aNtp14433
tp14434
tp14435
sS'DAQmxSetAIACExcitSyncEnable'
p14436
((lp14437
S'int32'
p14438
ag34
a((S'taskHandle'
p14439
(lp14440
S'TaskHandle'
p14441
aNtp14442
(S'channel'
p14443
(lp14444
S'char'
p14445
a(lp14446
I-1
aaNtp14447
(S'data'
p14448
(lp14449
S'bool32'
p14450
aNtp14451
tp14452
tp14453
sS'DAQmxGetCIOutputState'
p14454
((lp14455
S'int32'
p14456
ag34
a((S'taskHandle'
p14457
(lp14458
S'TaskHandle'
p14459
aNtp14460
(S'channel'
p14461
(lp14462
S'char'
p14463
a(lp14464
I-1
aaNtp14465
(S'data'
p14466
(lp14467
S'int32'
p14468
ag42
aNtp14469
tp14470
tp14471
sS'DAQmxSetSwitchScanBreakMode'
p14472
((lp14473
S'int32'
p14474
ag34
a((S'taskHandle'
p14475
(lp14476
S'TaskHandle'
p14477
aNtp14478
(S'data'
p14479
(lp14480
S'int32'
p14481
aNtp14482
tp14483
tp14484
sS'DAQmxSetAIAccelUnits'
p14485
((lp14486
S'int32'
p14487
ag34
a((S'taskHandle'
p14488
(lp14489
S'TaskHandle'
p14490
aNtp14491
(S'channel'
p14492
(lp14493
S'char'
p14494
a(lp14495
I-1
aaNtp14496
(S'data'
p14497
(lp14498
S'int32'
p14499
aNtp14500
tp14501
tp14502
sS'DAQmxSetAIChanCalOperatorName'
p14503
((lp14504
S'int32'
p14505
ag34
a((S'taskHandle'
p14506
(lp14507
S'TaskHandle'
p14508
aNtp14509
(S'channel'
p14510
(lp14511
S'char'
p14512
a(lp14513
I-1
aaNtp14514
(S'data'
p14515
(lp14516
S'char'
p14517
ag42
aNtp14518
tp14519
tp14520
sS'DAQmxSetArmStartTrigType'
p14521
((lp14522
S'int32'
p14523
ag34
a((S'taskHandle'
p14524
(lp14525
S'TaskHandle'
p14526
aNtp14527
(S'data'
p14528
(lp14529
S'int32'
p14530
aNtp14531
tp14532
tp14533
sS'DAQmxSetAISoundPressureMaxSoundPressureLvl'
p14534
((lp14535
S'int32'
p14536
ag34
a((S'taskHandle'
p14537
(lp14538
S'TaskHandle'
p14539
aNtp14540
(S'channel'
p14541
(lp14542
S'char'
p14543
a(lp14544
I-1
aaNtp14545
(S'data'
p14546
(lp14547
S'float64'
p14548
aNtp14549
tp14550
tp14551
sS'DAQmxSetDigEdgeWatchdogExpirTrigEdge'
p14552
((lp14553
S'int32'
p14554
ag34
a((S'taskHandle'
p14555
(lp14556
S'TaskHandle'
p14557
aNtp14558
(S'data'
p14559
(lp14560
S'int32'
p14561
aNtp14562
tp14563
tp14564
sS'DAQmxGetAIResolutionUnits'
p14565
((lp14566
S'int32'
p14567
ag34
a((S'taskHandle'
p14568
(lp14569
S'TaskHandle'
p14570
aNtp14571
(S'channel'
p14572
(lp14573
S'char'
p14574
a(lp14575
I-1
aaNtp14576
(S'data'
p14577
(lp14578
S'int32'
p14579
ag42
aNtp14580
tp14581
tp14582
sS'DAQmxSetRealTimeNumOfWarmupIters'
p14583
((lp14584
S'int32'
p14585
ag34
a((S'taskHandle'
p14586
(lp14587
S'TaskHandle'
p14588
aNtp14589
(S'data'
p14590
(lp14591
S'uInt32'
p14592
aNtp14593
tp14594
tp14595
sS'DAQmxGetExportedHshkEventDelay'
p14596
((lp14597
S'int32'
p14598
ag34
a((S'taskHandle'
p14599
(lp14600
S'TaskHandle'
p14601
aNtp14602
(S'data'
p14603
(lp14604
S'float64'
p14605
ag42
aNtp14606
tp14607
tp14608
sS'DAQmxCreateAIThrmcplChan'
p14609
((lp14610
S'int32'
p14611
ag34
a((S'taskHandle'
p14612
(lp14613
S'TaskHandle'
p14614
aNtp14615
(S'physicalChannel'
p14616
(lp14617
S'char'
p14618
a(lp14619
I-1
aaNtp14620
(S'nameToAssignToChannel'
p14621
(lp14622
S'char'
p14623
a(lp14624
I-1
aaNtp14625
(S'minVal'
p14626
(lp14627
S'float64'
p14628
aNtp14629
(S'maxVal'
p14630
(lp14631
S'float64'
p14632
aNtp14633
(S'units'
p14634
(lp14635
S'int32'
p14636
aNtp14637
(S'thermocoupleType'
p14638
(lp14639
S'int32'
p14640
aNtp14641
(S'cjcSource'
p14642
(lp14643
S'int32'
p14644
aNtp14645
(S'cjcVal'
p14646
(lp14647
S'float64'
p14648
aNtp14649
(S'cjcChannel'
p14650
(lp14651
S'char'
p14652
a(lp14653
I-1
aaNtp14654
tp14655
tp14656
sS'DAQmxResetAOGain'
p14657
((lp14658
S'int32'
p14659
ag34
a((S'taskHandle'
p14660
(lp14661
S'TaskHandle'
p14662
aNtp14663
(S'channel'
p14664
(lp14665
S'char'
p14666
a(lp14667
I-1
aaNtp14668
tp14669
tp14670
sS'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p14671
((lp14672
S'int32'
p14673
ag34
a((S'taskHandle'
p14674
(lp14675
S'TaskHandle'
p14676
aNtp14677
tp14678
tp14679
sS'DAQmxSetCICtrTimebaseRate'
p14680
((lp14681
S'int32'
p14682
ag34
a((S'taskHandle'
p14683
(lp14684
S'TaskHandle'
p14685
aNtp14686
(S'channel'
p14687
(lp14688
S'char'
p14689
a(lp14690
I-1
aaNtp14691
(S'data'
p14692
(lp14693
S'float64'
p14694
aNtp14695
tp14696
tp14697
sS'DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p14698
((lp14699
S'int32'
p14700
ag34
a((S'taskHandle'
p14701
(lp14702
S'TaskHandle'
p14703
aNtp14704
(S'channel'
p14705
(lp14706
S'char'
p14707
a(lp14708
I-1
aaNtp14709
tp14710
tp14711
sS'DAQmxGetSwitchChanWireMode'
p14712
((lp14713
S'int32'
p14714
ag34
a((S'switchChannelName'
p14715
(lp14716
S'char'
p14717
a(lp14718
I-1
aaNtp14719
(S'data'
p14720
(lp14721
S'uInt32'
p14722
ag42
aNtp14723
tp14724
tp14725
sS'DAQmxSetAnlgEdgeStartTrigCoupling'
p14726
((lp14727
S'int32'
p14728
ag34
a((S'taskHandle'
p14729
(lp14730
S'TaskHandle'
p14731
aNtp14732
(S'data'
p14733
(lp14734
S'int32'
p14735
aNtp14736
tp14737
tp14738
sS'DAQmxCreateTask'
p14739
((lp14740
S'int32'
p14741
ag34
a((S'taskName'
p14742
(lp14743
S'char'
p14744
a(lp14745
I-1
aaNtp14746
(S'taskHandle'
p14747
(lp14748
S'TaskHandle'
p14749
ag42
aNtp14750
tp14751
tp14752
sS'DAQmxCreateCIPulseWidthChan'
p14753
((lp14754
S'int32'
p14755
ag34
a((S'taskHandle'
p14756
(lp14757
S'TaskHandle'
p14758
aNtp14759
(S'counter'
p14760
(lp14761
S'char'
p14762
a(lp14763
I-1
aaNtp14764
(S'nameToAssignToChannel'
p14765
(lp14766
S'char'
p14767
a(lp14768
I-1
aaNtp14769
(S'minVal'
p14770
(lp14771
S'float64'
p14772
aNtp14773
(S'maxVal'
p14774
(lp14775
S'float64'
p14776
aNtp14777
(S'units'
p14778
(lp14779
S'int32'
p14780
aNtp14781
(S'startingEdge'
p14782
(lp14783
S'int32'
p14784
aNtp14785
(S'customScaleName'
p14786
(lp14787
S'char'
p14788
a(lp14789
I-1
aaNtp14790
tp14791
tp14792
sS'DAQmxGetAOReglitchEnable'
p14793
((lp14794
S'int32'
p14795
ag34
a((S'taskHandle'
p14796
(lp14797
S'TaskHandle'
p14798
aNtp14799
(S'channel'
p14800
(lp14801
S'char'
p14802
a(lp14803
I-1
aaNtp14804
(S'data'
p14805
(lp14806
S'bool32'
p14807
ag42
aNtp14808
tp14809
tp14810
sS'DAQmxReadDigitalScalarU32'
p14811
((lp14812
S'int32'
p14813
ag34
a((S'taskHandle'
p14814
(lp14815
S'TaskHandle'
p14816
aNtp14817
(S'timeout'
p14818
(lp14819
S'float64'
p14820
aNtp14821
(S'value'
p14822
(lp14823
S'uInt32'
p14824
ag42
aNtp14825
(S'reserved'
p14826
(lp14827
S'bool32'
p14828
ag42
aNtp14829
tp14830
tp14831
sS'DAQmxGetSwitchChanMaxDCCarryCurrent'
p14832
((lp14833
S'int32'
p14834
ag34
a((S'switchChannelName'
p14835
(lp14836
S'char'
p14837
a(lp14838
I-1
aaNtp14839
(S'data'
p14840
(lp14841
S'float64'
p14842
ag42
aNtp14843
tp14844
tp14845
sS'DAQmxGetDigEdgeArmStartTrigEdge'
p14846
((lp14847
S'int32'
p14848
ag34
a((S'taskHandle'
p14849
(lp14850
S'TaskHandle'
p14851
aNtp14852
(S'data'
p14853
(lp14854
S'int32'
p14855
ag42
aNtp14856
tp14857
tp14858
sS'DAQmxGetAnlgWinPauseTrigWhen'
p14859
((lp14860
S'int32'
p14861
ag34
a((S'taskHandle'
p14862
(lp14863
S'TaskHandle'
p14864
aNtp14865
(S'data'
p14866
(lp14867
S'int32'
p14868
ag42
aNtp14869
tp14870
tp14871
sS'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p14872
((lp14873
S'int32'
p14874
ag34
a((S'taskHandle'
p14875
(lp14876
S'TaskHandle'
p14877
aNtp14878
(S'channel'
p14879
(lp14880
S'char'
p14881
a(lp14882
I-1
aaNtp14883
tp14884
tp14885
sS'DAQmxGetSwitchScanAttribute'
p14886
((lp14887
S'int32'
p14888
ag2565
a((S'taskHandle'
p14889
(lp14890
S'TaskHandle'
p14891
aNtp14892
(S'attribute'
p14893
(lp14894
S'int32'
p14895
aNtp14896
(S'value'
p14897
(lp14898
S'void'
p14899
ag42
aNtp14900
tp14901
tp14902
sS'DAQmxSetAIBridgeInitialVoltage'
p14903
((lp14904
S'int32'
p14905
ag34
a((S'taskHandle'
p14906
(lp14907
S'TaskHandle'
p14908
aNtp14909
(S'channel'
p14910
(lp14911
S'char'
p14912
a(lp14913
I-1
aaNtp14914
(S'data'
p14915
(lp14916
S'float64'
p14917
aNtp14918
tp14919
tp14920
sS'DAQmxResetCOPulseFreqUnits'
p14921
((lp14922
S'int32'
p14923
ag34
a((S'taskHandle'
p14924
(lp14925
S'TaskHandle'
p14926
aNtp14927
(S'channel'
p14928
(lp14929
S'char'
p14930
a(lp14931
I-1
aaNtp14932
tp14933
tp14934
sS'DAQmxResetCIEncoderAInputDigFltrTimebaseSrc'
p14935
((lp14936
S'int32'
p14937
ag34
a((S'taskHandle'
p14938
(lp14939
S'TaskHandle'
p14940
aNtp14941
(S'channel'
p14942
(lp14943
S'char'
p14944
a(lp14945
I-1
aaNtp14946
tp14947
tp14948
sS'DAQmxSetCIGPSSyncSrc'
p14949
((lp14950
S'int32'
p14951
ag34
a((S'taskHandle'
p14952
(lp14953
S'TaskHandle'
p14954
aNtp14955
(S'channel'
p14956
(lp14957
S'char'
p14958
a(lp14959
I-1
aaNtp14960
(S'data'
p14961
(lp14962
S'char'
p14963
ag42
aNtp14964
tp14965
tp14966
sS'DAQmxResetDigEdgeStartTrigSrc'
p14967
((lp14968
S'int32'
p14969
ag34
a((S'taskHandle'
p14970
(lp14971
S'TaskHandle'
p14972
aNtp14973
tp14974
tp14975
sS'DAQmxCreateAIPosLVDTChan'
p14976
((lp14977
S'int32'
p14978
ag34
a((S'taskHandle'
p14979
(lp14980
S'TaskHandle'
p14981
aNtp14982
(S'physicalChannel'
p14983
(lp14984
S'char'
p14985
a(lp14986
I-1
aaNtp14987
(S'nameToAssignToChannel'
p14988
(lp14989
S'char'
p14990
a(lp14991
I-1
aaNtp14992
(S'minVal'
p14993
(lp14994
S'float64'
p14995
aNtp14996
(S'maxVal'
p14997
(lp14998
S'float64'
p14999
aNtp15000
(S'units'
p15001
(lp15002
S'int32'
p15003
aNtp15004
(S'sensitivity'
p15005
(lp15006
S'float64'
p15007
aNtp15008
(S'sensitivityUnits'
p15009
(lp15010
S'int32'
p15011
aNtp15012
(S'voltageExcitSource'
p15013
(lp15014
S'int32'
p15015
aNtp15016
(S'voltageExcitVal'
p15017
(lp15018
S'float64'
p15019
aNtp15020
(S'voltageExcitFreq'
p15021
(lp15022
S'float64'
p15023
aNtp15024
(S'ACExcitWireMode'
p15025
(lp15026
S'int32'
p15027
aNtp15028
(S'customScaleName'
p15029
(lp15030
S'char'
p15031
a(lp15032
I-1
aaNtp15033
tp15034
tp15035
sS'DAQmxCreateAICurrentChan'
p15036
((lp15037
S'int32'
p15038
ag34
a((S'taskHandle'
p15039
(lp15040
S'TaskHandle'
p15041
aNtp15042
(S'physicalChannel'
p15043
(lp15044
S'char'
p15045
a(lp15046
I-1
aaNtp15047
(S'nameToAssignToChannel'
p15048
(lp15049
S'char'
p15050
a(lp15051
I-1
aaNtp15052
(S'terminalConfig'
p15053
(lp15054
S'int32'
p15055
aNtp15056
(S'minVal'
p15057
(lp15058
S'float64'
p15059
aNtp15060
(S'maxVal'
p15061
(lp15062
S'float64'
p15063
aNtp15064
(S'units'
p15065
(lp15066
S'int32'
p15067
aNtp15068
(S'shuntResistorLoc'
p15069
(lp15070
S'int32'
p15071
aNtp15072
(S'extShuntResistorVal'
p15073
(lp15074
S'float64'
p15075
aNtp15076
(S'customScaleName'
p15077
(lp15078
S'char'
p15079
a(lp15080
I-1
aaNtp15081
tp15082
tp15083
sS'DAQmxGetCISemiPeriodUnits'
p15084
((lp15085
S'int32'
p15086
ag34
a((S'taskHandle'
p15087
(lp15088
S'TaskHandle'
p15089
aNtp15090
(S'channel'
p15091
(lp15092
S'char'
p15093
a(lp15094
I-1
aaNtp15095
(S'data'
p15096
(lp15097
S'int32'
p15098
ag42
aNtp15099
tp15100
tp15101
sS'DAQmxGetCICtrTimebaseDigFltrMinPulseWidth'
p15102
((lp15103
S'int32'
p15104
ag34
a((S'taskHandle'
p15105
(lp15106
S'TaskHandle'
p15107
aNtp15108
(S'channel'
p15109
(lp15110
S'char'
p15111
a(lp15112
I-1
aaNtp15113
(S'data'
p15114
(lp15115
S'float64'
p15116
ag42
aNtp15117
tp15118
tp15119
sS'DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate'
p15120
((lp15121
S'int32'
p15122
ag34
a((S'taskHandle'
p15123
(lp15124
S'TaskHandle'
p15125
aNtp15126
(S'channel'
p15127
(lp15128
S'char'
p15129
a(lp15130
I-1
aaNtp15131
(S'data'
p15132
(lp15133
S'float64'
p15134
aNtp15135
tp15136
tp15137
sS'DAQmxSetup1102Cal'
p15138
((lp15139
S'int32'
p15140
ag34
a((S'calHandle'
p15141
(lp15142
S'uInt32'
p15143
aNtp15144
(S'channelNames'
p15145
(lp15146
S'char'
p15147
a(lp15148
I-1
aaNtp15149
(S'gain'
p15150
(lp15151
S'float64'
p15152
aNtp15153
tp15154
tp15155
sS'DAQmxSetAnlgWinPauseTrigBtm'
p15156
((lp15157
S'int32'
p15158
ag34
a((S'taskHandle'
p15159
(lp15160
S'TaskHandle'
p15161
aNtp15162
(S'data'
p15163
(lp15164
S'float64'
p15165
aNtp15166
tp15167
tp15168
sS'DAQmxGetAISoundPressureMaxSoundPressureLvl'
p15169
((lp15170
S'int32'
p15171
ag34
a((S'taskHandle'
p15172
(lp15173
S'TaskHandle'
p15174
aNtp15175
(S'channel'
p15176
(lp15177
S'char'
p15178
a(lp15179
I-1
aaNtp15180
(S'data'
p15181
(lp15182
S'float64'
p15183
ag42
aNtp15184
tp15185
tp15186
sS'DAQmxSetCIEncoderBInputDigFltrEnable'
p15187
((lp15188
S'int32'
p15189
ag34
a((S'taskHandle'
p15190
(lp15191
S'TaskHandle'
p15192
aNtp15193
(S'channel'
p15194
(lp15195
S'char'
p15196
a(lp15197
I-1
aaNtp15198
(S'data'
p15199
(lp15200
S'bool32'
p15201
aNtp15202
tp15203
tp15204
sS'DAQmxGetCOCtrTimebaseSrc'
p15205
((lp15206
S'int32'
p15207
ag34
a((S'taskHandle'
p15208
(lp15209
S'TaskHandle'
p15210
aNtp15211
(S'channel'
p15212
(lp15213
S'char'
p15214
a(lp15215
I-1
aaNtp15216
(S'data'
p15217
(lp15218
S'char'
p15219
ag42
aNtp15220
(S'bufferSize'
p15221
(lp15222
S'uInt32'
p15223
aNtp15224
tp15225
tp15226
sS'DAQmxSetAICustomScaleName'
p15227
((lp15228
S'int32'
p15229
ag34
a((S'taskHandle'
p15230
(lp15231
S'TaskHandle'
p15232
aNtp15233
(S'channel'
p15234
(lp15235
S'char'
p15236
a(lp15237
I-1
aaNtp15238
(S'data'
p15239
(lp15240
S'char'
p15241
ag42
aNtp15242
tp15243
tp15244
sS'DAQmxSetExportedWatchdogExpiredEventOutputTerm'
p15245
((lp15246
S'int32'
p15247
ag34
a((S'taskHandle'
p15248
(lp15249
S'TaskHandle'
p15250
aNtp15251
(S'data'
p15252
(lp15253
S'char'
p15254
ag42
aNtp15255
tp15256
tp15257
sS'DAQmxResetAODataXferMech'
p15258
((lp15259
S'int32'
p15260
ag34
a((S'taskHandle'
p15261
(lp15262
S'TaskHandle'
p15263
aNtp15264
(S'channel'
p15265
(lp15266
S'char'
p15267
a(lp15268
I-1
aaNtp15269
tp15270
tp15271
sS'DAQmxResetCISemiPeriodUnits'
p15272
((lp15273
S'int32'
p15274
ag34
a((S'taskHandle'
p15275
(lp15276
S'TaskHandle'
p15277
aNtp15278
(S'channel'
p15279
(lp15280
S'char'
p15281
a(lp15282
I-1
aaNtp15283
tp15284
tp15285
sS'DAQmxGetDOInvertLines'
p15286
((lp15287
S'int32'
p15288
ag34
a((S'taskHandle'
p15289
(lp15290
S'TaskHandle'
p15291
aNtp15292
(S'channel'
p15293
(lp15294
S'char'
p15295
a(lp15296
I-1
aaNtp15297
(S'data'
p15298
(lp15299
S'bool32'
p15300
ag42
aNtp15301
tp15302
tp15303
sS'DAQmxGetCOCount'
p15304
((lp15305
S'int32'
p15306
ag34
a((S'taskHandle'
p15307
(lp15308
S'TaskHandle'
p15309
aNtp15310
(S'channel'
p15311
(lp15312
S'char'
p15313
a(lp15314
I-1
aaNtp15315
(S'data'
p15316
(lp15317
S'uInt32'
p15318
ag42
aNtp15319
tp15320
tp15321
sS'DAQmxSetCOPulseLowTime'
p15322
((lp15323
S'int32'
p15324
ag34
a((S'taskHandle'
p15325
(lp15326
S'TaskHandle'
p15327
aNtp15328
(S'channel'
p15329
(lp15330
S'char'
p15331
a(lp15332
I-1
aaNtp15333
(S'data'
p15334
(lp15335
S'float64'
p15336
aNtp15337
tp15338
tp15339
sS'DAQmxGetAIThrmcplCJCVal'
p15340
((lp15341
S'int32'
p15342
ag34
a((S'taskHandle'
p15343
(lp15344
S'TaskHandle'
p15345
aNtp15346
(S'channel'
p15347
(lp15348
S'char'
p15349
a(lp15350
I-1
aaNtp15351
(S'data'
p15352
(lp15353
S'float64'
p15354
ag42
aNtp15355
tp15356
tp15357
sS'DAQmxResetSwitchScanAttribute'
p15358
((lp15359
S'int32'
p15360
ag34
a((S'taskHandle'
p15361
(lp15362
S'TaskHandle'
p15363
aNtp15364
(S'attribute'
p15365
(lp15366
S'int32'
p15367
aNtp15368
tp15369
tp15370
sS'DAQmxResetCIAngEncoderPulsesPerRev'
p15371
((lp15372
S'int32'
p15373
ag34
a((S'taskHandle'
p15374
(lp15375
S'TaskHandle'
p15376
aNtp15377
(S'channel'
p15378
(lp15379
S'char'
p15380
a(lp15381
I-1
aaNtp15382
tp15383
tp15384
sS'DAQmxResetDigEdgeRefTrigSrc'
p15385
((lp15386
S'int32'
p15387
ag34
a((S'taskHandle'
p15388
(lp15389
S'TaskHandle'
p15390
aNtp15391
tp15392
tp15393
sS'DAQmxWriteToTEDSFromFile'
p15394
((lp15395
S'int32'
p15396
ag34
a((S'physicalChannel'
p15397
(lp15398
S'char'
p15399
a(lp15400
I-1
aaNtp15401
(S'filePath'
p15402
(lp15403
S'char'
p15404
a(lp15405
I-1
aaNtp15406
(S'basicTEDSOptions'
p15407
(lp15408
S'int32'
p15409
aNtp15410
tp15411
tp15412
sS'DAQmxResetDigLvlPauseTrigSrc'
p15413
((lp15414
S'int32'
p15415
ag34
a((S'taskHandle'
p15416
(lp15417
S'TaskHandle'
p15418
aNtp15419
tp15420
tp15421
sS'DAQmxResetAnlgLvlPauseTrigLvl'
p15422
((lp15423
S'int32'
p15424
ag34
a((S'taskHandle'
p15425
(lp15426
S'TaskHandle'
p15427
aNtp15428
tp15429
tp15430
sS'DAQmxSetStartTrigDelayUnits'
p15431
((lp15432
S'int32'
p15433
ag34
a((S'taskHandle'
p15434
(lp15435
S'TaskHandle'
p15436
aNtp15437
(S'data'
p15438
(lp15439
S'int32'
p15440
aNtp15441
tp15442
tp15443
sS'DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc'
p15444
((lp15445
S'int32'
p15446
ag34
a((S'taskHandle'
p15447
(lp15448
S'TaskHandle'
p15449
aNtp15450
(S'channel'
p15451
(lp15452
S'char'
p15453
a(lp15454
I-1
aaNtp15455
tp15456
tp15457
sS'DAQmxWriteDigitalLines'
p15458
((lp15459
S'int32'
p15460
ag34
a((S'taskHandle'
p15461
(lp15462
S'TaskHandle'
p15463
aNtp15464
(S'numSampsPerChan'
p15465
(lp15466
S'int32'
p15467
aNtp15468
(S'autoStart'
p15469
(lp15470
S'bool32'
p15471
aNtp15472
(S'timeout'
p15473
(lp15474
S'float64'
p15475
aNtp15476
(S'dataLayout'
p15477
(lp15478
S'bool32'
p15479
aNtp15480
(S'writeArray'
p15481
(lp15482
S'uInt8'
p15483
a(lp15484
I-1
aaNtp15485
(S'sampsPerChanWritten'
p15486
(lp15487
S'int32'
p15488
ag42
aNtp15489
(S'reserved'
p15490
(lp15491
S'bool32'
p15492
ag42
aNtp15493
tp15494
tp15495
sS'DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth'
p15496
((lp15497
S'int32'
p15498
ag34
a((S'taskHandle'
p15499
(lp15500
S'TaskHandle'
p15501
aNtp15502
(S'data'
p15503
(lp15504
S'float64'
p15505
aNtp15506
tp15507
tp15508
sS'DAQmxGetSelfCalLastTemp'
p15509
((lp15510
S'int32'
p15511
ag34
a((S'deviceName'
p15512
(lp15513
S'char'
p15514
a(lp15515
I-1
aaNtp15516
(S'data'
p15517
(lp15518
S'float64'
p15519
ag42
aNtp15520
tp15521
tp15522
sS'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p15523
((lp15524
S'int32'
p15525
ag34
a((S'taskHandle'
p15526
(lp15527
S'TaskHandle'
p15528
aNtp15529
(S'channel'
p15530
(lp15531
S'char'
p15532
a(lp15533
I-1
aaNtp15534
(S'data'
p15535
(lp15536
S'char'
p15537
ag42
aNtp15538
(S'bufferSize'
p15539
(lp15540
S'uInt32'
p15541
aNtp15542
tp15543
tp15544
sS'DAQmxResetBufferAttribute'
p15545
((lp15546
S'int32'
p15547
ag34
a((S'taskHandle'
p15548
(lp15549
S'TaskHandle'
p15550
aNtp15551
(S'attribute'
p15552
(lp15553
S'int32'
p15554
aNtp15555
tp15556
tp15557
sS'DAQmxSetAODACRefAllowConnToGnd'
p15558
((lp15559
S'int32'
p15560
ag34
a((S'taskHandle'
p15561
(lp15562
S'TaskHandle'
p15563
aNtp15564
(S'channel'
p15565
(lp15566
S'char'
p15567
a(lp15568
I-1
aaNtp15569
(S'data'
p15570
(lp15571
S'bool32'
p15572
aNtp15573
tp15574
tp15575
sS'DAQmxGetScaleLinSlope'
p15576
((lp15577
S'int32'
p15578
ag34
a((S'scaleName'
p15579
(lp15580
S'char'
p15581
a(lp15582
I-1
aaNtp15583
(S'data'
p15584
(lp15585
S'float64'
p15586
ag42
aNtp15587
tp15588
tp15589
sS'DAQmxSetAnlgEdgeRefTrigSrc'
p15590
((lp15591
S'int32'
p15592
ag34
a((S'taskHandle'
p15593
(lp15594
S'TaskHandle'
p15595
aNtp15596
(S'data'
p15597
(lp15598
S'char'
p15599
ag42
aNtp15600
tp15601
tp15602
sS'DAQmxResetExportedAIConvClkOutputTerm'
p15603
((lp15604
S'int32'
p15605
ag34
a((S'taskHandle'
p15606
(lp15607
S'TaskHandle'
p15608
aNtp15609
tp15610
tp15611
sS'DAQmxResetAICurrentUnits'
p15612
((lp15613
S'int32'
p15614
ag34
a((S'taskHandle'
p15615
(lp15616
S'TaskHandle'
p15617
aNtp15618
(S'channel'
p15619
(lp15620
S'char'
p15621
a(lp15622
I-1
aaNtp15623
tp15624
tp15625
sS'DAQmxGetBufInputBufSize'
p15626
((lp15627
S'int32'
p15628
ag34
a((S'taskHandle'
p15629
(lp15630
S'TaskHandle'
p15631
aNtp15632
(S'data'
p15633
(lp15634
S'uInt32'
p15635
ag42
aNtp15636
tp15637
tp15638
sS'DAQmxSetDelayFromSampClkDelay'
p15639
((lp15640
S'int32'
p15641
ag34
a((S'taskHandle'
p15642
(lp15643
S'TaskHandle'
p15644
aNtp15645
(S'data'
p15646
(lp15647
S'float64'
p15648
aNtp15649
tp15650
tp15651
sS'DAQmxResetDevice'
p15652
((lp15653
S'int32'
p15654
ag34
a((S'deviceName'
p15655
(lp15656
S'char'
p15657
a(lp15658
I-1
aaNtp15659
tp15660
tp15661
sS'DAQmxSwitchCloseRelays'
p15662
((lp15663
S'int32'
p15664
ag34
a((S'relayList'
p15665
(lp15666
S'char'
p15667
a(lp15668
I-1
aaNtp15669
(S'waitForSettling'
p15670
(lp15671
S'bool32'
p15672
aNtp15673
tp15674
tp15675
sS'DAQmxResetChanAttribute'
p15676
((lp15677
S'int32'
p15678
ag34
a((S'taskHandle'
p15679
(lp15680
S'TaskHandle'
p15681
aNtp15682
(S'channel'
p15683
(lp15684
S'char'
p15685
a(lp15686
I-1
aaNtp15687
(S'attribute'
p15688
(lp15689
S'int32'
p15690
aNtp15691
tp15692
tp15693
sS'DAQmxResetAIAutoZeroMode'
p15694
((lp15695
S'int32'
p15696
ag34
a((S'taskHandle'
p15697
(lp15698
S'TaskHandle'
p15699
aNtp15700
(S'channel'
p15701
(lp15702
S'char'
p15703
a(lp15704
I-1
aaNtp15705
tp15706
tp15707
sS'DAQmxSetCIPeriodDigFltrTimebaseSrc'
p15708
((lp15709
S'int32'
p15710
ag34
a((S'taskHandle'
p15711
(lp15712
S'TaskHandle'
p15713
aNtp15714
(S'channel'
p15715
(lp15716
S'char'
p15717
a(lp15718
I-1
aaNtp15719
(S'data'
p15720
(lp15721
S'char'
p15722
ag42
aNtp15723
tp15724
tp15725
sS'DAQmxResetAIRngLow'
p15726
((lp15727
S'int32'
p15728
ag34
a((S'taskHandle'
p15729
(lp15730
S'TaskHandle'
p15731
aNtp15732
(S'channel'
p15733
(lp15734
S'char'
p15735
a(lp15736
I-1
aaNtp15737
tp15738
tp15739
sS'DAQmxSetCIPeriodUnits'
p15740
((lp15741
S'int32'
p15742
ag34
a((S'taskHandle'
p15743
(lp15744
S'TaskHandle'
p15745
aNtp15746
(S'channel'
p15747
(lp15748
S'char'
p15749
a(lp15750
I-1
aaNtp15751
(S'data'
p15752
(lp15753
S'int32'
p15754
aNtp15755
tp15756
tp15757
sS'DAQmxSwitchDisconnectAll'
p15758
((lp15759
S'int32'
p15760
ag34
a((S'deviceName'
p15761
(lp15762
S'char'
p15763
a(lp15764
I-1
aaNtp15765
(S'waitForSettling'
p15766
(lp15767
S'bool32'
p15768
aNtp15769
tp15770
tp15771
sS'DAQmxAdjustDSATimebaseCal'
p15772
((lp15773
S'int32'
p15774
ag34
a((S'calHandle'
p15775
(lp15776
S'uInt32'
p15777
aNtp15778
(S'referenceFrequency'
p15779
(lp15780
S'float64'
p15781
aNtp15782
tp15783
tp15784
sS'DAQmxGetCIEncoderZIndexEnable'
p15785
((lp15786
S'int32'
p15787
ag34
a((S'taskHandle'
p15788
(lp15789
S'TaskHandle'
p15790
aNtp15791
(S'channel'
p15792
(lp15793
S'char'
p15794
a(lp15795
I-1
aaNtp15796
(S'data'
p15797
(lp15798
S'bool32'
p15799
ag42
aNtp15800
tp15801
tp15802
sS'DAQmxResetInterlockedHshkTrigAssertedLvl'
p15803
((lp15804
S'int32'
p15805
ag34
a((S'taskHandle'
p15806
(lp15807
S'TaskHandle'
p15808
aNtp15809
tp15810
tp15811
sS'DAQmxResetCISemiPeriodDigFltrTimebaseRate'
p15812
((lp15813
S'int32'
p15814
ag34
a((S'taskHandle'
p15815
(lp15816
S'TaskHandle'
p15817
aNtp15818
(S'channel'
p15819
(lp15820
S'char'
p15821
a(lp15822
I-1
aaNtp15823
tp15824
tp15825
sS'DAQmxResetSampClkDigFltrTimebaseRate'
p15826
((lp15827
S'int32'
p15828
ag34
a((S'taskHandle'
p15829
(lp15830
S'TaskHandle'
p15831
aNtp15832
tp15833
tp15834
sS'DAQmxCreateTEDSAIRTDChan'
p15835
((lp15836
S'int32'
p15837
ag34
a((S'taskHandle'
p15838
(lp15839
S'TaskHandle'
p15840
aNtp15841
(S'physicalChannel'
p15842
(lp15843
S'char'
p15844
a(lp15845
I-1
aaNtp15846
(S'nameToAssignToChannel'
p15847
(lp15848
S'char'
p15849
a(lp15850
I-1
aaNtp15851
(S'minVal'
p15852
(lp15853
S'float64'
p15854
aNtp15855
(S'maxVal'
p15856
(lp15857
S'float64'
p15858
aNtp15859
(S'units'
p15860
(lp15861
S'int32'
p15862
aNtp15863
(S'resistanceConfig'
p15864
(lp15865
S'int32'
p15866
aNtp15867
(S'currentExcitSource'
p15868
(lp15869
S'int32'
p15870
aNtp15871
(S'currentExcitVal'
p15872
(lp15873
S'float64'
p15874
aNtp15875
tp15876
tp15877
sS'DAQmxGetCORdyForNewVal'
p15878
((lp15879
S'int32'
p15880
ag34
a((S'taskHandle'
p15881
(lp15882
S'TaskHandle'
p15883
aNtp15884
(S'channel'
p15885
(lp15886
S'char'
p15887
a(lp15888
I-1
aaNtp15889
(S'data'
p15890
(lp15891
S'bool32'
p15892
ag42
aNtp15893
tp15894
tp15895
sS'DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p15896
((lp15897
S'int32'
p15898
ag34
a((S'taskHandle'
p15899
(lp15900
S'TaskHandle'
p15901
aNtp15902
(S'channel'
p15903
(lp15904
S'char'
p15905
a(lp15906
I-1
aaNtp15907
(S'data'
p15908
(lp15909
S'float64'
p15910
aNtp15911
tp15912
tp15913
sS'DAQmxResetAIChanCalEnableCal'
p15914
((lp15915
S'int32'
p15916
ag34
a((S'taskHandle'
p15917
(lp15918
S'TaskHandle'
p15919
aNtp15920
(S'channel'
p15921
(lp15922
S'char'
p15923
a(lp15924
I-1
aaNtp15925
tp15926
tp15927
sS'DAQmxResetAILVDTSensitivity'
p15928
((lp15929
S'int32'
p15930
ag34
a((S'taskHandle'
p15931
(lp15932
S'TaskHandle'
p15933
aNtp15934
(S'channel'
p15935
(lp15936
S'char'
p15937
a(lp15938
I-1
aaNtp15939
tp15940
tp15941
sS'DAQmxGetAIThrmstrB'
p15942
((lp15943
S'int32'
p15944
ag34
a((S'taskHandle'
p15945
(lp15946
S'TaskHandle'
p15947
aNtp15948
(S'channel'
p15949
(lp15950
S'char'
p15951
a(lp15952
I-1
aaNtp15953
(S'data'
p15954
(lp15955
S'float64'
p15956
ag42
aNtp15957
tp15958
tp15959
sS'DAQmxGetAIThrmstrA'
p15960
((lp15961
S'int32'
p15962
ag34
a((S'taskHandle'
p15963
(lp15964
S'TaskHandle'
p15965
aNtp15966
(S'channel'
p15967
(lp15968
S'char'
p15969
a(lp15970
I-1
aaNtp15971
(S'data'
p15972
(lp15973
S'float64'
p15974
ag42
aNtp15975
tp15976
tp15977
sS'DAQmxGetSyncPulseSrc'
p15978
((lp15979
S'int32'
p15980
ag34
a((S'taskHandle'
p15981
(lp15982
S'TaskHandle'
p15983
aNtp15984
(S'data'
p15985
(lp15986
S'char'
p15987
ag42
aNtp15988
(S'bufferSize'
p15989
(lp15990
S'uInt32'
p15991
aNtp15992
tp15993
tp15994
sS'DAQmxGetDelayFromSampClkDelay'
p15995
((lp15996
S'int32'
p15997
ag34
a((S'taskHandle'
p15998
(lp15999
S'TaskHandle'
p16000
aNtp16001
(S'data'
p16002
(lp16003
S'float64'
p16004
ag42
aNtp16005
tp16006
tp16007
sS'DAQmxSetAIRVDTSensitivityUnits'
p16008
((lp16009
S'int32'
p16010
ag34
a((S'taskHandle'
p16011
(lp16012
S'TaskHandle'
p16013
aNtp16014
(S'channel'
p16015
(lp16016
S'char'
p16017
a(lp16018
I-1
aaNtp16019
(S'data'
p16020
(lp16021
S'int32'
p16022
aNtp16023
tp16024
tp16025
sS'DAQmxSetAnlgWinPauseTrigWhen'
p16026
((lp16027
S'int32'
p16028
ag34
a((S'taskHandle'
p16029
(lp16030
S'TaskHandle'
p16031
aNtp16032
(S'data'
p16033
(lp16034
S'int32'
p16035
aNtp16036
tp16037
tp16038
sS'DAQmxSetDigLvlPauseTrigDigSyncEnable'
p16039
((lp16040
S'int32'
p16041
ag34
a((S'taskHandle'
p16042
(lp16043
S'TaskHandle'
p16044
aNtp16045
(S'data'
p16046
(lp16047
S'bool32'
p16048
aNtp16049
tp16050
tp16051
sS'DAQmxSetWatchdogExpirTrigType'
p16052
((lp16053
S'int32'
p16054
ag34
a((S'taskHandle'
p16055
(lp16056
S'TaskHandle'
p16057
aNtp16058
(S'data'
p16059
(lp16060
S'int32'
p16061
aNtp16062
tp16063
tp16064
sS'DAQmxResetCIEncoderZInputDigFltrTimebaseSrc'
p16065
((lp16066
S'int32'
p16067
ag34
a((S'taskHandle'
p16068
(lp16069
S'TaskHandle'
p16070
aNtp16071
(S'channel'
p16072
(lp16073
S'char'
p16074
a(lp16075
I-1
aaNtp16076
tp16077
tp16078
sS'DAQmxResetAODACRefVal'
p16079
((lp16080
S'int32'
p16081
ag34
a((S'taskHandle'
p16082
(lp16083
S'TaskHandle'
p16084
aNtp16085
(S'channel'
p16086
(lp16087
S'char'
p16088
a(lp16089
I-1
aaNtp16090
tp16091
tp16092
sS'DAQmxResetAIACExcitFreq'
p16093
((lp16094
S'int32'
p16095
ag34
a((S'taskHandle'
p16096
(lp16097
S'TaskHandle'
p16098
aNtp16099
(S'channel'
p16100
(lp16101
S'char'
p16102
a(lp16103
I-1
aaNtp16104
tp16105
tp16106
sS'DAQmxGetAIAccelSensitivity'
p16107
((lp16108
S'int32'
p16109
ag34
a((S'taskHandle'
p16110
(lp16111
S'TaskHandle'
p16112
aNtp16113
(S'channel'
p16114
(lp16115
S'char'
p16116
a(lp16117
I-1
aaNtp16118
(S'data'
p16119
(lp16120
S'float64'
p16121
ag42
aNtp16122
tp16123
tp16124
sS'DAQmxSetCIDupCountPrevent'
p16125
((lp16126
S'int32'
p16127
ag34
a((S'taskHandle'
p16128
(lp16129
S'TaskHandle'
p16130
aNtp16131
(S'channel'
p16132
(lp16133
S'char'
p16134
a(lp16135
I-1
aaNtp16136
(S'data'
p16137
(lp16138
S'bool32'
p16139
aNtp16140
tp16141
tp16142
sS'DAQmxResetAOMin'
p16143
((lp16144
S'int32'
p16145
ag34
a((S'taskHandle'
p16146
(lp16147
S'TaskHandle'
p16148
aNtp16149
(S'channel'
p16150
(lp16151
S'char'
p16152
a(lp16153
I-1
aaNtp16154
tp16155
tp16156
sS'DAQmxSwitchOpenRelays'
p16157
((lp16158
S'int32'
p16159
ag34
a((S'relayList'
p16160
(lp16161
S'char'
p16162
a(lp16163
I-1
aaNtp16164
(S'waitForSettling'
p16165
(lp16166
S'bool32'
p16167
aNtp16168
tp16169
tp16170
sS'DAQmxGetRefTrigPretrigSamples'
p16171
((lp16172
S'int32'
p16173
ag34
a((S'taskHandle'
p16174
(lp16175
S'TaskHandle'
p16176
aNtp16177
(S'data'
p16178
(lp16179
S'uInt32'
p16180
ag42
aNtp16181
tp16182
tp16183
sS'DAQmxWriteRaw'
p16184
((lp16185
S'int32'
p16186
ag34
a((S'taskHandle'
p16187
(lp16188
S'TaskHandle'
p16189
aNtp16190
(S'numSamps'
p16191
(lp16192
S'int32'
p16193
aNtp16194
(S'autoStart'
p16195
(lp16196
S'bool32'
p16197
aNtp16198
(S'timeout'
p16199
(lp16200
S'float64'
p16201
aNtp16202
(S'writeArray'
p16203
(lp16204
S'void'
p16205
ag42
aNtp16206
(S'sampsPerChanWritten'
p16207
(lp16208
S'int32'
p16209
ag42
aNtp16210
(S'reserved'
p16211
(lp16212
S'bool32'
p16213
ag42
aNtp16214
tp16215
tp16216
sS'DAQmxResetAIMax'
p16217
((lp16218
S'int32'
p16219
ag34
a((S'taskHandle'
p16220
(lp16221
S'TaskHandle'
p16222
aNtp16223
(S'channel'
p16224
(lp16225
S'char'
p16226
a(lp16227
I-1
aaNtp16228
tp16229
tp16230
sS'DAQmxResetAOOutputImpedance'
p16231
((lp16232
S'int32'
p16233
ag34
a((S'taskHandle'
p16234
(lp16235
S'TaskHandle'
p16236
aNtp16237
(S'channel'
p16238
(lp16239
S'char'
p16240
a(lp16241
I-1
aaNtp16242
tp16243
tp16244
sS'DAQmxSetExportedHshkEventDelay'
p16245
((lp16246
S'int32'
p16247
ag34
a((S'taskHandle'
p16248
(lp16249
S'TaskHandle'
p16250
aNtp16251
(S'data'
p16252
(lp16253
S'float64'
p16254
aNtp16255
tp16256
tp16257
sS'DAQmxGetMasterTimebaseSrc'
p16258
((lp16259
S'int32'
p16260
ag34
a((S'taskHandle'
p16261
(lp16262
S'TaskHandle'
p16263
aNtp16264
(S'data'
p16265
(lp16266
S'char'
p16267
ag42
aNtp16268
(S'bufferSize'
p16269
(lp16270
S'uInt32'
p16271
aNtp16272
tp16273
tp16274
sS'DAQmxGetCICtrTimebaseSrc'
p16275
((lp16276
S'int32'
p16277
ag34
a((S'taskHandle'
p16278
(lp16279
S'TaskHandle'
p16280
aNtp16281
(S'channel'
p16282
(lp16283
S'char'
p16284
a(lp16285
I-1
aaNtp16286
(S'data'
p16287
(lp16288
S'char'
p16289
ag42
aNtp16290
(S'bufferSize'
p16291
(lp16292
S'uInt32'
p16293
aNtp16294
tp16295
tp16296
sS'DAQmxResetAILossyLSBRemovalCompressedSampSize'
p16297
((lp16298
S'int32'
p16299
ag34
a((S'taskHandle'
p16300
(lp16301
S'TaskHandle'
p16302
aNtp16303
(S'channel'
p16304
(lp16305
S'char'
p16306
a(lp16307
I-1
aaNtp16308
tp16309
tp16310
sS'DAQmxResetMasterTimebaseRate'
p16311
((lp16312
S'int32'
p16313
ag34
a((S'taskHandle'
p16314
(lp16315
S'TaskHandle'
p16316
aNtp16317
tp16318
tp16319
sS'DAQmxGetCIFreqDigFltrTimebaseSrc'
p16320
((lp16321
S'int32'
p16322
ag34
a((S'taskHandle'
p16323
(lp16324
S'TaskHandle'
p16325
aNtp16326
(S'channel'
p16327
(lp16328
S'char'
p16329
a(lp16330
I-1
aaNtp16331
(S'data'
p16332
(lp16333
S'char'
p16334
ag42
aNtp16335
(S'bufferSize'
p16336
(lp16337
S'uInt32'
p16338
aNtp16339
tp16340
tp16341
sS'DAQmxResetWriteRegenMode'
p16342
((lp16343
S'int32'
p16344
ag34
a((S'taskHandle'
p16345
(lp16346
S'TaskHandle'
p16347
aNtp16348
tp16349
tp16350
sS'DAQmxGetExportedDividedSampClkTimebaseOutputTerm'
p16351
((lp16352
S'int32'
p16353
ag34
a((S'taskHandle'
p16354
(lp16355
S'TaskHandle'
p16356
aNtp16357
(S'data'
p16358
(lp16359
S'char'
p16360
ag42
aNtp16361
(S'bufferSize'
p16362
(lp16363
S'uInt32'
p16364
aNtp16365
tp16366
tp16367
sS'DAQmxGetAnlgLvlPauseTrigSrc'
p16368
((lp16369
S'int32'
p16370
ag34
a((S'taskHandle'
p16371
(lp16372
S'TaskHandle'
p16373
aNtp16374
(S'data'
p16375
(lp16376
S'char'
p16377
ag42
aNtp16378
(S'bufferSize'
p16379
(lp16380
S'uInt32'
p16381
aNtp16382
tp16383
tp16384
sS'DAQmxGetAIChanCalScaleType'
p16385
((lp16386
S'int32'
p16387
ag34
a((S'taskHandle'
p16388
(lp16389
S'TaskHandle'
p16390
aNtp16391
(S'channel'
p16392
(lp16393
S'char'
p16394
a(lp16395
I-1
aaNtp16396
(S'data'
p16397
(lp16398
S'int32'
p16399
ag42
aNtp16400
tp16401
tp16402
sS'DAQmxSetDOInvertLines'
p16403
((lp16404
S'int32'
p16405
ag34
a((S'taskHandle'
p16406
(lp16407
S'TaskHandle'
p16408
aNtp16409
(S'channel'
p16410
(lp16411
S'char'
p16412
a(lp16413
I-1
aaNtp16414
(S'data'
p16415
(lp16416
S'bool32'
p16417
aNtp16418
tp16419
tp16420
sS'DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth'
p16421
((lp16422
S'int32'
p16423
ag34
a((S'taskHandle'
p16424
(lp16425
S'TaskHandle'
p16426
aNtp16427
(S'channel'
p16428
(lp16429
S'char'
p16430
a(lp16431
I-1
aaNtp16432
(S'data'
p16433
(lp16434
S'float64'
p16435
ag42
aNtp16436
tp16437
tp16438
sS'DAQmxSetExportedSyncPulseEventOutputTerm'
p16439
((lp16440
S'int32'
p16441
ag34
a((S'taskHandle'
p16442
(lp16443
S'TaskHandle'
p16444
aNtp16445
(S'data'
p16446
(lp16447
S'char'
p16448
ag42
aNtp16449
tp16450
tp16451
sS'DAQmxResetSyncPulseMinDelayToStart'
p16452
((lp16453
S'int32'
p16454
ag34
a((S'taskHandle'
p16455
(lp16456
S'TaskHandle'
p16457
aNtp16458
tp16459
tp16460
sS'DAQmxGetCIFreqDigFltrEnable'
p16461
((lp16462
S'int32'
p16463
ag34
a((S'taskHandle'
p16464
(lp16465
S'TaskHandle'
p16466
aNtp16467
(S'channel'
p16468
(lp16469
S'char'
p16470
a(lp16471
I-1
aaNtp16472
(S'data'
p16473
(lp16474
S'bool32'
p16475
ag42
aNtp16476
tp16477
tp16478
sS'DAQmxSetCIPulseWidthStartingEdge'
p16479
((lp16480
S'int32'
p16481
ag34
a((S'taskHandle'
p16482
(lp16483
S'TaskHandle'
p16484
aNtp16485
(S'channel'
p16486
(lp16487
S'char'
p16488
a(lp16489
I-1
aaNtp16490
(S'data'
p16491
(lp16492
S'int32'
p16493
aNtp16494
tp16495
tp16496
sS'DAQmxSetAIExcitUseForScaling'
p16497
((lp16498
S'int32'
p16499
ag34
a((S'taskHandle'
p16500
(lp16501
S'TaskHandle'
p16502
aNtp16503
(S'channel'
p16504
(lp16505
S'char'
p16506
a(lp16507
I-1
aaNtp16508
(S'data'
p16509
(lp16510
S'bool32'
p16511
aNtp16512
tp16513
tp16514
sS'DAQmxGetDOUseOnlyOnBrdMem'
p16515
((lp16516
S'int32'
p16517
ag34
a((S'taskHandle'
p16518
(lp16519
S'TaskHandle'
p16520
aNtp16521
(S'channel'
p16522
(lp16523
S'char'
p16524
a(lp16525
I-1
aaNtp16526
(S'data'
p16527
(lp16528
S'bool32'
p16529
ag42
aNtp16530
tp16531
tp16532
sS'DAQmxSetScaleDescr'
p16533
((lp16534
S'int32'
p16535
ag34
a((S'scaleName'
p16536
(lp16537
S'char'
p16538
a(lp16539
I-1
aaNtp16540
(S'data'
p16541
(lp16542
S'char'
p16543
ag42
aNtp16544
tp16545
tp16546
sS'DAQmxGetPhysicalChanTEDSTemplateIDs'
p16547
((lp16548
S'int32'
p16549
ag34
a((S'physicalChannel'
p16550
(lp16551
S'char'
p16552
a(lp16553
I-1
aaNtp16554
(S'data'
p16555
(lp16556
S'uInt32'
p16557
ag42
aNtp16558
(S'arraySizeInSamples'
p16559
(lp16560
S'uInt32'
p16561
aNtp16562
tp16563
tp16564
sS'DAQmxResetAIAccelSensitivityUnits'
p16565
((lp16566
S'int32'
p16567
ag34
a((S'taskHandle'
p16568
(lp16569
S'TaskHandle'
p16570
aNtp16571
(S'channel'
p16572
(lp16573
S'char'
p16574
a(lp16575
I-1
aaNtp16576
tp16577
tp16578
sS'DAQmxSaveTask'
p16579
((lp16580
S'int32'
p16581
ag34
a((S'taskHandle'
p16582
(lp16583
S'TaskHandle'
p16584
aNtp16585
(S'saveAs'
p16586
(lp16587
S'char'
p16588
a(lp16589
I-1
aaNtp16590
(S'author'
p16591
(lp16592
S'char'
p16593
a(lp16594
I-1
aaNtp16595
(S'options'
p16596
(lp16597
S'uInt32'
p16598
aNtp16599
tp16600
tp16601
sS'DAQmxGetScaleMapPreScaledMax'
p16602
((lp16603
S'int32'
p16604
ag34
a((S'scaleName'
p16605
(lp16606
S'char'
p16607
a(lp16608
I-1
aaNtp16609
(S'data'
p16610
(lp16611
S'float64'
p16612
ag42
aNtp16613
tp16614
tp16615
sS'DAQmxAdjust1125Cal'
p16616
((lp16617
S'int32'
p16618
ag34
a((S'calHandle'
p16619
(lp16620
S'uInt32'
p16621
aNtp16622
(S'refVoltage'
p16623
(lp16624
S'float64'
p16625
aNtp16626
(S'measOutput'
p16627
(lp16628
S'float64'
p16629
aNtp16630
tp16631
tp16632
sS'DAQmxSetCICtrTimebaseDigFltrEnable'
p16633
((lp16634
S'int32'
p16635
ag34
a((S'taskHandle'
p16636
(lp16637
S'TaskHandle'
p16638
aNtp16639
(S'channel'
p16640
(lp16641
S'char'
p16642
a(lp16643
I-1
aaNtp16644
(S'data'
p16645
(lp16646
S'bool32'
p16647
aNtp16648
tp16649
tp16650
sS'DAQmxGetPersistedTaskAllowInteractiveEditing'
p16651
((lp16652
S'int32'
p16653
ag34
a((S'taskName'
p16654
(lp16655
S'char'
p16656
a(lp16657
I-1
aaNtp16658
(S'data'
p16659
(lp16660
S'bool32'
p16661
ag42
aNtp16662
tp16663
tp16664
sS'DAQmxResetAOResolutionUnits'
p16665
((lp16666
S'int32'
p16667
ag34
a((S'taskHandle'
p16668
(lp16669
S'TaskHandle'
p16670
aNtp16671
(S'channel'
p16672
(lp16673
S'char'
p16674
a(lp16675
I-1
aaNtp16676
tp16677
tp16678
sS'DAQmxSetExportedAIConvClkOutputTerm'
p16679
((lp16680
S'int32'
p16681
ag34
a((S'taskHandle'
p16682
(lp16683
S'TaskHandle'
p16684
aNtp16685
(S'data'
p16686
(lp16687
S'char'
p16688
ag42
aNtp16689
tp16690
tp16691
sS'DAQmxSetAIChanCalApplyCalIfExp'
p16692
((lp16693
S'int32'
p16694
ag34
a((S'taskHandle'
p16695
(lp16696
S'TaskHandle'
p16697
aNtp16698
(S'channel'
p16699
(lp16700
S'char'
p16701
a(lp16702
I-1
aaNtp16703
(S'data'
p16704
(lp16705
S'bool32'
p16706
aNtp16707
tp16708
tp16709
sS'DAQmxSetCITwoEdgeSepFirstDigFltrEnable'
p16710
((lp16711
S'int32'
p16712
ag34
a((S'taskHandle'
p16713
(lp16714
S'TaskHandle'
p16715
aNtp16716
(S'channel'
p16717
(lp16718
S'char'
p16719
a(lp16720
I-1
aaNtp16721
(S'data'
p16722
(lp16723
S'bool32'
p16724
aNtp16725
tp16726
tp16727
sS'DAQmxGetCIPeriodDigSyncEnable'
p16728
((lp16729
S'int32'
p16730
ag34
a((S'taskHandle'
p16731
(lp16732
S'TaskHandle'
p16733
aNtp16734
(S'channel'
p16735
(lp16736
S'char'
p16737
a(lp16738
I-1
aaNtp16739
(S'data'
p16740
(lp16741
S'bool32'
p16742
ag42
aNtp16743
tp16744
tp16745
sS'DAQmxSetAOCustomScaleName'
p16746
((lp16747
S'int32'
p16748
ag34
a((S'taskHandle'
p16749
(lp16750
S'TaskHandle'
p16751
aNtp16752
(S'channel'
p16753
(lp16754
S'char'
p16755
a(lp16756
I-1
aaNtp16757
(S'data'
p16758
(lp16759
S'char'
p16760
ag42
aNtp16761
tp16762
tp16763
sS'DAQmxGetSampClkTimebaseDiv'
p16764
((lp16765
S'int32'
p16766
ag34
a((S'taskHandle'
p16767
(lp16768
S'TaskHandle'
p16769
aNtp16770
(S'data'
p16771
(lp16772
S'uInt32'
p16773
ag42
aNtp16774
tp16775
tp16776
sS'DAQmxSetAIBridgeShuntCalGainAdjust'
p16777
((lp16778
S'int32'
p16779
ag34
a((S'taskHandle'
p16780
(lp16781
S'TaskHandle'
p16782
aNtp16783
(S'channel'
p16784
(lp16785
S'char'
p16786
a(lp16787
I-1
aaNtp16788
(S'data'
p16789
(lp16790
S'float64'
p16791
aNtp16792
tp16793
tp16794
sS'DAQmxGetAILowpassSwitchCapOutClkDiv'
p16795
((lp16796
S'int32'
p16797
ag34
a((S'taskHandle'
p16798
(lp16799
S'TaskHandle'
p16800
aNtp16801
(S'channel'
p16802
(lp16803
S'char'
p16804
a(lp16805
I-1
aaNtp16806
(S'data'
p16807
(lp16808
S'uInt32'
p16809
ag42
aNtp16810
tp16811
tp16812
sS'DAQmxGetAIResistanceCfg'
p16813
((lp16814
S'int32'
p16815
ag34
a((S'taskHandle'
p16816
(lp16817
S'TaskHandle'
p16818
aNtp16819
(S'channel'
p16820
(lp16821
S'char'
p16822
a(lp16823
I-1
aaNtp16824
(S'data'
p16825
(lp16826
S'int32'
p16827
ag42
aNtp16828
tp16829
tp16830
sS'DAQmxGetAnlgWinRefTrigSrc'
p16831
((lp16832
S'int32'
p16833
ag34
a((S'taskHandle'
p16834
(lp16835
S'TaskHandle'
p16836
aNtp16837
(S'data'
p16838
(lp16839
S'char'
p16840
ag42
aNtp16841
(S'bufferSize'
p16842
(lp16843
S'uInt32'
p16844
aNtp16845
tp16846
tp16847
sS'DAQmxGetSampClkDigFltrTimebaseRate'
p16848
((lp16849
S'int32'
p16850
ag34
a((S'taskHandle'
p16851
(lp16852
S'TaskHandle'
p16853
aNtp16854
(S'data'
p16855
(lp16856
S'float64'
p16857
ag42
aNtp16858
tp16859
tp16860
sS'DAQmxResetCITwoEdgeSepFirstEdge'
p16861
((lp16862
S'int32'
p16863
ag34
a((S'taskHandle'
p16864
(lp16865
S'TaskHandle'
p16866
aNtp16867
(S'channel'
p16868
(lp16869
S'char'
p16870
a(lp16871
I-1
aaNtp16872
tp16873
tp16874
sS'DAQmxSetCITwoEdgeSepFirstEdge'
p16875
((lp16876
S'int32'
p16877
ag34
a((S'taskHandle'
p16878
(lp16879
S'TaskHandle'
p16880
aNtp16881
(S'channel'
p16882
(lp16883
S'char'
p16884
a(lp16885
I-1
aaNtp16886
(S'data'
p16887
(lp16888
S'int32'
p16889
aNtp16890
tp16891
tp16892
sS'DAQmxSetCIEncoderAInputDigFltrTimebaseRate'
p16893
((lp16894
S'int32'
p16895
ag34
a((S'taskHandle'
p16896
(lp16897
S'TaskHandle'
p16898
aNtp16899
(S'channel'
p16900
(lp16901
S'char'
p16902
a(lp16903
I-1
aaNtp16904
(S'data'
p16905
(lp16906
S'float64'
p16907
aNtp16908
tp16909
tp16910
sS'DAQmxGetDevSerialNum'
p16911
((lp16912
S'int32'
p16913
ag34
a((S'device'
p16914
(lp16915
S'char'
p16916
a(lp16917
I-1
aaNtp16918
(S'data'
p16919
(lp16920
S'uInt32'
p16921
ag42
aNtp16922
tp16923
tp16924
sS'DAQmxGetAODACRngHigh'
p16925
((lp16926
S'int32'
p16927
ag34
a((S'taskHandle'
p16928
(lp16929
S'TaskHandle'
p16930
aNtp16931
(S'channel'
p16932
(lp16933
S'char'
p16934
a(lp16935
I-1
aaNtp16936
(S'data'
p16937
(lp16938
S'float64'
p16939
ag42
aNtp16940
tp16941
tp16942
sS'DAQmxGetCIPulseWidthStartingEdge'
p16943
((lp16944
S'int32'
p16945
ag34
a((S'taskHandle'
p16946
(lp16947
S'TaskHandle'
p16948
aNtp16949
(S'channel'
p16950
(lp16951
S'char'
p16952
a(lp16953
I-1
aaNtp16954
(S'data'
p16955
(lp16956
S'int32'
p16957
ag42
aNtp16958
tp16959
tp16960
sS'DAQmxGetReadRelativeTo'
p16961
((lp16962
S'int32'
p16963
ag34
a((S'taskHandle'
p16964
(lp16965
S'TaskHandle'
p16966
aNtp16967
(S'data'
p16968
(lp16969
S'int32'
p16970
ag42
aNtp16971
tp16972
tp16973
sS'DAQmxCreateTEDSAIAccelChan'
p16974
((lp16975
S'int32'
p16976
ag34
a((S'taskHandle'
p16977
(lp16978
S'TaskHandle'
p16979
aNtp16980
(S'physicalChannel'
p16981
(lp16982
S'char'
p16983
a(lp16984
I-1
aaNtp16985
(S'nameToAssignToChannel'
p16986
(lp16987
S'char'
p16988
a(lp16989
I-1
aaNtp16990
(S'terminalConfig'
p16991
(lp16992
S'int32'
p16993
aNtp16994
(S'minVal'
p16995
(lp16996
S'float64'
p16997
aNtp16998
(S'maxVal'
p16999
(lp17000
S'float64'
p17001
aNtp17002
(S'units'
p17003
(lp17004
S'int32'
p17005
aNtp17006
(S'currentExcitSource'
p17007
(lp17008
S'int32'
p17009
aNtp17010
(S'currentExcitVal'
p17011
(lp17012
S'float64'
p17013
aNtp17014
(S'customScaleName'
p17015
(lp17016
S'char'
p17017
a(lp17018
I-1
aaNtp17019
tp17020
tp17021
sS'DAQmxGetCIEncoderBInputDigFltrTimebaseSrc'
p17022
((lp17023
S'int32'
p17024
ag34
a((S'taskHandle'
p17025
(lp17026
S'TaskHandle'
p17027
aNtp17028
(S'channel'
p17029
(lp17030
S'char'
p17031
a(lp17032
I-1
aaNtp17033
(S'data'
p17034
(lp17035
S'char'
p17036
ag42
aNtp17037
(S'bufferSize'
p17038
(lp17039
S'uInt32'
p17040
aNtp17041
tp17042
tp17043
sS'DAQmxResetAIThrmcplType'
p17044
((lp17045
S'int32'
p17046
ag34
a((S'taskHandle'
p17047
(lp17048
S'TaskHandle'
p17049
aNtp17050
(S'channel'
p17051
(lp17052
S'char'
p17053
a(lp17054
I-1
aaNtp17055
tp17056
tp17057
sS'DAQmxGetWatchdogDOExpirState'
p17058
((lp17059
S'int32'
p17060
ag34
a((S'taskHandle'
p17061
(lp17062
S'TaskHandle'
p17063
aNtp17064
(S'channel'
p17065
(lp17066
S'char'
p17067
a(lp17068
I-1
aaNtp17069
(S'data'
p17070
(lp17071
S'int32'
p17072
ag42
aNtp17073
tp17074
tp17075
sS'DAQmxGetDigLvlPauseTrigWhen'
p17076
((lp17077
S'int32'
p17078
ag34
a((S'taskHandle'
p17079
(lp17080
S'TaskHandle'
p17081
aNtp17082
(S'data'
p17083
(lp17084
S'int32'
p17085
ag42
aNtp17086
tp17087
tp17088
sS'DAQmxSetExportedAdvTrigPulseWidth'
p17089
((lp17090
S'int32'
p17091
ag34
a((S'taskHandle'
p17092
(lp17093
S'TaskHandle'
p17094
aNtp17095
(S'data'
p17096
(lp17097
S'float64'
p17098
aNtp17099
tp17100
tp17101
sS'DAQmxGetDelayFromSampClkDelayUnits'
p17102
((lp17103
S'int32'
p17104
ag34
a((S'taskHandle'
p17105
(lp17106
S'TaskHandle'
p17107
aNtp17108
(S'data'
p17109
(lp17110
S'int32'
p17111
ag42
aNtp17112
tp17113
tp17114
sS'DAQmxSetCIFreqUnits'
p17115
((lp17116
S'int32'
p17117
ag34
a((S'taskHandle'
p17118
(lp17119
S'TaskHandle'
p17120
aNtp17121
(S'channel'
p17122
(lp17123
S'char'
p17124
a(lp17125
I-1
aaNtp17126
(S'data'
p17127
(lp17128
S'int32'
p17129
aNtp17130
tp17131
tp17132
sS'DAQmxResetExportedAdvTrigOutputTerm'
p17133
((lp17134
S'int32'
p17135
ag34
a((S'taskHandle'
p17136
(lp17137
S'TaskHandle'
p17138
aNtp17139
tp17140
tp17141
sS'DAQmxSetSampClkDigFltrMinPulseWidth'
p17142
((lp17143
S'int32'
p17144
ag34
a((S'taskHandle'
p17145
(lp17146
S'TaskHandle'
p17147
aNtp17148
(S'data'
p17149
(lp17150
S'float64'
p17151
aNtp17152
tp17153
tp17154
sS'DAQmxGetAdvTrigType'
p17155
((lp17156
S'int32'
p17157
ag34
a((S'taskHandle'
p17158
(lp17159
S'TaskHandle'
p17160
aNtp17161
(S'data'
p17162
(lp17163
S'int32'
p17164
ag42
aNtp17165
tp17166
tp17167
sS'DAQmxGetAnlgWinStartTrigSrc'
p17168
((lp17169
S'int32'
p17170
ag34
a((S'taskHandle'
p17171
(lp17172
S'TaskHandle'
p17173
aNtp17174
(S'data'
p17175
(lp17176
S'char'
p17177
ag42
aNtp17178
(S'bufferSize'
p17179
(lp17180
S'uInt32'
p17181
aNtp17182
tp17183
tp17184
sS'DAQmxGetDOTristate'
p17185
((lp17186
S'int32'
p17187
ag34
a((S'taskHandle'
p17188
(lp17189
S'TaskHandle'
p17190
aNtp17191
(S'channel'
p17192
(lp17193
S'char'
p17194
a(lp17195
I-1
aaNtp17196
(S'data'
p17197
(lp17198
S'bool32'
p17199
ag42
aNtp17200
tp17201
tp17202
sS'DAQmxGetAILVDTSensitivityUnits'
p17203
((lp17204
S'int32'
p17205
ag34
a((S'taskHandle'
p17206
(lp17207
S'TaskHandle'
p17208
aNtp17209
(S'channel'
p17210
(lp17211
S'char'
p17212
a(lp17213
I-1
aaNtp17214
(S'data'
p17215
(lp17216
S'int32'
p17217
ag42
aNtp17218
tp17219
tp17220
sS'DAQmxSetAIThrmstrR1'
p17221
((lp17222
S'int32'
p17223
ag34
a((S'taskHandle'
p17224
(lp17225
S'TaskHandle'
p17226
aNtp17227
(S'channel'
p17228
(lp17229
S'char'
p17230
a(lp17231
I-1
aaNtp17232
(S'data'
p17233
(lp17234
S'float64'
p17235
aNtp17236
tp17237
tp17238
sS'DAQmxSetCOPulseHighTime'
p17239
((lp17240
S'int32'
p17241
ag34
a((S'taskHandle'
p17242
(lp17243
S'TaskHandle'
p17244
aNtp17245
(S'channel'
p17246
(lp17247
S'char'
p17248
a(lp17249
I-1
aaNtp17250
(S'data'
p17251
(lp17252
S'float64'
p17253
aNtp17254
tp17255
tp17256
sS'DAQmxSetChangeDetectDIFallingEdgePhysicalChans'
p17257
((lp17258
S'int32'
p17259
ag34
a((S'taskHandle'
p17260
(lp17261
S'TaskHandle'
p17262
aNtp17263
(S'data'
p17264
(lp17265
S'char'
p17266
ag42
aNtp17267
tp17268
tp17269
sS'DAQmxGetCOCtrTimebaseDigFltrEnable'
p17270
((lp17271
S'int32'
p17272
ag34
a((S'taskHandle'
p17273
(lp17274
S'TaskHandle'
p17275
aNtp17276
(S'channel'
p17277
(lp17278
S'char'
p17279
a(lp17280
I-1
aaNtp17281
(S'data'
p17282
(lp17283
S'bool32'
p17284
ag42
aNtp17285
tp17286
tp17287
sS'DAQmxSetAIStrainUnits'
p17288
((lp17289
S'int32'
p17290
ag34
a((S'taskHandle'
p17291
(lp17292
S'TaskHandle'
p17293
aNtp17294
(S'channel'
p17295
(lp17296
S'char'
p17297
a(lp17298
I-1
aaNtp17299
(S'data'
p17300
(lp17301
S'int32'
p17302
aNtp17303
tp17304
tp17305
sS'DAQmxResetHshkSampleInputDataWhen'
p17306
((lp17307
S'int32'
p17308
ag34
a((S'taskHandle'
p17309
(lp17310
S'TaskHandle'
p17311
aNtp17312
tp17313
tp17314
sS'DAQmxSetScaleScaledUnits'
p17315
((lp17316
S'int32'
p17317
ag34
a((S'scaleName'
p17318
(lp17319
S'char'
p17320
a(lp17321
I-1
aaNtp17322
(S'data'
p17323
(lp17324
S'char'
p17325
ag42
aNtp17326
tp17327
tp17328
sS'DAQmxGetSwitchChanUsage'
p17329
((lp17330
S'int32'
p17331
ag34
a((S'switchChannelName'
p17332
(lp17333
S'char'
p17334
a(lp17335
I-1
aaNtp17336
(S'data'
p17337
(lp17338
S'int32'
p17339
ag42
aNtp17340
tp17341
tp17342
sS'DAQmxResetExportedAIHoldCmpltEventPulsePolarity'
p17343
((lp17344
S'int32'
p17345
ag34
a((S'taskHandle'
p17346
(lp17347
S'TaskHandle'
p17348
aNtp17349
tp17350
tp17351
sS'DAQmxSetCIEncoderZIndexPhase'
p17352
((lp17353
S'int32'
p17354
ag34
a((S'taskHandle'
p17355
(lp17356
S'TaskHandle'
p17357
aNtp17358
(S'channel'
p17359
(lp17360
S'char'
p17361
a(lp17362
I-1
aaNtp17363
(S'data'
p17364
(lp17365
S'int32'
p17366
aNtp17367
tp17368
tp17369
sS'DAQmxGetExportedCtrOutEventToggleIdleState'
p17370
((lp17371
S'int32'
p17372
ag34
a((S'taskHandle'
p17373
(lp17374
S'TaskHandle'
p17375
aNtp17376
(S'data'
p17377
(lp17378
S'int32'
p17379
ag42
aNtp17380
tp17381
tp17382
sS'DAQmxGetAILowpassSwitchCapExtClkDiv'
p17383
((lp17384
S'int32'
p17385
ag34
a((S'taskHandle'
p17386
(lp17387
S'TaskHandle'
p17388
aNtp17389
(S'channel'
p17390
(lp17391
S'char'
p17392
a(lp17393
I-1
aaNtp17394
(S'data'
p17395
(lp17396
S'uInt32'
p17397
ag42
aNtp17398
tp17399
tp17400
sS'DAQmxResetCIMax'
p17401
((lp17402
S'int32'
p17403
ag34
a((S'taskHandle'
p17404
(lp17405
S'TaskHandle'
p17406
aNtp17407
(S'channel'
p17408
(lp17409
S'char'
p17410
a(lp17411
I-1
aaNtp17412
tp17413
tp17414
sS'DAQmxSetExported10MHzRefClkOutputTerm'
p17415
((lp17416
S'int32'
p17417
ag34
a((S'taskHandle'
p17418
(lp17419
S'TaskHandle'
p17420
aNtp17421
(S'data'
p17422
(lp17423
S'char'
p17424
ag42
aNtp17425
tp17426
tp17427
sS'DAQmxSetCIFreqDigFltrEnable'
p17428
((lp17429
S'int32'
p17430
ag34
a((S'taskHandle'
p17431
(lp17432
S'TaskHandle'
p17433
aNtp17434
(S'channel'
p17435
(lp17436
S'char'
p17437
a(lp17438
I-1
aaNtp17439
(S'data'
p17440
(lp17441
S'bool32'
p17442
aNtp17443
tp17444
tp17445
sS'DAQmxGetCIPulseWidthDigFltrTimebaseRate'
p17446
((lp17447
S'int32'
p17448
ag34
a((S'taskHandle'
p17449
(lp17450
S'TaskHandle'
p17451
aNtp17452
(S'channel'
p17453
(lp17454
S'char'
p17455
a(lp17456
I-1
aaNtp17457
(S'data'
p17458
(lp17459
S'float64'
p17460
ag42
aNtp17461
tp17462
tp17463
sS'DAQmxResetAIThrmstrA'
p17464
((lp17465
S'int32'
p17466
ag34
a((S'taskHandle'
p17467
(lp17468
S'TaskHandle'
p17469
aNtp17470
(S'channel'
p17471
(lp17472
S'char'
p17473
a(lp17474
I-1
aaNtp17475
tp17476
tp17477
sS'DAQmxResetAIThrmstrB'
p17478
((lp17479
S'int32'
p17480
ag34
a((S'taskHandle'
p17481
(lp17482
S'TaskHandle'
p17483
aNtp17484
(S'channel'
p17485
(lp17486
S'char'
p17487
a(lp17488
I-1
aaNtp17489
tp17490
tp17491
sS'DAQmxResetAIThrmstrC'
p17492
((lp17493
S'int32'
p17494
ag34
a((S'taskHandle'
p17495
(lp17496
S'TaskHandle'
p17497
aNtp17498
(S'channel'
p17499
(lp17500
S'char'
p17501
a(lp17502
I-1
aaNtp17503
tp17504
tp17505
sS'DAQmxGetCIEncoderZIndexPhase'
p17506
((lp17507
S'int32'
p17508
ag34
a((S'taskHandle'
p17509
(lp17510
S'TaskHandle'
p17511
aNtp17512
(S'channel'
p17513
(lp17514
S'char'
p17515
a(lp17516
I-1
aaNtp17517
(S'data'
p17518
(lp17519
S'int32'
p17520
ag42
aNtp17521
tp17522
tp17523
sS'DAQmxSetAIACExcitFreq'
p17524
((lp17525
S'int32'
p17526
ag34
a((S'taskHandle'
p17527
(lp17528
S'TaskHandle'
p17529
aNtp17530
(S'channel'
p17531
(lp17532
S'char'
p17533
a(lp17534
I-1
aaNtp17535
(S'data'
p17536
(lp17537
S'float64'
p17538
aNtp17539
tp17540
tp17541
sS'DAQmxGetDIDigFltrEnable'
p17542
((lp17543
S'int32'
p17544
ag34
a((S'taskHandle'
p17545
(lp17546
S'TaskHandle'
p17547
aNtp17548
(S'channel'
p17549
(lp17550
S'char'
p17551
a(lp17552
I-1
aaNtp17553
(S'data'
p17554
(lp17555
S'bool32'
p17556
ag42
aNtp17557
tp17558
tp17559
sS'DAQmxSetAIChanCalExpDate'
p17560
((lp17561
S'int32'
p17562
ag34
a((S'taskHandle'
p17563
(lp17564
S'TaskHandle'
p17565
aNtp17566
(S'channelName'
p17567
(lp17568
S'char'
p17569
a(lp17570
I-1
aaNtp17571
(S'year'
p17572
(lp17573
S'uInt32'
p17574
aNtp17575
(S'month'
p17576
(lp17577
S'uInt32'
p17578
aNtp17579
(S'day'
p17580
(lp17581
S'uInt32'
p17582
aNtp17583
(S'hour'
p17584
(lp17585
S'uInt32'
p17586
aNtp17587
(S'minute'
p17588
(lp17589
S'uInt32'
p17590
aNtp17591
tp17592
tp17593
sS'DAQmxGetPersistedChanAuthor'
p17594
((lp17595
S'int32'
p17596
ag34
a((S'channel'
p17597
(lp17598
S'char'
p17599
a(lp17600
I-1
aaNtp17601
(S'data'
p17602
(lp17603
S'char'
p17604
ag42
aNtp17605
(S'bufferSize'
p17606
(lp17607
S'uInt32'
p17608
aNtp17609
tp17610
tp17611
sS'DAQmxSwitchGetSingleRelayPos'
p17612
((lp17613
S'int32'
p17614
ag34
a((S'relayName'
p17615
(lp17616
S'char'
p17617
a(lp17618
I-1
aaNtp17619
(S'relayPos'
p17620
(lp17621
S'uInt32'
p17622
ag42
aNtp17623
tp17624
tp17625
sS'DAQmxResetDigPatternStartTrigSrc'
p17626
((lp17627
S'int32'
p17628
ag34
a((S'taskHandle'
p17629
(lp17630
S'TaskHandle'
p17631
aNtp17632
tp17633
tp17634
sS'DAQmxSetCIPeriodDiv'
p17635
((lp17636
S'int32'
p17637
ag34
a((S'taskHandle'
p17638
(lp17639
S'TaskHandle'
p17640
aNtp17641
(S'channel'
p17642
(lp17643
S'char'
p17644
a(lp17645
I-1
aaNtp17646
(S'data'
p17647
(lp17648
S'uInt32'
p17649
aNtp17650
tp17651
tp17652
sS'DAQmxWriteDigitalU32'
p17653
((lp17654
S'int32'
p17655
ag34
a((S'taskHandle'
p17656
(lp17657
S'TaskHandle'
p17658
aNtp17659
(S'numSampsPerChan'
p17660
(lp17661
S'int32'
p17662
aNtp17663
(S'autoStart'
p17664
(lp17665
S'bool32'
p17666
aNtp17667
(S'timeout'
p17668
(lp17669
S'float64'
p17670
aNtp17671
(S'dataLayout'
p17672
(lp17673
S'bool32'
p17674
aNtp17675
(S'writeArray'
p17676
(lp17677
S'uInt32'
p17678
a(lp17679
I-1
aaNtp17680
(S'sampsPerChanWritten'
p17681
(lp17682
S'int32'
p17683
ag42
aNtp17684
(S'reserved'
p17685
(lp17686
S'bool32'
p17687
ag42
aNtp17688
tp17689
tp17690
sS'DAQmxGetSwitchScanRepeatMode'
p17691
((lp17692
S'int32'
p17693
ag34
a((S'taskHandle'
p17694
(lp17695
S'TaskHandle'
p17696
aNtp17697
(S'data'
p17698
(lp17699
S'int32'
p17700
ag42
aNtp17701
tp17702
tp17703
sS'DAQmxResetCILinEncoderUnits'
p17704
((lp17705
S'int32'
p17706
ag34
a((S'taskHandle'
p17707
(lp17708
S'TaskHandle'
p17709
aNtp17710
(S'channel'
p17711
(lp17712
S'char'
p17713
a(lp17714
I-1
aaNtp17715
tp17716
tp17717
sS'DAQmxSetCIPulseWidthDigFltrTimebaseRate'
p17718
((lp17719
S'int32'
p17720
ag34
a((S'taskHandle'
p17721
(lp17722
S'TaskHandle'
p17723
aNtp17724
(S'channel'
p17725
(lp17726
S'char'
p17727
a(lp17728
I-1
aaNtp17729
(S'data'
p17730
(lp17731
S'float64'
p17732
aNtp17733
tp17734
tp17735
sS'DAQmxSetChanDescr'
p17736
((lp17737
S'int32'
p17738
ag34
a((S'taskHandle'
p17739
(lp17740
S'TaskHandle'
p17741
aNtp17742
(S'channel'
p17743
(lp17744
S'char'
p17745
a(lp17746
I-1
aaNtp17747
(S'data'
p17748
(lp17749
S'char'
p17750
ag42
aNtp17751
tp17752
tp17753
sS'DAQmxGetRefClkSrc'
p17754
((lp17755
S'int32'
p17756
ag34
a((S'taskHandle'
p17757
(lp17758
S'TaskHandle'
p17759
aNtp17760
(S'data'
p17761
(lp17762
S'char'
p17763
ag42
aNtp17764
(S'bufferSize'
p17765
(lp17766
S'uInt32'
p17767
aNtp17768
tp17769
tp17770
sS'DAQmxResetDigEdgeAdvTrigEdge'
p17771
((lp17772
S'int32'
p17773
ag34
a((S'taskHandle'
p17774
(lp17775
S'TaskHandle'
p17776
aNtp17777
tp17778
tp17779
sS'DAQmxResetAIExcitVoltageOrCurrent'
p17780
((lp17781
S'int32'
p17782
ag34
a((S'taskHandle'
p17783
(lp17784
S'TaskHandle'
p17785
aNtp17786
(S'channel'
p17787
(lp17788
S'char'
p17789
a(lp17790
I-1
aaNtp17791
tp17792
tp17793
sS'DAQmxSetDigPatternRefTrigWhen'
p17794
((lp17795
S'int32'
p17796
ag34
a((S'taskHandle'
p17797
(lp17798
S'TaskHandle'
p17799
aNtp17800
(S'data'
p17801
(lp17802
S'int32'
p17803
aNtp17804
tp17805
tp17806
sS'DAQmxGetAnlgWinRefTrigCoupling'
p17807
((lp17808
S'int32'
p17809
ag34
a((S'taskHandle'
p17810
(lp17811
S'TaskHandle'
p17812
aNtp17813
(S'data'
p17814
(lp17815
S'int32'
p17816
ag42
aNtp17817
tp17818
tp17819
sS'DAQmxGetBufOutputBufSize'
p17820
((lp17821
S'int32'
p17822
ag34
a((S'taskHandle'
p17823
(lp17824
S'TaskHandle'
p17825
aNtp17826
(S'data'
p17827
(lp17828
S'uInt32'
p17829
ag42
aNtp17830
tp17831
tp17832
sS'DAQmxSetCIEncoderZIndexVal'
p17833
((lp17834
S'int32'
p17835
ag34
a((S'taskHandle'
p17836
(lp17837
S'TaskHandle'
p17838
aNtp17839
(S'channel'
p17840
(lp17841
S'char'
p17842
a(lp17843
I-1
aaNtp17844
(S'data'
p17845
(lp17846
S'float64'
p17847
aNtp17848
tp17849
tp17850
sS'DAQmxResetAIAccelUnits'
p17851
((lp17852
S'int32'
p17853
ag34
a((S'taskHandle'
p17854
(lp17855
S'TaskHandle'
p17856
aNtp17857
(S'channel'
p17858
(lp17859
S'char'
p17860
a(lp17861
I-1
aaNtp17862
tp17863
tp17864
sS'DAQmxGetExportedAIHoldCmpltEventOutputTerm'
p17865
((lp17866
S'int32'
p17867
ag34
a((S'taskHandle'
p17868
(lp17869
S'TaskHandle'
p17870
aNtp17871
(S'data'
p17872
(lp17873
S'char'
p17874
ag42
aNtp17875
(S'bufferSize'
p17876
(lp17877
S'uInt32'
p17878
aNtp17879
tp17880
tp17881
sS'DAQmxResetInterlockedHshkTrigSrc'
p17882
((lp17883
S'int32'
p17884
ag34
a((S'taskHandle'
p17885
(lp17886
S'TaskHandle'
p17887
aNtp17888
tp17889
tp17890
sS'DAQmxCreateAIPosRVDTChan'
p17891
((lp17892
S'int32'
p17893
ag34
a((S'taskHandle'
p17894
(lp17895
S'TaskHandle'
p17896
aNtp17897
(S'physicalChannel'
p17898
(lp17899
S'char'
p17900
a(lp17901
I-1
aaNtp17902
(S'nameToAssignToChannel'
p17903
(lp17904
S'char'
p17905
a(lp17906
I-1
aaNtp17907
(S'minVal'
p17908
(lp17909
S'float64'
p17910
aNtp17911
(S'maxVal'
p17912
(lp17913
S'float64'
p17914
aNtp17915
(S'units'
p17916
(lp17917
S'int32'
p17918
aNtp17919
(S'sensitivity'
p17920
(lp17921
S'float64'
p17922
aNtp17923
(S'sensitivityUnits'
p17924
(lp17925
S'int32'
p17926
aNtp17927
(S'voltageExcitSource'
p17928
(lp17929
S'int32'
p17930
aNtp17931
(S'voltageExcitVal'
p17932
(lp17933
S'float64'
p17934
aNtp17935
(S'voltageExcitFreq'
p17936
(lp17937
S'float64'
p17938
aNtp17939
(S'ACExcitWireMode'
p17940
(lp17941
S'int32'
p17942
aNtp17943
(S'customScaleName'
p17944
(lp17945
S'char'
p17946
a(lp17947
I-1
aaNtp17948
tp17949
tp17950
sS'DAQmxResetCICtrTimebaseDigFltrTimebaseSrc'
p17951
((lp17952
S'int32'
p17953
ag34
a((S'taskHandle'
p17954
(lp17955
S'TaskHandle'
p17956
aNtp17957
(S'channel'
p17958
(lp17959
S'char'
p17960
a(lp17961
I-1
aaNtp17962
tp17963
tp17964
sS'DAQmxResetCIFreqDigFltrMinPulseWidth'
p17965
((lp17966
S'int32'
p17967
ag34
a((S'taskHandle'
p17968
(lp17969
S'TaskHandle'
p17970
aNtp17971
(S'channel'
p17972
(lp17973
S'char'
p17974
a(lp17975
I-1
aaNtp17976
tp17977
tp17978
sS'DAQmxGetAIChanCalPolyForwardCoeff'
p17979
((lp17980
S'int32'
p17981
ag34
a((S'taskHandle'
p17982
(lp17983
S'TaskHandle'
p17984
aNtp17985
(S'channel'
p17986
(lp17987
S'char'
p17988
a(lp17989
I-1
aaNtp17990
(S'data'
p17991
(lp17992
S'float64'
p17993
ag42
aNtp17994
(S'arraySizeInSamples'
p17995
(lp17996
S'uInt32'
p17997
aNtp17998
tp17999
tp18000
sS'DAQmxCreateCOPulseChanTime'
p18001
((lp18002
S'int32'
p18003
ag34
a((S'taskHandle'
p18004
(lp18005
S'TaskHandle'
p18006
aNtp18007
(S'counter'
p18008
(lp18009
S'char'
p18010
a(lp18011
I-1
aaNtp18012
(S'nameToAssignToChannel'
p18013
(lp18014
S'char'
p18015
a(lp18016
I-1
aaNtp18017
(S'units'
p18018
(lp18019
S'int32'
p18020
aNtp18021
(S'idleState'
p18022
(lp18023
S'int32'
p18024
aNtp18025
(S'initialDelay'
p18026
(lp18027
S'float64'
p18028
aNtp18029
(S'lowTime'
p18030
(lp18031
S'float64'
p18032
aNtp18033
(S'highTime'
p18034
(lp18035
S'float64'
p18036
aNtp18037
tp18038
tp18039
sS'DAQmxSetExported20MHzTimebaseOutputTerm'
p18040
((lp18041
S'int32'
p18042
ag34
a((S'taskHandle'
p18043
(lp18044
S'TaskHandle'
p18045
aNtp18046
(S'data'
p18047
(lp18048
S'char'
p18049
ag42
aNtp18050
tp18051
tp18052
sS'DAQmxSetCITwoEdgeSepSecondEdge'
p18053
((lp18054
S'int32'
p18055
ag34
a((S'taskHandle'
p18056
(lp18057
S'TaskHandle'
p18058
aNtp18059
(S'channel'
p18060
(lp18061
S'char'
p18062
a(lp18063
I-1
aaNtp18064
(S'data'
p18065
(lp18066
S'int32'
p18067
aNtp18068
tp18069
tp18070
sS'DAQmxResetAIRTDR0'
p18071
((lp18072
S'int32'
p18073
ag34
a((S'taskHandle'
p18074
(lp18075
S'TaskHandle'
p18076
aNtp18077
(S'channel'
p18078
(lp18079
S'char'
p18080
a(lp18081
I-1
aaNtp18082
tp18083
tp18084
sS'DAQmxResetCIPulseWidthUnits'
p18085
((lp18086
S'int32'
p18087
ag34
a((S'taskHandle'
p18088
(lp18089
S'TaskHandle'
p18090
aNtp18091
(S'channel'
p18092
(lp18093
S'char'
p18094
a(lp18095
I-1
aaNtp18096
tp18097
tp18098
sS'DAQmxSetAIBridgeShuntCalSelect'
p18099
((lp18100
S'int32'
p18101
ag34
a((S'taskHandle'
p18102
(lp18103
S'TaskHandle'
p18104
aNtp18105
(S'channel'
p18106
(lp18107
S'char'
p18108
a(lp18109
I-1
aaNtp18110
(S'data'
p18111
(lp18112
S'int32'
p18113
aNtp18114
tp18115
tp18116
sS'DAQmxGetHshkTrigType'
p18117
((lp18118
S'int32'
p18119
ag34
a((S'taskHandle'
p18120
(lp18121
S'TaskHandle'
p18122
aNtp18123
(S'data'
p18124
(lp18125
S'int32'
p18126
ag42
aNtp18127
tp18128
tp18129
sS'DAQmxGetAIGain'
p18130
((lp18131
S'int32'
p18132
ag34
a((S'taskHandle'
p18133
(lp18134
S'TaskHandle'
p18135
aNtp18136
(S'channel'
p18137
(lp18138
S'char'
p18139
a(lp18140
I-1
aaNtp18141
(S'data'
p18142
(lp18143
S'float64'
p18144
ag42
aNtp18145
tp18146
tp18147
sS'DAQmxSetAnlgWinPauseTrigSrc'
p18148
((lp18149
S'int32'
p18150
ag34
a((S'taskHandle'
p18151
(lp18152
S'TaskHandle'
p18153
aNtp18154
(S'data'
p18155
(lp18156
S'char'
p18157
ag42
aNtp18158
tp18159
tp18160
sS'DAQmxGetCICountEdgesCountDirDigFltrEnable'
p18161
((lp18162
S'int32'
p18163
ag34
a((S'taskHandle'
p18164
(lp18165
S'TaskHandle'
p18166
aNtp18167
(S'channel'
p18168
(lp18169
S'char'
p18170
a(lp18171
I-1
aaNtp18172
(S'data'
p18173
(lp18174
S'bool32'
p18175
ag42
aNtp18176
tp18177
tp18178
sS'DAQmxResetAIStrainGagePoissonRatio'
p18179
((lp18180
S'int32'
p18181
ag34
a((S'taskHandle'
p18182
(lp18183
S'TaskHandle'
p18184
aNtp18185
(S'channel'
p18186
(lp18187
S'char'
p18188
a(lp18189
I-1
aaNtp18190
tp18191
tp18192
sS'DAQmxGetAOTermCfg'
p18193
((lp18194
S'int32'
p18195
ag34
a((S'taskHandle'
p18196
(lp18197
S'TaskHandle'
p18198
aNtp18199
(S'channel'
p18200
(lp18201
S'char'
p18202
a(lp18203
I-1
aaNtp18204
(S'data'
p18205
(lp18206
S'int32'
p18207
ag42
aNtp18208
tp18209
tp18210
sS'DAQmxGetAODACRefVal'
p18211
((lp18212
S'int32'
p18213
ag34
a((S'taskHandle'
p18214
(lp18215
S'TaskHandle'
p18216
aNtp18217
(S'channel'
p18218
(lp18219
S'char'
p18220
a(lp18221
I-1
aaNtp18222
(S'data'
p18223
(lp18224
S'float64'
p18225
ag42
aNtp18226
tp18227
tp18228
sS'DAQmxSetExportedHshkEventPulseWidth'
p18229
((lp18230
S'int32'
p18231
ag34
a((S'taskHandle'
p18232
(lp18233
S'TaskHandle'
p18234
aNtp18235
(S'data'
p18236
(lp18237
S'float64'
p18238
aNtp18239
tp18240
tp18241
sS'DAQmxGetCISemiPeriodDigFltrTimebaseSrc'
p18242
((lp18243
S'int32'
p18244
ag34
a((S'taskHandle'
p18245
(lp18246
S'TaskHandle'
p18247
aNtp18248
(S'channel'
p18249
(lp18250
S'char'
p18251
a(lp18252
I-1
aaNtp18253
(S'data'
p18254
(lp18255
S'char'
p18256
ag42
aNtp18257
(S'bufferSize'
p18258
(lp18259
S'uInt32'
p18260
aNtp18261
tp18262
tp18263
sS'DAQmxWriteDigitalU8'
p18264
((lp18265
S'int32'
p18266
ag34
a((S'taskHandle'
p18267
(lp18268
S'TaskHandle'
p18269
aNtp18270
(S'numSampsPerChan'
p18271
(lp18272
S'int32'
p18273
aNtp18274
(S'autoStart'
p18275
(lp18276
S'bool32'
p18277
aNtp18278
(S'timeout'
p18279
(lp18280
S'float64'
p18281
aNtp18282
(S'dataLayout'
p18283
(lp18284
S'bool32'
p18285
aNtp18286
(S'writeArray'
p18287
(lp18288
S'uInt8'
p18289
a(lp18290
I-1
aaNtp18291
(S'sampsPerChanWritten'
p18292
(lp18293
S'int32'
p18294
ag42
aNtp18295
(S'reserved'
p18296
(lp18297
S'bool32'
p18298
ag42
aNtp18299
tp18300
tp18301
sS'DAQmxSetDigPatternRefTrigSrc'
p18302
((lp18303
S'int32'
p18304
ag34
a((S'taskHandle'
p18305
(lp18306
S'TaskHandle'
p18307
aNtp18308
(S'data'
p18309
(lp18310
S'char'
p18311
ag42
aNtp18312
tp18313
tp18314
sS'DAQmxWriteDigitalScalarU32'
p18315
((lp18316
S'int32'
p18317
ag34
a((S'taskHandle'
p18318
(lp18319
S'TaskHandle'
p18320
aNtp18321
(S'autoStart'
p18322
(lp18323
S'bool32'
p18324
aNtp18325
(S'timeout'
p18326
(lp18327
S'float64'
p18328
aNtp18329
(S'value'
p18330
(lp18331
S'uInt32'
p18332
aNtp18333
(S'reserved'
p18334
(lp18335
S'bool32'
p18336
ag42
aNtp18337
tp18338
tp18339
sS'DAQmxGetExportedAdvCmpltEventDelay'
p18340
((lp18341
S'int32'
p18342
ag34
a((S'taskHandle'
p18343
(lp18344
S'TaskHandle'
p18345
aNtp18346
(S'data'
p18347
(lp18348
S'float64'
p18349
ag42
aNtp18350
tp18351
tp18352
sS'DAQmxGetAIAutoZeroMode'
p18353
((lp18354
S'int32'
p18355
ag34
a((S'taskHandle'
p18356
(lp18357
S'TaskHandle'
p18358
aNtp18359
(S'channel'
p18360
(lp18361
S'char'
p18362
a(lp18363
I-1
aaNtp18364
(S'data'
p18365
(lp18366
S'int32'
p18367
ag42
aNtp18368
tp18369
tp18370
sS'DAQmxCreateAIThrmstrChanVex'
p18371
((lp18372
S'int32'
p18373
ag34
a((S'taskHandle'
p18374
(lp18375
S'TaskHandle'
p18376
aNtp18377
(S'physicalChannel'
p18378
(lp18379
S'char'
p18380
a(lp18381
I-1
aaNtp18382
(S'nameToAssignToChannel'
p18383
(lp18384
S'char'
p18385
a(lp18386
I-1
aaNtp18387
(S'minVal'
p18388
(lp18389
S'float64'
p18390
aNtp18391
(S'maxVal'
p18392
(lp18393
S'float64'
p18394
aNtp18395
(S'units'
p18396
(lp18397
S'int32'
p18398
aNtp18399
(S'resistanceConfig'
p18400
(lp18401
S'int32'
p18402
aNtp18403
(S'voltageExcitSource'
p18404
(lp18405
S'int32'
p18406
aNtp18407
(S'voltageExcitVal'
p18408
(lp18409
S'float64'
p18410
aNtp18411
(S'a'
p18412
(lp18413
S'float64'
p18414
aNtp18415
(S'b'
p18416
(lp18417
S'float64'
p18418
aNtp18419
(S'c'
p18420
(lp18421
S'float64'
p18422
aNtp18423
(S'r1'
p18424
(lp18425
S'float64'
p18426
aNtp18427
tp18428
tp18429
sS'DAQmxResetSampTimingType'
p18430
((lp18431
S'int32'
p18432
ag34
a((S'taskHandle'
p18433
(lp18434
S'TaskHandle'
p18435
aNtp18436
tp18437
tp18438
sS'DAQmxSetCILinEncoderDistPerPulse'
p18439
((lp18440
S'int32'
p18441
ag34
a((S'taskHandle'
p18442
(lp18443
S'TaskHandle'
p18444
aNtp18445
(S'channel'
p18446
(lp18447
S'char'
p18448
a(lp18449
I-1
aaNtp18450
(S'data'
p18451
(lp18452
S'float64'
p18453
aNtp18454
tp18455
tp18456
sS'DAQmxGetCIMin'
p18457
((lp18458
S'int32'
p18459
ag34
a((S'taskHandle'
p18460
(lp18461
S'TaskHandle'
p18462
aNtp18463
(S'channel'
p18464
(lp18465
S'char'
p18466
a(lp18467
I-1
aaNtp18468
(S'data'
p18469
(lp18470
S'float64'
p18471
ag42
aNtp18472
tp18473
tp18474
sS'DAQmxSetCIPeriodDigFltrMinPulseWidth'
p18475
((lp18476
S'int32'
p18477
ag34
a((S'taskHandle'
p18478
(lp18479
S'TaskHandle'
p18480
aNtp18481
(S'channel'
p18482
(lp18483
S'char'
p18484
a(lp18485
I-1
aaNtp18486
(S'data'
p18487
(lp18488
S'float64'
p18489
aNtp18490
tp18491
tp18492
sS'DAQmxGetAIVoltageUnits'
p18493
((lp18494
S'int32'
p18495
ag34
a((S'taskHandle'
p18496
(lp18497
S'TaskHandle'
p18498
aNtp18499
(S'channel'
p18500
(lp18501
S'char'
p18502
a(lp18503
I-1
aaNtp18504
(S'data'
p18505
(lp18506
S'int32'
p18507
ag42
aNtp18508
tp18509
tp18510
sS'DAQmxReadAnalogF64'
p18511
((lp18512
S'int32'
p18513
ag34
a((S'taskHandle'
p18514
(lp18515
S'TaskHandle'
p18516
aNtp18517
(S'numSampsPerChan'
p18518
(lp18519
S'int32'
p18520
aNtp18521
(S'timeout'
p18522
(lp18523
S'float64'
p18524
aNtp18525
(S'fillMode'
p18526
(lp18527
S'bool32'
p18528
aNtp18529
(S'readArray'
p18530
(lp18531
S'float64'
p18532
a(lp18533
I-1
aaNtp18534
(S'arraySizeInSamps'
p18535
(lp18536
S'uInt32'
p18537
aNtp18538
(S'sampsPerChanRead'
p18539
(lp18540
S'int32'
p18541
ag42
aNtp18542
(S'reserved'
p18543
(lp18544
S'bool32'
p18545
ag42
aNtp18546
tp18547
tp18548
sS'DAQmxGetCIEncoderZInputDigFltrMinPulseWidth'
p18549
((lp18550
S'int32'
p18551
ag34
a((S'taskHandle'
p18552
(lp18553
S'TaskHandle'
p18554
aNtp18555
(S'channel'
p18556
(lp18557
S'char'
p18558
a(lp18559
I-1
aaNtp18560
(S'data'
p18561
(lp18562
S'float64'
p18563
ag42
aNtp18564
tp18565
tp18566
sS'DAQmxSetCICountEdgesDigFltrTimebaseRate'
p18567
((lp18568
S'int32'
p18569
ag34
a((S'taskHandle'
p18570
(lp18571
S'TaskHandle'
p18572
aNtp18573
(S'channel'
p18574
(lp18575
S'char'
p18576
a(lp18577
I-1
aaNtp18578
(S'data'
p18579
(lp18580
S'float64'
p18581
aNtp18582
tp18583
tp18584
sS'DAQmxSetCICtrTimebaseDigFltrMinPulseWidth'
p18585
((lp18586
S'int32'
p18587
ag34
a((S'taskHandle'
p18588
(lp18589
S'TaskHandle'
p18590
aNtp18591
(S'channel'
p18592
(lp18593
S'char'
p18594
a(lp18595
I-1
aaNtp18596
(S'data'
p18597
(lp18598
S'float64'
p18599
aNtp18600
tp18601
tp18602
sS'DAQmxGetDigLvlPauseTrigDigSyncEnable'
p18603
((lp18604
S'int32'
p18605
ag34
a((S'taskHandle'
p18606
(lp18607
S'TaskHandle'
p18608
aNtp18609
(S'data'
p18610
(lp18611
S'bool32'
p18612
ag42
aNtp18613
tp18614
tp18615
sS'DAQmxGetAnlgWinStartTrigBtm'
p18616
((lp18617
S'int32'
p18618
ag34
a((S'taskHandle'
p18619
(lp18620
S'TaskHandle'
p18621
aNtp18622
(S'data'
p18623
(lp18624
S'float64'
p18625
ag42
aNtp18626
tp18627
tp18628
sS'DAQmxSetCILinEncoderUnits'
p18629
((lp18630
S'int32'
p18631
ag34
a((S'taskHandle'
p18632
(lp18633
S'TaskHandle'
p18634
aNtp18635
(S'channel'
p18636
(lp18637
S'char'
p18638
a(lp18639
I-1
aaNtp18640
(S'data'
p18641
(lp18642
S'int32'
p18643
aNtp18644
tp18645
tp18646
sS'DAQmxGetCIPeriodStartingEdge'
p18647
((lp18648
S'int32'
p18649
ag34
a((S'taskHandle'
p18650
(lp18651
S'TaskHandle'
p18652
aNtp18653
(S'channel'
p18654
(lp18655
S'char'
p18656
a(lp18657
I-1
aaNtp18658
(S'data'
p18659
(lp18660
S'int32'
p18661
ag42
aNtp18662
tp18663
tp18664
sS'DAQmxGetCICtrTimebaseDigFltrEnable'
p18665
((lp18666
S'int32'
p18667
ag34
a((S'taskHandle'
p18668
(lp18669
S'TaskHandle'
p18670
aNtp18671
(S'channel'
p18672
(lp18673
S'char'
p18674
a(lp18675
I-1
aaNtp18676
(S'data'
p18677
(lp18678
S'bool32'
p18679
ag42
aNtp18680
tp18681
tp18682
sS'DAQmxSetCOPulseTerm'
p18683
((lp18684
S'int32'
p18685
ag34
a((S'taskHandle'
p18686
(lp18687
S'TaskHandle'
p18688
aNtp18689
(S'channel'
p18690
(lp18691
S'char'
p18692
a(lp18693
I-1
aaNtp18694
(S'data'
p18695
(lp18696
S'char'
p18697
ag42
aNtp18698
tp18699
tp18700
sS'DAQmxGetAIThrmcplType'
p18701
((lp18702
S'int32'
p18703
ag34
a((S'taskHandle'
p18704
(lp18705
S'TaskHandle'
p18706
aNtp18707
(S'channel'
p18708
(lp18709
S'char'
p18710
a(lp18711
I-1
aaNtp18712
(S'data'
p18713
(lp18714
S'int32'
p18715
ag42
aNtp18716
tp18717
tp18718
sS'DAQmxGetSwitchDevAutoConnAnlgBus'
p18719
((lp18720
S'int32'
p18721
ag34
a((S'deviceName'
p18722
(lp18723
S'char'
p18724
a(lp18725
I-1
aaNtp18726
(S'data'
p18727
(lp18728
S'bool32'
p18729
ag42
aNtp18730
tp18731
tp18732
sS'DAQmxGetAISoundPressureUnits'
p18733
((lp18734
S'int32'
p18735
ag34
a((S'taskHandle'
p18736
(lp18737
S'TaskHandle'
p18738
aNtp18739
(S'channel'
p18740
(lp18741
S'char'
p18742
a(lp18743
I-1
aaNtp18744
(S'data'
p18745
(lp18746
S'int32'
p18747
ag42
aNtp18748
tp18749
tp18750
sS'DAQmxGetAIExcitUseForScaling'
p18751
((lp18752
S'int32'
p18753
ag34
a((S'taskHandle'
p18754
(lp18755
S'TaskHandle'
p18756
aNtp18757
(S'channel'
p18758
(lp18759
S'char'
p18760
a(lp18761
I-1
aaNtp18762
(S'data'
p18763
(lp18764
S'bool32'
p18765
ag42
aNtp18766
tp18767
tp18768
sS'DAQmxReadCounterU32'
p18769
((lp18770
S'int32'
p18771
ag34
a((S'taskHandle'
p18772
(lp18773
S'TaskHandle'
p18774
aNtp18775
(S'numSampsPerChan'
p18776
(lp18777
S'int32'
p18778
aNtp18779
(S'timeout'
p18780
(lp18781
S'float64'
p18782
aNtp18783
(S'readArray'
p18784
(lp18785
S'uInt32'
p18786
a(lp18787
I-1
aaNtp18788
(S'arraySizeInSamps'
p18789
(lp18790
S'uInt32'
p18791
aNtp18792
(S'sampsPerChanRead'
p18793
(lp18794
S'int32'
p18795
ag42
aNtp18796
(S'reserved'
p18797
(lp18798
S'bool32'
p18799
ag42
aNtp18800
tp18801
tp18802
sS'DAQmxSetHshkDelayAfterXfer'
p18803
((lp18804
S'int32'
p18805
ag34
a((S'taskHandle'
p18806
(lp18807
S'TaskHandle'
p18808
aNtp18809
(S'data'
p18810
(lp18811
S'float64'
p18812
aNtp18813
tp18814
tp18815
sS'DAQmxGetDigPatternRefTrigSrc'
p18816
((lp18817
S'int32'
p18818
ag34
a((S'taskHandle'
p18819
(lp18820
S'TaskHandle'
p18821
aNtp18822
(S'data'
p18823
(lp18824
S'char'
p18825
ag42
aNtp18826
(S'bufferSize'
p18827
(lp18828
S'uInt32'
p18829
aNtp18830
tp18831
tp18832
sS'DAQmxResetExportedHshkEventOutputTerm'
p18833
((lp18834
S'int32'
p18835
ag34
a((S'taskHandle'
p18836
(lp18837
S'TaskHandle'
p18838
aNtp18839
tp18840
tp18841
sS'DAQmxGetCISemiPeriodDigFltrTimebaseRate'
p18842
((lp18843
S'int32'
p18844
ag34
a((S'taskHandle'
p18845
(lp18846
S'TaskHandle'
p18847
aNtp18848
(S'channel'
p18849
(lp18850
S'char'
p18851
a(lp18852
I-1
aaNtp18853
(S'data'
p18854
(lp18855
S'float64'
p18856
ag42
aNtp18857
tp18858
tp18859
sS'DAQmxCfgSampClkTiming'
p18860
((lp18861
S'int32'
p18862
ag34
a((S'taskHandle'
p18863
(lp18864
S'TaskHandle'
p18865
aNtp18866
(S'source'
p18867
(lp18868
S'char'
p18869
a(lp18870
I-1
aaNtp18871
(S'rate'
p18872
(lp18873
S'float64'
p18874
aNtp18875
(S'activeEdge'
p18876
(lp18877
S'int32'
p18878
aNtp18879
(S'sampleMode'
p18880
(lp18881
S'int32'
p18882
aNtp18883
(S'sampsPerChan'
p18884
(lp18885
S'uInt64'
p18886
aNtp18887
tp18888
tp18889
sS'DAQmxReadDigitalU8'
p18890
((lp18891
S'int32'
p18892
ag34
a((S'taskHandle'
p18893
(lp18894
S'TaskHandle'
p18895
aNtp18896
(S'numSampsPerChan'
p18897
(lp18898
S'int32'
p18899
aNtp18900
(S'timeout'
p18901
(lp18902
S'float64'
p18903
aNtp18904
(S'fillMode'
p18905
(lp18906
S'bool32'
p18907
aNtp18908
(S'readArray'
p18909
(lp18910
S'uInt8'
p18911
a(lp18912
I-1
aaNtp18913
(S'arraySizeInSamps'
p18914
(lp18915
S'uInt32'
p18916
aNtp18917
(S'sampsPerChanRead'
p18918
(lp18919
S'int32'
p18920
ag42
aNtp18921
(S'reserved'
p18922
(lp18923
S'bool32'
p18924
ag42
aNtp18925
tp18926
tp18927
sS'DAQmxGetAIConvRate'
p18928
((lp18929
S'int32'
p18930
ag34
a((S'taskHandle'
p18931
(lp18932
S'TaskHandle'
p18933
aNtp18934
(S'data'
p18935
(lp18936
S'float64'
p18937
ag42
aNtp18938
tp18939
tp18940
sS'DAQmxSetDIDataXferMech'
p18941
((lp18942
S'int32'
p18943
ag34
a((S'taskHandle'
p18944
(lp18945
S'TaskHandle'
p18946
aNtp18947
(S'channel'
p18948
(lp18949
S'char'
p18950
a(lp18951
I-1
aaNtp18952
(S'data'
p18953
(lp18954
S'int32'
p18955
aNtp18956
tp18957
tp18958
sS'DAQmxGetSampClkTimebaseRate'
p18959
((lp18960
S'int32'
p18961
ag34
a((S'taskHandle'
p18962
(lp18963
S'TaskHandle'
p18964
aNtp18965
(S'data'
p18966
(lp18967
S'float64'
p18968
ag42
aNtp18969
tp18970
tp18971
sS'DAQmxResetCIFreqMeasMeth'
p18972
((lp18973
S'int32'
p18974
ag34
a((S'taskHandle'
p18975
(lp18976
S'TaskHandle'
p18977
aNtp18978
(S'channel'
p18979
(lp18980
S'char'
p18981
a(lp18982
I-1
aaNtp18983
tp18984
tp18985
sS'DAQmxDisableStartTrig'
p18986
((lp18987
S'int32'
p18988
ag34
a((S'taskHandle'
p18989
(lp18990
S'TaskHandle'
p18991
aNtp18992
tp18993
tp18994
sS'DAQmxSetExportedSampClkOutputBehavior'
p18995
((lp18996
S'int32'
p18997
ag34
a((S'taskHandle'
p18998
(lp18999
S'TaskHandle'
p19000
aNtp19001
(S'data'
p19002
(lp19003
S'int32'
p19004
aNtp19005
tp19006
tp19007
sS'DAQmxGetReadOverWrite'
p19008
((lp19009
S'int32'
p19010
ag34
a((S'taskHandle'
p19011
(lp19012
S'TaskHandle'
p19013
aNtp19014
(S'data'
p19015
(lp19016
S'int32'
p19017
ag42
aNtp19018
tp19019
tp19020
sS'DAQmxCreateTEDSAIPosLVDTChan'
p19021
((lp19022
S'int32'
p19023
ag34
a((S'taskHandle'
p19024
(lp19025
S'TaskHandle'
p19026
aNtp19027
(S'physicalChannel'
p19028
(lp19029
S'char'
p19030
a(lp19031
I-1
aaNtp19032
(S'nameToAssignToChannel'
p19033
(lp19034
S'char'
p19035
a(lp19036
I-1
aaNtp19037
(S'minVal'
p19038
(lp19039
S'float64'
p19040
aNtp19041
(S'maxVal'
p19042
(lp19043
S'float64'
p19044
aNtp19045
(S'units'
p19046
(lp19047
S'int32'
p19048
aNtp19049
(S'voltageExcitSource'
p19050
(lp19051
S'int32'
p19052
aNtp19053
(S'voltageExcitVal'
p19054
(lp19055
S'float64'
p19056
aNtp19057
(S'voltageExcitFreq'
p19058
(lp19059
S'float64'
p19060
aNtp19061
(S'ACExcitWireMode'
p19062
(lp19063
S'int32'
p19064
aNtp19065
(S'customScaleName'
p19066
(lp19067
S'char'
p19068
a(lp19069
I-1
aaNtp19070
tp19071
tp19072
sS'DAQmxGetCILinEncoderInitialPos'
p19073
((lp19074
S'int32'
p19075
ag34
a((S'taskHandle'
p19076
(lp19077
S'TaskHandle'
p19078
aNtp19079
(S'channel'
p19080
(lp19081
S'char'
p19082
a(lp19083
I-1
aaNtp19084
(S'data'
p19085
(lp19086
S'float64'
p19087
ag42
aNtp19088
tp19089
tp19090
sS'DAQmxGetAIRngHigh'
p19091
((lp19092
S'int32'
p19093
ag34
a((S'taskHandle'
p19094
(lp19095
S'TaskHandle'
p19096
aNtp19097
(S'channel'
p19098
(lp19099
S'char'
p19100
a(lp19101
I-1
aaNtp19102
(S'data'
p19103
(lp19104
S'float64'
p19105
ag42
aNtp19106
tp19107
tp19108
sS'DAQmxResetCICtrTimebaseDigFltrTimebaseRate'
p19109
((lp19110
S'int32'
p19111
ag34
a((S'taskHandle'
p19112
(lp19113
S'TaskHandle'
p19114
aNtp19115
(S'channel'
p19116
(lp19117
S'char'
p19118
a(lp19119
I-1
aaNtp19120
tp19121
tp19122
sS'DAQmxGetCOPulseTerm'
p19123
((lp19124
S'int32'
p19125
ag34
a((S'taskHandle'
p19126
(lp19127
S'TaskHandle'
p19128
aNtp19129
(S'channel'
p19130
(lp19131
S'char'
p19132
a(lp19133
I-1
aaNtp19134
(S'data'
p19135
(lp19136
S'char'
p19137
ag42
aNtp19138
(S'bufferSize'
p19139
(lp19140
S'uInt32'
p19141
aNtp19142
tp19143
tp19144
sS'DAQmxGetDevPXISlotNum'
p19145
((lp19146
S'int32'
p19147
ag34
a((S'device'
p19148
(lp19149
S'char'
p19150
a(lp19151
I-1
aaNtp19152
(S'data'
p19153
(lp19154
S'uInt32'
p19155
ag42
aNtp19156
tp19157
tp19158
sS'DAQmxGetAIFreqHyst'
p19159
((lp19160
S'int32'
p19161
ag34
a((S'taskHandle'
p19162
(lp19163
S'TaskHandle'
p19164
aNtp19165
(S'channel'
p19166
(lp19167
S'char'
p19168
a(lp19169
I-1
aaNtp19170
(S'data'
p19171
(lp19172
S'float64'
p19173
ag42
aNtp19174
tp19175
tp19176
sS'DAQmxResetCIEncoderZInputDigFltrTimebaseRate'
p19177
((lp19178
S'int32'
p19179
ag34
a((S'taskHandle'
p19180
(lp19181
S'TaskHandle'
p19182
aNtp19183
(S'channel'
p19184
(lp19185
S'char'
p19186
a(lp19187
I-1
aaNtp19188
tp19189
tp19190
sS'DAQmxGetAnlgWinPauseTrigSrc'
p19191
((lp19192
S'int32'
p19193
ag34
a((S'taskHandle'
p19194
(lp19195
S'TaskHandle'
p19196
aNtp19197
(S'data'
p19198
(lp19199
S'char'
p19200
ag42
aNtp19201
(S'bufferSize'
p19202
(lp19203
S'uInt32'
p19204
aNtp19205
tp19206
tp19207
sS'DAQmxGetWriteRegenMode'
p19208
((lp19209
S'int32'
p19210
ag34
a((S'taskHandle'
p19211
(lp19212
S'TaskHandle'
p19213
aNtp19214
(S'data'
p19215
(lp19216
S'int32'
p19217
ag42
aNtp19218
tp19219
tp19220
sS'DAQmxResetDOTristate'
p19221
((lp19222
S'int32'
p19223
ag34
a((S'taskHandle'
p19224
(lp19225
S'TaskHandle'
p19226
aNtp19227
(S'channel'
p19228
(lp19229
S'char'
p19230
a(lp19231
I-1
aaNtp19232
tp19233
tp19234
sS'DAQmxResetCIPulseWidthStartingEdge'
p19235
((lp19236
S'int32'
p19237
ag34
a((S'taskHandle'
p19238
(lp19239
S'TaskHandle'
p19240
aNtp19241
(S'channel'
p19242
(lp19243
S'char'
p19244
a(lp19245
I-1
aaNtp19246
tp19247
tp19248
sS'DAQmxSetAIACExcitWireMode'
p19249
((lp19250
S'int32'
p19251
ag34
a((S'taskHandle'
p19252
(lp19253
S'TaskHandle'
p19254
aNtp19255
(S'channel'
p19256
(lp19257
S'char'
p19258
a(lp19259
I-1
aaNtp19260
(S'data'
p19261
(lp19262
S'int32'
p19263
aNtp19264
tp19265
tp19266
sS'DAQmxSetSwitchDevSettlingTime'
p19267
((lp19268
S'int32'
p19269
ag34
a((S'deviceName'
p19270
(lp19271
S'char'
p19272
a(lp19273
I-1
aaNtp19274
(S'data'
p19275
(lp19276
S'float64'
p19277
aNtp19278
tp19279
tp19280
sS'DAQmxResetAnlgEdgeRefTrigCoupling'
p19281
((lp19282
S'int32'
p19283
ag34
a((S'taskHandle'
p19284
(lp19285
S'TaskHandle'
p19286
aNtp19287
tp19288
tp19289
sS'DAQmxGetTaskName'
p19290
((lp19291
S'int32'
p19292
ag34
a((S'taskHandle'
p19293
(lp19294
S'TaskHandle'
p19295
aNtp19296
(S'data'
p19297
(lp19298
S'char'
p19299
ag42
aNtp19300
(S'bufferSize'
p19301
(lp19302
S'uInt32'
p19303
aNtp19304
tp19305
tp19306
sS'DAQmxSetCISemiPeriodDigSyncEnable'
p19307
((lp19308
S'int32'
p19309
ag34
a((S'taskHandle'
p19310
(lp19311
S'TaskHandle'
p19312
aNtp19313
(S'channel'
p19314
(lp19315
S'char'
p19316
a(lp19317
I-1
aaNtp19318
(S'data'
p19319
(lp19320
S'bool32'
p19321
aNtp19322
tp19323
tp19324
sS'DAQmxGetCIEncoderAInputDigFltrTimebaseRate'
p19325
((lp19326
S'int32'
p19327
ag34
a((S'taskHandle'
p19328
(lp19329
S'TaskHandle'
p19330
aNtp19331
(S'channel'
p19332
(lp19333
S'char'
p19334
a(lp19335
I-1
aaNtp19336
(S'data'
p19337
(lp19338
S'float64'
p19339
ag42
aNtp19340
tp19341
tp19342
sS'DAQmxReadCounterF64'
p19343
((lp19344
S'int32'
p19345
ag34
a((S'taskHandle'
p19346
(lp19347
S'TaskHandle'
p19348
aNtp19349
(S'numSampsPerChan'
p19350
(lp19351
S'int32'
p19352
aNtp19353
(S'timeout'
p19354
(lp19355
S'float64'
p19356
aNtp19357
(S'readArray'
p19358
(lp19359
S'float64'
p19360
a(lp19361
I-1
aaNtp19362
(S'arraySizeInSamps'
p19363
(lp19364
S'uInt32'
p19365
aNtp19366
(S'sampsPerChanRead'
p19367
(lp19368
S'int32'
p19369
ag42
aNtp19370
(S'reserved'
p19371
(lp19372
S'bool32'
p19373
ag42
aNtp19374
tp19375
tp19376
sS'DAQmxSetCICtrTimebaseActiveEdge'
p19377
((lp19378
S'int32'
p19379
ag34
a((S'taskHandle'
p19380
(lp19381
S'TaskHandle'
p19382
aNtp19383
(S'channel'
p19384
(lp19385
S'char'
p19386
a(lp19387
I-1
aaNtp19388
(S'data'
p19389
(lp19390
S'int32'
p19391
aNtp19392
tp19393
tp19394
sS'DAQmxSetDigEdgeArmStartTrigDigFltrEnable'
p19395
((lp19396
S'int32'
p19397
ag34
a((S'taskHandle'
p19398
(lp19399
S'TaskHandle'
p19400
aNtp19401
(S'data'
p19402
(lp19403
S'bool32'
p19404
aNtp19405
tp19406
tp19407
sS'DAQmxSetSampClkDigFltrTimebaseRate'
p19408
((lp19409
S'int32'
p19410
ag34
a((S'taskHandle'
p19411
(lp19412
S'TaskHandle'
p19413
aNtp19414
(S'data'
p19415
(lp19416
S'float64'
p19417
aNtp19418
tp19419
tp19420
sS'DAQmxResetCICountEdgesActiveEdge'
p19421
((lp19422
S'int32'
p19423
ag34
a((S'taskHandle'
p19424
(lp19425
S'TaskHandle'
p19426
aNtp19427
(S'channel'
p19428
(lp19429
S'char'
p19430
a(lp19431
I-1
aaNtp19432
tp19433
tp19434
sS'DAQmxGetHshkDelayAfterXfer'
p19435
((lp19436
S'int32'
p19437
ag34
a((S'taskHandle'
p19438
(lp19439
S'TaskHandle'
p19440
aNtp19441
(S'data'
p19442
(lp19443
S'float64'
p19444
ag42
aNtp19445
tp19446
tp19447
sS'DAQmxSetAODACOffsetExtSrc'
p19448
((lp19449
S'int32'
p19450
ag34
a((S'taskHandle'
p19451
(lp19452
S'TaskHandle'
p19453
aNtp19454
(S'channel'
p19455
(lp19456
S'char'
p19457
a(lp19458
I-1
aaNtp19459
(S'data'
p19460
(lp19461
S'char'
p19462
ag42
aNtp19463
tp19464
tp19465
sS'DAQmxGetReadCurrReadPos'
p19466
((lp19467
S'int32'
p19468
ag34
a((S'taskHandle'
p19469
(lp19470
S'TaskHandle'
p19471
aNtp19472
(S'data'
p19473
(lp19474
S'uInt64'
p19475
ag42
aNtp19476
tp19477
tp19478
sS'DAQmxGetAIThrmcplCJCSrc'
p19479
((lp19480
S'int32'
p19481
ag34
a((S'taskHandle'
p19482
(lp19483
S'TaskHandle'
p19484
aNtp19485
(S'channel'
p19486
(lp19487
S'char'
p19488
a(lp19489
I-1
aaNtp19490
(S'data'
p19491
(lp19492
S'int32'
p19493
ag42
aNtp19494
tp19495
tp19496
sS'DAQmxGetCIGPSSyncMethod'
p19497
((lp19498
S'int32'
p19499
ag34
a((S'taskHandle'
p19500
(lp19501
S'TaskHandle'
p19502
aNtp19503
(S'channel'
p19504
(lp19505
S'char'
p19506
a(lp19507
I-1
aaNtp19508
(S'data'
p19509
(lp19510
S'int32'
p19511
ag42
aNtp19512
tp19513
tp19514
sS'DAQmxGetStartTrigDelayUnits'
p19515
((lp19516
S'int32'
p19517
ag34
a((S'taskHandle'
p19518
(lp19519
S'TaskHandle'
p19520
aNtp19521
(S'data'
p19522
(lp19523
S'int32'
p19524
ag42
aNtp19525
tp19526
tp19527
sS'DAQmxResetAnlgWinStartTrigCoupling'
p19528
((lp19529
S'int32'
p19530
ag34
a((S'taskHandle'
p19531
(lp19532
S'TaskHandle'
p19533
aNtp19534
tp19535
tp19536
sS'DAQmxGetDigLvlPauseTrigDigFltrEnable'
p19537
((lp19538
S'int32'
p19539
ag34
a((S'taskHandle'
p19540
(lp19541
S'TaskHandle'
p19542
aNtp19543
(S'data'
p19544
(lp19545
S'bool32'
p19546
ag42
aNtp19547
tp19548
tp19549
sS'DAQmxWriteCtrTime'
p19550
((lp19551
S'int32'
p19552
ag34
a((S'taskHandle'
p19553
(lp19554
S'TaskHandle'
p19555
aNtp19556
(S'numSampsPerChan'
p19557
(lp19558
S'int32'
p19559
aNtp19560
(S'autoStart'
p19561
(lp19562
S'bool32'
p19563
aNtp19564
(S'timeout'
p19565
(lp19566
S'float64'
p19567
aNtp19568
(S'dataLayout'
p19569
(lp19570
S'bool32'
p19571
aNtp19572
(S'highTime'
p19573
(lp19574
S'float64'
p19575
a(lp19576
I-1
aaNtp19577
(S'lowTime'
p19578
(lp19579
S'float64'
p19580
a(lp19581
I-1
aaNtp19582
(S'numSampsPerChanWritten'
p19583
(lp19584
S'int32'
p19585
ag42
aNtp19586
(S'reserved'
p19587
(lp19588
S'bool32'
p19589
ag42
aNtp19590
tp19591
tp19592
sS'DAQmxResetCOPulseLowTicks'
p19593
((lp19594
S'int32'
p19595
ag34
a((S'taskHandle'
p19596
(lp19597
S'TaskHandle'
p19598
aNtp19599
(S'channel'
p19600
(lp19601
S'char'
p19602
a(lp19603
I-1
aaNtp19604
tp19605
tp19606
sS'DAQmxResetCITwoEdgeSepFirstDigSyncEnable'
p19607
((lp19608
S'int32'
p19609
ag34
a((S'taskHandle'
p19610
(lp19611
S'TaskHandle'
p19612
aNtp19613
(S'channel'
p19614
(lp19615
S'char'
p19616
a(lp19617
I-1
aaNtp19618
tp19619
tp19620
sS'DAQmxSetCOPulseLowTicks'
p19621
((lp19622
S'int32'
p19623
ag34
a((S'taskHandle'
p19624
(lp19625
S'TaskHandle'
p19626
aNtp19627
(S'channel'
p19628
(lp19629
S'char'
p19630
a(lp19631
I-1
aaNtp19632
(S'data'
p19633
(lp19634
S'uInt32'
p19635
aNtp19636
tp19637
tp19638
sS'DAQmxGetReadAvailSampPerChan'
p19639
((lp19640
S'int32'
p19641
ag34
a((S'taskHandle'
p19642
(lp19643
S'TaskHandle'
p19644
aNtp19645
(S'data'
p19646
(lp19647
S'uInt32'
p19648
ag42
aNtp19649
tp19650
tp19651
sS'DAQmxSetExportedStartTrigOutputTerm'
p19652
((lp19653
S'int32'
p19654
ag34
a((S'taskHandle'
p19655
(lp19656
S'TaskHandle'
p19657
aNtp19658
(S'data'
p19659
(lp19660
S'char'
p19661
ag42
aNtp19662
tp19663
tp19664
sS'DAQmxSetSampClkTimebaseMasterTimebaseDiv'
p19665
((lp19666
S'int32'
p19667
ag34
a((S'taskHandle'
p19668
(lp19669
S'TaskHandle'
p19670
aNtp19671
(S'data'
p19672
(lp19673
S'uInt32'
p19674
aNtp19675
tp19676
tp19677
sS'DAQmxGetWriteWaitMode'
p19678
((lp19679
S'int32'
p19680
ag34
a((S'taskHandle'
p19681
(lp19682
S'TaskHandle'
p19683
aNtp19684
(S'data'
p19685
(lp19686
S'int32'
p19687
ag42
aNtp19688
tp19689
tp19690
sS'DAQmxResetCIFreqDigFltrEnable'
p19691
((lp19692
S'int32'
p19693
ag34
a((S'taskHandle'
p19694
(lp19695
S'TaskHandle'
p19696
aNtp19697
(S'channel'
p19698
(lp19699
S'char'
p19700
a(lp19701
I-1
aaNtp19702
tp19703
tp19704
sS'DAQmxGetExportedRdyForXferEventOutputTerm'
p19705
((lp19706
S'int32'
p19707
ag34
a((S'taskHandle'
p19708
(lp19709
S'TaskHandle'
p19710
aNtp19711
(S'data'
p19712
(lp19713
S'char'
p19714
ag42
aNtp19715
(S'bufferSize'
p19716
(lp19717
S'uInt32'
p19718
aNtp19719
tp19720
tp19721
sS'DAQmxGetCITwoEdgeSepSecondTerm'
p19722
((lp19723
S'int32'
p19724
ag34
a((S'taskHandle'
p19725
(lp19726
S'TaskHandle'
p19727
aNtp19728
(S'channel'
p19729
(lp19730
S'char'
p19731
a(lp19732
I-1
aaNtp19733
(S'data'
p19734
(lp19735
S'char'
p19736
ag42
aNtp19737
(S'bufferSize'
p19738
(lp19739
S'uInt32'
p19740
aNtp19741
tp19742
tp19743
sS'DAQmxGetSwitchDevTopology'
p19744
((lp19745
S'int32'
p19746
ag34
a((S'deviceName'
p19747
(lp19748
S'char'
p19749
a(lp19750
I-1
aaNtp19751
(S'data'
p19752
(lp19753
S'char'
p19754
ag42
aNtp19755
(S'bufferSize'
p19756
(lp19757
S'uInt32'
p19758
aNtp19759
tp19760
tp19761
sS'DAQmxGetAOMemMapEnable'
p19762
((lp19763
S'int32'
p19764
ag34
a((S'taskHandle'
p19765
(lp19766
S'TaskHandle'
p19767
aNtp19768
(S'channel'
p19769
(lp19770
S'char'
p19771
a(lp19772
I-1
aaNtp19773
(S'data'
p19774
(lp19775
S'bool32'
p19776
ag42
aNtp19777
tp19778
tp19779
sS'DAQmxSetMasterTimebaseRate'
p19780
((lp19781
S'int32'
p19782
ag34
a((S'taskHandle'
p19783
(lp19784
S'TaskHandle'
p19785
aNtp19786
(S'data'
p19787
(lp19788
S'float64'
p19789
aNtp19790
tp19791
tp19792
sS'DAQmxResetExportedHshkEventDelay'
p19793
((lp19794
S'int32'
p19795
ag34
a((S'taskHandle'
p19796
(lp19797
S'TaskHandle'
p19798
aNtp19799
tp19800
tp19801
sS'DAQmxGetCIFreqDigFltrTimebaseRate'
p19802
((lp19803
S'int32'
p19804
ag34
a((S'taskHandle'
p19805
(lp19806
S'TaskHandle'
p19807
aNtp19808
(S'channel'
p19809
(lp19810
S'char'
p19811
a(lp19812
I-1
aaNtp19813
(S'data'
p19814
(lp19815
S'float64'
p19816
ag42
aNtp19817
tp19818
tp19819
sS'DAQmxGetWriteOffset'
p19820
((lp19821
S'int32'
p19822
ag34
a((S'taskHandle'
p19823
(lp19824
S'TaskHandle'
p19825
aNtp19826
(S'data'
p19827
(lp19828
S'int32'
p19829
ag42
aNtp19830
tp19831
tp19832
sS'DAQmxResetWatchdogExpirTrigType'
p19833
((lp19834
S'int32'
p19835
ag34
a((S'taskHandle'
p19836
(lp19837
S'TaskHandle'
p19838
aNtp19839
tp19840
tp19841
sS'DAQmxGetCIPeriodUnits'
p19842
((lp19843
S'int32'
p19844
ag34
a((S'taskHandle'
p19845
(lp19846
S'TaskHandle'
p19847
aNtp19848
(S'channel'
p19849
(lp19850
S'char'
p19851
a(lp19852
I-1
aaNtp19853
(S'data'
p19854
(lp19855
S'int32'
p19856
ag42
aNtp19857
tp19858
tp19859
sS'DAQmxResetExportedAdvTrigPulseWidth'
p19860
((lp19861
S'int32'
p19862
ag34
a((S'taskHandle'
p19863
(lp19864
S'TaskHandle'
p19865
aNtp19866
tp19867
tp19868
sS'DAQmxSetRealTimeReportMissedSamp'
p19869
((lp19870
S'int32'
p19871
ag34
a((S'taskHandle'
p19872
(lp19873
S'TaskHandle'
p19874
aNtp19875
(S'data'
p19876
(lp19877
S'bool32'
p19878
aNtp19879
tp19880
tp19881
sS'DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth'
p19882
((lp19883
S'int32'
p19884
ag34
a((S'taskHandle'
p19885
(lp19886
S'TaskHandle'
p19887
aNtp19888
(S'data'
p19889
(lp19890
S'float64'
p19891
aNtp19892
tp19893
tp19894
sS'DAQmxCreateTEDSAIThrmstrChanVex'
p19895
((lp19896
S'int32'
p19897
ag34
a((S'taskHandle'
p19898
(lp19899
S'TaskHandle'
p19900
aNtp19901
(S'physicalChannel'
p19902
(lp19903
S'char'
p19904
a(lp19905
I-1
aaNtp19906
(S'nameToAssignToChannel'
p19907
(lp19908
S'char'
p19909
a(lp19910
I-1
aaNtp19911
(S'minVal'
p19912
(lp19913
S'float64'
p19914
aNtp19915
(S'maxVal'
p19916
(lp19917
S'float64'
p19918
aNtp19919
(S'units'
p19920
(lp19921
S'int32'
p19922
aNtp19923
(S'resistanceConfig'
p19924
(lp19925
S'int32'
p19926
aNtp19927
(S'voltageExcitSource'
p19928
(lp19929
S'int32'
p19930
aNtp19931
(S'voltageExcitVal'
p19932
(lp19933
S'float64'
p19934
aNtp19935
(S'r1'
p19936
(lp19937
S'float64'
p19938
aNtp19939
tp19940
tp19941
sS'DAQmxSetAIConvTimebaseDiv'
p19942
((lp19943
S'int32'
p19944
ag34
a((S'taskHandle'
p19945
(lp19946
S'TaskHandle'
p19947
aNtp19948
(S'data'
p19949
(lp19950
S'uInt32'
p19951
aNtp19952
tp19953
tp19954
sS'DAQmxSetAIRngHigh'
p19955
((lp19956
S'int32'
p19957
ag34
a((S'taskHandle'
p19958
(lp19959
S'TaskHandle'
p19960
aNtp19961
(S'channel'
p19962
(lp19963
S'char'
p19964
a(lp19965
I-1
aaNtp19966
(S'data'
p19967
(lp19968
S'float64'
p19969
aNtp19970
tp19971
tp19972
sS'DAQmxSetDigEdgeAdvTrigSrc'
p19973
((lp19974
S'int32'
p19975
ag34
a((S'taskHandle'
p19976
(lp19977
S'TaskHandle'
p19978
aNtp19979
(S'data'
p19980
(lp19981
S'char'
p19982
ag42
aNtp19983
tp19984
tp19985
sS'DAQmxGetCICtrTimebaseDigSyncEnable'
p19986
((lp19987
S'int32'
p19988
ag34
a((S'taskHandle'
p19989
(lp19990
S'TaskHandle'
p19991
aNtp19992
(S'channel'
p19993
(lp19994
S'char'
p19995
a(lp19996
I-1
aaNtp19997
(S'data'
p19998
(lp19999
S'bool32'
p20000
ag42
aNtp20001
tp20002
tp20003
sS'DAQmxResetExportedHshkEventOutputBehavior'
p20004
((lp20005
S'int32'
p20006
ag34
a((S'taskHandle'
p20007
(lp20008
S'TaskHandle'
p20009
aNtp20010
tp20011
tp20012
sS'DAQmxResetAIFreqUnits'
p20013
((lp20014
S'int32'
p20015
ag34
a((S'taskHandle'
p20016
(lp20017
S'TaskHandle'
p20018
aNtp20019
(S'channel'
p20020
(lp20021
S'char'
p20022
a(lp20023
I-1
aaNtp20024
tp20025
tp20026
sS'DAQmxCfgDigEdgeStartTrig'
p20027
((lp20028
S'int32'
p20029
ag34
a((S'taskHandle'
p20030
(lp20031
S'TaskHandle'
p20032
aNtp20033
(S'triggerSource'
p20034
(lp20035
S'char'
p20036
a(lp20037
I-1
aaNtp20038
(S'triggerEdge'
p20039
(lp20040
S'int32'
p20041
aNtp20042
tp20043
tp20044
sS'DAQmxSetAISoundPressureUnits'
p20045
((lp20046
S'int32'
p20047
ag34
a((S'taskHandle'
p20048
(lp20049
S'TaskHandle'
p20050
aNtp20051
(S'channel'
p20052
(lp20053
S'char'
p20054
a(lp20055
I-1
aaNtp20056
(S'data'
p20057
(lp20058
S'int32'
p20059
aNtp20060
tp20061
tp20062
sS'DAQmxControlWatchdogTask'
p20063
((lp20064
S'int32'
p20065
ag34
a((S'taskHandle'
p20066
(lp20067
S'TaskHandle'
p20068
aNtp20069
(S'action'
p20070
(lp20071
S'int32'
p20072
aNtp20073
tp20074
tp20075
sS'DAQmxGetCICount'
p20076
((lp20077
S'int32'
p20078
ag34
a((S'taskHandle'
p20079
(lp20080
S'TaskHandle'
p20081
aNtp20082
(S'channel'
p20083
(lp20084
S'char'
p20085
a(lp20086
I-1
aaNtp20087
(S'data'
p20088
(lp20089
S'uInt32'
p20090
ag42
aNtp20091
tp20092
tp20093
sS'DAQmxResetCICountEdgesDigFltrMinPulseWidth'
p20094
((lp20095
S'int32'
p20096
ag34
a((S'taskHandle'
p20097
(lp20098
S'TaskHandle'
p20099
aNtp20100
(S'channel'
p20101
(lp20102
S'char'
p20103
a(lp20104
I-1
aaNtp20105
tp20106
tp20107
sS'DAQmxResetExportedHshkEventPulseWidth'
p20108
((lp20109
S'int32'
p20110
ag34
a((S'taskHandle'
p20111
(lp20112
S'TaskHandle'
p20113
aNtp20114
tp20115
tp20116
sS'DAQmxRegisterSignalEvent'
p20117
((lp20118
S'int32'
p20119
ag34
a((S'task'
p20120
(lp20121
S'TaskHandle'
p20122
aNtp20123
(S'signalID'
p20124
(lp20125
S'int32'
p20126
aNtp20127
(S'options'
p20128
(lp20129
S'uInt32'
p20130
aNtp20131
(S'callbackFunction'
p20132
(lp20133
S'DAQmxSignalEventCallbackPtr'
p20134
aNtp20135
(S'callbackData'
p20136
(lp20137
S'void'
p20138
ag42
aNtp20139
tp20140
tp20141
sS'DAQmxSetRealTimeWaitForNextSampClkWaitMode'
p20142
((lp20143
S'int32'
p20144
ag34
a((S'taskHandle'
p20145
(lp20146
S'TaskHandle'
p20147
aNtp20148
(S'data'
p20149
(lp20150
S'int32'
p20151
aNtp20152
tp20153
tp20154
sS'DAQmxCreateCICountEdgesChan'
p20155
((lp20156
S'int32'
p20157
ag34
a((S'taskHandle'
p20158
(lp20159
S'TaskHandle'
p20160
aNtp20161
(S'counter'
p20162
(lp20163
S'char'
p20164
a(lp20165
I-1
aaNtp20166
(S'nameToAssignToChannel'
p20167
(lp20168
S'char'
p20169
a(lp20170
I-1
aaNtp20171
(S'edge'
p20172
(lp20173
S'int32'
p20174
aNtp20175
(S'initialCount'
p20176
(lp20177
S'uInt32'
p20178
aNtp20179
(S'countDirection'
p20180
(lp20181
S'int32'
p20182
aNtp20183
tp20184
tp20185
sS'DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling'
p20186
((lp20187
S'int32'
p20188
ag34
a((S'deviceName'
p20189
(lp20190
S'char'
p20191
a(lp20192
I-1
aaNtp20193
(S'data'
p20194
(lp20195
S'bool32'
p20196
ag42
aNtp20197
tp20198
tp20199
sS'DAQmxGetSampClkDigFltrTimebaseSrc'
p20200
((lp20201
S'int32'
p20202
ag34
a((S'taskHandle'
p20203
(lp20204
S'TaskHandle'
p20205
aNtp20206
(S'data'
p20207
(lp20208
S'char'
p20209
ag42
aNtp20210
(S'bufferSize'
p20211
(lp20212
S'uInt32'
p20213
aNtp20214
tp20215
tp20216
sS'DAQmxGetReadOverloadedChans'
p20217
((lp20218
S'int32'
p20219
ag34
a((S'taskHandle'
p20220
(lp20221
S'TaskHandle'
p20222
aNtp20223
(S'data'
p20224
(lp20225
S'char'
p20226
ag42
aNtp20227
(S'bufferSize'
p20228
(lp20229
S'uInt32'
p20230
aNtp20231
tp20232
tp20233
sS'DAQmxResetAnlgLvlPauseTrigHyst'
p20234
((lp20235
S'int32'
p20236
ag34
a((S'taskHandle'
p20237
(lp20238
S'TaskHandle'
p20239
aNtp20240
tp20241
tp20242
sS'DAQmxSetAODACRefVal'
p20243
((lp20244
S'int32'
p20245
ag34
a((S'taskHandle'
p20246
(lp20247
S'TaskHandle'
p20248
aNtp20249
(S'channel'
p20250
(lp20251
S'char'
p20252
a(lp20253
I-1
aaNtp20254
(S'data'
p20255
(lp20256
S'float64'
p20257
aNtp20258
tp20259
tp20260
sS'DAQmxCreatePolynomialScale'
p20261
((lp20262
S'int32'
p20263
ag34
a((S'name'
p20264
(lp20265
S'char'
p20266
a(lp20267
I-1
aaNtp20268
(S'forwardCoeffs'
p20269
(lp20270
S'float64'
p20271
a(lp20272
I-1
aaNtp20273
(S'numForwardCoeffsIn'
p20274
(lp20275
S'uInt32'
p20276
aNtp20277
(S'reverseCoeffs'
p20278
(lp20279
S'float64'
p20280
a(lp20281
I-1
aaNtp20282
(S'numReverseCoeffsIn'
p20283
(lp20284
S'uInt32'
p20285
aNtp20286
(S'preScaledUnits'
p20287
(lp20288
S'int32'
p20289
aNtp20290
(S'scaledUnits'
p20291
(lp20292
S'char'
p20293
a(lp20294
I-1
aaNtp20295
tp20296
tp20297
sS'DAQmxReadDigitalLines'
p20298
((lp20299
S'int32'
p20300
ag34
a((S'taskHandle'
p20301
(lp20302
S'TaskHandle'
p20303
aNtp20304
(S'numSampsPerChan'
p20305
(lp20306
S'int32'
p20307
aNtp20308
(S'timeout'
p20309
(lp20310
S'float64'
p20311
aNtp20312
(S'fillMode'
p20313
(lp20314
S'bool32'
p20315
aNtp20316
(S'readArray'
p20317
(lp20318
S'uInt8'
p20319
a(lp20320
I-1
aaNtp20321
(S'arraySizeInBytes'
p20322
(lp20323
S'uInt32'
p20324
aNtp20325
(S'sampsPerChanRead'
p20326
(lp20327
S'int32'
p20328
ag42
aNtp20329
(S'numBytesPerSamp'
p20330
(lp20331
S'int32'
p20332
ag42
aNtp20333
(S'reserved'
p20334
(lp20335
S'bool32'
p20336
ag42
aNtp20337
tp20338
tp20339
sS'DAQmxResetAIImpedance'
p20340
((lp20341
S'int32'
p20342
ag34
a((S'taskHandle'
p20343
(lp20344
S'TaskHandle'
p20345
aNtp20346
(S'channel'
p20347
(lp20348
S'char'
p20349
a(lp20350
I-1
aaNtp20351
tp20352
tp20353
sS'DAQmxResetCITwoEdgeSepFirstTerm'
p20354
((lp20355
S'int32'
p20356
ag34
a((S'taskHandle'
p20357
(lp20358
S'TaskHandle'
p20359
aNtp20360
(S'channel'
p20361
(lp20362
S'char'
p20363
a(lp20364
I-1
aaNtp20365
tp20366
tp20367
sS'DAQmxCreateTEDSAICurrentChan'
p20368
((lp20369
S'int32'
p20370
ag34
a((S'taskHandle'
p20371
(lp20372
S'TaskHandle'
p20373
aNtp20374
(S'physicalChannel'
p20375
(lp20376
S'char'
p20377
a(lp20378
I-1
aaNtp20379
(S'nameToAssignToChannel'
p20380
(lp20381
S'char'
p20382
a(lp20383
I-1
aaNtp20384
(S'terminalConfig'
p20385
(lp20386
S'int32'
p20387
aNtp20388
(S'minVal'
p20389
(lp20390
S'float64'
p20391
aNtp20392
(S'maxVal'
p20393
(lp20394
S'float64'
p20395
aNtp20396
(S'units'
p20397
(lp20398
S'int32'
p20399
aNtp20400
(S'shuntResistorLoc'
p20401
(lp20402
S'int32'
p20403
aNtp20404
(S'extShuntResistorVal'
p20405
(lp20406
S'float64'
p20407
aNtp20408
(S'customScaleName'
p20409
(lp20410
S'char'
p20411
a(lp20412
I-1
aaNtp20413
tp20414
tp20415
sS'DAQmxGetExported10MHzRefClkOutputTerm'
p20416
((lp20417
S'int32'
p20418
ag34
a((S'taskHandle'
p20419
(lp20420
S'TaskHandle'
p20421
aNtp20422
(S'data'
p20423
(lp20424
S'char'
p20425
ag42
aNtp20426
(S'bufferSize'
p20427
(lp20428
S'uInt32'
p20429
aNtp20430
tp20431
tp20432
sS'DAQmxSetAODACOffsetVal'
p20433
((lp20434
S'int32'
p20435
ag34
a((S'taskHandle'
p20436
(lp20437
S'TaskHandle'
p20438
aNtp20439
(S'channel'
p20440
(lp20441
S'char'
p20442
a(lp20443
I-1
aaNtp20444
(S'data'
p20445
(lp20446
S'float64'
p20447
aNtp20448
tp20449
tp20450
sS'DAQmxGetSwitchDevNumRelays'
p20451
((lp20452
S'int32'
p20453
ag34
a((S'deviceName'
p20454
(lp20455
S'char'
p20456
a(lp20457
I-1
aaNtp20458
(S'data'
p20459
(lp20460
S'uInt32'
p20461
ag42
aNtp20462
tp20463
tp20464
sS'DAQmxSetCIEncoderBInputDigFltrTimebaseSrc'
p20465
((lp20466
S'int32'
p20467
ag34
a((S'taskHandle'
p20468
(lp20469
S'TaskHandle'
p20470
aNtp20471
(S'channel'
p20472
(lp20473
S'char'
p20474
a(lp20475
I-1
aaNtp20476
(S'data'
p20477
(lp20478
S'char'
p20479
ag42
aNtp20480
tp20481
tp20482
sS'DAQmxGetReadChangeDetectHasOverflowed'
p20483
((lp20484
S'int32'
p20485
ag34
a((S'taskHandle'
p20486
(lp20487
S'TaskHandle'
p20488
aNtp20489
(S'data'
p20490
(lp20491
S'bool32'
p20492
ag42
aNtp20493
tp20494
tp20495
sS'DAQmxSetScaleMapScaledMax'
p20496
((lp20497
S'int32'
p20498
ag34
a((S'scaleName'
p20499
(lp20500
S'char'
p20501
a(lp20502
I-1
aaNtp20503
(S'data'
p20504
(lp20505
S'float64'
p20506
aNtp20507
tp20508
tp20509
sS'DAQmxResetCILinEncoderDistPerPulse'
p20510
((lp20511
S'int32'
p20512
ag34
a((S'taskHandle'
p20513
(lp20514
S'TaskHandle'
p20515
aNtp20516
(S'channel'
p20517
(lp20518
S'char'
p20519
a(lp20520
I-1
aaNtp20521
tp20522
tp20523
sS'DAQmxResetAnlgEdgeRefTrigLvl'
p20524
((lp20525
S'int32'
p20526
ag34
a((S'taskHandle'
p20527
(lp20528
S'TaskHandle'
p20529
aNtp20530
tp20531
tp20532
sS'DAQmxSetAIChanCalPolyReverseCoeff'
p20533
((lp20534
S'int32'
p20535
ag34
a((S'taskHandle'
p20536
(lp20537
S'TaskHandle'
p20538
aNtp20539
(S'channel'
p20540
(lp20541
S'char'
p20542
a(lp20543
I-1
aaNtp20544
(S'data'
p20545
(lp20546
S'float64'
p20547
ag42
aNtp20548
(S'arraySizeInSamples'
p20549
(lp20550
S'uInt32'
p20551
aNtp20552
tp20553
tp20554
sS'DAQmxGetReadOffset'
p20555
((lp20556
S'int32'
p20557
ag34
a((S'taskHandle'
p20558
(lp20559
S'TaskHandle'
p20560
aNtp20561
(S'data'
p20562
(lp20563
S'int32'
p20564
ag42
aNtp20565
tp20566
tp20567
sS'DAQmxResetCIEncoderZInputTerm'
p20568
((lp20569
S'int32'
p20570
ag34
a((S'taskHandle'
p20571
(lp20572
S'TaskHandle'
p20573
aNtp20574
(S'channel'
p20575
(lp20576
S'char'
p20577
a(lp20578
I-1
aaNtp20579
tp20580
tp20581
sS'DAQmxGetCICtrTimebaseMasterTimebaseDiv'
p20582
((lp20583
S'int32'
p20584
ag34
a((S'taskHandle'
p20585
(lp20586
S'TaskHandle'
p20587
aNtp20588
(S'channel'
p20589
(lp20590
S'char'
p20591
a(lp20592
I-1
aaNtp20593
(S'data'
p20594
(lp20595
S'uInt32'
p20596
ag42
aNtp20597
tp20598
tp20599
sS'DAQmxResetCIPrescaler'
p20600
((lp20601
S'int32'
p20602
ag34
a((S'taskHandle'
p20603
(lp20604
S'TaskHandle'
p20605
aNtp20606
(S'channel'
p20607
(lp20608
S'char'
p20609
a(lp20610
I-1
aaNtp20611
tp20612
tp20613
sS'DAQmxDeleteSavedTask'
p20614
((lp20615
S'int32'
p20616
ag34
a((S'taskName'
p20617
(lp20618
S'char'
p20619
a(lp20620
I-1
aaNtp20621
tp20622
tp20623
sS'DAQmxGetAnlgLvlPauseTrigHyst'
p20624
((lp20625
S'int32'
p20626
ag34
a((S'taskHandle'
p20627
(lp20628
S'TaskHandle'
p20629
aNtp20630
(S'data'
p20631
(lp20632
S'float64'
p20633
ag42
aNtp20634
tp20635
tp20636
sS'DAQmxResetExportedSignalAttribute'
p20637
((lp20638
S'int32'
p20639
ag34
a((S'taskHandle'
p20640
(lp20641
S'TaskHandle'
p20642
aNtp20643
(S'attribute'
p20644
(lp20645
S'int32'
p20646
aNtp20647
tp20648
tp20649
sS'DAQmxGetRealTimeWriteRecoveryMode'
p20650
((lp20651
S'int32'
p20652
ag34
a((S'taskHandle'
p20653
(lp20654
S'TaskHandle'
p20655
aNtp20656
(S'data'
p20657
(lp20658
S'int32'
p20659
ag42
aNtp20660
tp20661
tp20662
sS'DAQmxCreateTableScale'
p20663
((lp20664
S'int32'
p20665
ag34
a((S'name'
p20666
(lp20667
S'char'
p20668
a(lp20669
I-1
aaNtp20670
(S'prescaledVals'
p20671
(lp20672
S'float64'
p20673
a(lp20674
I-1
aaNtp20675
(S'numPrescaledValsIn'
p20676
(lp20677
S'uInt32'
p20678
aNtp20679
(S'scaledVals'
p20680
(lp20681
S'float64'
p20682
a(lp20683
I-1
aaNtp20684
(S'numScaledValsIn'
p20685
(lp20686
S'uInt32'
p20687
aNtp20688
(S'preScaledUnits'
p20689
(lp20690
S'int32'
p20691
aNtp20692
(S'scaledUnits'
p20693
(lp20694
S'char'
p20695
a(lp20696
I-1
aaNtp20697
tp20698
tp20699
sS'DAQmxGetCICountEdgesCountDirDigSyncEnable'
p20700
((lp20701
S'int32'
p20702
ag34
a((S'taskHandle'
p20703
(lp20704
S'TaskHandle'
p20705
aNtp20706
(S'channel'
p20707
(lp20708
S'char'
p20709
a(lp20710
I-1
aaNtp20711
(S'data'
p20712
(lp20713
S'bool32'
p20714
ag42
aNtp20715
tp20716
tp20717
sS'DAQmxResetAIGain'
p20718
((lp20719
S'int32'
p20720
ag34
a((S'taskHandle'
p20721
(lp20722
S'TaskHandle'
p20723
aNtp20724
(S'channel'
p20725
(lp20726
S'char'
p20727
a(lp20728
I-1
aaNtp20729
tp20730
tp20731
sS'DAQmxSetAnlgLvlPauseTrigSrc'
p20732
((lp20733
S'int32'
p20734
ag34
a((S'taskHandle'
p20735
(lp20736
S'TaskHandle'
p20737
aNtp20738
(S'data'
p20739
(lp20740
S'char'
p20741
ag42
aNtp20742
tp20743
tp20744
sS'DAQmxAdjust4204Cal'
p20745
((lp20746
S'int32'
p20747
ag34
a((S'calHandle'
p20748
(lp20749
S'uInt32'
p20750
aNtp20751
(S'channelNames'
p20752
(lp20753
S'char'
p20754
a(lp20755
I-1
aaNtp20756
(S'lowPassFreq'
p20757
(lp20758
S'float64'
p20759
aNtp20760
(S'trackHoldEnabled'
p20761
(lp20762
S'bool32'
p20763
aNtp20764
(S'inputVal'
p20765
(lp20766
S'float64'
p20767
aNtp20768
tp20769
tp20770
sS'DAQmxSetRefClkSrc'
p20771
((lp20772
S'int32'
p20773
ag34
a((S'taskHandle'
p20774
(lp20775
S'TaskHandle'
p20776
aNtp20777
(S'data'
p20778
(lp20779
S'char'
p20780
ag42
aNtp20781
tp20782
tp20783
sS'DAQmxSetCOPulseFreqUnits'
p20784
((lp20785
S'int32'
p20786
ag34
a((S'taskHandle'
p20787
(lp20788
S'TaskHandle'
p20789
aNtp20790
(S'channel'
p20791
(lp20792
S'char'
p20793
a(lp20794
I-1
aaNtp20795
(S'data'
p20796
(lp20797
S'int32'
p20798
aNtp20799
tp20800
tp20801
sS'DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate'
p20802
((lp20803
S'int32'
p20804
ag34
a((S'taskHandle'
p20805
(lp20806
S'TaskHandle'
p20807
aNtp20808
tp20809
tp20810
sS'DAQmxGetCICtrTimebaseDigFltrTimebaseSrc'
p20811
((lp20812
S'int32'
p20813
ag34
a((S'taskHandle'
p20814
(lp20815
S'TaskHandle'
p20816
aNtp20817
(S'channel'
p20818
(lp20819
S'char'
p20820
a(lp20821
I-1
aaNtp20822
(S'data'
p20823
(lp20824
S'char'
p20825
ag42
aNtp20826
(S'bufferSize'
p20827
(lp20828
S'uInt32'
p20829
aNtp20830
tp20831
tp20832
sS'DAQmxGetRealTimeNumOfWarmupIters'
p20833
((lp20834
S'int32'
p20835
ag34
a((S'taskHandle'
p20836
(lp20837
S'TaskHandle'
p20838
aNtp20839
(S'data'
p20840
(lp20841
S'uInt32'
p20842
ag42
aNtp20843
tp20844
tp20845
sS'DAQmxGetDIInvertLines'
p20846
((lp20847
S'int32'
p20848
ag34
a((S'taskHandle'
p20849
(lp20850
S'TaskHandle'
p20851
aNtp20852
(S'channel'
p20853
(lp20854
S'char'
p20855
a(lp20856
I-1
aaNtp20857
(S'data'
p20858
(lp20859
S'bool32'
p20860
ag42
aNtp20861
tp20862
tp20863
sS'DAQmxResetAnlgEdgeStartTrigCoupling'
p20864
((lp20865
S'int32'
p20866
ag34
a((S'taskHandle'
p20867
(lp20868
S'TaskHandle'
p20869
aNtp20870
tp20871
tp20872
sS'DAQmxGetWriteSleepTime'
p20873
((lp20874
S'int32'
p20875
ag34
a((S'taskHandle'
p20876
(lp20877
S'TaskHandle'
p20878
aNtp20879
(S'data'
p20880
(lp20881
S'float64'
p20882
ag42
aNtp20883
tp20884
tp20885
sS'DAQmxGetCOPulseHighTime'
p20886
((lp20887
S'int32'
p20888
ag34
a((S'taskHandle'
p20889
(lp20890
S'TaskHandle'
p20891
aNtp20892
(S'channel'
p20893
(lp20894
S'char'
p20895
a(lp20896
I-1
aaNtp20897
(S'data'
p20898
(lp20899
S'float64'
p20900
ag42
aNtp20901
tp20902
tp20903
sS'DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling'
p20904
((lp20905
S'int32'
p20906
ag34
a((S'deviceName'
p20907
(lp20908
S'char'
p20909
a(lp20910
I-1
aaNtp20911
(S'data'
p20912
(lp20913
S'bool32'
p20914
aNtp20915
tp20916
tp20917
sS'DAQmxSetAIBridgeCfg'
p20918
((lp20919
S'int32'
p20920
ag34
a((S'taskHandle'
p20921
(lp20922
S'TaskHandle'
p20923
aNtp20924
(S'channel'
p20925
(lp20926
S'char'
p20927
a(lp20928
I-1
aaNtp20929
(S'data'
p20930
(lp20931
S'int32'
p20932
aNtp20933
tp20934
tp20935
sS'DAQmxSetExportedAdvCmpltEventPulseWidth'
p20936
((lp20937
S'int32'
p20938
ag34
a((S'taskHandle'
p20939
(lp20940
S'TaskHandle'
p20941
aNtp20942
(S'data'
p20943
(lp20944
S'float64'
p20945
aNtp20946
tp20947
tp20948
sS'DAQmxSetChangeDetectDIRisingEdgePhysicalChans'
p20949
((lp20950
S'int32'
p20951
ag34
a((S'taskHandle'
p20952
(lp20953
S'TaskHandle'
p20954
aNtp20955
(S'data'
p20956
(lp20957
S'char'
p20958
ag42
aNtp20959
tp20960
tp20961
sS'DAQmxSetDigLvlPauseTrigWhen'
p20962
((lp20963
S'int32'
p20964
ag34
a((S'taskHandle'
p20965
(lp20966
S'TaskHandle'
p20967
aNtp20968
(S'data'
p20969
(lp20970
S'int32'
p20971
aNtp20972
tp20973
tp20974
sS'DAQmxResetCIEncoderZIndexVal'
p20975
((lp20976
S'int32'
p20977
ag34
a((S'taskHandle'
p20978
(lp20979
S'TaskHandle'
p20980
aNtp20981
(S'channel'
p20982
(lp20983
S'char'
p20984
a(lp20985
I-1
aaNtp20986
tp20987
tp20988
sS'DAQmxGetAODACOffsetVal'
p20989
((lp20990
S'int32'
p20991
ag34
a((S'taskHandle'
p20992
(lp20993
S'TaskHandle'
p20994
aNtp20995
(S'channel'
p20996
(lp20997
S'char'
p20998
a(lp20999
I-1
aaNtp21000
(S'data'
p21001
(lp21002
S'float64'
p21003
ag42
aNtp21004
tp21005
tp21006
sS'DAQmxSetAnlgLvlPauseTrigLvl'
p21007
((lp21008
S'int32'
p21009
ag34
a((S'taskHandle'
p21010
(lp21011
S'TaskHandle'
p21012
aNtp21013
(S'data'
p21014
(lp21015
S'float64'
p21016
aNtp21017
tp21018
tp21019
sS'DAQmxGetReadRawDataWidth'
p21020
((lp21021
S'int32'
p21022
ag34
a((S'taskHandle'
p21023
(lp21024
S'TaskHandle'
p21025
aNtp21026
(S'data'
p21027
(lp21028
S'uInt32'
p21029
ag42
aNtp21030
tp21031
tp21032
sS'DAQmxGetDigEdgeAdvTrigDigFltrEnable'
p21033
((lp21034
S'int32'
p21035
ag34
a((S'taskHandle'
p21036
(lp21037
S'TaskHandle'
p21038
aNtp21039
(S'data'
p21040
(lp21041
S'bool32'
p21042
ag42
aNtp21043
tp21044
tp21045
sS'DAQmxSetAnlgWinStartTrigTop'
p21046
((lp21047
S'int32'
p21048
ag34
a((S'taskHandle'
p21049
(lp21050
S'TaskHandle'
p21051
aNtp21052
(S'data'
p21053
(lp21054
S'float64'
p21055
aNtp21056
tp21057
tp21058
sS'DAQmxSetSampClkDigSyncEnable'
p21059
((lp21060
S'int32'
p21061
ag34
a((S'taskHandle'
p21062
(lp21063
S'TaskHandle'
p21064
aNtp21065
(S'data'
p21066
(lp21067
S'bool32'
p21068
aNtp21069
tp21070
tp21071
sS'DAQmxResetDigEdgeStartTrigEdge'
p21072
((lp21073
S'int32'
p21074
ag34
a((S'taskHandle'
p21075
(lp21076
S'TaskHandle'
p21077
aNtp21078
tp21079
tp21080
sS'DAQmxResetCITwoEdgeSepFirstDigFltrEnable'
p21081
((lp21082
S'int32'
p21083
ag34
a((S'taskHandle'
p21084
(lp21085
S'TaskHandle'
p21086
aNtp21087
(S'channel'
p21088
(lp21089
S'char'
p21090
a(lp21091
I-1
aaNtp21092
tp21093
tp21094
sS'DAQmxSetScaleMapPreScaledMin'
p21095
((lp21096
S'int32'
p21097
ag34
a((S'scaleName'
p21098
(lp21099
S'char'
p21100
a(lp21101
I-1
aaNtp21102
(S'data'
p21103
(lp21104
S'float64'
p21105
aNtp21106
tp21107
tp21108
sS'DAQmxSetDIDigFltrMinPulseWidth'
p21109
((lp21110
S'int32'
p21111
ag34
a((S'taskHandle'
p21112
(lp21113
S'TaskHandle'
p21114
aNtp21115
(S'channel'
p21116
(lp21117
S'char'
p21118
a(lp21119
I-1
aaNtp21120
(S'data'
p21121
(lp21122
S'float64'
p21123
aNtp21124
tp21125
tp21126
sS'DAQmxSetCIEncoderBInputDigFltrTimebaseRate'
p21127
((lp21128
S'int32'
p21129
ag34
a((S'taskHandle'
p21130
(lp21131
S'TaskHandle'
p21132
aNtp21133
(S'channel'
p21134
(lp21135
S'char'
p21136
a(lp21137
I-1
aaNtp21138
(S'data'
p21139
(lp21140
S'float64'
p21141
aNtp21142
tp21143
tp21144
sS'DAQmxResetAIExcitUseMultiplexed'
p21145
((lp21146
S'int32'
p21147
ag34
a((S'taskHandle'
p21148
(lp21149
S'TaskHandle'
p21150
aNtp21151
(S'channel'
p21152
(lp21153
S'char'
p21154
a(lp21155
I-1
aaNtp21156
tp21157
tp21158
sS'DAQmxSetAOCurrentUnits'
p21159
((lp21160
S'int32'
p21161
ag34
a((S'taskHandle'
p21162
(lp21163
S'TaskHandle'
p21164
aNtp21165
(S'channel'
p21166
(lp21167
S'char'
p21168
a(lp21169
I-1
aaNtp21170
(S'data'
p21171
(lp21172
S'int32'
p21173
aNtp21174
tp21175
tp21176
sS'DAQmxSetCITimestampUnits'
p21177
((lp21178
S'int32'
p21179
ag34
a((S'taskHandle'
p21180
(lp21181
S'TaskHandle'
p21182
aNtp21183
(S'channel'
p21184
(lp21185
S'char'
p21186
a(lp21187
I-1
aaNtp21188
(S'data'
p21189
(lp21190
S'int32'
p21191
aNtp21192
tp21193
tp21194
sS'DAQmxSetSampClkTimebaseDiv'
p21195
((lp21196
S'int32'
p21197
ag34
a((S'taskHandle'
p21198
(lp21199
S'TaskHandle'
p21200
aNtp21201
(S'data'
p21202
(lp21203
S'uInt32'
p21204
aNtp21205
tp21206
tp21207
sS'DAQmxClearTask'
p21208
((lp21209
S'int32'
p21210
ag34
a((S'taskHandle'
p21211
(lp21212
S'TaskHandle'
p21213
aNtp21214
tp21215
tp21216
sS'DAQmxResetExportedCtrOutEventPulsePolarity'
p21217
((lp21218
S'int32'
p21219
ag34
a((S'taskHandle'
p21220
(lp21221
S'TaskHandle'
p21222
aNtp21223
tp21224
tp21225
sS'DAQmxGetPhysicalChanName'
p21226
((lp21227
S'int32'
p21228
ag34
a((S'taskHandle'
p21229
(lp21230
S'TaskHandle'
p21231
aNtp21232
(S'channel'
p21233
(lp21234
S'char'
p21235
a(lp21236
I-1
aaNtp21237
(S'data'
p21238
(lp21239
S'char'
p21240
ag42
aNtp21241
(S'bufferSize'
p21242
(lp21243
S'uInt32'
p21244
aNtp21245
tp21246
tp21247
sS'DAQmxResetAIThrmcplCJCVal'
p21248
((lp21249
S'int32'
p21250
ag34
a((S'taskHandle'
p21251
(lp21252
S'TaskHandle'
p21253
aNtp21254
(S'channel'
p21255
(lp21256
S'char'
p21257
a(lp21258
I-1
aaNtp21259
tp21260
tp21261
sS'DAQmxWriteCtrTimeScalar'
p21262
((lp21263
S'int32'
p21264
ag34
a((S'taskHandle'
p21265
(lp21266
S'TaskHandle'
p21267
aNtp21268
(S'autoStart'
p21269
(lp21270
S'bool32'
p21271
aNtp21272
(S'timeout'
p21273
(lp21274
S'float64'
p21275
aNtp21276
(S'highTime'
p21277
(lp21278
S'float64'
p21279
aNtp21280
(S'lowTime'
p21281
(lp21282
S'float64'
p21283
aNtp21284
(S'reserved'
p21285
(lp21286
S'bool32'
p21287
ag42
aNtp21288
tp21289
tp21290
sS'DAQmxResetCIEncoderAInputDigFltrMinPulseWidth'
p21291
((lp21292
S'int32'
p21293
ag34
a((S'taskHandle'
p21294
(lp21295
S'TaskHandle'
p21296
aNtp21297
(S'channel'
p21298
(lp21299
S'char'
p21300
a(lp21301
I-1
aaNtp21302
tp21303
tp21304
sS'DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth'
p21305
((lp21306
S'int32'
p21307
ag34
a((S'taskHandle'
p21308
(lp21309
S'TaskHandle'
p21310
aNtp21311
(S'data'
p21312
(lp21313
S'float64'
p21314
ag42
aNtp21315
tp21316
tp21317
sS'DAQmxSetDOTristate'
p21318
((lp21319
S'int32'
p21320
ag34
a((S'taskHandle'
p21321
(lp21322
S'TaskHandle'
p21323
aNtp21324
(S'channel'
p21325
(lp21326
S'char'
p21327
a(lp21328
I-1
aaNtp21329
(S'data'
p21330
(lp21331
S'bool32'
p21332
aNtp21333
tp21334
tp21335
sS'DAQmxSetSampQuantSampPerChan'
p21336
((lp21337
S'int32'
p21338
ag34
a((S'taskHandle'
p21339
(lp21340
S'TaskHandle'
p21341
aNtp21342
(S'data'
p21343
(lp21344
S'uInt64'
p21345
aNtp21346
tp21347
tp21348
sS'DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p21349
((lp21350
S'int32'
p21351
ag34
a((S'taskHandle'
p21352
(lp21353
S'TaskHandle'
p21354
aNtp21355
(S'channel'
p21356
(lp21357
S'char'
p21358
a(lp21359
I-1
aaNtp21360
(S'data'
p21361
(lp21362
S'float64'
p21363
ag42
aNtp21364
tp21365
tp21366
sS'DAQmxResetAITermCfg'
p21367
((lp21368
S'int32'
p21369
ag34
a((S'taskHandle'
p21370
(lp21371
S'TaskHandle'
p21372
aNtp21373
(S'channel'
p21374
(lp21375
S'char'
p21376
a(lp21377
I-1
aaNtp21378
tp21379
tp21380
sS'DAQmxSetAODataXferReqCond'
p21381
((lp21382
S'int32'
p21383
ag34
a((S'taskHandle'
p21384
(lp21385
S'TaskHandle'
p21386
aNtp21387
(S'channel'
p21388
(lp21389
S'char'
p21390
a(lp21391
I-1
aaNtp21392
(S'data'
p21393
(lp21394
S'int32'
p21395
aNtp21396
tp21397
tp21398
sS'DAQmxCreateAOCurrentChan'
p21399
((lp21400
S'int32'
p21401
ag34
a((S'taskHandle'
p21402
(lp21403
S'TaskHandle'
p21404
aNtp21405
(S'physicalChannel'
p21406
(lp21407
S'char'
p21408
a(lp21409
I-1
aaNtp21410
(S'nameToAssignToChannel'
p21411
(lp21412
S'char'
p21413
a(lp21414
I-1
aaNtp21415
(S'minVal'
p21416
(lp21417
S'float64'
p21418
aNtp21419
(S'maxVal'
p21420
(lp21421
S'float64'
p21422
aNtp21423
(S'units'
p21424
(lp21425
S'int32'
p21426
aNtp21427
(S'customScaleName'
p21428
(lp21429
S'char'
p21430
a(lp21431
I-1
aaNtp21432
tp21433
tp21434
sS'DAQmxResetExportedSampClkOutputTerm'
p21435
((lp21436
S'int32'
p21437
ag34
a((S'taskHandle'
p21438
(lp21439
S'TaskHandle'
p21440
aNtp21441
tp21442
tp21443
sS'DAQmxWriteCtrFreq'
p21444
((lp21445
S'int32'
p21446
ag34
a((S'taskHandle'
p21447
(lp21448
S'TaskHandle'
p21449
aNtp21450
(S'numSampsPerChan'
p21451
(lp21452
S'int32'
p21453
aNtp21454
(S'autoStart'
p21455
(lp21456
S'bool32'
p21457
aNtp21458
(S'timeout'
p21459
(lp21460
S'float64'
p21461
aNtp21462
(S'dataLayout'
p21463
(lp21464
S'bool32'
p21465
aNtp21466
(S'frequency'
p21467
(lp21468
S'float64'
p21469
a(lp21470
I-1
aaNtp21471
(S'dutyCycle'
p21472
(lp21473
S'float64'
p21474
a(lp21475
I-1
aaNtp21476
(S'numSampsPerChanWritten'
p21477
(lp21478
S'int32'
p21479
ag42
aNtp21480
(S'reserved'
p21481
(lp21482
S'bool32'
p21483
ag42
aNtp21484
tp21485
tp21486
sS'DAQmxGetAILossyLSBRemovalCompressedSampSize'
p21487
((lp21488
S'int32'
p21489
ag34
a((S'taskHandle'
p21490
(lp21491
S'TaskHandle'
p21492
aNtp21493
(S'channel'
p21494
(lp21495
S'char'
p21496
a(lp21497
I-1
aaNtp21498
(S'data'
p21499
(lp21500
S'uInt32'
p21501
ag42
aNtp21502
tp21503
tp21504
sS'DAQmxCreateCISemiPeriodChan'
p21505
((lp21506
S'int32'
p21507
ag34
a((S'taskHandle'
p21508
(lp21509
S'TaskHandle'
p21510
aNtp21511
(S'counter'
p21512
(lp21513
S'char'
p21514
a(lp21515
I-1
aaNtp21516
(S'nameToAssignToChannel'
p21517
(lp21518
S'char'
p21519
a(lp21520
I-1
aaNtp21521
(S'minVal'
p21522
(lp21523
S'float64'
p21524
aNtp21525
(S'maxVal'
p21526
(lp21527
S'float64'
p21528
aNtp21529
(S'units'
p21530
(lp21531
S'int32'
p21532
aNtp21533
(S'customScaleName'
p21534
(lp21535
S'char'
p21536
a(lp21537
I-1
aaNtp21538
tp21539
tp21540
sS'DAQmxGetAIFreqThreshVoltage'
p21541
((lp21542
S'int32'
p21543
ag34
a((S'taskHandle'
p21544
(lp21545
S'TaskHandle'
p21546
aNtp21547
(S'channel'
p21548
(lp21549
S'char'
p21550
a(lp21551
I-1
aaNtp21552
(S'data'
p21553
(lp21554
S'float64'
p21555
ag42
aNtp21556
tp21557
tp21558
sS'DAQmxSetAnlgEdgeRefTrigSlope'
p21559
((lp21560
S'int32'
p21561
ag34
a((S'taskHandle'
p21562
(lp21563
S'TaskHandle'
p21564
aNtp21565
(S'data'
p21566
(lp21567
S'int32'
p21568
aNtp21569
tp21570
tp21571
sS'DAQmxSetCIEncoderDecodingType'
p21572
((lp21573
S'int32'
p21574
ag34
a((S'taskHandle'
p21575
(lp21576
S'TaskHandle'
p21577
aNtp21578
(S'channel'
p21579
(lp21580
S'char'
p21581
a(lp21582
I-1
aaNtp21583
(S'data'
p21584
(lp21585
S'int32'
p21586
aNtp21587
tp21588
tp21589
sS'DAQmxResetWriteOffset'
p21590
((lp21591
S'int32'
p21592
ag34
a((S'taskHandle'
p21593
(lp21594
S'TaskHandle'
p21595
aNtp21596
tp21597
tp21598
sS'DAQmxResetSyncPulseSrc'
p21599
((lp21600
S'int32'
p21601
ag34
a((S'taskHandle'
p21602
(lp21603
S'TaskHandle'
p21604
aNtp21605
tp21606
tp21607
sS'DAQmxGetSysScales'
p21608
((lp21609
S'int32'
p21610
ag34
a((S'data'
p21611
(lp21612
S'char'
p21613
ag42
aNtp21614
(S'bufferSize'
p21615
(lp21616
S'uInt32'
p21617
aNtp21618
tp21619
tp21620
sS'DAQmxReadAnalogScalarF64'
p21621
((lp21622
S'int32'
p21623
ag34
a((S'taskHandle'
p21624
(lp21625
S'TaskHandle'
p21626
aNtp21627
(S'timeout'
p21628
(lp21629
S'float64'
p21630
aNtp21631
(S'value'
p21632
(lp21633
S'float64'
p21634
ag42
aNtp21635
(S'reserved'
p21636
(lp21637
S'bool32'
p21638
ag42
aNtp21639
tp21640
tp21641
sS'DAQmxGetCIEncoderZInputDigFltrEnable'
p21642
((lp21643
S'int32'
p21644
ag34
a((S'taskHandle'
p21645
(lp21646
S'TaskHandle'
p21647
aNtp21648
(S'channel'
p21649
(lp21650
S'char'
p21651
a(lp21652
I-1
aaNtp21653
(S'data'
p21654
(lp21655
S'bool32'
p21656
ag42
aNtp21657
tp21658
tp21659
sS'DAQmxResetAICoupling'
p21660
((lp21661
S'int32'
p21662
ag34
a((S'taskHandle'
p21663
(lp21664
S'TaskHandle'
p21665
aNtp21666
(S'channel'
p21667
(lp21668
S'char'
p21669
a(lp21670
I-1
aaNtp21671
tp21672
tp21673
sS'DAQmxResetCIEncoderBInputDigFltrMinPulseWidth'
p21674
((lp21675
S'int32'
p21676
ag34
a((S'taskHandle'
p21677
(lp21678
S'TaskHandle'
p21679
aNtp21680
(S'channel'
p21681
(lp21682
S'char'
p21683
a(lp21684
I-1
aaNtp21685
tp21686
tp21687
sS'DAQmxSetAODataXferMech'
p21688
((lp21689
S'int32'
p21690
ag34
a((S'taskHandle'
p21691
(lp21692
S'TaskHandle'
p21693
aNtp21694
(S'channel'
p21695
(lp21696
S'char'
p21697
a(lp21698
I-1
aaNtp21699
(S'data'
p21700
(lp21701
S'int32'
p21702
aNtp21703
tp21704
tp21705
sS'DAQmxGetScalePolyForwardCoeff'
p21706
((lp21707
S'int32'
p21708
ag34
a((S'scaleName'
p21709
(lp21710
S'char'
p21711
a(lp21712
I-1
aaNtp21713
(S'data'
p21714
(lp21715
S'float64'
p21716
ag42
aNtp21717
(S'arraySizeInSamples'
p21718
(lp21719
S'uInt32'
p21720
aNtp21721
tp21722
tp21723
sS'DAQmxResetAIChanCalTableScaledVals'
p21724
((lp21725
S'int32'
p21726
ag34
a((S'taskHandle'
p21727
(lp21728
S'TaskHandle'
p21729
aNtp21730
(S'channel'
p21731
(lp21732
S'char'
p21733
a(lp21734
I-1
aaNtp21735
tp21736
tp21737
sS'DAQmxSetBufInputBufSize'
p21738
((lp21739
S'int32'
p21740
ag34
a((S'taskHandle'
p21741
(lp21742
S'TaskHandle'
p21743
aNtp21744
(S'data'
p21745
(lp21746
S'uInt32'
p21747
aNtp21748
tp21749
tp21750
sS'DAQmxGetReadChannelsToRead'
p21751
((lp21752
S'int32'
p21753
ag34
a((S'taskHandle'
p21754
(lp21755
S'TaskHandle'
p21756
aNtp21757
(S'data'
p21758
(lp21759
S'char'
p21760
ag42
aNtp21761
(S'bufferSize'
p21762
(lp21763
S'uInt32'
p21764
aNtp21765
tp21766
tp21767
sS'DAQmxResetCOCtrTimebaseRate'
p21768
((lp21769
S'int32'
p21770
ag34
a((S'taskHandle'
p21771
(lp21772
S'TaskHandle'
p21773
aNtp21774
(S'channel'
p21775
(lp21776
S'char'
p21777
a(lp21778
I-1
aaNtp21779
tp21780
tp21781
sS'DAQmxGetErrorString'
p21782
((lp21783
S'int32'
p21784
ag34
a((S'errorCode'
p21785
(lp21786
S'int32'
p21787
aNtp21788
(S'errorString'
p21789
(lp21790
S'char'
p21791
a(lp21792
I-1
aaNtp21793
(S'bufferSize'
p21794
(lp21795
S'uInt32'
p21796
aNtp21797
tp21798
tp21799
sS'DAQmxResetAnlgWinPauseTrigSrc'
p21800
((lp21801
S'int32'
p21802
ag34
a((S'taskHandle'
p21803
(lp21804
S'TaskHandle'
p21805
aNtp21806
tp21807
tp21808
sS'DAQmxResetAIRTDType'
p21809
((lp21810
S'int32'
p21811
ag34
a((S'taskHandle'
p21812
(lp21813
S'TaskHandle'
p21814
aNtp21815
(S'channel'
p21816
(lp21817
S'char'
p21818
a(lp21819
I-1
aaNtp21820
tp21821
tp21822
sS'DAQmxResetCICtrTimebaseDigSyncEnable'
p21823
((lp21824
S'int32'
p21825
ag34
a((S'taskHandle'
p21826
(lp21827
S'TaskHandle'
p21828
aNtp21829
(S'channel'
p21830
(lp21831
S'char'
p21832
a(lp21833
I-1
aaNtp21834
tp21835
tp21836
sS'DAQmxResetDelayFromSampClkDelay'
p21837
((lp21838
S'int32'
p21839
ag34
a((S'taskHandle'
p21840
(lp21841
S'TaskHandle'
p21842
aNtp21843
tp21844
tp21845
sS'DAQmxResetAIChanCalPolyForwardCoeff'
p21846
((lp21847
S'int32'
p21848
ag34
a((S'taskHandle'
p21849
(lp21850
S'TaskHandle'
p21851
aNtp21852
(S'channel'
p21853
(lp21854
S'char'
p21855
a(lp21856
I-1
aaNtp21857
tp21858
tp21859
sS'DAQmxResetSampClkDigFltrEnable'
p21860
((lp21861
S'int32'
p21862
ag34
a((S'taskHandle'
p21863
(lp21864
S'TaskHandle'
p21865
aNtp21866
tp21867
tp21868
sS'DAQmxResetAIBridgeShuntCalSelect'
p21869
((lp21870
S'int32'
p21871
ag34
a((S'taskHandle'
p21872
(lp21873
S'TaskHandle'
p21874
aNtp21875
(S'channel'
p21876
(lp21877
S'char'
p21878
a(lp21879
I-1
aaNtp21880
tp21881
tp21882
sS'DAQmxGetSwitchDevNumSwitchChans'
p21883
((lp21884
S'int32'
p21885
ag34
a((S'deviceName'
p21886
(lp21887
S'char'
p21888
a(lp21889
I-1
aaNtp21890
(S'data'
p21891
(lp21892
S'uInt32'
p21893
ag42
aNtp21894
tp21895
tp21896
sS'DAQmxSetAIBridgeShuntCalEnable'
p21897
((lp21898
S'int32'
p21899
ag34
a((S'taskHandle'
p21900
(lp21901
S'TaskHandle'
p21902
aNtp21903
(S'channel'
p21904
(lp21905
S'char'
p21906
a(lp21907
I-1
aaNtp21908
(S'data'
p21909
(lp21910
S'bool32'
p21911
aNtp21912
tp21913
tp21914
sS'DAQmxGetAnlgEdgeRefTrigSrc'
p21915
((lp21916
S'int32'
p21917
ag34
a((S'taskHandle'
p21918
(lp21919
S'TaskHandle'
p21920
aNtp21921
(S'data'
p21922
(lp21923
S'char'
p21924
ag42
aNtp21925
(S'bufferSize'
p21926
(lp21927
S'uInt32'
p21928
aNtp21929
tp21930
tp21931
sS'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate'
p21932
((lp21933
S'int32'
p21934
ag34
a((S'taskHandle'
p21935
(lp21936
S'TaskHandle'
p21937
aNtp21938
tp21939
tp21940
sS'DAQmxSetAnlgLvlPauseTrigWhen'
p21941
((lp21942
S'int32'
p21943
ag34
a((S'taskHandle'
p21944
(lp21945
S'TaskHandle'
p21946
aNtp21947
(S'data'
p21948
(lp21949
S'int32'
p21950
aNtp21951
tp21952
tp21953
sS'DAQmxGetWriteRawDataWidth'
p21954
((lp21955
S'int32'
p21956
ag34
a((S'taskHandle'
p21957
(lp21958
S'TaskHandle'
p21959
aNtp21960
(S'data'
p21961
(lp21962
S'uInt32'
p21963
ag42
aNtp21964
tp21965
tp21966
sS'DAQmxResetAdvTrigType'
p21967
((lp21968
S'int32'
p21969
ag34
a((S'taskHandle'
p21970
(lp21971
S'TaskHandle'
p21972
aNtp21973
tp21974
tp21975
sS'DAQmxReadBinaryU16'
p21976
((lp21977
S'int32'
p21978
ag34
a((S'taskHandle'
p21979
(lp21980
S'TaskHandle'
p21981
aNtp21982
(S'numSampsPerChan'
p21983
(lp21984
S'int32'
p21985
aNtp21986
(S'timeout'
p21987
(lp21988
S'float64'
p21989
aNtp21990
(S'fillMode'
p21991
(lp21992
S'bool32'
p21993
aNtp21994
(S'readArray'
p21995
(lp21996
S'uInt16'
p21997
a(lp21998
I-1
aaNtp21999
(S'arraySizeInSamps'
p22000
(lp22001
S'uInt32'
p22002
aNtp22003
(S'sampsPerChanRead'
p22004
(lp22005
S'int32'
p22006
ag42
aNtp22007
(S'reserved'
p22008
(lp22009
S'bool32'
p22010
ag42
aNtp22011
tp22012
tp22013
sS'DAQmxResetExportedCtrOutEventOutputTerm'
p22014
((lp22015
S'int32'
p22016
ag34
a((S'taskHandle'
p22017
(lp22018
S'TaskHandle'
p22019
aNtp22020
tp22021
tp22022
sS'DAQmxGetCOPulseFreq'
p22023
((lp22024
S'int32'
p22025
ag34
a((S'taskHandle'
p22026
(lp22027
S'TaskHandle'
p22028
aNtp22029
(S'channel'
p22030
(lp22031
S'char'
p22032
a(lp22033
I-1
aaNtp22034
(S'data'
p22035
(lp22036
S'float64'
p22037
ag42
aNtp22038
tp22039
tp22040
sS'DAQmxSetCICountEdgesInitialCnt'
p22041
((lp22042
S'int32'
p22043
ag34
a((S'taskHandle'
p22044
(lp22045
S'TaskHandle'
p22046
aNtp22047
(S'channel'
p22048
(lp22049
S'char'
p22050
a(lp22051
I-1
aaNtp22052
(S'data'
p22053
(lp22054
S'uInt32'
p22055
aNtp22056
tp22057
tp22058
sS'DAQmxInitExtCal'
p22059
((lp22060
S'int32'
p22061
ag34
a((S'deviceName'
p22062
(lp22063
S'char'
p22064
a(lp22065
I-1
aaNtp22066
(S'password'
p22067
(lp22068
S'char'
p22069
a(lp22070
I-1
aaNtp22071
(S'calHandle'
p22072
(lp22073
S'uInt32'
p22074
ag42
aNtp22075
tp22076
tp22077
sS'DAQmxGetSyncPulseMinDelayToStart'
p22078
((lp22079
S'int32'
p22080
ag34
a((S'taskHandle'
p22081
(lp22082
S'TaskHandle'
p22083
aNtp22084
(S'data'
p22085
(lp22086
S'float64'
p22087
ag42
aNtp22088
tp22089
tp22090
sS'DAQmxSetExportedAdvCmpltEventDelay'
p22091
((lp22092
S'int32'
p22093
ag34
a((S'taskHandle'
p22094
(lp22095
S'TaskHandle'
p22096
aNtp22097
(S'data'
p22098
(lp22099
S'float64'
p22100
aNtp22101
tp22102
tp22103
sS'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate'
p22104
((lp22105
S'int32'
p22106
ag34
a((S'taskHandle'
p22107
(lp22108
S'TaskHandle'
p22109
aNtp22110
(S'channel'
p22111
(lp22112
S'char'
p22113
a(lp22114
I-1
aaNtp22115
(S'data'
p22116
(lp22117
S'float64'
p22118
ag42
aNtp22119
tp22120
tp22121
sS'DAQmxConfigureTEDS'
p22122
((lp22123
S'int32'
p22124
ag34
a((S'physicalChannel'
p22125
(lp22126
S'char'
p22127
a(lp22128
I-1
aaNtp22129
(S'filePath'
p22130
(lp22131
S'char'
p22132
a(lp22133
I-1
aaNtp22134
tp22135
tp22136
sS'DAQmxResetDigEdgeRefTrigEdge'
p22137
((lp22138
S'int32'
p22139
ag34
a((S'taskHandle'
p22140
(lp22141
S'TaskHandle'
p22142
aNtp22143
tp22144
tp22145
sS'DAQmxResetAnlgWinRefTrigCoupling'
p22146
((lp22147
S'int32'
p22148
ag34
a((S'taskHandle'
p22149
(lp22150
S'TaskHandle'
p22151
aNtp22152
tp22153
tp22154
sS'DAQmxRegisterDoneEvent'
p22155
((lp22156
S'int32'
p22157
ag34
a((S'task'
p22158
(lp22159
S'TaskHandle'
p22160
aNtp22161
(S'options'
p22162
(lp22163
S'uInt32'
p22164
aNtp22165
(S'callbackFunction'
p22166
(lp22167
S'DAQmxDoneEventCallbackPtr'
p22168
aNtp22169
(S'callbackData'
p22170
(lp22171
S'void'
p22172
ag42
aNtp22173
tp22174
tp22175
sS'DAQmxGetExportedHshkEventPulsePolarity'
p22176
((lp22177
S'int32'
p22178
ag34
a((S'taskHandle'
p22179
(lp22180
S'TaskHandle'
p22181
aNtp22182
(S'data'
p22183
(lp22184
S'int32'
p22185
ag42
aNtp22186
tp22187
tp22188
sS'DAQmxGetSwitchScanWaitingForAdv'
p22189
((lp22190
S'int32'
p22191
ag34
a((S'taskHandle'
p22192
(lp22193
S'TaskHandle'
p22194
aNtp22195
(S'data'
p22196
(lp22197
S'bool32'
p22198
ag42
aNtp22199
tp22200
tp22201
sS'DAQmxSaveScale'
p22202
((lp22203
S'int32'
p22204
ag34
a((S'scaleName'
p22205
(lp22206
S'char'
p22207
a(lp22208
I-1
aaNtp22209
(S'saveAs'
p22210
(lp22211
S'char'
p22212
a(lp22213
I-1
aaNtp22214
(S'author'
p22215
(lp22216
S'char'
p22217
a(lp22218
I-1
aaNtp22219
(S'options'
p22220
(lp22221
S'uInt32'
p22222
aNtp22223
tp22224
tp22225
sS'DAQmxSetExportedRefTrigOutputTerm'
p22226
((lp22227
S'int32'
p22228
ag34
a((S'taskHandle'
p22229
(lp22230
S'TaskHandle'
p22231
aNtp22232
(S'data'
p22233
(lp22234
S'char'
p22235
ag42
aNtp22236
tp22237
tp22238
sS'DAQmxGetCOPulseTimeUnits'
p22239
((lp22240
S'int32'
p22241
ag34
a((S'taskHandle'
p22242
(lp22243
S'TaskHandle'
p22244
aNtp22245
(S'channel'
p22246
(lp22247
S'char'
p22248
a(lp22249
I-1
aaNtp22250
(S'data'
p22251
(lp22252
S'int32'
p22253
ag42
aNtp22254
tp22255
tp22256
sS'DAQmxResetAOVoltageUnits'
p22257
((lp22258
S'int32'
p22259
ag34
a((S'taskHandle'
p22260
(lp22261
S'TaskHandle'
p22262
aNtp22263
(S'channel'
p22264
(lp22265
S'char'
p22266
a(lp22267
I-1
aaNtp22268
tp22269
tp22270
sS'DAQmxSetRefTrigType'
p22271
((lp22272
S'int32'
p22273
ag34
a((S'taskHandle'
p22274
(lp22275
S'TaskHandle'
p22276
aNtp22277
(S'data'
p22278
(lp22279
S'int32'
p22280
aNtp22281
tp22282
tp22283
sS'DAQmxResetAODACOffsetVal'
p22284
((lp22285
S'int32'
p22286
ag34
a((S'taskHandle'
p22287
(lp22288
S'TaskHandle'
p22289
aNtp22290
(S'channel'
p22291
(lp22292
S'char'
p22293
a(lp22294
I-1
aaNtp22295
tp22296
tp22297
sS'DAQmxGetSwitchChanMaxACSwitchCurrent'
p22298
((lp22299
S'int32'
p22300
ag34
a((S'switchChannelName'
p22301
(lp22302
S'char'
p22303
a(lp22304
I-1
aaNtp22305
(S'data'
p22306
(lp22307
S'float64'
p22308
ag42
aNtp22309
tp22310
tp22311
sS'DAQmxResetDigLvlPauseTrigWhen'
p22312
((lp22313
S'int32'
p22314
ag34
a((S'taskHandle'
p22315
(lp22316
S'TaskHandle'
p22317
aNtp22318
tp22319
tp22320
sS'DAQmxCreateTEDSAIThrmstrChanIex'
p22321
((lp22322
S'int32'
p22323
ag34
a((S'taskHandle'
p22324
(lp22325
S'TaskHandle'
p22326
aNtp22327
(S'physicalChannel'
p22328
(lp22329
S'char'
p22330
a(lp22331
I-1
aaNtp22332
(S'nameToAssignToChannel'
p22333
(lp22334
S'char'
p22335
a(lp22336
I-1
aaNtp22337
(S'minVal'
p22338
(lp22339
S'float64'
p22340
aNtp22341
(S'maxVal'
p22342
(lp22343
S'float64'
p22344
aNtp22345
(S'units'
p22346
(lp22347
S'int32'
p22348
aNtp22349
(S'resistanceConfig'
p22350
(lp22351
S'int32'
p22352
aNtp22353
(S'currentExcitSource'
p22354
(lp22355
S'int32'
p22356
aNtp22357
(S'currentExcitVal'
p22358
(lp22359
S'float64'
p22360
aNtp22361
tp22362
tp22363
sS'DAQmxGetAIChanCalEnableCal'
p22364
((lp22365
S'int32'
p22366
ag34
a((S'taskHandle'
p22367
(lp22368
S'TaskHandle'
p22369
aNtp22370
(S'channel'
p22371
(lp22372
S'char'
p22373
a(lp22374
I-1
aaNtp22375
(S'data'
p22376
(lp22377
S'bool32'
p22378
ag42
aNtp22379
tp22380
tp22381
sS'DAQmxGetAOEnhancedImageRejectionEnable'
p22382
((lp22383
S'int32'
p22384
ag34
a((S'taskHandle'
p22385
(lp22386
S'TaskHandle'
p22387
aNtp22388
(S'channel'
p22389
(lp22390
S'char'
p22391
a(lp22392
I-1
aaNtp22393
(S'data'
p22394
(lp22395
S'bool32'
p22396
ag42
aNtp22397
tp22398
tp22399
sS'DAQmxResetCIFreqStartingEdge'
p22400
((lp22401
S'int32'
p22402
ag34
a((S'taskHandle'
p22403
(lp22404
S'TaskHandle'
p22405
aNtp22406
(S'channel'
p22407
(lp22408
S'char'
p22409
a(lp22410
I-1
aaNtp22411
tp22412
tp22413
sS'DAQmxSetDigPatternStartTrigPattern'
p22414
((lp22415
S'int32'
p22416
ag34
a((S'taskHandle'
p22417
(lp22418
S'TaskHandle'
p22419
aNtp22420
(S'data'
p22421
(lp22422
S'char'
p22423
ag42
aNtp22424
tp22425
tp22426
sS'DAQmxSetExportedHshkEventInterlockedAssertedLvl'
p22427
((lp22428
S'int32'
p22429
ag34
a((S'taskHandle'
p22430
(lp22431
S'TaskHandle'
p22432
aNtp22433
(S'data'
p22434
(lp22435
S'int32'
p22436
aNtp22437
tp22438
tp22439
sS'DAQmxResetAIChanCalApplyCalIfExp'
p22440
((lp22441
S'int32'
p22442
ag34
a((S'taskHandle'
p22443
(lp22444
S'TaskHandle'
p22445
aNtp22446
(S'channel'
p22447
(lp22448
S'char'
p22449
a(lp22450
I-1
aaNtp22451
tp22452
tp22453
sS'DAQmxSetAOUseOnlyOnBrdMem'
p22454
((lp22455
S'int32'
p22456
ag34
a((S'taskHandle'
p22457
(lp22458
S'TaskHandle'
p22459
aNtp22460
(S'channel'
p22461
(lp22462
S'char'
p22463
a(lp22464
I-1
aaNtp22465
(S'data'
p22466
(lp22467
S'bool32'
p22468
aNtp22469
tp22470
tp22471
sS'DAQmxGetCIFreqStartingEdge'
p22472
((lp22473
S'int32'
p22474
ag34
a((S'taskHandle'
p22475
(lp22476
S'TaskHandle'
p22477
aNtp22478
(S'channel'
p22479
(lp22480
S'char'
p22481
a(lp22482
I-1
aaNtp22483
(S'data'
p22484
(lp22485
S'int32'
p22486
ag42
aNtp22487
tp22488
tp22489
sS'DAQmxSetCICtrTimebaseDigSyncEnable'
p22490
((lp22491
S'int32'
p22492
ag34
a((S'taskHandle'
p22493
(lp22494
S'TaskHandle'
p22495
aNtp22496
(S'channel'
p22497
(lp22498
S'char'
p22499
a(lp22500
I-1
aaNtp22501
(S'data'
p22502
(lp22503
S'bool32'
p22504
aNtp22505
tp22506
tp22507
sS'DAQmxGetAnlgWinRefTrigWhen'
p22508
((lp22509
S'int32'
p22510
ag34
a((S'taskHandle'
p22511
(lp22512
S'TaskHandle'
p22513
aNtp22514
(S'data'
p22515
(lp22516
S'int32'
p22517
ag42
aNtp22518
tp22519
tp22520
sS'DAQmxResetAnlgWinPauseTrigTop'
p22521
((lp22522
S'int32'
p22523
ag34
a((S'taskHandle'
p22524
(lp22525
S'TaskHandle'
p22526
aNtp22527
tp22528
tp22529
sS'DAQmxGetExportedCtrOutEventOutputTerm'
p22530
((lp22531
S'int32'
p22532
ag34
a((S'taskHandle'
p22533
(lp22534
S'TaskHandle'
p22535
aNtp22536
(S'data'
p22537
(lp22538
S'char'
p22539
ag42
aNtp22540
(S'bufferSize'
p22541
(lp22542
S'uInt32'
p22543
aNtp22544
tp22545
tp22546
sS'DAQmxSetAnlgEdgeStartTrigLvl'
p22547
((lp22548
S'int32'
p22549
ag34
a((S'taskHandle'
p22550
(lp22551
S'TaskHandle'
p22552
aNtp22553
(S'data'
p22554
(lp22555
S'float64'
p22556
aNtp22557
tp22558
tp22559
sS'DAQmxSetAODACRngLow'
p22560
((lp22561
S'int32'
p22562
ag34
a((S'taskHandle'
p22563
(lp22564
S'TaskHandle'
p22565
aNtp22566
(S'channel'
p22567
(lp22568
S'char'
p22569
a(lp22570
I-1
aaNtp22571
(S'data'
p22572
(lp22573
S'float64'
p22574
aNtp22575
tp22576
tp22577
sS'DAQmxCloseExtCal'
p22578
((lp22579
S'int32'
p22580
ag34
a((S'calHandle'
p22581
(lp22582
S'uInt32'
p22583
aNtp22584
(S'action'
p22585
(lp22586
S'int32'
p22587
aNtp22588
tp22589
tp22590
sS'DAQmxResetPauseTrigType'
p22591
((lp22592
S'int32'
p22593
ag34
a((S'taskHandle'
p22594
(lp22595
S'TaskHandle'
p22596
aNtp22597
tp22598
tp22599
sS'DAQmxGetAnlgWinRefTrigTop'
p22600
((lp22601
S'int32'
p22602
ag34
a((S'taskHandle'
p22603
(lp22604
S'TaskHandle'
p22605
aNtp22606
(S'data'
p22607
(lp22608
S'float64'
p22609
ag42
aNtp22610
tp22611
tp22612
sS'DAQmxGetCICustomScaleName'
p22613
((lp22614
S'int32'
p22615
ag34
a((S'taskHandle'
p22616
(lp22617
S'TaskHandle'
p22618
aNtp22619
(S'channel'
p22620
(lp22621
S'char'
p22622
a(lp22623
I-1
aaNtp22624
(S'data'
p22625
(lp22626
S'char'
p22627
ag42
aNtp22628
(S'bufferSize'
p22629
(lp22630
S'uInt32'
p22631
aNtp22632
tp22633
tp22634
sS'DAQmxResetExportedChangeDetectEventOutputTerm'
p22635
((lp22636
S'int32'
p22637
ag34
a((S'taskHandle'
p22638
(lp22639
S'TaskHandle'
p22640
aNtp22641
tp22642
tp22643
sS'DAQmxGetAODACRefAllowConnToGnd'
p22644
((lp22645
S'int32'
p22646
ag34
a((S'taskHandle'
p22647
(lp22648
S'TaskHandle'
p22649
aNtp22650
(S'channel'
p22651
(lp22652
S'char'
p22653
a(lp22654
I-1
aaNtp22655
(S'data'
p22656
(lp22657
S'bool32'
p22658
ag42
aNtp22659
tp22660
tp22661
sS'DAQmxSetAIMax'
p22662
((lp22663
S'int32'
p22664
ag34
a((S'taskHandle'
p22665
(lp22666
S'TaskHandle'
p22667
aNtp22668
(S'channel'
p22669
(lp22670
S'char'
p22671
a(lp22672
I-1
aaNtp22673
(S'data'
p22674
(lp22675
S'float64'
p22676
aNtp22677
tp22678
tp22679
sS'DAQmxGetExportedAIHoldCmpltEventPulsePolarity'
p22680
((lp22681
S'int32'
p22682
ag34
a((S'taskHandle'
p22683
(lp22684
S'TaskHandle'
p22685
aNtp22686
(S'data'
p22687
(lp22688
S'int32'
p22689
ag42
aNtp22690
tp22691
tp22692
sS'DAQmxCreateAIMicrophoneChan'
p22693
((lp22694
S'int32'
p22695
ag34
a((S'taskHandle'
p22696
(lp22697
S'TaskHandle'
p22698
aNtp22699
(S'physicalChannel'
p22700
(lp22701
S'char'
p22702
a(lp22703
I-1
aaNtp22704
(S'nameToAssignToChannel'
p22705
(lp22706
S'char'
p22707
a(lp22708
I-1
aaNtp22709
(S'terminalConfig'
p22710
(lp22711
S'int32'
p22712
aNtp22713
(S'units'
p22714
(lp22715
S'int32'
p22716
aNtp22717
(S'micSensitivity'
p22718
(lp22719
S'float64'
p22720
aNtp22721
(S'maxSndPressLevel'
p22722
(lp22723
S'float64'
p22724
aNtp22725
(S'currentExcitSource'
p22726
(lp22727
S'int32'
p22728
aNtp22729
(S'currentExcitVal'
p22730
(lp22731
S'float64'
p22732
aNtp22733
(S'customScaleName'
p22734
(lp22735
S'char'
p22736
a(lp22737
I-1
aaNtp22738
tp22739
tp22740
sS'DAQmxChangeExtCalPassword'
p22741
((lp22742
S'int32'
p22743
ag34
a((S'deviceName'
p22744
(lp22745
S'char'
p22746
a(lp22747
I-1
aaNtp22748
(S'password'
p22749
(lp22750
S'char'
p22751
a(lp22752
I-1
aaNtp22753
(S'newPassword'
p22754
(lp22755
S'char'
p22756
a(lp22757
I-1
aaNtp22758
tp22759
tp22760
sS'DAQmxGetTaskDevices'
p22761
((lp22762
S'int32'
p22763
ag34
a((S'taskHandle'
p22764
(lp22765
S'TaskHandle'
p22766
aNtp22767
(S'data'
p22768
(lp22769
S'char'
p22770
ag42
aNtp22771
(S'bufferSize'
p22772
(lp22773
S'uInt32'
p22774
aNtp22775
tp22776
tp22777
sS'DAQmxWriteBinaryI32'
p22778
((lp22779
S'int32'
p22780
ag34
a((S'taskHandle'
p22781
(lp22782
S'TaskHandle'
p22783
aNtp22784
(S'numSampsPerChan'
p22785
(lp22786
S'int32'
p22787
aNtp22788
(S'autoStart'
p22789
(lp22790
S'bool32'
p22791
aNtp22792
(S'timeout'
p22793
(lp22794
S'float64'
p22795
aNtp22796
(S'dataLayout'
p22797
(lp22798
S'bool32'
p22799
aNtp22800
(S'writeArray'
p22801
(lp22802
S'int32'
p22803
a(lp22804
I-1
aaNtp22805
(S'sampsPerChanWritten'
p22806
(lp22807
S'int32'
p22808
ag42
aNtp22809
(S'reserved'
p22810
(lp22811
S'bool32'
p22812
ag42
aNtp22813
tp22814
tp22815
sS'DAQmxResetAnlgEdgeRefTrigSrc'
p22816
((lp22817
S'int32'
p22818
ag34
a((S'taskHandle'
p22819
(lp22820
S'TaskHandle'
p22821
aNtp22822
tp22823
tp22824
sS'DAQmxGetAIExcitUseMultiplexed'
p22825
((lp22826
S'int32'
p22827
ag34
a((S'taskHandle'
p22828
(lp22829
S'TaskHandle'
p22830
aNtp22831
(S'channel'
p22832
(lp22833
S'char'
p22834
a(lp22835
I-1
aaNtp22836
(S'data'
p22837
(lp22838
S'bool32'
p22839
ag42
aNtp22840
tp22841
tp22842
sS'DAQmxSetCIAngEncoderPulsesPerRev'
p22843
((lp22844
S'int32'
p22845
ag34
a((S'taskHandle'
p22846
(lp22847
S'TaskHandle'
p22848
aNtp22849
(S'channel'
p22850
(lp22851
S'char'
p22852
a(lp22853
I-1
aaNtp22854
(S'data'
p22855
(lp22856
S'uInt32'
p22857
aNtp22858
tp22859
tp22860
sS'DAQmxSetAIStrainGageGageFactor'
p22861
((lp22862
S'int32'
p22863
ag34
a((S'taskHandle'
p22864
(lp22865
S'TaskHandle'
p22866
aNtp22867
(S'channel'
p22868
(lp22869
S'char'
p22870
a(lp22871
I-1
aaNtp22872
(S'data'
p22873
(lp22874
S'float64'
p22875
aNtp22876
tp22877
tp22878
sS'DAQmxGetTaskChannels'
p22879
((lp22880
S'int32'
p22881
ag34
a((S'taskHandle'
p22882
(lp22883
S'TaskHandle'
p22884
aNtp22885
(S'data'
p22886
(lp22887
S'char'
p22888
ag42
aNtp22889
(S'bufferSize'
p22890
(lp22891
S'uInt32'
p22892
aNtp22893
tp22894
tp22895
sS'DAQmxCfgOutputBuffer'
p22896
((lp22897
S'int32'
p22898
ag34
a((S'taskHandle'
p22899
(lp22900
S'TaskHandle'
p22901
aNtp22902
(S'numSampsPerChan'
p22903
(lp22904
S'uInt32'
p22905
aNtp22906
tp22907
tp22908
sS'DAQmxResetCILinEncoderInitialPos'
p22909
((lp22910
S'int32'
p22911
ag34
a((S'taskHandle'
p22912
(lp22913
S'TaskHandle'
p22914
aNtp22915
(S'channel'
p22916
(lp22917
S'char'
p22918
a(lp22919
I-1
aaNtp22920
tp22921
tp22922
sS'DAQmxGetAIEnhancedAliasRejectionEnable'
p22923
((lp22924
S'int32'
p22925
ag34
a((S'taskHandle'
p22926
(lp22927
S'TaskHandle'
p22928
aNtp22929
(S'channel'
p22930
(lp22931
S'char'
p22932
a(lp22933
I-1
aaNtp22934
(S'data'
p22935
(lp22936
S'bool32'
p22937
ag42
aNtp22938
tp22939
tp22940
sS'DAQmxSetSampClkRate'
p22941
((lp22942
S'int32'
p22943
ag34
a((S'taskHandle'
p22944
(lp22945
S'TaskHandle'
p22946
aNtp22947
(S'data'
p22948
(lp22949
S'float64'
p22950
aNtp22951
tp22952
tp22953
sS'DAQmxAdjust4225Cal'
p22954
((lp22955
S'int32'
p22956
ag34
a((S'calHandle'
p22957
(lp22958
S'uInt32'
p22959
aNtp22960
(S'channelNames'
p22961
(lp22962
S'char'
p22963
a(lp22964
I-1
aaNtp22965
(S'gain'
p22966
(lp22967
S'float64'
p22968
aNtp22969
(S'inputVal'
p22970
(lp22971
S'float64'
p22972
aNtp22973
tp22974
tp22975
sS'DAQmxResetWriteWaitMode'
p22976
((lp22977
S'int32'
p22978
ag34
a((S'taskHandle'
p22979
(lp22980
S'TaskHandle'
p22981
aNtp22982
tp22983
tp22984
sS'DAQmxGetAIDevScalingCoeff'
p22985
((lp22986
S'int32'
p22987
ag34
a((S'taskHandle'
p22988
(lp22989
S'TaskHandle'
p22990
aNtp22991
(S'channel'
p22992
(lp22993
S'char'
p22994
a(lp22995
I-1
aaNtp22996
(S'data'
p22997
(lp22998
S'float64'
p22999
ag42
aNtp23000
(S'arraySizeInSamples'
p23001
(lp23002
S'uInt32'
p23003
aNtp23004
tp23005
tp23006
sS'DAQmxGetDIDataXferMech'
p23007
((lp23008
S'int32'
p23009
ag34
a((S'taskHandle'
p23010
(lp23011
S'TaskHandle'
p23012
aNtp23013
(S'channel'
p23014
(lp23015
S'char'
p23016
a(lp23017
I-1
aaNtp23018
(S'data'
p23019
(lp23020
S'int32'
p23021
ag42
aNtp23022
tp23023
tp23024
sS'DAQmxGetSwitchChanMaxACVoltage'
p23025
((lp23026
S'int32'
p23027
ag34
a((S'switchChannelName'
p23028
(lp23029
S'char'
p23030
a(lp23031
I-1
aaNtp23032
(S'data'
p23033
(lp23034
S'float64'
p23035
ag42
aNtp23036
tp23037
tp23038
sS'DAQmxGetCICountEdgesDigSyncEnable'
p23039
((lp23040
S'int32'
p23041
ag34
a((S'taskHandle'
p23042
(lp23043
S'TaskHandle'
p23044
aNtp23045
(S'channel'
p23046
(lp23047
S'char'
p23048
a(lp23049
I-1
aaNtp23050
(S'data'
p23051
(lp23052
S'bool32'
p23053
ag42
aNtp23054
tp23055
tp23056
sS'DAQmxSetAOMin'
p23057
((lp23058
S'int32'
p23059
ag34
a((S'taskHandle'
p23060
(lp23061
S'TaskHandle'
p23062
aNtp23063
(S'channel'
p23064
(lp23065
S'char'
p23066
a(lp23067
I-1
aaNtp23068
(S'data'
p23069
(lp23070
S'float64'
p23071
aNtp23072
tp23073
tp23074
sS'DAQmxResetCIPeriodMeasTime'
p23075
((lp23076
S'int32'
p23077
ag34
a((S'taskHandle'
p23078
(lp23079
S'TaskHandle'
p23080
aNtp23081
(S'channel'
p23082
(lp23083
S'char'
p23084
a(lp23085
I-1
aaNtp23086
tp23087
tp23088
sS'DAQmxGetDevAOPhysicalChans'
p23089
((lp23090
S'int32'
p23091
ag34
a((S'device'
p23092
(lp23093
S'char'
p23094
a(lp23095
I-1
aaNtp23096
(S'data'
p23097
(lp23098
S'char'
p23099
ag42
aNtp23100
(S'bufferSize'
p23101
(lp23102
S'uInt32'
p23103
aNtp23104
tp23105
tp23106
sS'DAQmxResetAICustomScaleName'
p23107
((lp23108
S'int32'
p23109
ag34
a((S'taskHandle'
p23110
(lp23111
S'TaskHandle'
p23112
aNtp23113
(S'channel'
p23114
(lp23115
S'char'
p23116
a(lp23117
I-1
aaNtp23118
tp23119
tp23120
sS'DAQmxGetCalDevTemp'
p23121
((lp23122
S'int32'
p23123
ag34
a((S'deviceName'
p23124
(lp23125
S'char'
p23126
a(lp23127
I-1
aaNtp23128
(S'data'
p23129
(lp23130
S'float64'
p23131
ag42
aNtp23132
tp23133
tp23134
sS'DAQmxAdjust4220Cal'
p23135
((lp23136
S'int32'
p23137
ag34
a((S'calHandle'
p23138
(lp23139
S'uInt32'
p23140
aNtp23141
(S'channelNames'
p23142
(lp23143
S'char'
p23144
a(lp23145
I-1
aaNtp23146
(S'gain'
p23147
(lp23148
S'float64'
p23149
aNtp23150
(S'inputVal'
p23151
(lp23152
S'float64'
p23153
aNtp23154
tp23155
tp23156
sS'DAQmxResetAIACExcitWireMode'
p23157
((lp23158
S'int32'
p23159
ag34
a((S'taskHandle'
p23160
(lp23161
S'TaskHandle'
p23162
aNtp23163
(S'channel'
p23164
(lp23165
S'char'
p23166
a(lp23167
I-1
aaNtp23168
tp23169
tp23170
sS'DAQmxGetCIPulseWidthDigFltrMinPulseWidth'
p23171
((lp23172
S'int32'
p23173
ag34
a((S'taskHandle'
p23174
(lp23175
S'TaskHandle'
p23176
aNtp23177
(S'channel'
p23178
(lp23179
S'char'
p23180
a(lp23181
I-1
aaNtp23182
(S'data'
p23183
(lp23184
S'float64'
p23185
ag42
aNtp23186
tp23187
tp23188
sS'DAQmxSetInterlockedHshkTrigAssertedLvl'
p23189
((lp23190
S'int32'
p23191
ag34
a((S'taskHandle'
p23192
(lp23193
S'TaskHandle'
p23194
aNtp23195
(S'data'
p23196
(lp23197
S'int32'
p23198
aNtp23199
tp23200
tp23201
sS'DAQmxSetSampTimingType'
p23202
((lp23203
S'int32'
p23204
ag34
a((S'taskHandle'
p23205
(lp23206
S'TaskHandle'
p23207
aNtp23208
(S'data'
p23209
(lp23210
S'int32'
p23211
aNtp23212
tp23213
tp23214
sS'DAQmxResetSampClkTimebaseMasterTimebaseDiv'
p23215
((lp23216
S'int32'
p23217
ag34
a((S'taskHandle'
p23218
(lp23219
S'TaskHandle'
p23220
aNtp23221
tp23222
tp23223
sS'DAQmxResetOnDemandSimultaneousAOEnable'
p23224
((lp23225
S'int32'
p23226
ag34
a((S'taskHandle'
p23227
(lp23228
S'TaskHandle'
p23229
aNtp23230
tp23231
tp23232
sS'DAQmxGetAnlgEdgeStartTrigHyst'
p23233
((lp23234
S'int32'
p23235
ag34
a((S'taskHandle'
p23236
(lp23237
S'TaskHandle'
p23238
aNtp23239
(S'data'
p23240
(lp23241
S'float64'
p23242
ag42
aNtp23243
tp23244
tp23245
sS'DAQmxReadDigitalU16'
p23246
((lp23247
S'int32'
p23248
ag34
a((S'taskHandle'
p23249
(lp23250
S'TaskHandle'
p23251
aNtp23252
(S'numSampsPerChan'
p23253
(lp23254
S'int32'
p23255
aNtp23256
(S'timeout'
p23257
(lp23258
S'float64'
p23259
aNtp23260
(S'fillMode'
p23261
(lp23262
S'bool32'
p23263
aNtp23264
(S'readArray'
p23265
(lp23266
S'uInt16'
p23267
a(lp23268
I-1
aaNtp23269
(S'arraySizeInSamps'
p23270
(lp23271
S'uInt32'
p23272
aNtp23273
(S'sampsPerChanRead'
p23274
(lp23275
S'int32'
p23276
ag42
aNtp23277
(S'reserved'
p23278
(lp23279
S'bool32'
p23280
ag42
aNtp23281
tp23282
tp23283
sS'DAQmxSwitchConnect'
p23284
((lp23285
S'int32'
p23286
ag34
a((S'switchChannel1'
p23287
(lp23288
S'char'
p23289
a(lp23290
I-1
aaNtp23291
(S'switchChannel2'
p23292
(lp23293
S'char'
p23294
a(lp23295
I-1
aaNtp23296
(S'waitForSettling'
p23297
(lp23298
S'bool32'
p23299
aNtp23300
tp23301
tp23302
sS'DAQmxGetDigPatternStartTrigPattern'
p23303
((lp23304
S'int32'
p23305
ag34
a((S'taskHandle'
p23306
(lp23307
S'TaskHandle'
p23308
aNtp23309
(S'data'
p23310
(lp23311
S'char'
p23312
ag42
aNtp23313
(S'bufferSize'
p23314
(lp23315
S'uInt32'
p23316
aNtp23317
tp23318
tp23319
sS'DAQmxResetDigPatternRefTrigWhen'
p23320
((lp23321
S'int32'
p23322
ag34
a((S'taskHandle'
p23323
(lp23324
S'TaskHandle'
p23325
aNtp23326
tp23327
tp23328
sS'DAQmxGetCILinEncoderUnits'
p23329
((lp23330
S'int32'
p23331
ag34
a((S'taskHandle'
p23332
(lp23333
S'TaskHandle'
p23334
aNtp23335
(S'channel'
p23336
(lp23337
S'char'
p23338
a(lp23339
I-1
aaNtp23340
(S'data'
p23341
(lp23342
S'int32'
p23343
ag42
aNtp23344
tp23345
tp23346
sS'DAQmxGetAIBridgeNomResistance'
p23347
((lp23348
S'int32'
p23349
ag34
a((S'taskHandle'
p23350
(lp23351
S'TaskHandle'
p23352
aNtp23353
(S'channel'
p23354
(lp23355
S'char'
p23356
a(lp23357
I-1
aaNtp23358
(S'data'
p23359
(lp23360
S'float64'
p23361
ag42
aNtp23362
tp23363
tp23364
sS'DAQmxStartTask'
p23365
((lp23366
S'int32'
p23367
ag34
a((S'taskHandle'
p23368
(lp23369
S'TaskHandle'
p23370
aNtp23371
tp23372
tp23373
sS'DAQmxGetAnlgEdgeStartTrigSlope'
p23374
((lp23375
S'int32'
p23376
ag34
a((S'taskHandle'
p23377
(lp23378
S'TaskHandle'
p23379
aNtp23380
(S'data'
p23381
(lp23382
S'int32'
p23383
ag42
aNtp23384
tp23385
tp23386
sS'DAQmxGetReadOverloadedChansExist'
p23387
((lp23388
S'int32'
p23389
ag34
a((S'taskHandle'
p23390
(lp23391
S'TaskHandle'
p23392
aNtp23393
(S'data'
p23394
(lp23395
S'bool32'
p23396
ag42
aNtp23397
tp23398
tp23399
sS'DAQmxGetCIAngEncoderPulsesPerRev'
p23400
((lp23401
S'int32'
p23402
ag34
a((S'taskHandle'
p23403
(lp23404
S'TaskHandle'
p23405
aNtp23406
(S'channel'
p23407
(lp23408
S'char'
p23409
a(lp23410
I-1
aaNtp23411
(S'data'
p23412
(lp23413
S'uInt32'
p23414
ag42
aNtp23415
tp23416
tp23417
sS'DAQmxResetReadOffset'
p23418
((lp23419
S'int32'
p23420
ag34
a((S'taskHandle'
p23421
(lp23422
S'TaskHandle'
p23423
aNtp23424
tp23425
tp23426
sS'DAQmxGetRealTimeReportMissedSamp'
p23427
((lp23428
S'int32'
p23429
ag34
a((S'taskHandle'
p23430
(lp23431
S'TaskHandle'
p23432
aNtp23433
(S'data'
p23434
(lp23435
S'bool32'
p23436
ag42
aNtp23437
tp23438
tp23439
sS'DAQmxGetAIAtten'
p23440
((lp23441
S'int32'
p23442
ag34
a((S'taskHandle'
p23443
(lp23444
S'TaskHandle'
p23445
aNtp23446
(S'channel'
p23447
(lp23448
S'char'
p23449
a(lp23450
I-1
aaNtp23451
(S'data'
p23452
(lp23453
S'float64'
p23454
ag42
aNtp23455
tp23456
tp23457
sS'DAQmxGetAIChanCalDesc'
p23458
((lp23459
S'int32'
p23460
ag34
a((S'taskHandle'
p23461
(lp23462
S'TaskHandle'
p23463
aNtp23464
(S'channel'
p23465
(lp23466
S'char'
p23467
a(lp23468
I-1
aaNtp23469
(S'data'
p23470
(lp23471
S'char'
p23472
ag42
aNtp23473
(S'bufferSize'
p23474
(lp23475
S'uInt32'
p23476
aNtp23477
tp23478
tp23479
sS'DAQmxSwitchDisconnectMulti'
p23480
((lp23481
S'int32'
p23482
ag34
a((S'connectionList'
p23483
(lp23484
S'char'
p23485
a(lp23486
I-1
aaNtp23487
(S'waitForSettling'
p23488
(lp23489
S'bool32'
p23490
aNtp23491
tp23492
tp23493
sS'DAQmxSetStartTrigDelay'
p23494
((lp23495
S'int32'
p23496
ag34
a((S'taskHandle'
p23497
(lp23498
S'TaskHandle'
p23499
aNtp23500
(S'data'
p23501
(lp23502
S'float64'
p23503
aNtp23504
tp23505
tp23506
sS'DAQmxResetBufOutputBufSize'
p23507
((lp23508
S'int32'
p23509
ag34
a((S'taskHandle'
p23510
(lp23511
S'TaskHandle'
p23512
aNtp23513
tp23514
tp23515
sS'DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc'
p23516
((lp23517
S'int32'
p23518
ag34
a((S'taskHandle'
p23519
(lp23520
S'TaskHandle'
p23521
aNtp23522
(S'channel'
p23523
(lp23524
S'char'
p23525
a(lp23526
I-1
aaNtp23527
(S'data'
p23528
(lp23529
S'char'
p23530
ag42
aNtp23531
tp23532
tp23533
sS'DAQmxCfgAnlgEdgeRefTrig'
p23534
((lp23535
S'int32'
p23536
ag34
a((S'taskHandle'
p23537
(lp23538
S'TaskHandle'
p23539
aNtp23540
(S'triggerSource'
p23541
(lp23542
S'char'
p23543
a(lp23544
I-1
aaNtp23545
(S'triggerSlope'
p23546
(lp23547
S'int32'
p23548
aNtp23549
(S'triggerLevel'
p23550
(lp23551
S'float64'
p23552
aNtp23553
(S'pretriggerSamples'
p23554
(lp23555
S'uInt32'
p23556
aNtp23557
tp23558
tp23559
sS'DAQmxResetAIChanCalPolyReverseCoeff'
p23560
((lp23561
S'int32'
p23562
ag34
a((S'taskHandle'
p23563
(lp23564
S'TaskHandle'
p23565
aNtp23566
(S'channel'
p23567
(lp23568
S'char'
p23569
a(lp23570
I-1
aaNtp23571
tp23572
tp23573
sS'DAQmxGetExportedCtrOutEventOutputBehavior'
p23574
((lp23575
S'int32'
p23576
ag34
a((S'taskHandle'
p23577
(lp23578
S'TaskHandle'
p23579
aNtp23580
(S'data'
p23581
(lp23582
S'int32'
p23583
ag42
aNtp23584
tp23585
tp23586
sS'DAQmxWriteCtrFreqScalar'
p23587
((lp23588
S'int32'
p23589
ag34
a((S'taskHandle'
p23590
(lp23591
S'TaskHandle'
p23592
aNtp23593
(S'autoStart'
p23594
(lp23595
S'bool32'
p23596
aNtp23597
(S'timeout'
p23598
(lp23599
S'float64'
p23600
aNtp23601
(S'frequency'
p23602
(lp23603
S'float64'
p23604
aNtp23605
(S'dutyCycle'
p23606
(lp23607
S'float64'
p23608
aNtp23609
(S'reserved'
p23610
(lp23611
S'bool32'
p23612
ag42
aNtp23613
tp23614
tp23615
sS'DAQmxWriteToTEDSFromArray'
p23616
((lp23617
S'int32'
p23618
ag34
a((S'physicalChannel'
p23619
(lp23620
S'char'
p23621
a(lp23622
I-1
aaNtp23623
(S'bitStream'
p23624
(lp23625
S'uInt8'
p23626
a(lp23627
I-1
aaNtp23628
(S'arraySize'
p23629
(lp23630
S'uInt32'
p23631
aNtp23632
(S'basicTEDSOptions'
p23633
(lp23634
S'int32'
p23635
aNtp23636
tp23637
tp23638
sS'DAQmxSetAOGain'
p23639
((lp23640
S'int32'
p23641
ag34
a((S'taskHandle'
p23642
(lp23643
S'TaskHandle'
p23644
aNtp23645
(S'channel'
p23646
(lp23647
S'char'
p23648
a(lp23649
I-1
aaNtp23650
(S'data'
p23651
(lp23652
S'float64'
p23653
aNtp23654
tp23655
tp23656
sS'DAQmxSetAIRVDTUnits'
p23657
((lp23658
S'int32'
p23659
ag34
a((S'taskHandle'
p23660
(lp23661
S'TaskHandle'
p23662
aNtp23663
(S'channel'
p23664
(lp23665
S'char'
p23666
a(lp23667
I-1
aaNtp23668
(S'data'
p23669
(lp23670
S'int32'
p23671
aNtp23672
tp23673
tp23674
sS'DAQmxResetAODACOffsetExtSrc'
p23675
((lp23676
S'int32'
p23677
ag34
a((S'taskHandle'
p23678
(lp23679
S'TaskHandle'
p23680
aNtp23681
(S'channel'
p23682
(lp23683
S'char'
p23684
a(lp23685
I-1
aaNtp23686
tp23687
tp23688
sS'DAQmxSetAOIdleOutputBehavior'
p23689
((lp23690
S'int32'
p23691
ag34
a((S'taskHandle'
p23692
(lp23693
S'TaskHandle'
p23694
aNtp23695
(S'channel'
p23696
(lp23697
S'char'
p23698
a(lp23699
I-1
aaNtp23700
(S'data'
p23701
(lp23702
S'int32'
p23703
aNtp23704
tp23705
tp23706
sS'DAQmxSetAIAccelSensitivity'
p23707
((lp23708
S'int32'
p23709
ag34
a((S'taskHandle'
p23710
(lp23711
S'TaskHandle'
p23712
aNtp23713
(S'channel'
p23714
(lp23715
S'char'
p23716
a(lp23717
I-1
aaNtp23718
(S'data'
p23719
(lp23720
S'float64'
p23721
aNtp23722
tp23723
tp23724
sS'DAQmxSetCOPrescaler'
p23725
((lp23726
S'int32'
p23727
ag34
a((S'taskHandle'
p23728
(lp23729
S'TaskHandle'
p23730
aNtp23731
(S'channel'
p23732
(lp23733
S'char'
p23734
a(lp23735
I-1
aaNtp23736
(S'data'
p23737
(lp23738
S'uInt32'
p23739
aNtp23740
tp23741
tp23742
sS'DAQmxCreateAOVoltageChan'
p23743
((lp23744
S'int32'
p23745
ag34
a((S'taskHandle'
p23746
(lp23747
S'TaskHandle'
p23748
aNtp23749
(S'physicalChannel'
p23750
(lp23751
S'char'
p23752
a(lp23753
I-1
aaNtp23754
(S'nameToAssignToChannel'
p23755
(lp23756
S'char'
p23757
a(lp23758
I-1
aaNtp23759
(S'minVal'
p23760
(lp23761
S'float64'
p23762
aNtp23763
(S'maxVal'
p23764
(lp23765
S'float64'
p23766
aNtp23767
(S'units'
p23768
(lp23769
S'int32'
p23770
aNtp23771
(S'customScaleName'
p23772
(lp23773
S'char'
p23774
a(lp23775
I-1
aaNtp23776
tp23777
tp23778
sS'DAQmxSetDigEdgeStartTrigDigFltrEnable'
p23779
((lp23780
S'int32'
p23781
ag34
a((S'taskHandle'
p23782
(lp23783
S'TaskHandle'
p23784
aNtp23785
(S'data'
p23786
(lp23787
S'bool32'
p23788
aNtp23789
tp23790
tp23791
sS'DAQmxGetAIChanCalPolyReverseCoeff'
p23792
((lp23793
S'int32'
p23794
ag34
a((S'taskHandle'
p23795
(lp23796
S'TaskHandle'
p23797
aNtp23798
(S'channel'
p23799
(lp23800
S'char'
p23801
a(lp23802
I-1
aaNtp23803
(S'data'
p23804
(lp23805
S'float64'
p23806
ag42
aNtp23807
(S'arraySizeInSamples'
p23808
(lp23809
S'uInt32'
p23810
aNtp23811
tp23812
tp23813
sS'DAQmxGetExportedHshkEventInterlockedAssertedLvl'
p23814
((lp23815
S'int32'
p23816
ag34
a((S'taskHandle'
p23817
(lp23818
S'TaskHandle'
p23819
aNtp23820
(S'data'
p23821
(lp23822
S'int32'
p23823
ag42
aNtp23824
tp23825
tp23826
sS'DAQmxGetAIMicrophoneSensitivity'
p23827
((lp23828
S'int32'
p23829
ag34
a((S'taskHandle'
p23830
(lp23831
S'TaskHandle'
p23832
aNtp23833
(S'channel'
p23834
(lp23835
S'char'
p23836
a(lp23837
I-1
aaNtp23838
(S'data'
p23839
(lp23840
S'float64'
p23841
ag42
aNtp23842
tp23843
tp23844
sS'DAQmxSetExportedAdvCmpltEventOutputTerm'
p23845
((lp23846
S'int32'
p23847
ag34
a((S'taskHandle'
p23848
(lp23849
S'TaskHandle'
p23850
aNtp23851
(S'data'
p23852
(lp23853
S'char'
p23854
ag42
aNtp23855
tp23856
tp23857
sS'DAQmxGetSampClkRate'
p23858
((lp23859
S'int32'
p23860
ag34
a((S'taskHandle'
p23861
(lp23862
S'TaskHandle'
p23863
aNtp23864
(S'data'
p23865
(lp23866
S'float64'
p23867
ag42
aNtp23868
tp23869
tp23870
sS'DAQmxGetCalUserDefinedInfo'
p23871
((lp23872
S'int32'
p23873
ag34
a((S'deviceName'
p23874
(lp23875
S'char'
p23876
a(lp23877
I-1
aaNtp23878
(S'data'
p23879
(lp23880
S'char'
p23881
ag42
aNtp23882
(S'bufferSize'
p23883
(lp23884
S'uInt32'
p23885
aNtp23886
tp23887
tp23888
sS'DAQmxSetAIRTDA'
p23889
((lp23890
S'int32'
p23891
ag34
a((S'taskHandle'
p23892
(lp23893
S'TaskHandle'
p23894
aNtp23895
(S'channel'
p23896
(lp23897
S'char'
p23898
a(lp23899
I-1
aaNtp23900
(S'data'
p23901
(lp23902
S'float64'
p23903
aNtp23904
tp23905
tp23906
sS'DAQmxSetAIRTDC'
p23907
((lp23908
S'int32'
p23909
ag34
a((S'taskHandle'
p23910
(lp23911
S'TaskHandle'
p23912
aNtp23913
(S'channel'
p23914
(lp23915
S'char'
p23916
a(lp23917
I-1
aaNtp23918
(S'data'
p23919
(lp23920
S'float64'
p23921
aNtp23922
tp23923
tp23924
sS'DAQmxSetAIRTDB'
p23925
((lp23926
S'int32'
p23927
ag34
a((S'taskHandle'
p23928
(lp23929
S'TaskHandle'
p23930
aNtp23931
(S'channel'
p23932
(lp23933
S'char'
p23934
a(lp23935
I-1
aaNtp23936
(S'data'
p23937
(lp23938
S'float64'
p23939
aNtp23940
tp23941
tp23942
sS'DAQmxGetDevDOLines'
p23943
((lp23944
S'int32'
p23945
ag34
a((S'device'
p23946
(lp23947
S'char'
p23948
a(lp23949
I-1
aaNtp23950
(S'data'
p23951
(lp23952
S'char'
p23953
ag42
aNtp23954
(S'bufferSize'
p23955
(lp23956
S'uInt32'
p23957
aNtp23958
tp23959
tp23960
sS'DAQmxSetCIGPSSyncMethod'
p23961
((lp23962
S'int32'
p23963
ag34
a((S'taskHandle'
p23964
(lp23965
S'TaskHandle'
p23966
aNtp23967
(S'channel'
p23968
(lp23969
S'char'
p23970
a(lp23971
I-1
aaNtp23972
(S'data'
p23973
(lp23974
S'int32'
p23975
aNtp23976
tp23977
tp23978
sS'DAQmxSetRealTimeWriteRecoveryMode'
p23979
((lp23980
S'int32'
p23981
ag34
a((S'taskHandle'
p23982
(lp23983
S'TaskHandle'
p23984
aNtp23985
(S'data'
p23986
(lp23987
S'int32'
p23988
aNtp23989
tp23990
tp23991
sS'DAQmxSetCOCtrTimebaseRate'
p23992
((lp23993
S'int32'
p23994
ag34
a((S'taskHandle'
p23995
(lp23996
S'TaskHandle'
p23997
aNtp23998
(S'channel'
p23999
(lp24000
S'char'
p24001
a(lp24002
I-1
aaNtp24003
(S'data'
p24004
(lp24005
S'float64'
p24006
aNtp24007
tp24008
tp24009
sS'DAQmxGetAIRTDType'
p24010
((lp24011
S'int32'
p24012
ag34
a((S'taskHandle'
p24013
(lp24014
S'TaskHandle'
p24015
aNtp24016
(S'channel'
p24017
(lp24018
S'char'
p24019
a(lp24020
I-1
aaNtp24021
(S'data'
p24022
(lp24023
S'int32'
p24024
ag42
aNtp24025
tp24026
tp24027
sS'DAQmxSetDIInvertLines'
p24028
((lp24029
S'int32'
p24030
ag34
a((S'taskHandle'
p24031
(lp24032
S'TaskHandle'
p24033
aNtp24034
(S'channel'
p24035
(lp24036
S'char'
p24037
a(lp24038
I-1
aaNtp24039
(S'data'
p24040
(lp24041
S'bool32'
p24042
aNtp24043
tp24044
tp24045
sS'DAQmxResetSampClkSrc'
p24046
((lp24047
S'int32'
p24048
ag34
a((S'taskHandle'
p24049
(lp24050
S'TaskHandle'
p24051
aNtp24052
tp24053
tp24054
sS'DAQmxResetCITwoEdgeSepSecondEdge'
p24055
((lp24056
S'int32'
p24057
ag34
a((S'taskHandle'
p24058
(lp24059
S'TaskHandle'
p24060
aNtp24061
(S'channel'
p24062
(lp24063
S'char'
p24064
a(lp24065
I-1
aaNtp24066
tp24067
tp24068
sS'DAQmxResetDIInvertLines'
p24069
((lp24070
S'int32'
p24071
ag34
a((S'taskHandle'
p24072
(lp24073
S'TaskHandle'
p24074
aNtp24075
(S'channel'
p24076
(lp24077
S'char'
p24078
a(lp24079
I-1
aaNtp24080
tp24081
tp24082
sS'DAQmxSwitchGetMultiRelayCount'
p24083
((lp24084
S'int32'
p24085
ag34
a((S'relayList'
p24086
(lp24087
S'char'
p24088
a(lp24089
I-1
aaNtp24090
(S'count'
p24091
(lp24092
S'uInt32'
p24093
a(lp24094
I-1
aaNtp24095
(S'countArraySize'
p24096
(lp24097
S'uInt32'
p24098
aNtp24099
(S'numRelayCountsRead'
p24100
(lp24101
S'uInt32'
p24102
ag42
aNtp24103
tp24104
tp24105
sS'DAQmxSetCICountEdgesTerm'
p24106
((lp24107
S'int32'
p24108
ag34
a((S'taskHandle'
p24109
(lp24110
S'TaskHandle'
p24111
aNtp24112
(S'channel'
p24113
(lp24114
S'char'
p24115
a(lp24116
I-1
aaNtp24117
(S'data'
p24118
(lp24119
S'char'
p24120
ag42
aNtp24121
tp24122
tp24123
sS'DAQmxSetAnlgWinStartTrigWhen'
p24124
((lp24125
S'int32'
p24126
ag34
a((S'taskHandle'
p24127
(lp24128
S'TaskHandle'
p24129
aNtp24130
(S'data'
p24131
(lp24132
S'int32'
p24133
aNtp24134
tp24135
tp24136
sS'DAQmxResetSampClkActiveEdge'
p24137
((lp24138
S'int32'
p24139
ag34
a((S'taskHandle'
p24140
(lp24141
S'TaskHandle'
p24142
aNtp24143
tp24144
tp24145
sS'DAQmxSwitchDisconnect'
p24146
((lp24147
S'int32'
p24148
ag34
a((S'switchChannel1'
p24149
(lp24150
S'char'
p24151
a(lp24152
I-1
aaNtp24153
(S'switchChannel2'
p24154
(lp24155
S'char'
p24156
a(lp24157
I-1
aaNtp24158
(S'waitForSettling'
p24159
(lp24160
S'bool32'
p24161
aNtp24162
tp24163
tp24164
sS'DAQmxSetCIPeriodDigFltrTimebaseRate'
p24165
((lp24166
S'int32'
p24167
ag34
a((S'taskHandle'
p24168
(lp24169
S'TaskHandle'
p24170
aNtp24171
(S'channel'
p24172
(lp24173
S'char'
p24174
a(lp24175
I-1
aaNtp24176
(S'data'
p24177
(lp24178
S'float64'
p24179
aNtp24180
tp24181
tp24182
sS'DAQmxResetAnlgWinRefTrigBtm'
p24183
((lp24184
S'int32'
p24185
ag34
a((S'taskHandle'
p24186
(lp24187
S'TaskHandle'
p24188
aNtp24189
tp24190
tp24191
sS'DAQmxResetMasterTimebaseSrc'
p24192
((lp24193
S'int32'
p24194
ag34
a((S'taskHandle'
p24195
(lp24196
S'TaskHandle'
p24197
aNtp24198
tp24199
tp24200
sS'DAQmxSetDigEdgeRefTrigEdge'
p24201
((lp24202
S'int32'
p24203
ag34
a((S'taskHandle'
p24204
(lp24205
S'TaskHandle'
p24206
aNtp24207
(S'data'
p24208
(lp24209
S'int32'
p24210
aNtp24211
tp24212
tp24213
sS'DAQmxResetWriteAttribute'
p24214
((lp24215
S'int32'
p24216
ag34
a((S'taskHandle'
p24217
(lp24218
S'TaskHandle'
p24219
aNtp24220
(S'attribute'
p24221
(lp24222
S'int32'
p24223
aNtp24224
tp24225
tp24226
sS'DAQmxGetCIEncoderZIndexVal'
p24227
((lp24228
S'int32'
p24229
ag34
a((S'taskHandle'
p24230
(lp24231
S'TaskHandle'
p24232
aNtp24233
(S'channel'
p24234
(lp24235
S'char'
p24236
a(lp24237
I-1
aaNtp24238
(S'data'
p24239
(lp24240
S'float64'
p24241
ag42
aNtp24242
tp24243
tp24244
sS'DAQmxSetAIBridgeBalanceFinePot'
p24245
((lp24246
S'int32'
p24247
ag34
a((S'taskHandle'
p24248
(lp24249
S'TaskHandle'
p24250
aNtp24251
(S'channel'
p24252
(lp24253
S'char'
p24254
a(lp24255
I-1
aaNtp24256
(S'data'
p24257
(lp24258
S'int32'
p24259
aNtp24260
tp24261
tp24262
sS'DAQmxSetRefClkRate'
p24263
((lp24264
S'int32'
p24265
ag34
a((S'taskHandle'
p24266
(lp24267
S'TaskHandle'
p24268
aNtp24269
(S'data'
p24270
(lp24271
S'float64'
p24272
aNtp24273
tp24274
tp24275
sS'DAQmxSetAILVDTSensitivityUnits'
p24276
((lp24277
S'int32'
p24278
ag34
a((S'taskHandle'
p24279
(lp24280
S'TaskHandle'
p24281
aNtp24282
(S'channel'
p24283
(lp24284
S'char'
p24285
a(lp24286
I-1
aaNtp24287
(S'data'
p24288
(lp24289
S'int32'
p24290
aNtp24291
tp24292
tp24293
sS'DAQmxCreateAIThrmstrChanIex'
p24294
((lp24295
S'int32'
p24296
ag34
a((S'taskHandle'
p24297
(lp24298
S'TaskHandle'
p24299
aNtp24300
(S'physicalChannel'
p24301
(lp24302
S'char'
p24303
a(lp24304
I-1
aaNtp24305
(S'nameToAssignToChannel'
p24306
(lp24307
S'char'
p24308
a(lp24309
I-1
aaNtp24310
(S'minVal'
p24311
(lp24312
S'float64'
p24313
aNtp24314
(S'maxVal'
p24315
(lp24316
S'float64'
p24317
aNtp24318
(S'units'
p24319
(lp24320
S'int32'
p24321
aNtp24322
(S'resistanceConfig'
p24323
(lp24324
S'int32'
p24325
aNtp24326
(S'currentExcitSource'
p24327
(lp24328
S'int32'
p24329
aNtp24330
(S'currentExcitVal'
p24331
(lp24332
S'float64'
p24333
aNtp24334
(g18412
(lp24335
S'float64'
p24336
aNtp24337
(g18416
(lp24338
S'float64'
p24339
aNtp24340
(g18420
(lp24341
S'float64'
p24342
aNtp24343
tp24344
tp24345
sS'DAQmxSetCOPulseFreq'
p24346
((lp24347
S'int32'
p24348
ag34
a((S'taskHandle'
p24349
(lp24350
S'TaskHandle'
p24351
aNtp24352
(S'channel'
p24353
(lp24354
S'char'
p24355
a(lp24356
I-1
aaNtp24357
(S'data'
p24358
(lp24359
S'float64'
p24360
aNtp24361
tp24362
tp24363
sS'DAQmxSetCITwoEdgeSepFirstTerm'
p24364
((lp24365
S'int32'
p24366
ag34
a((S'taskHandle'
p24367
(lp24368
S'TaskHandle'
p24369
aNtp24370
(S'channel'
p24371
(lp24372
S'char'
p24373
a(lp24374
I-1
aaNtp24375
(S'data'
p24376
(lp24377
S'char'
p24378
ag42
aNtp24379
tp24380
tp24381
sS'DAQmxResetCICountEdgesTerm'
p24382
((lp24383
S'int32'
p24384
ag34
a((S'taskHandle'
p24385
(lp24386
S'TaskHandle'
p24387
aNtp24388
(S'channel'
p24389
(lp24390
S'char'
p24391
a(lp24392
I-1
aaNtp24393
tp24394
tp24395
sS'DAQmxSetCIPrescaler'
p24396
((lp24397
S'int32'
p24398
ag34
a((S'taskHandle'
p24399
(lp24400
S'TaskHandle'
p24401
aNtp24402
(S'channel'
p24403
(lp24404
S'char'
p24405
a(lp24406
I-1
aaNtp24407
(S'data'
p24408
(lp24409
S'uInt32'
p24410
aNtp24411
tp24412
tp24413
sS'DAQmxGetCICtrTimebaseRate'
p24414
((lp24415
S'int32'
p24416
ag34
a((S'taskHandle'
p24417
(lp24418
S'TaskHandle'
p24419
aNtp24420
(S'channel'
p24421
(lp24422
S'char'
p24423
a(lp24424
I-1
aaNtp24425
(S'data'
p24426
(lp24427
S'float64'
p24428
ag42
aNtp24429
tp24430
tp24431
sS'DAQmxResetAIFreqThreshVoltage'
p24432
((lp24433
S'int32'
p24434
ag34
a((S'taskHandle'
p24435
(lp24436
S'TaskHandle'
p24437
aNtp24438
(S'channel'
p24439
(lp24440
S'char'
p24441
a(lp24442
I-1
aaNtp24443
tp24444
tp24445
sS'DAQmxSetCOCtrTimebaseDigSyncEnable'
p24446
((lp24447
S'int32'
p24448
ag34
a((S'taskHandle'
p24449
(lp24450
S'TaskHandle'
p24451
aNtp24452
(S'channel'
p24453
(lp24454
S'char'
p24455
a(lp24456
I-1
aaNtp24457
(S'data'
p24458
(lp24459
S'bool32'
p24460
aNtp24461
tp24462
tp24463
sS'DAQmxResetAOCustomScaleName'
p24464
((lp24465
S'int32'
p24466
ag34
a((S'taskHandle'
p24467
(lp24468
S'TaskHandle'
p24469
aNtp24470
(S'channel'
p24471
(lp24472
S'char'
p24473
a(lp24474
I-1
aaNtp24475
tp24476
tp24477
sS'DAQmxCalculateReversePolyCoeff'
p24478
((lp24479
S'int32'
p24480
ag34
a((S'forwardCoeffs'
p24481
(lp24482
S'float64'
p24483
a(lp24484
I-1
aaNtp24485
(S'numForwardCoeffsIn'
p24486
(lp24487
S'uInt32'
p24488
aNtp24489
(S'minValX'
p24490
(lp24491
S'float64'
p24492
aNtp24493
(S'maxValX'
p24494
(lp24495
S'float64'
p24496
aNtp24497
(S'numPointsToCompute'
p24498
(lp24499
S'int32'
p24500
aNtp24501
(S'reversePolyOrder'
p24502
(lp24503
S'int32'
p24504
aNtp24505
(S'reverseCoeffs'
p24506
(lp24507
S'float64'
p24508
a(lp24509
I-1
aaNtp24510
tp24511
tp24512
sS'DAQmxResetCISemiPeriodDigFltrTimebaseSrc'
p24513
((lp24514
S'int32'
p24515
ag34
a((S'taskHandle'
p24516
(lp24517
S'TaskHandle'
p24518
aNtp24519
(S'channel'
p24520
(lp24521
S'char'
p24522
a(lp24523
I-1
aaNtp24524
tp24525
tp24526
sS'DAQmxGetAIRTDA'
p24527
((lp24528
S'int32'
p24529
ag34
a((S'taskHandle'
p24530
(lp24531
S'TaskHandle'
p24532
aNtp24533
(S'channel'
p24534
(lp24535
S'char'
p24536
a(lp24537
I-1
aaNtp24538
(S'data'
p24539
(lp24540
S'float64'
p24541
ag42
aNtp24542
tp24543
tp24544
sS'DAQmxGetAIRTDC'
p24545
((lp24546
S'int32'
p24547
ag34
a((S'taskHandle'
p24548
(lp24549
S'TaskHandle'
p24550
aNtp24551
(S'channel'
p24552
(lp24553
S'char'
p24554
a(lp24555
I-1
aaNtp24556
(S'data'
p24557
(lp24558
S'float64'
p24559
ag42
aNtp24560
tp24561
tp24562
sS'DAQmxGetAIRTDB'
p24563
((lp24564
S'int32'
p24565
ag34
a((S'taskHandle'
p24566
(lp24567
S'TaskHandle'
p24568
aNtp24569
(S'channel'
p24570
(lp24571
S'char'
p24572
a(lp24573
I-1
aaNtp24574
(S'data'
p24575
(lp24576
S'float64'
p24577
ag42
aNtp24578
tp24579
tp24580
sS'DAQmxGetAOMin'
p24581
((lp24582
S'int32'
p24583
ag34
a((S'taskHandle'
p24584
(lp24585
S'TaskHandle'
p24586
aNtp24587
(S'channel'
p24588
(lp24589
S'char'
p24590
a(lp24591
I-1
aaNtp24592
(S'data'
p24593
(lp24594
S'float64'
p24595
ag42
aNtp24596
tp24597
tp24598
sS'DAQmxGetCOPulseDutyCyc'
p24599
((lp24600
S'int32'
p24601
ag34
a((S'taskHandle'
p24602
(lp24603
S'TaskHandle'
p24604
aNtp24605
(S'channel'
p24606
(lp24607
S'char'
p24608
a(lp24609
I-1
aaNtp24610
(S'data'
p24611
(lp24612
S'float64'
p24613
ag42
aNtp24614
tp24615
tp24616
sS'DAQmxGetAICurrentUnits'
p24617
((lp24618
S'int32'
p24619
ag34
a((S'taskHandle'
p24620
(lp24621
S'TaskHandle'
p24622
aNtp24623
(S'channel'
p24624
(lp24625
S'char'
p24626
a(lp24627
I-1
aaNtp24628
(S'data'
p24629
(lp24630
S'int32'
p24631
ag42
aNtp24632
tp24633
tp24634
sS'DAQmxGetAIChanCalTableScaledVals'
p24635
((lp24636
S'int32'
p24637
ag34
a((S'taskHandle'
p24638
(lp24639
S'TaskHandle'
p24640
aNtp24641
(S'channel'
p24642
(lp24643
S'char'
p24644
a(lp24645
I-1
aaNtp24646
(S'data'
p24647
(lp24648
S'float64'
p24649
ag42
aNtp24650
(S'arraySizeInSamples'
p24651
(lp24652
S'uInt32'
p24653
aNtp24654
tp24655
tp24656
sS'DAQmxGetAIImpedance'
p24657
((lp24658
S'int32'
p24659
ag34
a((S'taskHandle'
p24660
(lp24661
S'TaskHandle'
p24662
aNtp24663
(S'channel'
p24664
(lp24665
S'char'
p24666
a(lp24667
I-1
aaNtp24668
(S'data'
p24669
(lp24670
S'float64'
p24671
ag42
aNtp24672
tp24673
tp24674
sS'DAQmxResetCIGPSSyncMethod'
p24675
((lp24676
S'int32'
p24677
ag34
a((S'taskHandle'
p24678
(lp24679
S'TaskHandle'
p24680
aNtp24681
(S'channel'
p24682
(lp24683
S'char'
p24684
a(lp24685
I-1
aaNtp24686
tp24687
tp24688
sS'DAQmxResetAIStrainUnits'
p24689
((lp24690
S'int32'
p24691
ag34
a((S'taskHandle'
p24692
(lp24693
S'TaskHandle'
p24694
aNtp24695
(S'channel'
p24696
(lp24697
S'char'
p24698
a(lp24699
I-1
aaNtp24700
tp24701
tp24702
sS'DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate'
p24703
((lp24704
S'int32'
p24705
ag34
a((S'taskHandle'
p24706
(lp24707
S'TaskHandle'
p24708
aNtp24709
(S'data'
p24710
(lp24711
S'float64'
p24712
aNtp24713
tp24714
tp24715
sS'DAQmxResetDOUseOnlyOnBrdMem'
p24716
((lp24717
S'int32'
p24718
ag34
a((S'taskHandle'
p24719
(lp24720
S'TaskHandle'
p24721
aNtp24722
(S'channel'
p24723
(lp24724
S'char'
p24725
a(lp24726
I-1
aaNtp24727
tp24728
tp24729
sS'DAQmxGetCOPulseFreqInitialDelay'
p24730
((lp24731
S'int32'
p24732
ag34
a((S'taskHandle'
p24733
(lp24734
S'TaskHandle'
p24735
aNtp24736
(S'channel'
p24737
(lp24738
S'char'
p24739
a(lp24740
I-1
aaNtp24741
(S'data'
p24742
(lp24743
S'float64'
p24744
ag42
aNtp24745
tp24746
tp24747
sS'DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p24748
((lp24749
S'int32'
p24750
ag34
a((S'taskHandle'
p24751
(lp24752
S'TaskHandle'
p24753
aNtp24754
tp24755
tp24756
sS'DAQmxSetExportedRdyForXferEventLvlActiveLvl'
p24757
((lp24758
S'int32'
p24759
ag34
a((S'taskHandle'
p24760
(lp24761
S'TaskHandle'
p24762
aNtp24763
(S'data'
p24764
(lp24765
S'int32'
p24766
aNtp24767
tp24768
tp24769
sS'DAQmxSetCIFreqMeasTime'
p24770
((lp24771
S'int32'
p24772
ag34
a((S'taskHandle'
p24773
(lp24774
S'TaskHandle'
p24775
aNtp24776
(S'channel'
p24777
(lp24778
S'char'
p24779
a(lp24780
I-1
aaNtp24781
(S'data'
p24782
(lp24783
S'float64'
p24784
aNtp24785
tp24786
tp24787
sS'DAQmxResetDigPatternStartTrigWhen'
p24788
((lp24789
S'int32'
p24790
ag34
a((S'taskHandle'
p24791
(lp24792
S'TaskHandle'
p24793
aNtp24794
tp24795
tp24796
sS'DAQmxSetCICountEdgesDirTerm'
p24797
((lp24798
S'int32'
p24799
ag34
a((S'taskHandle'
p24800
(lp24801
S'TaskHandle'
p24802
aNtp24803
(S'channel'
p24804
(lp24805
S'char'
p24806
a(lp24807
I-1
aaNtp24808
(S'data'
p24809
(lp24810
S'char'
p24811
ag42
aNtp24812
tp24813
tp24814
sS'DAQmxSetExportedSampClkOutputTerm'
p24815
((lp24816
S'int32'
p24817
ag34
a((S'taskHandle'
p24818
(lp24819
S'TaskHandle'
p24820
aNtp24821
(S'data'
p24822
(lp24823
S'char'
p24824
ag42
aNtp24825
tp24826
tp24827
sS'DAQmxSetStartTrigRetriggerable'
p24828
((lp24829
S'int32'
p24830
ag34
a((S'taskHandle'
p24831
(lp24832
S'TaskHandle'
p24833
aNtp24834
(S'data'
p24835
(lp24836
S'bool32'
p24837
aNtp24838
tp24839
tp24840
sS'DAQmxGetExportedRdyForXferEventLvlActiveLvl'
p24841
((lp24842
S'int32'
p24843
ag34
a((S'taskHandle'
p24844
(lp24845
S'TaskHandle'
p24846
aNtp24847
(S'data'
p24848
(lp24849
S'int32'
p24850
ag42
aNtp24851
tp24852
tp24853
sS'DAQmxResetAIRVDTSensitivity'
p24854
((lp24855
S'int32'
p24856
ag34
a((S'taskHandle'
p24857
(lp24858
S'TaskHandle'
p24859
aNtp24860
(S'channel'
p24861
(lp24862
S'char'
p24863
a(lp24864
I-1
aaNtp24865
tp24866
tp24867
sS'DAQmxSetAODACRngHigh'
p24868
((lp24869
S'int32'
p24870
ag34
a((S'taskHandle'
p24871
(lp24872
S'TaskHandle'
p24873
aNtp24874
(S'channel'
p24875
(lp24876
S'char'
p24877
a(lp24878
I-1
aaNtp24879
(S'data'
p24880
(lp24881
S'float64'
p24882
aNtp24883
tp24884
tp24885
sS'DAQmxSetCICtrTimebaseMasterTimebaseDiv'
p24886
((lp24887
S'int32'
p24888
ag34
a((S'taskHandle'
p24889
(lp24890
S'TaskHandle'
p24891
aNtp24892
(S'channel'
p24893
(lp24894
S'char'
p24895
a(lp24896
I-1
aaNtp24897
(S'data'
p24898
(lp24899
S'uInt32'
p24900
aNtp24901
tp24902
tp24903
sS'DAQmxResetCIFreqMeasTime'
p24904
((lp24905
S'int32'
p24906
ag34
a((S'taskHandle'
p24907
(lp24908
S'TaskHandle'
p24909
aNtp24910
(S'channel'
p24911
(lp24912
S'char'
p24913
a(lp24914
I-1
aaNtp24915
tp24916
tp24917
sS'DAQmxSetSwitchScanRepeatMode'
p24918
((lp24919
S'int32'
p24920
ag34
a((S'taskHandle'
p24921
(lp24922
S'TaskHandle'
p24923
aNtp24924
(S'data'
p24925
(lp24926
S'int32'
p24927
aNtp24928
tp24929
tp24930
sS'DAQmxGetReadReadAllAvailSamp'
p24931
((lp24932
S'int32'
p24933
ag34
a((S'taskHandle'
p24934
(lp24935
S'TaskHandle'
p24936
aNtp24937
(S'data'
p24938
(lp24939
S'bool32'
p24940
ag42
aNtp24941
tp24942
tp24943
sS'DAQmxGetDigEdgeStartTrigDigSyncEnable'
p24944
((lp24945
S'int32'
p24946
ag34
a((S'taskHandle'
p24947
(lp24948
S'TaskHandle'
p24949
aNtp24950
(S'data'
p24951
(lp24952
S'bool32'
p24953
ag42
aNtp24954
tp24955
tp24956
sS'DAQmxSetAIDataXferReqCond'
p24957
((lp24958
S'int32'
p24959
ag34
a((S'taskHandle'
p24960
(lp24961
S'TaskHandle'
p24962
aNtp24963
(S'channel'
p24964
(lp24965
S'char'
p24966
a(lp24967
I-1
aaNtp24968
(S'data'
p24969
(lp24970
S'int32'
p24971
aNtp24972
tp24973
tp24974
sS'DAQmxResetCIDataXferMech'
p24975
((lp24976
S'int32'
p24977
ag34
a((S'taskHandle'
p24978
(lp24979
S'TaskHandle'
p24980
aNtp24981
(S'channel'
p24982
(lp24983
S'char'
p24984
a(lp24985
I-1
aaNtp24986
tp24987
tp24988
sS'DAQmxResetDigEdgeStartTrigDigFltrEnable'
p24989
((lp24990
S'int32'
p24991
ag34
a((S'taskHandle'
p24992
(lp24993
S'TaskHandle'
p24994
aNtp24995
tp24996
tp24997
sS'DAQmxWriteCtrTicks'
p24998
((lp24999
S'int32'
p25000
ag34
a((S'taskHandle'
p25001
(lp25002
S'TaskHandle'
p25003
aNtp25004
(S'numSampsPerChan'
p25005
(lp25006
S'int32'
p25007
aNtp25008
(S'autoStart'
p25009
(lp25010
S'bool32'
p25011
aNtp25012
(S'timeout'
p25013
(lp25014
S'float64'
p25015
aNtp25016
(S'dataLayout'
p25017
(lp25018
S'bool32'
p25019
aNtp25020
(S'highTicks'
p25021
(lp25022
S'uInt32'
p25023
a(lp25024
I-1
aaNtp25025
(S'lowTicks'
p25026
(lp25027
S'uInt32'
p25028
a(lp25029
I-1
aaNtp25030
(S'numSampsPerChanWritten'
p25031
(lp25032
S'int32'
p25033
ag42
aNtp25034
(S'reserved'
p25035
(lp25036
S'bool32'
p25037
ag42
aNtp25038
tp25039
tp25040
sS'DAQmxGetDigEdgeStartTrigDigFltrEnable'
p25041
((lp25042
S'int32'
p25043
ag34
a((S'taskHandle'
p25044
(lp25045
S'TaskHandle'
p25046
aNtp25047
(S'data'
p25048
(lp25049
S'bool32'
p25050
ag42
aNtp25051
tp25052
tp25053
sS'DAQmxResetAnlgEdgeStartTrigLvl'
p25054
((lp25055
S'int32'
p25056
ag34
a((S'taskHandle'
p25057
(lp25058
S'TaskHandle'
p25059
aNtp25060
tp25061
tp25062
sS'DAQmxGetCIDupCountPrevent'
p25063
((lp25064
S'int32'
p25065
ag34
a((S'taskHandle'
p25066
(lp25067
S'TaskHandle'
p25068
aNtp25069
(S'channel'
p25070
(lp25071
S'char'
p25072
a(lp25073
I-1
aaNtp25074
(S'data'
p25075
(lp25076
S'bool32'
p25077
ag42
aNtp25078
tp25079
tp25080
sS'DAQmxResetCIPeriodDigFltrMinPulseWidth'
p25081
((lp25082
S'int32'
p25083
ag34
a((S'taskHandle'
p25084
(lp25085
S'TaskHandle'
p25086
aNtp25087
(S'channel'
p25088
(lp25089
S'char'
p25090
a(lp25091
I-1
aaNtp25092
tp25093
tp25094
sS'DAQmxGetScaleTablePreScaledVals'
p25095
((lp25096
S'int32'
p25097
ag34
a((S'scaleName'
p25098
(lp25099
S'char'
p25100
a(lp25101
I-1
aaNtp25102
(S'data'
p25103
(lp25104
S'float64'
p25105
ag42
aNtp25106
(S'arraySizeInSamples'
p25107
(lp25108
S'uInt32'
p25109
aNtp25110
tp25111
tp25112
sS'DAQmxGetCOPulseHighTicks'
p25113
((lp25114
S'int32'
p25115
ag34
a((S'taskHandle'
p25116
(lp25117
S'TaskHandle'
p25118
aNtp25119
(S'channel'
p25120
(lp25121
S'char'
p25122
a(lp25123
I-1
aaNtp25124
(S'data'
p25125
(lp25126
S'uInt32'
p25127
ag42
aNtp25128
tp25129
tp25130
sS'DAQmxGetWriteRelativeTo'
p25131
((lp25132
S'int32'
p25133
ag34
a((S'taskHandle'
p25134
(lp25135
S'TaskHandle'
p25136
aNtp25137
(S'data'
p25138
(lp25139
S'int32'
p25140
ag42
aNtp25141
tp25142
tp25143
sS'DAQmxSetAIExcitVoltageOrCurrent'
p25144
((lp25145
S'int32'
p25146
ag34
a((S'taskHandle'
p25147
(lp25148
S'TaskHandle'
p25149
aNtp25150
(S'channel'
p25151
(lp25152
S'char'
p25153
a(lp25154
I-1
aaNtp25155
(S'data'
p25156
(lp25157
S'int32'
p25158
aNtp25159
tp25160
tp25161
sS'DAQmxGetSampQuantSampPerChan'
p25162
((lp25163
S'int32'
p25164
ag34
a((S'taskHandle'
p25165
(lp25166
S'TaskHandle'
p25167
aNtp25168
(S'data'
p25169
(lp25170
S'uInt64'
p25171
ag42
aNtp25172
tp25173
tp25174
sS'DAQmxGetScaleMapScaledMax'
p25175
((lp25176
S'int32'
p25177
ag34
a((S'scaleName'
p25178
(lp25179
S'char'
p25180
a(lp25181
I-1
aaNtp25182
(S'data'
p25183
(lp25184
S'float64'
p25185
ag42
aNtp25186
tp25187
tp25188
sS'DAQmxGetSampClkDigFltrMinPulseWidth'
p25189
((lp25190
S'int32'
p25191
ag34
a((S'taskHandle'
p25192
(lp25193
S'TaskHandle'
p25194
aNtp25195
(S'data'
p25196
(lp25197
S'float64'
p25198
ag42
aNtp25199
tp25200
tp25201
sS'DAQmxSetAIDataXferCustomThreshold'
p25202
((lp25203
S'int32'
p25204
ag34
a((S'taskHandle'
p25205
(lp25206
S'TaskHandle'
p25207
aNtp25208
(S'channel'
p25209
(lp25210
S'char'
p25211
a(lp25212
I-1
aaNtp25213
(S'data'
p25214
(lp25215
S'uInt32'
p25216
aNtp25217
tp25218
tp25219
sS'DAQmxSetAICurrentUnits'
p25220
((lp25221
S'int32'
p25222
ag34
a((S'taskHandle'
p25223
(lp25224
S'TaskHandle'
p25225
aNtp25226
(S'channel'
p25227
(lp25228
S'char'
p25229
a(lp25230
I-1
aaNtp25231
(S'data'
p25232
(lp25233
S'int32'
p25234
aNtp25235
tp25236
tp25237
sS'DAQmxGetAOGain'
p25238
((lp25239
S'int32'
p25240
ag34
a((S'taskHandle'
p25241
(lp25242
S'TaskHandle'
p25243
aNtp25244
(S'channel'
p25245
(lp25246
S'char'
p25247
a(lp25248
I-1
aaNtp25249
(S'data'
p25250
(lp25251
S'float64'
p25252
ag42
aNtp25253
tp25254
tp25255
sS'DAQmxResetExportedHshkEventInterlockedAssertedLvl'
p25256
((lp25257
S'int32'
p25258
ag34
a((S'taskHandle'
p25259
(lp25260
S'TaskHandle'
p25261
aNtp25262
tp25263
tp25264
sS'DAQmxGetExportedStartTrigOutputTerm'
p25265
((lp25266
S'int32'
p25267
ag34
a((S'taskHandle'
p25268
(lp25269
S'TaskHandle'
p25270
aNtp25271
(S'data'
p25272
(lp25273
S'char'
p25274
ag42
aNtp25275
(S'bufferSize'
p25276
(lp25277
S'uInt32'
p25278
aNtp25279
tp25280
tp25281
sS'DAQmxGetCIAngEncoderInitialAngle'
p25282
((lp25283
S'int32'
p25284
ag34
a((S'taskHandle'
p25285
(lp25286
S'TaskHandle'
p25287
aNtp25288
(S'channel'
p25289
(lp25290
S'char'
p25291
a(lp25292
I-1
aaNtp25293
(S'data'
p25294
(lp25295
S'float64'
p25296
ag42
aNtp25297
tp25298
tp25299
sS'DAQmxClearTEDS'
p25300
((lp25301
S'int32'
p25302
ag34
a((S'physicalChannel'
p25303
(lp25304
S'char'
p25305
a(lp25306
I-1
aaNtp25307
tp25308
tp25309
sS'DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth'
p25310
((lp25311
S'int32'
p25312
ag34
a((S'taskHandle'
p25313
(lp25314
S'TaskHandle'
p25315
aNtp25316
(S'channel'
p25317
(lp25318
S'char'
p25319
a(lp25320
I-1
aaNtp25321
tp25322
tp25323
sS'DAQmxGetExportedAdvTrigPulseWidth'
p25324
((lp25325
S'int32'
p25326
ag34
a((S'taskHandle'
p25327
(lp25328
S'TaskHandle'
p25329
aNtp25330
(S'data'
p25331
(lp25332
S'float64'
p25333
ag42
aNtp25334
tp25335
tp25336
sS'DAQmxCfgAnlgWindowStartTrig'
p25337
((lp25338
S'int32'
p25339
ag34
a((S'taskHandle'
p25340
(lp25341
S'TaskHandle'
p25342
aNtp25343
(S'triggerSource'
p25344
(lp25345
S'char'
p25346
a(lp25347
I-1
aaNtp25348
(S'triggerWhen'
p25349
(lp25350
S'int32'
p25351
aNtp25352
(S'windowTop'
p25353
(lp25354
S'float64'
p25355
aNtp25356
(S'windowBottom'
p25357
(lp25358
S'float64'
p25359
aNtp25360
tp25361
tp25362
sS'DAQmxGetCOPulseLowTime'
p25363
((lp25364
S'int32'
p25365
ag34
a((S'taskHandle'
p25366
(lp25367
S'TaskHandle'
p25368
aNtp25369
(S'channel'
p25370
(lp25371
S'char'
p25372
a(lp25373
I-1
aaNtp25374
(S'data'
p25375
(lp25376
S'float64'
p25377
ag42
aNtp25378
tp25379
tp25380
sS'DAQmxSetAILVDTUnits'
p25381
((lp25382
S'int32'
p25383
ag34
a((S'taskHandle'
p25384
(lp25385
S'TaskHandle'
p25386
aNtp25387
(S'channel'
p25388
(lp25389
S'char'
p25390
a(lp25391
I-1
aaNtp25392
(S'data'
p25393
(lp25394
S'int32'
p25395
aNtp25396
tp25397
tp25398
sS'DAQmxSetExportedChangeDetectEventOutputTerm'
p25399
((lp25400
S'int32'
p25401
ag34
a((S'taskHandle'
p25402
(lp25403
S'TaskHandle'
p25404
aNtp25405
(S'data'
p25406
(lp25407
S'char'
p25408
ag42
aNtp25409
tp25410
tp25411
sS'DAQmxCfgDigPatternStartTrig'
p25412
((lp25413
S'int32'
p25414
ag34
a((S'taskHandle'
p25415
(lp25416
S'TaskHandle'
p25417
aNtp25418
(S'triggerSource'
p25419
(lp25420
S'char'
p25421
a(lp25422
I-1
aaNtp25423
(S'triggerPattern'
p25424
(lp25425
S'char'
p25426
a(lp25427
I-1
aaNtp25428
(S'triggerWhen'
p25429
(lp25430
S'int32'
p25431
aNtp25432
tp25433
tp25434
sS'DAQmxSetCIEncoderAInputDigFltrTimebaseSrc'
p25435
((lp25436
S'int32'
p25437
ag34
a((S'taskHandle'
p25438
(lp25439
S'TaskHandle'
p25440
aNtp25441
(S'channel'
p25442
(lp25443
S'char'
p25444
a(lp25445
I-1
aaNtp25446
(S'data'
p25447
(lp25448
S'char'
p25449
ag42
aNtp25450
tp25451
tp25452
sS'DAQmxAdjust4224Cal'
p25453
((lp25454
S'int32'
p25455
ag34
a((S'calHandle'
p25456
(lp25457
S'uInt32'
p25458
aNtp25459
(S'channelNames'
p25460
(lp25461
S'char'
p25462
a(lp25463
I-1
aaNtp25464
(S'gain'
p25465
(lp25466
S'float64'
p25467
aNtp25468
(S'inputVal'
p25469
(lp25470
S'float64'
p25471
aNtp25472
tp25473
tp25474
sS'DAQmxDisconnectTerms'
p25475
((lp25476
S'int32'
p25477
ag34
a((S'sourceTerminal'
p25478
(lp25479
S'char'
p25480
a(lp25481
I-1
aaNtp25482
(S'destinationTerminal'
p25483
(lp25484
S'char'
p25485
a(lp25486
I-1
aaNtp25487
tp25488
tp25489
sS'DAQmxResetExportedHshkEventPulsePolarity'
p25490
((lp25491
S'int32'
p25492
ag34
a((S'taskHandle'
p25493
(lp25494
S'TaskHandle'
p25495
aNtp25496
tp25497
tp25498
sS'DAQmxResetAIFreqHyst'
p25499
((lp25500
S'int32'
p25501
ag34
a((S'taskHandle'
p25502
(lp25503
S'TaskHandle'
p25504
aNtp25505
(S'channel'
p25506
(lp25507
S'char'
p25508
a(lp25509
I-1
aaNtp25510
tp25511
tp25512
sS'DAQmxGetWatchdogHasExpired'
p25513
((lp25514
S'int32'
p25515
ag34
a((S'taskHandle'
p25516
(lp25517
S'TaskHandle'
p25518
aNtp25519
(S'data'
p25520
(lp25521
S'bool32'
p25522
ag42
aNtp25523
tp25524
tp25525
sS'DAQmxResetAILowpassEnable'
p25526
((lp25527
S'int32'
p25528
ag34
a((S'taskHandle'
p25529
(lp25530
S'TaskHandle'
p25531
aNtp25532
(S'channel'
p25533
(lp25534
S'char'
p25535
a(lp25536
I-1
aaNtp25537
tp25538
tp25539
sS'DAQmxGetDITristate'
p25540
((lp25541
S'int32'
p25542
ag34
a((S'taskHandle'
p25543
(lp25544
S'TaskHandle'
p25545
aNtp25546
(S'channel'
p25547
(lp25548
S'char'
p25549
a(lp25550
I-1
aaNtp25551
(S'data'
p25552
(lp25553
S'bool32'
p25554
ag42
aNtp25555
tp25556
tp25557
sS'DAQmxGetCISemiPeriodTerm'
p25558
((lp25559
S'int32'
p25560
ag34
a((S'taskHandle'
p25561
(lp25562
S'TaskHandle'
p25563
aNtp25564
(S'channel'
p25565
(lp25566
S'char'
p25567
a(lp25568
I-1
aaNtp25569
(S'data'
p25570
(lp25571
S'char'
p25572
ag42
aNtp25573
(S'bufferSize'
p25574
(lp25575
S'uInt32'
p25576
aNtp25577
tp25578
tp25579
sS'DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth'
p25580
((lp25581
S'int32'
p25582
ag34
a((S'taskHandle'
p25583
(lp25584
S'TaskHandle'
p25585
aNtp25586
(S'channel'
p25587
(lp25588
S'char'
p25589
a(lp25590
I-1
aaNtp25591
(S'data'
p25592
(lp25593
S'float64'
p25594
ag42
aNtp25595
tp25596
tp25597
sS'DAQmxSetScalePolyForwardCoeff'
p25598
((lp25599
S'int32'
p25600
ag34
a((S'scaleName'
p25601
(lp25602
S'char'
p25603
a(lp25604
I-1
aaNtp25605
(S'data'
p25606
(lp25607
S'float64'
p25608
ag42
aNtp25609
(S'arraySizeInSamples'
p25610
(lp25611
S'uInt32'
p25612
aNtp25613
tp25614
tp25615
sS'DAQmxGetAILVDTUnits'
p25616
((lp25617
S'int32'
p25618
ag34
a((S'taskHandle'
p25619
(lp25620
S'TaskHandle'
p25621
aNtp25622
(S'channel'
p25623
(lp25624
S'char'
p25625
a(lp25626
I-1
aaNtp25627
(S'data'
p25628
(lp25629
S'int32'
p25630
ag42
aNtp25631
tp25632
tp25633
sS'DAQmxSetDigPatternStartTrigSrc'
p25634
((lp25635
S'int32'
p25636
ag34
a((S'taskHandle'
p25637
(lp25638
S'TaskHandle'
p25639
aNtp25640
(S'data'
p25641
(lp25642
S'char'
p25643
ag42
aNtp25644
tp25645
tp25646
sS'DAQmxSetAIResistanceCfg'
p25647
((lp25648
S'int32'
p25649
ag34
a((S'taskHandle'
p25650
(lp25651
S'TaskHandle'
p25652
aNtp25653
(S'channel'
p25654
(lp25655
S'char'
p25656
a(lp25657
I-1
aaNtp25658
(S'data'
p25659
(lp25660
S'int32'
p25661
aNtp25662
tp25663
tp25664
sS'DAQmxSetup1125Cal'
p25665
((lp25666
S'int32'
p25667
ag34
a((S'calHandle'
p25668
(lp25669
S'uInt32'
p25670
aNtp25671
(S'channelNames'
p25672
(lp25673
S'char'
p25674
a(lp25675
I-1
aaNtp25676
(S'gain'
p25677
(lp25678
S'float64'
p25679
aNtp25680
tp25681
tp25682
sS'DAQmxSetCOAutoIncrCnt'
p25683
((lp25684
S'int32'
p25685
ag34
a((S'taskHandle'
p25686
(lp25687
S'TaskHandle'
p25688
aNtp25689
(S'channel'
p25690
(lp25691
S'char'
p25692
a(lp25693
I-1
aaNtp25694
(S'data'
p25695
(lp25696
S'uInt32'
p25697
aNtp25698
tp25699
tp25700
sS'DAQmxResetDigPatternRefTrigPattern'
p25701
((lp25702
S'int32'
p25703
ag34
a((S'taskHandle'
p25704
(lp25705
S'TaskHandle'
p25706
aNtp25707
tp25708
tp25709
sS'DAQmxSwitchFindPath'
p25710
((lp25711
S'int32'
p25712
ag34
a((S'switchChannel1'
p25713
(lp25714
S'char'
p25715
a(lp25716
I-1
aaNtp25717
(S'switchChannel2'
p25718
(lp25719
S'char'
p25720
a(lp25721
I-1
aaNtp25722
(S'path'
p25723
(lp25724
S'char'
p25725
a(lp25726
I-1
aaNtp25727
(S'pathBufferSize'
p25728
(lp25729
S'uInt32'
p25730
aNtp25731
(S'pathStatus'
p25732
(lp25733
S'int32'
p25734
ag42
aNtp25735
tp25736
tp25737
sS'DAQmxSetBufOutputOnbrdBufSize'
p25738
((lp25739
S'int32'
p25740
ag34
a((S'taskHandle'
p25741
(lp25742
S'TaskHandle'
p25743
aNtp25744
(S'data'
p25745
(lp25746
S'uInt32'
p25747
aNtp25748
tp25749
tp25750
sS'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p25751
((lp25752
S'int32'
p25753
ag34
a((S'taskHandle'
p25754
(lp25755
S'TaskHandle'
p25756
aNtp25757
(S'channel'
p25758
(lp25759
S'char'
p25760
a(lp25761
I-1
aaNtp25762
(S'data'
p25763
(lp25764
S'char'
p25765
ag42
aNtp25766
tp25767
tp25768
sS'DAQmxGetCIEncoderZInputDigFltrTimebaseRate'
p25769
((lp25770
S'int32'
p25771
ag34
a((S'taskHandle'
p25772
(lp25773
S'TaskHandle'
p25774
aNtp25775
(S'channel'
p25776
(lp25777
S'char'
p25778
a(lp25779
I-1
aaNtp25780
(S'data'
p25781
(lp25782
S'float64'
p25783
ag42
aNtp25784
tp25785
tp25786
sS'DAQmxResetDigLvlPauseTrigDigSyncEnable'
p25787
((lp25788
S'int32'
p25789
ag34
a((S'taskHandle'
p25790
(lp25791
S'TaskHandle'
p25792
aNtp25793
tp25794
tp25795
sS'DAQmxGetCIEncoderBInputDigSyncEnable'
p25796
((lp25797
S'int32'
p25798
ag34
a((S'taskHandle'
p25799
(lp25800
S'TaskHandle'
p25801
aNtp25802
(S'channel'
p25803
(lp25804
S'char'
p25805
a(lp25806
I-1
aaNtp25807
(S'data'
p25808
(lp25809
S'bool32'
p25810
ag42
aNtp25811
tp25812
tp25813
sS'DAQmxSetAICurrentShuntLoc'
p25814
((lp25815
S'int32'
p25816
ag34
a((S'taskHandle'
p25817
(lp25818
S'TaskHandle'
p25819
aNtp25820
(S'channel'
p25821
(lp25822
S'char'
p25823
a(lp25824
I-1
aaNtp25825
(S'data'
p25826
(lp25827
S'int32'
p25828
aNtp25829
tp25830
tp25831
sS'DAQmxSetCIEncoderBInputTerm'
p25832
((lp25833
S'int32'
p25834
ag34
a((S'taskHandle'
p25835
(lp25836
S'TaskHandle'
p25837
aNtp25838
(S'channel'
p25839
(lp25840
S'char'
p25841
a(lp25842
I-1
aaNtp25843
(S'data'
p25844
(lp25845
S'char'
p25846
ag42
aNtp25847
tp25848
tp25849
sS'DAQmxRegisterEveryNSamplesEvent'
p25850
((lp25851
S'int32'
p25852
ag34
a((S'task'
p25853
(lp25854
S'TaskHandle'
p25855
aNtp25856
(S'everyNsamplesEventType'
p25857
(lp25858
S'int32'
p25859
aNtp25860
(S'nSamples'
p25861
(lp25862
S'uInt32'
p25863
aNtp25864
(S'options'
p25865
(lp25866
S'uInt32'
p25867
aNtp25868
(S'callbackFunction'
p25869
(lp25870
S'DAQmxEveryNSamplesEventCallbackPtr'
p25871
aNtp25872
(S'callbackData'
p25873
(lp25874
S'void'
p25875
ag42
aNtp25876
tp25877
tp25878
sS'DAQmxSetReadOffset'
p25879
((lp25880
S'int32'
p25881
ag34
a((S'taskHandle'
p25882
(lp25883
S'TaskHandle'
p25884
aNtp25885
(S'data'
p25886
(lp25887
S'int32'
p25888
aNtp25889
tp25890
tp25891
sS'DAQmxResetCIEncoderZInputDigFltrMinPulseWidth'
p25892
((lp25893
S'int32'
p25894
ag34
a((S'taskHandle'
p25895
(lp25896
S'TaskHandle'
p25897
aNtp25898
(S'channel'
p25899
(lp25900
S'char'
p25901
a(lp25902
I-1
aaNtp25903
tp25904
tp25905
sS'DAQmxResetReadWaitMode'
p25906
((lp25907
S'int32'
p25908
ag34
a((S'taskHandle'
p25909
(lp25910
S'TaskHandle'
p25911
aNtp25912
tp25913
tp25914
sS'DAQmxGetCIPeriodTerm'
p25915
((lp25916
S'int32'
p25917
ag34
a((S'taskHandle'
p25918
(lp25919
S'TaskHandle'
p25920
aNtp25921
(S'channel'
p25922
(lp25923
S'char'
p25924
a(lp25925
I-1
aaNtp25926
(S'data'
p25927
(lp25928
S'char'
p25929
ag42
aNtp25930
(S'bufferSize'
p25931
(lp25932
S'uInt32'
p25933
aNtp25934
tp25935
tp25936
sS'DAQmxResetDIDataXferMech'
p25937
((lp25938
S'int32'
p25939
ag34
a((S'taskHandle'
p25940
(lp25941
S'TaskHandle'
p25942
aNtp25943
(S'channel'
p25944
(lp25945
S'char'
p25946
a(lp25947
I-1
aaNtp25948
tp25949
tp25950
sS'DAQmxReadBinaryU32'
p25951
((lp25952
S'int32'
p25953
ag34
a((S'taskHandle'
p25954
(lp25955
S'TaskHandle'
p25956
aNtp25957
(S'numSampsPerChan'
p25958
(lp25959
S'int32'
p25960
aNtp25961
(S'timeout'
p25962
(lp25963
S'float64'
p25964
aNtp25965
(S'fillMode'
p25966
(lp25967
S'bool32'
p25968
aNtp25969
(S'readArray'
p25970
(lp25971
S'uInt32'
p25972
a(lp25973
I-1
aaNtp25974
(S'arraySizeInSamps'
p25975
(lp25976
S'uInt32'
p25977
aNtp25978
(S'sampsPerChanRead'
p25979
(lp25980
S'int32'
p25981
ag42
aNtp25982
(S'reserved'
p25983
(lp25984
S'bool32'
p25985
ag42
aNtp25986
tp25987
tp25988
sS'DAQmxCfgDigEdgeRefTrig'
p25989
((lp25990
S'int32'
p25991
ag34
a((S'taskHandle'
p25992
(lp25993
S'TaskHandle'
p25994
aNtp25995
(S'triggerSource'
p25996
(lp25997
S'char'
p25998
a(lp25999
I-1
aaNtp26000
(S'triggerEdge'
p26001
(lp26002
S'int32'
p26003
aNtp26004
(S'pretriggerSamples'
p26005
(lp26006
S'uInt32'
p26007
aNtp26008
tp26009
tp26010
sS'DAQmxResetAnlgWinStartTrigBtm'
p26011
((lp26012
S'int32'
p26013
ag34
a((S'taskHandle'
p26014
(lp26015
S'TaskHandle'
p26016
aNtp26017
tp26018
tp26019
sS'DAQmxGetCOPulseLowTicks'
p26020
((lp26021
S'int32'
p26022
ag34
a((S'taskHandle'
p26023
(lp26024
S'TaskHandle'
p26025
aNtp26026
(S'channel'
p26027
(lp26028
S'char'
p26029
a(lp26030
I-1
aaNtp26031
(S'data'
p26032
(lp26033
S'uInt32'
p26034
ag42
aNtp26035
tp26036
tp26037
sS'DAQmxGetSysNIDAQMajorVersion'
p26038
((lp26039
S'int32'
p26040
ag34
a((S'data'
p26041
(lp26042
S'uInt32'
p26043
ag42
aNtp26044
tp26045
tp26046
sS'DAQmxGetAIChanCalOperatorName'
p26047
((lp26048
S'int32'
p26049
ag34
a((S'taskHandle'
p26050
(lp26051
S'TaskHandle'
p26052
aNtp26053
(S'channel'
p26054
(lp26055
S'char'
p26056
a(lp26057
I-1
aaNtp26058
(S'data'
p26059
(lp26060
S'char'
p26061
ag42
aNtp26062
(S'bufferSize'
p26063
(lp26064
S'uInt32'
p26065
aNtp26066
tp26067
tp26068
sS'DAQmxGetExportedHshkEventOutputBehavior'
p26069
((lp26070
S'int32'
p26071
ag34
a((S'taskHandle'
p26072
(lp26073
S'TaskHandle'
p26074
aNtp26075
(S'data'
p26076
(lp26077
S'int32'
p26078
ag42
aNtp26079
tp26080
tp26081
sS'DAQmxGetAIChanCalApplyCalIfExp'
p26082
((lp26083
S'int32'
p26084
ag34
a((S'taskHandle'
p26085
(lp26086
S'TaskHandle'
p26087
aNtp26088
(S'channel'
p26089
(lp26090
S'char'
p26091
a(lp26092
I-1
aaNtp26093
(S'data'
p26094
(lp26095
S'bool32'
p26096
ag42
aNtp26097
tp26098
tp26099
sS'DAQmxResetSampClkDigFltrMinPulseWidth'
p26100
((lp26101
S'int32'
p26102
ag34
a((S'taskHandle'
p26103
(lp26104
S'TaskHandle'
p26105
aNtp26106
tp26107
tp26108
sS'DAQmxSetCOCtrTimebaseSrc'
p26109
((lp26110
S'int32'
p26111
ag34
a((S'taskHandle'
p26112
(lp26113
S'TaskHandle'
p26114
aNtp26115
(S'channel'
p26116
(lp26117
S'char'
p26118
a(lp26119
I-1
aaNtp26120
(S'data'
p26121
(lp26122
S'char'
p26123
ag42
aNtp26124
tp26125
tp26126
sS'DAQmxGetPersistedScaleAuthor'
p26127
((lp26128
S'int32'
p26129
ag34
a((S'scaleName'
p26130
(lp26131
S'char'
p26132
a(lp26133
I-1
aaNtp26134
(S'data'
p26135
(lp26136
S'char'
p26137
ag42
aNtp26138
(S'bufferSize'
p26139
(lp26140
S'uInt32'
p26141
aNtp26142
tp26143
tp26144
sS'DAQmxGetCITwoEdgeSepFirstTerm'
p26145
((lp26146
S'int32'
p26147
ag34
a((S'taskHandle'
p26148
(lp26149
S'TaskHandle'
p26150
aNtp26151
(S'channel'
p26152
(lp26153
S'char'
p26154
a(lp26155
I-1
aaNtp26156
(S'data'
p26157
(lp26158
S'char'
p26159
ag42
aNtp26160
(S'bufferSize'
p26161
(lp26162
S'uInt32'
p26163
aNtp26164
tp26165
tp26166
sS'DAQmxSetDigPatternStartTrigWhen'
p26167
((lp26168
S'int32'
p26169
ag34
a((S'taskHandle'
p26170
(lp26171
S'TaskHandle'
p26172
aNtp26173
(S'data'
p26174
(lp26175
S'int32'
p26176
aNtp26177
tp26178
tp26179
sS'DAQmxGetNthTaskReadChannel'
p26180
((lp26181
S'int32'
p26182
ag34
a((S'taskHandle'
p26183
(lp26184
S'TaskHandle'
p26185
aNtp26186
(S'index'
p26187
(lp26188
S'uInt32'
p26189
aNtp26190
(S'buffer'
p26191
(lp26192
S'char'
p26193
a(lp26194
I-1
aaNtp26195
(S'bufferSize'
p26196
(lp26197
S'int32'
p26198
aNtp26199
tp26200
tp26201
sS'DAQmxGetDevDIPorts'
p26202
((lp26203
S'int32'
p26204
ag34
a((S'device'
p26205
(lp26206
S'char'
p26207
a(lp26208
I-1
aaNtp26209
(S'data'
p26210
(lp26211
S'char'
p26212
ag42
aNtp26213
(S'bufferSize'
p26214
(lp26215
S'uInt32'
p26216
aNtp26217
tp26218
tp26219
sS'DAQmxWaitUntilTaskDone'
p26220
((lp26221
S'int32'
p26222
ag34
a((S'taskHandle'
p26223
(lp26224
S'TaskHandle'
p26225
aNtp26226
(S'timeToWait'
p26227
(lp26228
S'float64'
p26229
aNtp26230
tp26231
tp26232
sS'DAQmxSetAIAtten'
p26233
((lp26234
S'int32'
p26235
ag34
a((S'taskHandle'
p26236
(lp26237
S'TaskHandle'
p26238
aNtp26239
(S'channel'
p26240
(lp26241
S'char'
p26242
a(lp26243
I-1
aaNtp26244
(S'data'
p26245
(lp26246
S'float64'
p26247
aNtp26248
tp26249
tp26250
sS'DAQmxResetAILowpassSwitchCapClkSrc'
p26251
((lp26252
S'int32'
p26253
ag34
a((S'taskHandle'
p26254
(lp26255
S'TaskHandle'
p26256
aNtp26257
(S'channel'
p26258
(lp26259
S'char'
p26260
a(lp26261
I-1
aaNtp26262
tp26263
tp26264
sS'DAQmxSetRefTrigPretrigSamples'
p26265
((lp26266
S'int32'
p26267
ag34
a((S'taskHandle'
p26268
(lp26269
S'TaskHandle'
p26270
aNtp26271
(S'data'
p26272
(lp26273
S'uInt32'
p26274
aNtp26275
tp26276
tp26277
sS'DAQmxResetAICurrentShuntLoc'
p26278
((lp26279
S'int32'
p26280
ag34
a((S'taskHandle'
p26281
(lp26282
S'TaskHandle'
p26283
aNtp26284
(S'channel'
p26285
(lp26286
S'char'
p26287
a(lp26288
I-1
aaNtp26289
tp26290
tp26291
sS'DAQmxGetCICountEdgesDigFltrTimebaseRate'
p26292
((lp26293
S'int32'
p26294
ag34
a((S'taskHandle'
p26295
(lp26296
S'TaskHandle'
p26297
aNtp26298
(S'channel'
p26299
(lp26300
S'char'
p26301
a(lp26302
I-1
aaNtp26303
(S'data'
p26304
(lp26305
S'float64'
p26306
ag42
aNtp26307
tp26308
tp26309
sS'DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc'
p26310
((lp26311
S'int32'
p26312
ag34
a((S'taskHandle'
p26313
(lp26314
S'TaskHandle'
p26315
aNtp26316
(S'channel'
p26317
(lp26318
S'char'
p26319
a(lp26320
I-1
aaNtp26321
(S'data'
p26322
(lp26323
S'char'
p26324
ag42
aNtp26325
(S'bufferSize'
p26326
(lp26327
S'uInt32'
p26328
aNtp26329
tp26330
tp26331
sS'DAQmxIsTaskDone'
p26332
((lp26333
S'int32'
p26334
ag34
a((S'taskHandle'
p26335
(lp26336
S'TaskHandle'
p26337
aNtp26338
(S'isTaskDone'
p26339
(lp26340
S'bool32'
p26341
ag42
aNtp26342
tp26343
tp26344
sS'DAQmxSetCOPulseTimeUnits'
p26345
((lp26346
S'int32'
p26347
ag34
a((S'taskHandle'
p26348
(lp26349
S'TaskHandle'
p26350
aNtp26351
(S'channel'
p26352
(lp26353
S'char'
p26354
a(lp26355
I-1
aaNtp26356
(S'data'
p26357
(lp26358
S'int32'
p26359
aNtp26360
tp26361
tp26362
sS'DAQmxGetAODACRefExtSrc'
p26363
((lp26364
S'int32'
p26365
ag34
a((S'taskHandle'
p26366
(lp26367
S'TaskHandle'
p26368
aNtp26369
(S'channel'
p26370
(lp26371
S'char'
p26372
a(lp26373
I-1
aaNtp26374
(S'data'
p26375
(lp26376
S'char'
p26377
ag42
aNtp26378
(S'bufferSize'
p26379
(lp26380
S'uInt32'
p26381
aNtp26382
tp26383
tp26384
sS'DAQmxSetAIExcitVal'
p26385
((lp26386
S'int32'
p26387
ag34
a((S'taskHandle'
p26388
(lp26389
S'TaskHandle'
p26390
aNtp26391
(S'channel'
p26392
(lp26393
S'char'
p26394
a(lp26395
I-1
aaNtp26396
(S'data'
p26397
(lp26398
S'float64'
p26399
aNtp26400
tp26401
tp26402
sS'DAQmxGetCICountEdgesDirTerm'
p26403
((lp26404
S'int32'
p26405
ag34
a((S'taskHandle'
p26406
(lp26407
S'TaskHandle'
p26408
aNtp26409
(S'channel'
p26410
(lp26411
S'char'
p26412
a(lp26413
I-1
aaNtp26414
(S'data'
p26415
(lp26416
S'char'
p26417
ag42
aNtp26418
(S'bufferSize'
p26419
(lp26420
S'uInt32'
p26421
aNtp26422
tp26423
tp26424
sS'DAQmxSetDOUseOnlyOnBrdMem'
p26425
((lp26426
S'int32'
p26427
ag34
a((S'taskHandle'
p26428
(lp26429
S'TaskHandle'
p26430
aNtp26431
(S'channel'
p26432
(lp26433
S'char'
p26434
a(lp26435
I-1
aaNtp26436
(S'data'
p26437
(lp26438
S'bool32'
p26439
aNtp26440
tp26441
tp26442
sS'DAQmxResetSampQuantSampMode'
p26443
((lp26444
S'int32'
p26445
ag34
a((S'taskHandle'
p26446
(lp26447
S'TaskHandle'
p26448
aNtp26449
tp26450
tp26451
sS'DAQmxSetCIEncoderZInputDigFltrTimebaseRate'
p26452
((lp26453
S'int32'
p26454
ag34
a((S'taskHandle'
p26455
(lp26456
S'TaskHandle'
p26457
aNtp26458
(S'channel'
p26459
(lp26460
S'char'
p26461
a(lp26462
I-1
aaNtp26463
(S'data'
p26464
(lp26465
S'float64'
p26466
aNtp26467
tp26468
tp26469
sS'DAQmxSetCISemiPeriodTerm'
p26470
((lp26471
S'int32'
p26472
ag34
a((S'taskHandle'
p26473
(lp26474
S'TaskHandle'
p26475
aNtp26476
(S'channel'
p26477
(lp26478
S'char'
p26479
a(lp26480
I-1
aaNtp26481
(S'data'
p26482
(lp26483
S'char'
p26484
ag42
aNtp26485
tp26486
tp26487
sS'DAQmxGetCISemiPeriodDigSyncEnable'
p26488
((lp26489
S'int32'
p26490
ag34
a((S'taskHandle'
p26491
(lp26492
S'TaskHandle'
p26493
aNtp26494
(S'channel'
p26495
(lp26496
S'char'
p26497
a(lp26498
I-1
aaNtp26499
(S'data'
p26500
(lp26501
S'bool32'
p26502
ag42
aNtp26503
tp26504
tp26505
sS'DAQmxResetAILowpassSwitchCapExtClkFreq'
p26506
((lp26507
S'int32'
p26508
ag34
a((S'taskHandle'
p26509
(lp26510
S'TaskHandle'
p26511
aNtp26512
(S'channel'
p26513
(lp26514
S'char'
p26515
a(lp26516
I-1
aaNtp26517
tp26518
tp26519
sS'DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate'
p26520
((lp26521
S'int32'
p26522
ag34
a((S'taskHandle'
p26523
(lp26524
S'TaskHandle'
p26525
aNtp26526
(S'data'
p26527
(lp26528
S'float64'
p26529
aNtp26530
tp26531
tp26532
sS'DAQmxGetStartTrigType'
p26533
((lp26534
S'int32'
p26535
ag34
a((S'taskHandle'
p26536
(lp26537
S'TaskHandle'
p26538
aNtp26539
(S'data'
p26540
(lp26541
S'int32'
p26542
ag42
aNtp26543
tp26544
tp26545
sS'DAQmxGetAnlgWinPauseTrigTop'
p26546
((lp26547
S'int32'
p26548
ag34
a((S'taskHandle'
p26549
(lp26550
S'TaskHandle'
p26551
aNtp26552
(S'data'
p26553
(lp26554
S'float64'
p26555
ag42
aNtp26556
tp26557
tp26558
sS'DAQmxGetPauseTrigType'
p26559
((lp26560
S'int32'
p26561
ag34
a((S'taskHandle'
p26562
(lp26563
S'TaskHandle'
p26564
aNtp26565
(S'data'
p26566
(lp26567
S'int32'
p26568
ag42
aNtp26569
tp26570
tp26571
sS'DAQmxSetCOCtrTimebaseMasterTimebaseDiv'
p26572
((lp26573
S'int32'
p26574
ag34
a((S'taskHandle'
p26575
(lp26576
S'TaskHandle'
p26577
aNtp26578
(S'channel'
p26579
(lp26580
S'char'
p26581
a(lp26582
I-1
aaNtp26583
(S'data'
p26584
(lp26585
S'uInt32'
p26586
aNtp26587
tp26588
tp26589
sS'DAQmxResetAnlgLvlPauseTrigWhen'
p26590
((lp26591
S'int32'
p26592
ag34
a((S'taskHandle'
p26593
(lp26594
S'TaskHandle'
p26595
aNtp26596
tp26597
tp26598
sS'DAQmxSetExportedHshkEventOutputBehavior'
p26599
((lp26600
S'int32'
p26601
ag34
a((S'taskHandle'
p26602
(lp26603
S'TaskHandle'
p26604
aNtp26605
(S'data'
p26606
(lp26607
S'int32'
p26608
aNtp26609
tp26610
tp26611
sS'DAQmxGetCOCtrTimebaseDigSyncEnable'
p26612
((lp26613
S'int32'
p26614
ag34
a((S'taskHandle'
p26615
(lp26616
S'TaskHandle'
p26617
aNtp26618
(S'channel'
p26619
(lp26620
S'char'
p26621
a(lp26622
I-1
aaNtp26623
(S'data'
p26624
(lp26625
S'bool32'
p26626
ag42
aNtp26627
tp26628
tp26629
sS'DAQmxGetScalePreScaledUnits'
p26630
((lp26631
S'int32'
p26632
ag34
a((S'scaleName'
p26633
(lp26634
S'char'
p26635
a(lp26636
I-1
aaNtp26637
(S'data'
p26638
(lp26639
S'int32'
p26640
ag42
aNtp26641
tp26642
tp26643
sS'DAQmxResetAILVDTSensitivityUnits'
p26644
((lp26645
S'int32'
p26646
ag34
a((S'taskHandle'
p26647
(lp26648
S'TaskHandle'
p26649
aNtp26650
(S'channel'
p26651
(lp26652
S'char'
p26653
a(lp26654
I-1
aaNtp26655
tp26656
tp26657
sS'DAQmxResetCICtrTimebaseRate'
p26658
((lp26659
S'int32'
p26660
ag34
a((S'taskHandle'
p26661
(lp26662
S'TaskHandle'
p26663
aNtp26664
(S'channel'
p26665
(lp26666
S'char'
p26667
a(lp26668
I-1
aaNtp26669
tp26670
tp26671
sS'DAQmxGetWriteAttribute'
p26672
((lp26673
S'int32'
p26674
ag2565
a((S'taskHandle'
p26675
(lp26676
S'TaskHandle'
p26677
aNtp26678
(S'attribute'
p26679
(lp26680
S'int32'
p26681
aNtp26682
(S'value'
p26683
(lp26684
S'void'
p26685
ag42
aNtp26686
tp26687
tp26688
sS'DAQmxResetCIEncoderBInputDigFltrTimebaseSrc'
p26689
((lp26690
S'int32'
p26691
ag34
a((S'taskHandle'
p26692
(lp26693
S'TaskHandle'
p26694
aNtp26695
(S'channel'
p26696
(lp26697
S'char'
p26698
a(lp26699
I-1
aaNtp26700
tp26701
tp26702
sS'DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p26703
((lp26704
S'int32'
p26705
ag34
a((S'taskHandle'
p26706
(lp26707
S'TaskHandle'
p26708
aNtp26709
(S'channel'
p26710
(lp26711
S'char'
p26712
a(lp26713
I-1
aaNtp26714
tp26715
tp26716
sS'DAQmxResetCIAngEncoderUnits'
p26717
((lp26718
S'int32'
p26719
ag34
a((S'taskHandle'
p26720
(lp26721
S'TaskHandle'
p26722
aNtp26723
(S'channel'
p26724
(lp26725
S'char'
p26726
a(lp26727
I-1
aaNtp26728
tp26729
tp26730
sS'DAQmxResetAOEnhancedImageRejectionEnable'
p26731
((lp26732
S'int32'
p26733
ag34
a((S'taskHandle'
p26734
(lp26735
S'TaskHandle'
p26736
aNtp26737
(S'channel'
p26738
(lp26739
S'char'
p26740
a(lp26741
I-1
aaNtp26742
tp26743
tp26744
sS'DAQmxGetSyncPulseSyncTime'
p26745
((lp26746
S'int32'
p26747
ag34
a((S'taskHandle'
p26748
(lp26749
S'TaskHandle'
p26750
aNtp26751
(S'data'
p26752
(lp26753
S'float64'
p26754
ag42
aNtp26755
tp26756
tp26757
sS'DAQmxDeleteSavedScale'
p26758
((lp26759
S'int32'
p26760
ag34
a((S'scaleName'
p26761
(lp26762
S'char'
p26763
a(lp26764
I-1
aaNtp26765
tp26766
tp26767
sS'DAQmxGetPersistedScaleAllowInteractiveEditing'
p26768
((lp26769
S'int32'
p26770
ag34
a((S'scaleName'
p26771
(lp26772
S'char'
p26773
a(lp26774
I-1
aaNtp26775
(S'data'
p26776
(lp26777
S'bool32'
p26778
ag42
aNtp26779
tp26780
tp26781
sS'DAQmxGetCOPrescaler'
p26782
((lp26783
S'int32'
p26784
ag34
a((S'taskHandle'
p26785
(lp26786
S'TaskHandle'
p26787
aNtp26788
(S'channel'
p26789
(lp26790
S'char'
p26791
a(lp26792
I-1
aaNtp26793
(S'data'
p26794
(lp26795
S'uInt32'
p26796
ag42
aNtp26797
tp26798
tp26799
sS'DAQmxGetAIRTDR0'
p26800
((lp26801
S'int32'
p26802
ag34
a((S'taskHandle'
p26803
(lp26804
S'TaskHandle'
p26805
aNtp26806
(S'channel'
p26807
(lp26808
S'char'
p26809
a(lp26810
I-1
aaNtp26811
(S'data'
p26812
(lp26813
S'float64'
p26814
ag42
aNtp26815
tp26816
tp26817
sS'DAQmxGetAIResistanceUnits'
p26818
((lp26819
S'int32'
p26820
ag34
a((S'taskHandle'
p26821
(lp26822
S'TaskHandle'
p26823
aNtp26824
(S'channel'
p26825
(lp26826
S'char'
p26827
a(lp26828
I-1
aaNtp26829
(S'data'
p26830
(lp26831
S'int32'
p26832
ag42
aNtp26833
tp26834
tp26835
sS'DAQmxSetCOCtrTimebaseActiveEdge'
p26836
((lp26837
S'int32'
p26838
ag34
a((S'taskHandle'
p26839
(lp26840
S'TaskHandle'
p26841
aNtp26842
(S'channel'
p26843
(lp26844
S'char'
p26845
a(lp26846
I-1
aaNtp26847
(S'data'
p26848
(lp26849
S'int32'
p26850
aNtp26851
tp26852
tp26853
sS'DAQmxGetCIFreqDigFltrMinPulseWidth'
p26854
((lp26855
S'int32'
p26856
ag34
a((S'taskHandle'
p26857
(lp26858
S'TaskHandle'
p26859
aNtp26860
(S'channel'
p26861
(lp26862
S'char'
p26863
a(lp26864
I-1
aaNtp26865
(S'data'
p26866
(lp26867
S'float64'
p26868
ag42
aNtp26869
tp26870
tp26871
sS'DAQmxResetCIGPSSyncSrc'
p26872
((lp26873
S'int32'
p26874
ag34
a((S'taskHandle'
p26875
(lp26876
S'TaskHandle'
p26877
aNtp26878
(S'channel'
p26879
(lp26880
S'char'
p26881
a(lp26882
I-1
aaNtp26883
tp26884
tp26885
sS'DAQmxResetExportedHshkEventInterlockedDeassertDelay'
p26886
((lp26887
S'int32'
p26888
ag34
a((S'taskHandle'
p26889
(lp26890
S'TaskHandle'
p26891
aNtp26892
tp26893
tp26894
sS'DAQmxSetAIConvActiveEdge'
p26895
((lp26896
S'int32'
p26897
ag34
a((S'taskHandle'
p26898
(lp26899
S'TaskHandle'
p26900
aNtp26901
(S'data'
p26902
(lp26903
S'int32'
p26904
aNtp26905
tp26906
tp26907
sS'DAQmxGetCIFreqMeasTime'
p26908
((lp26909
S'int32'
p26910
ag34
a((S'taskHandle'
p26911
(lp26912
S'TaskHandle'
p26913
aNtp26914
(S'channel'
p26915
(lp26916
S'char'
p26917
a(lp26918
I-1
aaNtp26919
(S'data'
p26920
(lp26921
S'float64'
p26922
ag42
aNtp26923
tp26924
tp26925
sS'DAQmxGetAIDataXferReqCond'
p26926
((lp26927
S'int32'
p26928
ag34
a((S'taskHandle'
p26929
(lp26930
S'TaskHandle'
p26931
aNtp26932
(S'channel'
p26933
(lp26934
S'char'
p26935
a(lp26936
I-1
aaNtp26937
(S'data'
p26938
(lp26939
S'int32'
p26940
ag42
aNtp26941
tp26942
tp26943
sS'DAQmxGetCISemiPeriodStartingEdge'
p26944
((lp26945
S'int32'
p26946
ag34
a((S'taskHandle'
p26947
(lp26948
S'TaskHandle'
p26949
aNtp26950
(S'channel'
p26951
(lp26952
S'char'
p26953
a(lp26954
I-1
aaNtp26955
(S'data'
p26956
(lp26957
S'int32'
p26958
ag42
aNtp26959
tp26960
tp26961
sS'DAQmxGetAIBridgeShuntCalGainAdjust'
p26962
((lp26963
S'int32'
p26964
ag34
a((S'taskHandle'
p26965
(lp26966
S'TaskHandle'
p26967
aNtp26968
(S'channel'
p26969
(lp26970
S'char'
p26971
a(lp26972
I-1
aaNtp26973
(S'data'
p26974
(lp26975
S'float64'
p26976
ag42
aNtp26977
tp26978
tp26979
sS'DAQmxWriteBinaryI16'
p26980
((lp26981
S'int32'
p26982
ag34
a((S'taskHandle'
p26983
(lp26984
S'TaskHandle'
p26985
aNtp26986
(S'numSampsPerChan'
p26987
(lp26988
S'int32'
p26989
aNtp26990
(S'autoStart'
p26991
(lp26992
S'bool32'
p26993
aNtp26994
(S'timeout'
p26995
(lp26996
S'float64'
p26997
aNtp26998
(S'dataLayout'
p26999
(lp27000
S'bool32'
p27001
aNtp27002
(S'writeArray'
p27003
(lp27004
S'int16'
p27005
a(lp27006
I-1
aaNtp27007
(S'sampsPerChanWritten'
p27008
(lp27009
S'int32'
p27010
ag42
aNtp27011
(S'reserved'
p27012
(lp27013
S'bool32'
p27014
ag42
aNtp27015
tp27016
tp27017
sS'DAQmxSetCICountEdgesCountDirDigSyncEnable'
p27018
((lp27019
S'int32'
p27020
ag34
a((S'taskHandle'
p27021
(lp27022
S'TaskHandle'
p27023
aNtp27024
(S'channel'
p27025
(lp27026
S'char'
p27027
a(lp27028
I-1
aaNtp27029
(S'data'
p27030
(lp27031
S'bool32'
p27032
aNtp27033
tp27034
tp27035
sS'DAQmxGetWriteNumChans'
p27036
((lp27037
S'int32'
p27038
ag34
a((S'taskHandle'
p27039
(lp27040
S'TaskHandle'
p27041
aNtp27042
(S'data'
p27043
(lp27044
S'uInt32'
p27045
ag42
aNtp27046
tp27047
tp27048
sS'DAQmxSetSampClkDigFltrEnable'
p27049
((lp27050
S'int32'
p27051
ag34
a((S'taskHandle'
p27052
(lp27053
S'TaskHandle'
p27054
aNtp27055
(S'data'
p27056
(lp27057
S'bool32'
p27058
aNtp27059
tp27060
tp27061
sS'DAQmxSetCICountEdgesDigFltrMinPulseWidth'
p27062
((lp27063
S'int32'
p27064
ag34
a((S'taskHandle'
p27065
(lp27066
S'TaskHandle'
p27067
aNtp27068
(S'channel'
p27069
(lp27070
S'char'
p27071
a(lp27072
I-1
aaNtp27073
(S'data'
p27074
(lp27075
S'float64'
p27076
aNtp27077
tp27078
tp27079
sS'DAQmxGetAnlgWinStartTrigWhen'
p27080
((lp27081
S'int32'
p27082
ag34
a((S'taskHandle'
p27083
(lp27084
S'TaskHandle'
p27085
aNtp27086
(S'data'
p27087
(lp27088
S'int32'
p27089
ag42
aNtp27090
tp27091
tp27092
sS'DAQmxCreateAIStrainGageChan'
p27093
((lp27094
S'int32'
p27095
ag34
a((S'taskHandle'
p27096
(lp27097
S'TaskHandle'
p27098
aNtp27099
(S'physicalChannel'
p27100
(lp27101
S'char'
p27102
a(lp27103
I-1
aaNtp27104
(S'nameToAssignToChannel'
p27105
(lp27106
S'char'
p27107
a(lp27108
I-1
aaNtp27109
(S'minVal'
p27110
(lp27111
S'float64'
p27112
aNtp27113
(S'maxVal'
p27114
(lp27115
S'float64'
p27116
aNtp27117
(S'units'
p27118
(lp27119
S'int32'
p27120
aNtp27121
(S'strainConfig'
p27122
(lp27123
S'int32'
p27124
aNtp27125
(S'voltageExcitSource'
p27126
(lp27127
S'int32'
p27128
aNtp27129
(S'voltageExcitVal'
p27130
(lp27131
S'float64'
p27132
aNtp27133
(S'gageFactor'
p27134
(lp27135
S'float64'
p27136
aNtp27137
(S'initialBridgeVoltage'
p27138
(lp27139
S'float64'
p27140
aNtp27141
(S'nominalGageResistance'
p27142
(lp27143
S'float64'
p27144
aNtp27145
(S'poissonRatio'
p27146
(lp27147
S'float64'
p27148
aNtp27149
(S'leadWireResistance'
p27150
(lp27151
S'float64'
p27152
aNtp27153
(S'customScaleName'
p27154
(lp27155
S'char'
p27156
a(lp27157
I-1
aaNtp27158
tp27159
tp27160
sS'DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth'
p27161
((lp27162
S'int32'
p27163
ag34
a((S'taskHandle'
p27164
(lp27165
S'TaskHandle'
p27166
aNtp27167
(S'data'
p27168
(lp27169
S'float64'
p27170
ag42
aNtp27171
tp27172
tp27173
sS'DAQmxResetSampClkTimebaseSrc'
p27174
((lp27175
S'int32'
p27176
ag34
a((S'taskHandle'
p27177
(lp27178
S'TaskHandle'
p27179
aNtp27180
tp27181
tp27182
sS'DAQmxResetCICtrTimebaseDigFltrEnable'
p27183
((lp27184
S'int32'
p27185
ag34
a((S'taskHandle'
p27186
(lp27187
S'TaskHandle'
p27188
aNtp27189
(S'channel'
p27190
(lp27191
S'char'
p27192
a(lp27193
I-1
aaNtp27194
tp27195
tp27196
sS'DAQmxGetSysNIDAQMinorVersion'
p27197
((lp27198
S'int32'
p27199
ag34
a((S'data'
p27200
(lp27201
S'uInt32'
p27202
ag42
aNtp27203
tp27204
tp27205
sS'DAQmxAOSeriesCalAdjust'
p27206
((lp27207
S'int32'
p27208
ag34
a((S'calHandle'
p27209
(lp27210
S'uInt32'
p27211
aNtp27212
(S'referenceVoltage'
p27213
(lp27214
S'float64'
p27215
aNtp27216
tp27217
tp27218
sS'DAQmxSetAOEnhancedImageRejectionEnable'
p27219
((lp27220
S'int32'
p27221
ag34
a((S'taskHandle'
p27222
(lp27223
S'TaskHandle'
p27224
aNtp27225
(S'channel'
p27226
(lp27227
S'char'
p27228
a(lp27229
I-1
aaNtp27230
(S'data'
p27231
(lp27232
S'bool32'
p27233
aNtp27234
tp27235
tp27236
sS'DAQmxSetCIAngEncoderUnits'
p27237
((lp27238
S'int32'
p27239
ag34
a((S'taskHandle'
p27240
(lp27241
S'TaskHandle'
p27242
aNtp27243
(S'channel'
p27244
(lp27245
S'char'
p27246
a(lp27247
I-1
aaNtp27248
(S'data'
p27249
(lp27250
S'int32'
p27251
aNtp27252
tp27253
tp27254
sS'DAQmxGetReadNumChans'
p27255
((lp27256
S'int32'
p27257
ag34
a((S'taskHandle'
p27258
(lp27259
S'TaskHandle'
p27260
aNtp27261
(S'data'
p27262
(lp27263
S'uInt32'
p27264
ag42
aNtp27265
tp27266
tp27267
sS'DAQmxGetCITwoEdgeSepFirstDigFltrEnable'
p27268
((lp27269
S'int32'
p27270
ag34
a((S'taskHandle'
p27271
(lp27272
S'TaskHandle'
p27273
aNtp27274
(S'channel'
p27275
(lp27276
S'char'
p27277
a(lp27278
I-1
aaNtp27279
(S'data'
p27280
(lp27281
S'bool32'
p27282
ag42
aNtp27283
tp27284
tp27285
sS'DAQmxResetAODACRefExtSrc'
p27286
((lp27287
S'int32'
p27288
ag34
a((S'taskHandle'
p27289
(lp27290
S'TaskHandle'
p27291
aNtp27292
(S'channel'
p27293
(lp27294
S'char'
p27295
a(lp27296
I-1
aaNtp27297
tp27298
tp27299
sS'DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth'
p27300
((lp27301
S'int32'
p27302
ag34
a((S'taskHandle'
p27303
(lp27304
S'TaskHandle'
p27305
aNtp27306
(S'channel'
p27307
(lp27308
S'char'
p27309
a(lp27310
I-1
aaNtp27311
(S'data'
p27312
(lp27313
S'float64'
p27314
aNtp27315
tp27316
tp27317
sS'DAQmxSetCIEncoderZIndexEnable'
p27318
((lp27319
S'int32'
p27320
ag34
a((S'taskHandle'
p27321
(lp27322
S'TaskHandle'
p27323
aNtp27324
(S'channel'
p27325
(lp27326
S'char'
p27327
a(lp27328
I-1
aaNtp27329
(S'data'
p27330
(lp27331
S'bool32'
p27332
aNtp27333
tp27334
tp27335
sS'DAQmxSetCOPulseTimeInitialDelay'
p27336
((lp27337
S'int32'
p27338
ag34
a((S'taskHandle'
p27339
(lp27340
S'TaskHandle'
p27341
aNtp27342
(S'channel'
p27343
(lp27344
S'char'
p27345
a(lp27346
I-1
aaNtp27347
(S'data'
p27348
(lp27349
S'float64'
p27350
aNtp27351
tp27352
tp27353
sS'DAQmxSetCIFreqDigFltrTimebaseRate'
p27354
((lp27355
S'int32'
p27356
ag34
a((S'taskHandle'
p27357
(lp27358
S'TaskHandle'
p27359
aNtp27360
(S'channel'
p27361
(lp27362
S'char'
p27363
a(lp27364
I-1
aaNtp27365
(S'data'
p27366
(lp27367
S'float64'
p27368
aNtp27369
tp27370
tp27371
sS'DAQmxSetAIMicrophoneSensitivity'
p27372
((lp27373
S'int32'
p27374
ag34
a((S'taskHandle'
p27375
(lp27376
S'TaskHandle'
p27377
aNtp27378
(S'channel'
p27379
(lp27380
S'char'
p27381
a(lp27382
I-1
aaNtp27383
(S'data'
p27384
(lp27385
S'float64'
p27386
aNtp27387
tp27388
tp27389
sS'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p27390
((lp27391
S'int32'
p27392
ag34
a((S'taskHandle'
p27393
(lp27394
S'TaskHandle'
p27395
aNtp27396
(S'channel'
p27397
(lp27398
S'char'
p27399
a(lp27400
I-1
aaNtp27401
tp27402
tp27403
sS'DAQmxSetCOPulseDutyCyc'
p27404
((lp27405
S'int32'
p27406
ag34
a((S'taskHandle'
p27407
(lp27408
S'TaskHandle'
p27409
aNtp27410
(S'channel'
p27411
(lp27412
S'char'
p27413
a(lp27414
I-1
aaNtp27415
(S'data'
p27416
(lp27417
S'float64'
p27418
aNtp27419
tp27420
tp27421
sS'DAQmxResetAILowpassCutoffFreq'
p27422
((lp27423
S'int32'
p27424
ag34
a((S'taskHandle'
p27425
(lp27426
S'TaskHandle'
p27427
aNtp27428
(S'channel'
p27429
(lp27430
S'char'
p27431
a(lp27432
I-1
aaNtp27433
tp27434
tp27435
sS'DAQmxResetRefTrigType'
p27436
((lp27437
S'int32'
p27438
ag34
a((S'taskHandle'
p27439
(lp27440
S'TaskHandle'
p27441
aNtp27442
tp27443
tp27444
sS'DAQmxGetCIFreqTerm'
p27445
((lp27446
S'int32'
p27447
ag34
a((S'taskHandle'
p27448
(lp27449
S'TaskHandle'
p27450
aNtp27451
(S'channel'
p27452
(lp27453
S'char'
p27454
a(lp27455
I-1
aaNtp27456
(S'data'
p27457
(lp27458
S'char'
p27459
ag42
aNtp27460
(S'bufferSize'
p27461
(lp27462
S'uInt32'
p27463
aNtp27464
tp27465
tp27466
sS'DAQmxResetCIFreqDigFltrTimebaseSrc'
p27467
((lp27468
S'int32'
p27469
ag34
a((S'taskHandle'
p27470
(lp27471
S'TaskHandle'
p27472
aNtp27473
(S'channel'
p27474
(lp27475
S'char'
p27476
a(lp27477
I-1
aaNtp27478
tp27479
tp27480
sS'DAQmxResetCOPrescaler'
p27481
((lp27482
S'int32'
p27483
ag34
a((S'taskHandle'
p27484
(lp27485
S'TaskHandle'
p27486
aNtp27487
(S'channel'
p27488
(lp27489
S'char'
p27490
a(lp27491
I-1
aaNtp27492
tp27493
tp27494
sS'DAQmxResetCOPulseTerm'
p27495
((lp27496
S'int32'
p27497
ag34
a((S'taskHandle'
p27498
(lp27499
S'TaskHandle'
p27500
aNtp27501
(S'channel'
p27502
(lp27503
S'char'
p27504
a(lp27505
I-1
aaNtp27506
tp27507
tp27508
sS'DAQmxGetScaleDescr'
p27509
((lp27510
S'int32'
p27511
ag34
a((S'scaleName'
p27512
(lp27513
S'char'
p27514
a(lp27515
I-1
aaNtp27516
(S'data'
p27517
(lp27518
S'char'
p27519
ag42
aNtp27520
(S'bufferSize'
p27521
(lp27522
S'uInt32'
p27523
aNtp27524
tp27525
tp27526
sS'DAQmxGetAnlgWinStartTrigCoupling'
p27527
((lp27528
S'int32'
p27529
ag34
a((S'taskHandle'
p27530
(lp27531
S'TaskHandle'
p27532
aNtp27533
(S'data'
p27534
(lp27535
S'int32'
p27536
ag42
aNtp27537
tp27538
tp27539
sS'DAQmxGetAnlgLvlPauseTrigLvl'
p27540
((lp27541
S'int32'
p27542
ag34
a((S'taskHandle'
p27543
(lp27544
S'TaskHandle'
p27545
aNtp27546
(S'data'
p27547
(lp27548
S'float64'
p27549
ag42
aNtp27550
tp27551
tp27552
sS'DAQmxResetCISemiPeriodStartingEdge'
p27553
((lp27554
S'int32'
p27555
ag34
a((S'taskHandle'
p27556
(lp27557
S'TaskHandle'
p27558
aNtp27559
(S'channel'
p27560
(lp27561
S'char'
p27562
a(lp27563
I-1
aaNtp27564
tp27565
tp27566
sS'DAQmxGetSysTasks'
p27567
((lp27568
S'int32'
p27569
ag34
a((S'data'
p27570
(lp27571
S'char'
p27572
ag42
aNtp27573
(S'bufferSize'
p27574
(lp27575
S'uInt32'
p27576
aNtp27577
tp27578
tp27579
sS'DAQmxSetCISemiPeriodDigFltrEnable'
p27580
((lp27581
S'int32'
p27582
ag34
a((S'taskHandle'
p27583
(lp27584
S'TaskHandle'
p27585
aNtp27586
(S'channel'
p27587
(lp27588
S'char'
p27589
a(lp27590
I-1
aaNtp27591
(S'data'
p27592
(lp27593
S'bool32'
p27594
aNtp27595
tp27596
tp27597
sS'DAQmxSetAnlgEdgeStartTrigSrc'
p27598
((lp27599
S'int32'
p27600
ag34
a((S'taskHandle'
p27601
(lp27602
S'TaskHandle'
p27603
aNtp27604
(S'data'
p27605
(lp27606
S'char'
p27607
ag42
aNtp27608
tp27609
tp27610
sS'DAQmxResetBufInputBufSize'
p27611
((lp27612
S'int32'
p27613
ag34
a((S'taskHandle'
p27614
(lp27615
S'TaskHandle'
p27616
aNtp27617
tp27618
tp27619
sS'DAQmxSetCICountEdgesDigFltrTimebaseSrc'
p27620
((lp27621
S'int32'
p27622
ag34
a((S'taskHandle'
p27623
(lp27624
S'TaskHandle'
p27625
aNtp27626
(S'channel'
p27627
(lp27628
S'char'
p27629
a(lp27630
I-1
aaNtp27631
(S'data'
p27632
(lp27633
S'char'
p27634
ag42
aNtp27635
tp27636
tp27637
sS'DAQmxResetReadOverWrite'
p27638
((lp27639
S'int32'
p27640
ag34
a((S'taskHandle'
p27641
(lp27642
S'TaskHandle'
p27643
aNtp27644
tp27645
tp27646
sS'DAQmxGetTaskComplete'
p27647
((lp27648
S'int32'
p27649
ag34
a((S'taskHandle'
p27650
(lp27651
S'TaskHandle'
p27652
aNtp27653
(S'data'
p27654
(lp27655
S'bool32'
p27656
ag42
aNtp27657
tp27658
tp27659
sS'DAQmxGetSysGlobalChans'
p27660
((lp27661
S'int32'
p27662
ag34
a((S'data'
p27663
(lp27664
S'char'
p27665
ag42
aNtp27666
(S'bufferSize'
p27667
(lp27668
S'uInt32'
p27669
aNtp27670
tp27671
tp27672
sS'DAQmxResetCICustomScaleName'
p27673
((lp27674
S'int32'
p27675
ag34
a((S'taskHandle'
p27676
(lp27677
S'TaskHandle'
p27678
aNtp27679
(S'channel'
p27680
(lp27681
S'char'
p27682
a(lp27683
I-1
aaNtp27684
tp27685
tp27686
sS'DAQmxReadDigitalU32'
p27687
((lp27688
S'int32'
p27689
ag34
a((S'taskHandle'
p27690
(lp27691
S'TaskHandle'
p27692
aNtp27693
(S'numSampsPerChan'
p27694
(lp27695
S'int32'
p27696
aNtp27697
(S'timeout'
p27698
(lp27699
S'float64'
p27700
aNtp27701
(S'fillMode'
p27702
(lp27703
S'bool32'
p27704
aNtp27705
(S'readArray'
p27706
(lp27707
S'uInt32'
p27708
a(lp27709
I-1
aaNtp27710
(S'arraySizeInSamps'
p27711
(lp27712
S'uInt32'
p27713
aNtp27714
(S'sampsPerChanRead'
p27715
(lp27716
S'int32'
p27717
ag42
aNtp27718
(S'reserved'
p27719
(lp27720
S'bool32'
p27721
ag42
aNtp27722
tp27723
tp27724
sS'DAQmxGetPhysicalChanTEDSVersionLetter'
p27725
((lp27726
S'int32'
p27727
ag34
a((S'physicalChannel'
p27728
(lp27729
S'char'
p27730
a(lp27731
I-1
aaNtp27732
(S'data'
p27733
(lp27734
S'char'
p27735
ag42
aNtp27736
(S'bufferSize'
p27737
(lp27738
S'uInt32'
p27739
aNtp27740
tp27741
tp27742
sS'DAQmxGetCIPeriodDigFltrMinPulseWidth'
p27743
((lp27744
S'int32'
p27745
ag34
a((S'taskHandle'
p27746
(lp27747
S'TaskHandle'
p27748
aNtp27749
(S'channel'
p27750
(lp27751
S'char'
p27752
a(lp27753
I-1
aaNtp27754
(S'data'
p27755
(lp27756
S'float64'
p27757
ag42
aNtp27758
tp27759
tp27760
sS'DAQmxGetDODataXferReqCond'
p27761
((lp27762
S'int32'
p27763
ag34
a((S'taskHandle'
p27764
(lp27765
S'TaskHandle'
p27766
aNtp27767
(S'channel'
p27768
(lp27769
S'char'
p27770
a(lp27771
I-1
aaNtp27772
(S'data'
p27773
(lp27774
S'int32'
p27775
ag42
aNtp27776
tp27777
tp27778
sS'DAQmxResetDIDataXferReqCond'
p27779
((lp27780
S'int32'
p27781
ag34
a((S'taskHandle'
p27782
(lp27783
S'TaskHandle'
p27784
aNtp27785
(S'channel'
p27786
(lp27787
S'char'
p27788
a(lp27789
I-1
aaNtp27790
tp27791
tp27792
sS'DAQmxReadCounterScalarF64'
p27793
((lp27794
S'int32'
p27795
ag34
a((S'taskHandle'
p27796
(lp27797
S'TaskHandle'
p27798
aNtp27799
(S'timeout'
p27800
(lp27801
S'float64'
p27802
aNtp27803
(S'value'
p27804
(lp27805
S'float64'
p27806
ag42
aNtp27807
(S'reserved'
p27808
(lp27809
S'bool32'
p27810
ag42
aNtp27811
tp27812
tp27813
sS'DAQmxGetAIDataXferCustomThreshold'
p27814
((lp27815
S'int32'
p27816
ag34
a((S'taskHandle'
p27817
(lp27818
S'TaskHandle'
p27819
aNtp27820
(S'channel'
p27821
(lp27822
S'char'
p27823
a(lp27824
I-1
aaNtp27825
(S'data'
p27826
(lp27827
S'uInt32'
p27828
ag42
aNtp27829
tp27830
tp27831
sS'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate'
p27832
((lp27833
S'int32'
p27834
ag34
a((S'taskHandle'
p27835
(lp27836
S'TaskHandle'
p27837
aNtp27838
(S'channel'
p27839
(lp27840
S'char'
p27841
a(lp27842
I-1
aaNtp27843
tp27844
tp27845
sS'DAQmxSetAIMemMapEnable'
p27846
((lp27847
S'int32'
p27848
ag34
a((S'taskHandle'
p27849
(lp27850
S'TaskHandle'
p27851
aNtp27852
(S'channel'
p27853
(lp27854
S'char'
p27855
a(lp27856
I-1
aaNtp27857
(S'data'
p27858
(lp27859
S'bool32'
p27860
aNtp27861
tp27862
tp27863
sS'DAQmxResetCOCtrTimebaseMasterTimebaseDiv'
p27864
((lp27865
S'int32'
p27866
ag34
a((S'taskHandle'
p27867
(lp27868
S'TaskHandle'
p27869
aNtp27870
(S'channel'
p27871
(lp27872
S'char'
p27873
a(lp27874
I-1
aaNtp27875
tp27876
tp27877
sS'DAQmxGetCOPulseIdleState'
p27878
((lp27879
S'int32'
p27880
ag34
a((S'taskHandle'
p27881
(lp27882
S'TaskHandle'
p27883
aNtp27884
(S'channel'
p27885
(lp27886
S'char'
p27887
a(lp27888
I-1
aaNtp27889
(S'data'
p27890
(lp27891
S'int32'
p27892
ag42
aNtp27893
tp27894
tp27895
sS'DAQmxResetCOPulseIdleState'
p27896
((lp27897
S'int32'
p27898
ag34
a((S'taskHandle'
p27899
(lp27900
S'TaskHandle'
p27901
aNtp27902
(S'channel'
p27903
(lp27904
S'char'
p27905
a(lp27906
I-1
aaNtp27907
tp27908
tp27909
sS'DAQmxResetDigPatternStartTrigPattern'
p27910
((lp27911
S'int32'
p27912
ag34
a((S'taskHandle'
p27913
(lp27914
S'TaskHandle'
p27915
aNtp27916
tp27917
tp27918
sS'DAQmxGetAIFreqUnits'
p27919
((lp27920
S'int32'
p27921
ag34
a((S'taskHandle'
p27922
(lp27923
S'TaskHandle'
p27924
aNtp27925
(S'channel'
p27926
(lp27927
S'char'
p27928
a(lp27929
I-1
aaNtp27930
(S'data'
p27931
(lp27932
S'int32'
p27933
ag42
aNtp27934
tp27935
tp27936
sS'DAQmxGetPhysicalChanTEDSSerialNum'
p27937
((lp27938
S'int32'
p27939
ag34
a((S'physicalChannel'
p27940
(lp27941
S'char'
p27942
a(lp27943
I-1
aaNtp27944
(S'data'
p27945
(lp27946
S'uInt32'
p27947
ag42
aNtp27948
tp27949
tp27950
sS'DAQmxGetDigLvlPauseTrigSrc'
p27951
((lp27952
S'int32'
p27953
ag34
a((S'taskHandle'
p27954
(lp27955
S'TaskHandle'
p27956
aNtp27957
(S'data'
p27958
(lp27959
S'char'
p27960
ag42
aNtp27961
(S'bufferSize'
p27962
(lp27963
S'uInt32'
p27964
aNtp27965
tp27966
tp27967
sS'DAQmxSetDigLvlPauseTrigDigFltrEnable'
p27968
((lp27969
S'int32'
p27970
ag34
a((S'taskHandle'
p27971
(lp27972
S'TaskHandle'
p27973
aNtp27974
(S'data'
p27975
(lp27976
S'bool32'
p27977
aNtp27978
tp27979
tp27980
sS'DAQmxGetExtCalLastDateAndTime'
p27981
((lp27982
S'int32'
p27983
ag34
a((S'deviceName'
p27984
(lp27985
S'char'
p27986
a(lp27987
I-1
aaNtp27988
(S'year'
p27989
(lp27990
S'uInt32'
p27991
ag42
aNtp27992
(S'month'
p27993
(lp27994
S'uInt32'
p27995
ag42
aNtp27996
(S'day'
p27997
(lp27998
S'uInt32'
p27999
ag42
aNtp28000
(S'hour'
p28001
(lp28002
S'uInt32'
p28003
ag42
aNtp28004
(S'minute'
p28005
(lp28006
S'uInt32'
p28007
ag42
aNtp28008
tp28009
tp28010
sS'DAQmxGetAODevScalingCoeff'
p28011
((lp28012
S'int32'
p28013
ag34
a((S'taskHandle'
p28014
(lp28015
S'TaskHandle'
p28016
aNtp28017
(S'channel'
p28018
(lp28019
S'char'
p28020
a(lp28021
I-1
aaNtp28022
(S'data'
p28023
(lp28024
S'float64'
p28025
ag42
aNtp28026
(S'arraySizeInSamples'
p28027
(lp28028
S'uInt32'
p28029
aNtp28030
tp28031
tp28032
sS'DAQmxSetAIStrainGagePoissonRatio'
p28033
((lp28034
S'int32'
p28035
ag34
a((S'taskHandle'
p28036
(lp28037
S'TaskHandle'
p28038
aNtp28039
(S'channel'
p28040
(lp28041
S'char'
p28042
a(lp28043
I-1
aaNtp28044
(S'data'
p28045
(lp28046
S'float64'
p28047
aNtp28048
tp28049
tp28050
sS'DAQmxGetCIPeriodDiv'
p28051
((lp28052
S'int32'
p28053
ag34
a((S'taskHandle'
p28054
(lp28055
S'TaskHandle'
p28056
aNtp28057
(S'channel'
p28058
(lp28059
S'char'
p28060
a(lp28061
I-1
aaNtp28062
(S'data'
p28063
(lp28064
S'uInt32'
p28065
ag42
aNtp28066
tp28067
tp28068
sS'DAQmxGetAnlgWinStartTrigTop'
p28069
((lp28070
S'int32'
p28071
ag34
a((S'taskHandle'
p28072
(lp28073
S'TaskHandle'
p28074
aNtp28075
(S'data'
p28076
(lp28077
S'float64'
p28078
ag42
aNtp28079
tp28080
tp28081
sS'DAQmxGetAOOutputImpedance'
p28082
((lp28083
S'int32'
p28084
ag34
a((S'taskHandle'
p28085
(lp28086
S'TaskHandle'
p28087
aNtp28088
(S'channel'
p28089
(lp28090
S'char'
p28091
a(lp28092
I-1
aaNtp28093
(S'data'
p28094
(lp28095
S'float64'
p28096
ag42
aNtp28097
tp28098
tp28099
ssg10
(dp28100
sg12
(dp28101
sg14
(dp28102
S'DAQmx_Dev_DI_Ports'
p28103
S'0x2321'
p28104
sS'DAQmxErrorChannelNotReservedForRouting'
p28105
S'(-200186)'
p28106
sS'DAQmx_AI_RTD_B'
p28107
S'0x1011'
p28108
sS'DAQmx_AI_RTD_C'
p28109
S'0x1013'
p28110
sS'DAQmx_AI_RTD_A'
p28111
S'0x1010'
p28112
sS'DAQmxErrorCantSetWatchdogExpirationOnDigInChan'
p28113
S'(-200651)'
p28114
sS'DAQmx_AIConv_MaxRate'
p28115
S'0x22C9'
p28116
sS'DAQmxErrorSampToWritePerChanNotMultipleOfIncr'
p28117
S'(-200584)'
p28118
sS'DAQmx_SwitchDev_NumRows'
p28119
S'0x18E9'
p28120
sS'DAQmxWarningPALTransferOverread'
p28121
S'(50411)'
p28122
sS'DAQmxErrorWriteNotCompleteBeforeSampClk'
p28123
S'(-209801)'
p28124
sS'DAQmxErrorSpecifiedAttrNotValid'
p28125
S'(-200233)'
p28126
sS'DAQmx_Val_Switch_Topology_2575_2_Wire_95x1_Mux'
p28127
S'"2575/2-Wire 95x1 Mux"'
p28128
sS'DAQmx_AI_TermCfg'
p28129
S'0x1097'
p28130
sS'DAQmxErrorCounterTimebaseRateNotSpecified'
p28131
S'(-200143)'
p28132
sS'DAQmxErrorHWUnexpectedlyPoweredOffAndOn'
p28133
S'(-200194)'
p28134
sS'DAQmx_AI_Excit_Val'
p28135
S'0x17F5'
p28136
sS'DAQmx_Val_FullBridgeIII'
p28137
S'10185'
p28138
sS'DAQmxErrorDigitalWaveformExpected'
p28139
S'(-200094)'
p28140
sS'DAQmx_DigEdge_AdvTrig_Edge'
p28141
S'0x1360'
p28142
sS'DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread'
p28143
S'(-200979)'
p28144
sS'DAQmxErrorInadequateResolutionForTimebaseCal'
p28145
S'(-200721)'
p28146
sS'DAQmxErrorInterpolationRateNotPossible'
p28147
S'(-200270)'
p28148
sS'DAQmxErrorRequestedSignalInversionForRoutingNotPossible'
p28149
S'(-200042)'
p28150
sS'DAQmx_Val_Bits'
p28151
S'10109'
p28152
sS'DAQmxErrorInvalidIdentifierFollowingSeparatorInList'
p28153
S'(-200051)'
p28154
sS'DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate'
p28155
S'0x221C'
p28156
sS'DAQmx_SwitchDev_SettlingTime'
p28157
S'0x1244'
p28158
sS'DAQmxErrorInvalidAsynOpHandle'
p28159
S'(-200616)'
p28160
sS'DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth'
p28161
S'0x221A'
p28162
sS'DAQmx_AO_DataXferReqCond'
p28163
S'0x183C'
p28164
sS'DAQmxErrorTimebaseCalFailedToConverge'
p28165
S'(-200722)'
p28166
sS'DAQmx_SwitchDev_RelayList'
p28167
S'0x17DC'
p28168
sS'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2'
p28169
S'(-200745)'
p28170
sS'DAQmxErrorInvalidGlobalChan'
p28171
S'(-200882)'
p28172
sS'DAQmxErrorSwitchDifferentTopologyWhenScanning'
p28173
S'(-200191)'
p28174
sS'DAQmxErrorPROMOnTEDSContainsBasicTEDSData'
p28175
S'(-200824)'
p28176
sS'DAQmx_Val_LargeRng2Ctr'
p28177
S'10205'
p28178
sS'DAQmxErrorMeasCalAdjustDirectPathOutputImpedance'
p28179
S'(-200507)'
p28180
sS'DAQmxErrorCantAllowConnectDACToGnd'
p28181
S'(-200669)'
p28182
sS'DAQmxErrorPALPhysicalBufferEmpty'
p28183
S'(-50408)'
p28184
sS'DAQmxErrorResourcesInUseForInversionInTask_Routing'
p28185
S'(-89135)'
p28186
sS'DAQmxErrorSampPerChanNotMultOfXferSize'
p28187
S'(-200837)'
p28188
sS'DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType'
p28189
S'(-200915)'
p28190
sS'DAQmxErrorSwitchScanlistTooBig'
p28191
S'(-200201)'
p28192
sS'DAQmxErrorPALTransferTimedOut'
p28193
S'(-50400)'
p28194
sS'DAQmxErrorSensorInvalidCompletionResistance'
p28195
S'(-200163)'
p28196
sS'DAQmxErrorTEDSSensorPhysicalChannelConflict'
p28197
S'(-201053)'
p28198
sS'DAQmxErrorPALBadMode'
p28199
S'(-50006)'
p28200
sS'DAQmxWarningWriteNotCompleteBeforeSampClk'
p28201
S'(209801)'
p28202
sS'DAQmxErrorNoForwardPolyScaleCoeffs'
p28203
S'(-200405)'
p28204
sS'DAQmxErrorPowerupTristateNotSpecdForEntirePort'
p28205
S'(-200653)'
p28206
sS'DAQmxErrorChannelSizeTooBigForPortReadType'
p28207
S'(-200466)'
p28208
sS'DAQmxErrorInvalidAIAttenuation'
p28209
S'(-200412)'
p28210
sS'DAQmxErrorDeviceShutDownDueToHighTemp'
p28211
S'(-200680)'
p28212
sS'DAQmxErrorBufferWithOnDemandSampTiming'
p28213
S'(-200217)'
p28214
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc'
p28215
S'0x2216'
p28216
sS'DAQmxErrorChanSizeTooBigForU32PortRead'
p28217
S'(-200564)'
p28218
sS'DAQmx_AI_ChanCal_Desc'
p28219
S'0x22A4'
p28220
sS'DAQmxErrorCantSetPropertyTaskNotRunningCommitted'
p28221
S'(-200971)'
p28222
sS'DAQmx_CO_Pulse_Freq'
p28223
S'0x1178'
p28224
sS'DAQmxErrorDataNotAvailable'
p28225
S'(-200005)'
p28226
sS'DAQmx_SwitchChan_WireMode'
p28227
S'0x18E5'
p28228
sS'DAQmx_RealTime_WaitForNextSampClkWaitMode'
p28229
S'0x22EF'
p28230
sS'DAQmxWarningPALHardwareFault'
p28231
S'(50152)'
p28232
sS'DAQmx_Val_RightJustified'
p28233
S'10279'
p28234
sS'DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged'
p28235
S'(-200961)'
p28236
sS'DAQmxErrorCOWritePulseHighTimeOutOfRange'
p28237
S'(-200686)'
p28238
sS'DAQmxErrorWaveformNotInMem'
p28239
S'(-200312)'
p28240
sS'DAQmxErrorTaskNotInDataNeighborhood'
p28241
S'(-200485)'
p28242
sS'DAQmxErrorInterconnectBridgeRouteNotPossible'
p28243
S'(-54011)'
p28244
sS'DAQmx_CI_Timestamp_Units'
p28245
S'0x22B3'
p28246
sS'DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone'
p28247
S'(-200581)'
p28248
sS'DAQmx_SwitchChan_Usage'
p28249
S'0x18E4'
p28250
sS'DAQmx_AI_Thrmstr_A'
p28251
S'0x18C9'
p28252
sS'DAQmx_AI_Thrmstr_B'
p28253
S'0x18CB'
p28254
sS'DAQmx_AI_Thrmstr_C'
p28255
S'0x18CA'
p28256
sS'DAQmx_Task_NumChans'
p28257
S'0x2181'
p28258
sS'DAQmxErrorAnalogTrigChanNotFirstInScanList'
p28259
S'(-200131)'
p28260
sS'DAQmx_Exported_HshkEvent_Pulse_Width'
p28261
S'0x22C1'
p28262
sS'DAQmx_Val_QuarterBridge'
p28263
S'10270'
p28264
sS'DAQmxErrorInvalidLineGrouping'
p28265
S'(-200528)'
p28266
sS'DAQmx_SampClk_Src'
p28267
S'0x1852'
p28268
sS'DAQmxErrorSampClkTimebaseDCMLock'
p28269
S'(-200237)'
p28270
sS'DAQmxErrorEveryNSampsEventAlreadyRegistered'
p28271
S'(-200881)'
p28272
sS'DAQmxWarningPALBadPointer'
p28273
S'(50004)'
p28274
sS'DAQmxErrorNegativeReadSampleNumber'
p28275
S'(-200277)'
p28276
sS'DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning'
p28277
S'(-200834)'
p28278
sS'DAQmx_Val_Position_LVDT'
p28279
S'10352'
p28280
sS'DAQmxErrorChanCalTablePreScaledValsNotSpecd'
p28281
S'(-200936)'
p28282
sS'DAQmx_Val_FullBridgeI'
p28283
S'10183'
p28284
sS'DAQmxWarningPALOSUnsupported'
p28285
S'(50200)'
p28286
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate'
p28287
S'0x2212'
p28288
sS'DAQmxWarningPALResourceOwnedBySystem'
p28289
S'(50100)'
p28290
sS'DAQmxErrorScriptNotInMem'
p28291
S'(-200342)'
p28292
sS'DAQmxErrorPALHardwareFault'
p28293
S'(-50152)'
p28294
sS'DAQmxErrorPhysChanMeasType'
p28295
S'(-200431)'
p28296
sS'DAQmxWarningPALValueConflict'
p28297
S'(50000)'
p28298
sS'DAQmxErrorMarkerPositionOutsideSubsetInScript'
p28299
S'(-200034)'
p28300
sS'DAQmx_Val_PulseWidth'
p28301
S'10359'
p28302
sS'DAQmxErrorPLLLock'
p28303
S'(-200245)'
p28304
sS'DAQmx_Val_WaitForHandshakeTriggerAssert'
p28305
S'12550'
p28306
sS'DAQmxErrorSpecdDeviceIsAlreadyOnRTSIBus'
p28307
S'(-201029)'
p28308
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_64x1_Mux'
p28309
S'"2576/2-Wire 64x1 Mux"'
p28310
sS'DAQmxErrorInvalidRefClkSrc'
p28311
S'(-200415)'
p28312
sS'DAQmx_CO_Pulse_Term'
p28313
S'0x18E1'
p28314
sS'DAQmx_DO_DataXferReqCond'
p28315
S'0x2267'
p28316
sS'DAQmx_CI_Freq_DigFltr_TimebaseRate'
p28317
S'0x21EA'
p28318
sS'DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow'
p28319
S'(-200283)'
p28320
sS'DAQmxErrorWaitForNextSampClkNotSupported'
p28321
S'(-200863)'
p28322
sS'DAQmxErrorDeviceInfoFailedPXIChassisNotIdentified'
p28323
S'(-201059)'
p28324
sS'DAQmxErrorNoAnalogTrigHW'
p28325
S'(-200214)'
p28326
sS'DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq'
p28327
S'0x1885'
p28328
sS'DAQmx_AI_Resistance_Units'
p28329
S'0x0955'
p28330
sS'DAQmxErrorWriteOffsetNotMultOfIncr'
p28331
S'(-200630)'
p28332
sS'DAQmx_Val_Seconds'
p28333
S'10364'
p28334
sS'DAQmxErrorClockMasterForExternalClockNotLongestPipeline'
p28335
S'(-201018)'
p28336
sS'DAQmx_PersistedScale_Author'
p28337
S'0x22D4'
p28338
sS'DAQmx_Dev_IsSimulated'
p28339
S'0x22CA'
p28340
sS'DAQmx_Exported_HshkEvent_Delay'
p28341
S'0x22BC'
p28342
sS'DAQmx_AnlgWin_PauseTrig_Coupling'
p28343
S'0x2237'
p28344
sS'DAQmx_AnlgWin_PauseTrig_Btm'
p28345
S'0x1375'
p28346
sS'DAQmx_Val_Switch_Topology_2585_1_Wire_10x1_Mux'
p28347
S'"2585/1-Wire 10x1 Mux"'
p28348
sS'DAQmxErrorPhysChanOutputType'
p28349
S'(-200432)'
p28350
sS'DAQmxWarningSampValCoercedToMin'
p28351
S'(200022)'
p28352
sS'DAQmxErrorNoReversePolyScaleCoeffs'
p28353
S'(-200406)'
p28354
sS'DAQmxErrorPALComponentAlreadyLoaded'
p28355
S'(-50260)'
p28356
sS'DAQmxErrorPhysChanNotInTask'
p28357
S'(-200649)'
p28358
sS'CVICDECL'
p28359
S'__cdecl'
p28360
sS'DAQmxErrorRefClkSrcNotSupported'
p28361
S'(-200903)'
p28362
sS'DAQmxErrorPALComponentInitializationFault'
p28363
S'(-50258)'
p28364
sS'DAQmx_Exported_HshkEvent_OutputBehavior'
p28365
S'0x22BB'
p28366
sS'DAQmx_Val_IRIGB'
p28367
S'10070'
p28368
sS'DAQmx_Val_Position_LinEncoder'
p28369
S'10361'
p28370
sS'DAQmxErrorNoPatternMatcherAvailable'
p28371
S'(-200382)'
p28372
sS'DAQmx_Read_WaitMode'
p28373
S'0x2232'
p28374
sS'DAQmxErrorResourcesInUseForRoute'
p28375
S'(-200369)'
p28376
sS'DAQmx_Val_Switch_Topology_1166_32_SPDT'
p28377
S'"1166/32-SPDT"'
p28378
sS'DAQmxErrorPALTransferInProgress'
p28379
S'(-50403)'
p28380
sS'DAQmx_CI_Max'
p28381
S'0x189C'
p28382
sS'DAQmxErrorExtCalDateTimeNotDAQmx'
p28383
S'(-200543)'
p28384
sS'DAQmxErrorLineNumIncompatibleWithVideoSignalFormat'
p28385
S'(-200424)'
p28386
sS'DAQmx_Exported_RdyForXferEvent_Lvl_ActiveLvl'
p28387
S'0x22B6'
p28388
sS'DAQmxErrorPALDeviceNotFound'
p28389
S'(-50300)'
p28390
sS'DAQmxErrorMStudioMultiplePhysChansNotSupported'
p28391
S'(-200792)'
p28392
sS'DAQmxErrorADCOverrun'
p28393
S'(-200019)'
p28394
sS'DAQmxErrorCounterTimebaseRateNotFound'
p28395
S'(-200142)'
p28396
sS'DAQmxErrorPALLogicalBufferFull'
p28397
S'(-50407)'
p28398
sS'DAQmx_CO_CtrTimebaseRate'
p28399
S'0x18C2'
p28400
sS'DAQmx_Val_MapRanges'
p28401
S'10448'
p28402
sS'DAQmx_Val_Switch_Topology_2593_Dual_8x1_Mux'
p28403
S'"2593/Dual 8x1 Mux"'
p28404
sS'DAQmx_CI_Encoder_AInputTerm'
p28405
S'0x219D'
p28406
sS'TRUE'
p28407
S'(1L)'
p28408
sS'DAQmxErrorExpectedNumberOfChannelsVerificationFailed'
p28409
S'(-200464)'
p28410
sS'DAQmxErrorInvalidSCCSlotNumberSpecd'
p28411
S'(-201079)'
p28412
sS'DAQmxErrorTrigLineNotFound'
p28413
S'(-200224)'
p28414
sS'DAQmx_SwitchDev_AutoConnAnlgBus'
p28415
S'0x17DA'
p28416
sS'DAQmxErrorExternalTimebaseRateNotknownForRate'
p28417
S'(-200132)'
p28418
sS'DAQmx_Val_CO'
p28419
S'10132'
p28420
sS'DAQmxErrorReadChanTypeMismatch'
p28421
S'(-200525)'
p28422
sS'DAQmx_Val_CI'
p28423
S'10131'
p28424
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_4x64_Matrix'
p28425
S'"2532/1-Wire Dual 4x64 Matrix"'
p28426
sS'DAQmx_CO_Pulse_DutyCyc'
p28427
S'0x1176'
p28428
sS'DAQmxErrorPALThreadCouldNotRun'
p28429
S'(-50600)'
p28430
sS'DAQmxErrorAddressAlreadyInUse'
p28431
S'(-201031)'
p28432
sS'DAQmxErrorCannotWriteAfterStartWithOnboardMemory'
p28433
S'(-200295)'
p28434
sS'DAQmx_Val_Radians'
p28435
S'10273'
p28436
sS'DAQmxErrorDrivePhaseShiftDCMBecameUnlocked'
p28437
S'(-200390)'
p28438
sS'DAQmxWarningPALLogicalBufferFull'
p28439
S'(50407)'
p28440
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth'
p28441
S'0x222E'
p28442
sS'DAQmxErrorTEDSSensorDataError'
p28443
S'(-200826)'
p28444
sS'DAQmx_Val_Switch_Topology_2584_1_Wire_15x1_Mux'
p28445
S'"2584/1-Wire 15x1 Mux"'
p28446
sS'DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType'
p28447
S'(-200916)'
p28448
sS'DAQmxErrorFewerThan2ScaledValues'
p28449
S'(-200433)'
p28450
sS'DAQmx_SampQuant_SampMode'
p28451
S'0x1300'
p28452
sS'DAQmxErrorResourcesInUseForExportSignalPolarity'
p28453
S'(-200367)'
p28454
sS'DAQmx_CI_CountEdges_Term'
p28455
S'0x18C7'
p28456
sS'DAQmxErrorProductTypeAndProductNumberConflict'
p28457
S'(-201041)'
p28458
sS'DAQmxErrorAnalogTrigChanNotExternal'
p28459
S'(-200711)'
p28460
sS'DAQmxErrorInvalidAIOffsetCalConst'
p28461
S'(-200717)'
p28462
sS'DAQmxErrorCouldNotReserveRequestedTrigLine'
p28463
S'(-200225)'
p28464
sS'DAQmxErrorTimingSrcDoesNotExist'
p28465
S'(-200738)'
p28466
sS'DAQmx_AI_ChanCal_Verif_AcqVals'
p28467
S'0x22A2'
p28468
sS'DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate'
p28469
S'0x2274'
p28470
sS'DAQmx_Val_Switch_Topology_2595_4x1_Mux'
p28471
S'"2595/4x1 Mux"'
p28472
sS'DAQmx_Val_Switch_Topology_1193_32x1_Mux'
p28473
S'"1193/32x1 Mux"'
p28474
sS'DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist'
p28475
S'(-200640)'
p28476
sS'DAQmxErrorInvalidTriggerLineInList'
p28477
S'(-200048)'
p28478
sS'DAQmx_CI_AngEncoder_Units'
p28479
S'0x18A6'
p28480
sS'DAQmxErrorLocalRemoteDriverVersionMismatch_Routing'
p28481
S'(-88716)'
p28482
sS'DAQmx_Val_ProgrammedIO'
p28483
S'10264'
p28484
sS'DAQmxErrorTableScaleScaledValsNotSpecd'
p28485
S'(-200348)'
p28486
sS'DAQmx_DI_InvertLines'
p28487
S'0x0793'
p28488
sS'DAQmxErrorLinesReservedForSCXIControl'
p28489
S'(-200159)'
p28490
sS'DAQmx_Exported_SampClk_OutputBehavior'
p28491
S'0x186B'
p28492
sS'DAQmx_Scale_Type'
p28493
S'0x1929'
p28494
sS'CVICALLBACK'
p28495
S'__cdecl'
p28496
sS'DAQmxErrorMStudioCppRemoveEventsBeforeStop'
p28497
S'(-200991)'
p28498
sS'DAQmxWarningPALTransferStopped'
p28499
S'(50404)'
p28500
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Octal_8x1_Mux'
p28501
S'"2576/2-Wire Octal 8x1 Mux"'
p28502
sS'DAQmx_CO_OutputType'
p28503
S'0x18B5'
p28504
sS'DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth'
p28505
S'0x2201'
p28506
sS'DAQmxErrorInvalidCalGain'
p28507
S'(-200749)'
p28508
sS'DAQmxErrorScriptHasInvalidIdentifier'
p28509
S'(-200024)'
p28510
sS'DAQmxErrorCfgTEDSNotSupportedOnRT'
p28511
S'(-200808)'
p28512
sS'DAQmxErrorPALDeviceUnknown'
p28513
S'(-50301)'
p28514
sS'DAQmxErrorInternalAIInputSrcInMultipleChanGroups'
p28515
S'(-200571)'
p28516
sS'DAQmxErrorAcqStoppedToPreventInputBufferOverwrite'
p28517
S'(-200222)'
p28518
sS'DAQmxErrorSpecdSlotAlreadyOccupied'
p28519
S'(-201033)'
p28520
sS'DAQmxErrorInvalidVoltageReadingDuringExtCal'
p28521
S'(-200446)'
p28522
sS'DAQmxErrorWaveformWriteOutOfBounds'
p28523
S'(-200311)'
p28524
sS'DAQmx_CI_CountEdges_DigSync_Enable'
p28525
S'0x21FA'
p28526
sS'DAQmxErrorInvalidRoutingDestinationTerminalName_Routing'
p28527
S'(-89121)'
p28528
sS'DAQmxWarningUserDefinedInfoTooLong'
p28529
S'(200025)'
p28530
sS'DAQmxErrorDuplicatedChannel'
p28531
S'(-200003)'
p28532
sS'DAQmxErrorTooManyInstructionsInLoopInScript'
p28533
S'(-201016)'
p28534
sS'DAQmx_Val_Pulse'
p28535
S'10265'
p28536
sS'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc'
p28537
S'0x2202'
p28538
sS'DAQmx_DI_DataXferMech'
p28539
S'0x2263'
p28540
sS'DAQmx_Read_ReadAllAvailSamp'
p28541
S'0x1215'
p28542
sS'DAQmxErrorDAQmxCantUseStringDueToUnknownChar'
p28543
S'(-200811)'
p28544
sS'DAQmxErrorOddTotalNumSampsToWrite'
p28545
S'(-200692)'
p28546
sS'DAQmxErrorSampTbRateSampTbSrcMismatch'
p28547
S'(-200308)'
p28548
sS'DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType'
p28549
S'(-200998)'
p28550
sS'DAQmxErrorInvalidChanName'
p28551
S'(-200461)'
p28552
sS'DAQmx_DO_NumLines'
p28553
S'0x2179'
p28554
sS'DAQmx_Val_TEDS_Sensor'
p28555
S'12531'
p28556
sS'DAQmxErrorCppCantRemoveEventHandlerTwice'
p28557
S'(-200589)'
p28558
sS'DAQmxErrorPALFileSeekFault'
p28559
S'(-50206)'
p28560
sS'DAQmx_Val_ALowBHigh'
p28561
S'10042'
p28562
sS'DAQmx_Task_Name'
p28563
S'0x1276'
p28564
sS'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate'
p28565
S'0x222B'
p28566
sS'DAQmxErrorWriteFailedMultipleCOOutputTypes'
p28567
S'(-200829)'
p28568
sS'DAQmx_CI_Period_MeasTime'
p28569
S'0x192D'
p28570
sS'DAQmx_Exported_HshkEvent_Interlocked_AssertedLvl'
p28571
S'0x22BD'
p28572
sS'DAQmxErrorConnectionInScanlistMustWaitForTrig'
p28573
S'(-200636)'
p28574
sS'DAQmxErrorPALResourceInitialized'
p28575
S'(-50105)'
p28576
sS'DAQmxErrorPALBadToken'
p28577
S'(-50020)'
p28578
sS'DAQmxErrorCannotTristateBusyTerm_Routing'
p28579
S'(-89127)'
p28580
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable'
p28581
S'0x222D'
p28582
sS'DAQmxErrorDevInUnidentifiedPXIChassis'
p28583
S'(-200862)'
p28584
sS'DAQmxErrorDDCClkOutDCMBecameUnlocked'
p28585
S'(-200244)'
p28586
sS'DAQmx_SwitchDev_NumRelays'
p28587
S'0x18E6'
p28588
sS'DAQmxErrorInvalidAttentuationBasedOnMinMax'
p28589
S'(-200321)'
p28590
sS'DAQmxErrorPALThreadStackSizeNotSupported'
p28591
S'(-50603)'
p28592
sS'DAQmxErrorCannotTristateTerm'
p28593
S'(-200253)'
p28594
sS'DAQmxWarningPALResourceReserved'
p28595
S'(50103)'
p28596
sS'DAQmxErrorChanNamesNotSpecdInCfgFile'
p28597
S'(-201083)'
p28598
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable'
p28599
S'0x2214'
p28600
sS'DAQmx_Scale_Map_ScaledMin'
p28601
S'0x1230'
p28602
sS'DAQmxErrorSampClkRateAndDivCombo'
p28603
S'(-200273)'
p28604
sS'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted'
p28605
S'(-200472)'
p28606
sS'DAQmxErrorChanVersionNew'
p28607
S'(-200469)'
p28608
sS'DAQmxWarningPALResourceBusy'
p28609
S'(50106)'
p28610
sS'FALSE'
p28611
S'(0L)'
p28612
sS'DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid'
p28613
S'(-200145)'
p28614
sS'DAQmxErrorInvalidAttributeName'
p28615
S'(-201086)'
p28616
sS'DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask'
p28617
S'(-200948)'
p28618
sS'DAQmx_MasterTimebase_Rate'
p28619
S'0x1495'
p28620
sS'DAQmx_Val_WriteToEEPROM'
p28621
S'12538'
p28622
sS'DAQmx_Val_Pt3851'
p28623
S'10071'
p28624
sS'DAQmxErrorInvalidLocalChanName'
p28625
S'(-201069)'
p28626
sS'DAQmx_AI_ACExcit_Freq'
p28627
S'0x0101'
p28628
sS'DAQmxErrorClkDoublerDCMBecameUnlocked'
p28629
S'(-200242)'
p28630
sS'DAQmxErrorDeviceIsNotAValidSwitch'
p28631
S'(-200069)'
p28632
sS'DAQmxErrorInvalidSectionIdentifier'
p28633
S'(-201078)'
p28634
sS'DAQmx_Read_OverWrite'
p28635
S'0x1211'
p28636
sS'DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop'
p28637
S'(-200740)'
p28638
sS'DAQmxErrorDLLBecameUnlocked'
p28639
S'(-200551)'
p28640
sS'DAQmx_PhysicalChanName'
p28641
S'0x18F5'
p28642
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_16x16_Matrix'
p28643
S'"2532/2-Wire 16x16 Matrix"'
p28644
sS'DAQmxErrorStreamDCMBecameUnlocked'
p28645
S'(-200314)'
p28646
sS'DAQmxErrorDifferentRawDataCompression'
p28647
S'(-200959)'
p28648
sS'DAQmx_Val_StartTrigger'
p28649
S'12491'
p28650
sS'DAQmx_AnlgWin_PauseTrig_Src'
p28651
S'0x1373'
p28652
sS'DAQmx_Val_S_Type_TC'
p28653
S'10085'
p28654
sS'DAQmxErrorMeasCalAdjustDirectPathGain'
p28655
S'(-200505)'
p28656
sS'DAQmxErrorProductOfAOMinAndGainTooSmall'
p28657
S'(-200271)'
p28658
sS'DAQmxErrorChanCalExpirationDateNotSet'
p28659
S'(-200933)'
p28660
sS'DAQmxErrorExternalSampClkAndRefClkThruSameTerm'
p28661
S'(-200276)'
p28662
sS'DAQmxErrorPortConfiguredForStaticDigitalOps'
p28663
S'(-200119)'
p28664
sS'DAQmx_Val_R_Type_TC'
p28665
S'10082'
p28666
sS'DAQmx_Read_OverloadedChansExist'
p28667
S'0x2174'
p28668
sS'DAQmxErrorRepeatLoopNestingTooDeepInScript'
p28669
S'(-200035)'
p28670
sS'DAQmxErrorOutputCantStartChangedRegenerationMode'
p28671
S'(-200568)'
p28672
sS'DAQmxErrorInvalidNumSampsToWrite'
p28673
S'(-200622)'
p28674
sS'DAQmxErrorRecordNotAvailable'
p28675
S'(-200007)'
p28676
sS'_NI_uInt8_DEFINED_'
p28677
S''
p28678
sS'DAQmx_Scale_Map_PreScaledMax'
p28679
S'0x1231'
p28680
sS'DAQmxErrorCantSaveChanWithoutReplace'
p28681
S'(-200483)'
p28682
sS'DAQmxErrorPALBadReadCount'
p28683
S'(-50011)'
p28684
sS'DAQmx_CI_Period_DigFltr_MinPulseWidth'
p28685
S'0x21ED'
p28686
sS'DAQmx_Val_Switch_Topology_1127_Independent'
p28687
S'"1127/Independent"'
p28688
sS'DAQmxErrorInputBoardClkDCMBecameUnlocked'
p28689
S'(-200387)'
p28690
sS'DAQmxErrorHiddenChanMissingInChansPropertyInCfgFile'
p28691
S'(-201084)'
p28692
sS'DAQmx_PersistedScale_AllowInteractiveEditing'
p28693
S'0x22D5'
p28694
sS'DAQmxErrorCannotConnectSrcChans'
p28695
S'(-200188)'
p28696
sS'DAQmx_Val_CurrWritePos'
p28697
S'10430'
p28698
sS'DAQmx_Val_WaitInfinitely'
p28699
S'-1.0'
p28700
sS'DAQmxErrorSelfCalTemperatureNotDAQmx'
p28701
S'(-200542)'
p28702
sS'DAQmxErrorInvalidSectionName'
p28703
S'(-201077)'
p28704
sS'DAQmxErrorChanIndexInvalid'
p28705
S'(-200606)'
p28706
sS'DAQmx_Val_ActiveHigh'
p28707
S'10095'
p28708
sS'DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort'
p28709
S'(-200654)'
p28710
sS'DAQmx_AI_ACExcit_WireMode'
p28711
S'0x18CD'
p28712
sS'DAQmxErrorMeasCalAdjustCalADC'
p28713
S'(-200509)'
p28714
sS'DAQmxErrorStrobePhaseShiftDCMBecameUnlocked'
p28715
S'(-200391)'
p28716
sS'DAQmx_DigLvl_PauseTrig_When'
p28717
S'0x1380'
p28718
sS'DAQmx_CI_Encoder_BInput_DigFltr_Enable'
p28719
S'0x2200'
p28720
sS'DAQmx_Val_AIConvertClock'
p28721
S'12484'
p28722
sS'DAQmx_Read_OverloadedChans'
p28723
S'0x2175'
p28724
sS'DAQmxErrorCollectionDoesNotMatchChanType'
p28725
S'(-200569)'
p28726
sS'DAQmxErrorInvalidRoutingSourceTerminalName_Routing'
p28727
S'(-89120)'
p28728
sS'DAQmx_SyncPulse_SyncTime'
p28729
S'0x223E'
p28730
sS'DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty'
p28731
S'(-200643)'
p28732
sS'DAQmxErrorReferenceVoltageInvalid'
p28733
S'(-200153)'
p28734
sS'DAQmx_ChanIsGlobal'
p28735
S'0x2304'
p28736
sS'DAQmxErrorWriteFailedBecauseWatchdogExpired'
p28737
S'(-200678)'
p28738
sS'DAQmx_Scale_Lin_Slope'
p28739
S'0x1227'
p28740
sS'DAQmx_Val_OverwriteUnreadSamps'
p28741
S'10252'
p28742
sS'DAQmxErrorCalTempNotSupported'
p28743
S'(-200338)'
p28744
sS'DAQmxErrorUnsupportedTrigTypeSendsSWTrig'
p28745
S'(-200373)'
p28746
sS'DAQmxErrorInvalidLoopIterationsInScript'
p28747
S'(-200036)'
p28748
sS'DAQmxErrorSelfCalConstsInvalid'
p28749
S'(-200549)'
p28750
sS'DAQmxWarningTimestampCounterRolledOver'
p28751
S'(200003)'
p28752
sS'DAQmxErrorInversionNotSupportedByHW'
p28753
S'(-200363)'
p28754
sS'DAQmxErrorSCXISerialCommunication'
p28755
S'(-200015)'
p28756
sS'DAQmx_Val_Yield'
p28757
S'12525'
p28758
sS'DAQmxErrorCabledModuleCannotRouteSSH'
p28759
S'(-200320)'
p28760
sS'___nidaqmx_h___'
p28761
g28678
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Quad_32x1_Mux'
p28762
S'"2530/1-Wire Quad 32x1 Mux"'
p28763
sS'DAQmxErrorNoInputOnPortCfgdForWatchdogOutput'
p28764
S'(-200666)'
p28765
sS'DAQmxErrorSampClkTimingTypeWhenTristateIsFalse'
p28766
S'(-200839)'
p28767
sS'DAQmxErrorInvalidSignalTypeExportSignal'
p28768
S'(-200374)'
p28769
sS'DAQmxErrorOneChanReadForMultiChanTask'
p28770
S'(-200523)'
p28771
sS'DAQmxErrorNoAcqStarted'
p28772
S'(-200286)'
p28773
sS'DAQmxErrorDuplicatePropertyInObject'
p28774
S'(-201055)'
p28775
sS'DAQmx_Val_PathStatus_ChannelReservedForRouting'
p28776
S'10436'
p28777
sS'DAQmx_Val_DoNotInvertPolarity'
p28778
S'0'
p28779
sS'DAQmxErrorInvalidSwitchChan'
p28780
S'(-200181)'
p28781
sS'DAQmxErrorSampleValueOutOfRange'
p28782
S'(-200490)'
p28783
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_128x1_Mux'
p28784
S'"2530/1-Wire 128x1 Mux"'
p28785
sS'DAQmx_Val_Ohms'
p28786
S'10384'
p28787
sS'DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty'
p28788
S'(-200642)'
p28789
sS'DAQmxErrorDigFilterIntervalAlreadyCfgd'
p28790
S'(-200645)'
p28791
sS'DAQmx_Val_Switch_Topology_1128_Independent'
p28792
S'"1128/Independent"'
p28793
sS'DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList'
p28794
S'(-200210)'
p28795
sS'DAQmxErrorWriteNoOutputChansInTask'
p28796
S'(-200459)'
p28797
sS'DAQmxErrorUnexpectedIDFollowingSwitchChanName'
p28798
S'(-200532)'
p28799
sS'DAQmxErrorSessionCorruptedByDLLReload'
p28800
S'(-201095)'
p28801
sS'DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq'
p28802
S'(200028)'
p28803
sS'DAQmx_Val_Pulse_Time'
p28804
S'10269'
p28805
sS'DAQmx_Dev_ProductType'
p28806
S'0x0631'
p28807
sS'DAQmxErrorTEDSMultipleCalTemplatesNotSupported'
p28808
S'(-200755)'
p28809
sS'DAQmx_SampClk_DigFltr_TimebaseRate'
p28810
S'0x2221'
p28811
sS'DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg'
p28812
S'(-200771)'
p28813
sS'DAQmx_Val_20MHzTimebase'
p28814
S'12537'
p28815
sS'DAQmx_AI_DataXferMech'
p28816
S'0x1821'
p28817
sS'DAQmxWarningPALPhysicalBufferFull'
p28818
S'(50409)'
p28819
sS'DAQmx_Write_NumChans'
p28820
S'0x217E'
p28821
sS'DAQmx_Val_DC'
p28822
S'10050'
p28823
sS'DAQmx_Val_DI'
p28824
S'10151'
p28825
sS'DAQmx_Val_FromTEDS'
p28826
S'12516'
p28827
sS'DAQmx_AI_Freq_ThreshVoltage'
p28828
S'0x0815'
p28829
sS'DAQmx_AI_InputSrc'
p28830
S'0x2198'
p28831
sS'DAQmx_Val_DO'
p28832
S'10153'
p28833
sS'DAQmxErrorSampRateTooLow'
p28834
S'(-200331)'
p28835
sS'DAQmxErrorPFI0UsedForAnalogAndDigitalSrc'
p28836
S'(-200330)'
p28837
sS'DAQmxErrorBufferedOperationsNotSupportedOnSelectedLines'
p28838
S'(-201062)'
p28839
sS'DAQmx_CI_Encoder_DecodingType'
p28840
S'0x21E6'
p28841
sS'DAQmxErrorInvalidTimeoutVal'
p28842
S'(-200453)'
p28843
sS'DAQmxErrorMeasuredBridgeOffsetTooHigh'
p28844
S'(-200788)'
p28845
sS'DAQmxErrorInvalidNumberInRepeatStatementInList'
p28846
S'(-200049)'
p28847
sS'DAQmxErrorMStudioNoForwardPolyScaleCoeffs'
p28848
S'(-200783)'
p28849
sS'DAQmxErrorValueNotInSet'
p28850
S'(-54022)'
p28851
sS'DAQmx_Val_Switch_Topology_2564_16_SPST'
p28852
S'"2564/16-SPST"'
p28853
sS'DAQmx_RealTime_WriteRecoveryMode'
p28854
S'0x231A'
p28855
sS'DAQmxErrorPALPhysicalBufferFull'
p28856
S'(-50409)'
p28857
sS'DAQmxWarningInvalidCalConstValueForAO'
p28858
S'(200042)'
p28859
sS'DAQmxErrorPropertyNotSupportedNotInputTask'
p28860
S'(-200457)'
p28861
sS'DAQmxWarningInvalidCalConstValueForAI'
p28862
S'(200041)'
p28863
sS'DAQmxErrorPropertyValNotSupportedByHW'
p28864
S'(-200355)'
p28865
sS'DAQmx_AI_Resolution'
p28866
S'0x1765'
p28867
sS'DAQmxErrorInvalidSCCModuleForSlotSpecd'
p28868
S'(-201080)'
p28869
sS'DAQmxErrorInvalidChannelNameInList'
p28870
S'(-200050)'
p28871
sS'DAQmx_Val_InvertPolarity'
p28872
S'1'
p28873
sS'DAQmxErrorDifferentPrptyValsNotSupportedOnDev'
p28874
S'(-200629)'
p28875
sS'DAQmx_CI_Freq_Units'
p28876
S'0x18A1'
p28877
sS'DAQmxErrorInvalidDeviceIDInList'
p28878
S'(-200207)'
p28879
sS'DAQmxErrorIncorrectReadFunction'
p28880
S'(-200100)'
p28881
sS'DAQmxWarningPALBadCount'
p28882
S'(50008)'
p28883
sS'DAQmxErrorPROMOnTEDSAlreadyWritten'
p28884
S'(-200823)'
p28885
sS'DAQmxErrorPALThreadAlreadyDead'
p28886
S'(-50604)'
p28887
sS'DAQmx_AI_RTD_Type'
p28888
S'0x1032'
p28889
sS'DAQmxErrorWfmNameSameAsScriptName'
p28890
S'(-200634)'
p28891
sS'DAQmx_Val_Position_RVDT'
p28892
S'10353'
p28893
sS'DAQmx_Exported_ChangeDetectEvent_OutputTerm'
p28894
S'0x2197'
p28895
sS'DAQmx_Val_AnlgWin'
p28896
S'10103'
p28897
sS'DAQmx_Val_PatternDoesNotMatch'
p28898
S'10253'
p28899
sS'DAQmxErrorInvalidTEDSPhysChanNotAI'
p28900
S'(-200969)'
p28901
sS'DAQmx_Val_HWTimedSinglePoint'
p28902
S'12522'
p28903
sS'DAQmxErrorOperationNotPermittedWhileScanning'
p28904
S'(-200176)'
p28905
sS'DAQmx_Val_AIHoldCmpltEvent'
p28906
S'12493'
p28907
sS'DAQmxErrorAIMinTooLarge'
p28908
S'(-200577)'
p28909
sS'DAQmxErrorSampClkRateMustBeSpecd'
p28910
S'(-201087)'
p28911
sS'DAQmx_DigPattern_StartTrig_When'
p28912
S'0x1411'
p28913
sS'DAQmxErrorRoutingHardwareBusy_Routing'
p28914
S'(-89123)'
p28915
sS'DAQmxWarningSampClkRateTooLow'
p28916
S'(200027)'
p28917
sS'DAQmx_AO_Voltage_Units'
p28918
S'0x1184'
p28919
sS'DAQmx_Val_Switch_Topology_2530_4_Wire_32x1_Mux'
p28920
S'"2530/4-Wire 32x1 Mux"'
p28921
sS'DAQmxErrorLabVIEWEmptyTaskOrChans'
p28922
S'(-200429)'
p28923
sS'DAQmxErrorExportTwoSignalsOnSameTerminal'
p28924
S'(-200607)'
p28925
sS'DAQmx_SampClk_Timebase_Src'
p28926
S'0x1308'
p28927
sS'DAQmx_Val_Switch_Topology_2527_4_Wire_16x1_Mux'
p28928
S'"2527/4-Wire 16x1 Mux"'
p28929
sS'DAQmxErrorCabledModuleNotCapableOfRoutingAI'
p28930
S'(-200151)'
p28931
sS'DAQmx_SampClk_ActiveEdge'
p28932
S'0x1301'
p28933
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot2'
p28934
S'(-200700)'
p28935
sS'DAQmxWarningPropertyVersionNew'
p28936
S'(200024)'
p28937
sS'DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev'
p28938
S'(-200861)'
p28939
sS'DAQmxErrorInvalidAOOffsetCalConst'
p28940
S'(-200719)'
p28941
sS'DAQmx_PhysicalChan_TEDS_SerialNum'
p28942
S'0x21DC'
p28943
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_128x1_Mux'
p28944
S'"1130/2-Wire 128x1 Mux"'
p28945
sS'DAQmx_Buf_Input_OnbrdBufSize'
p28946
S'0x230A'
p28947
sS'DAQmx_Val_External'
p28948
S'10167'
p28949
sS'DAQmx_CI_Period_StartingEdge'
p28950
S'0x0852'
p28951
sS'DAQmxErrorResourcesInUseForRouteInTask_Routing'
p28952
S'(-89138)'
p28953
sS'DAQmxErrorPhysicalChannelNotSpecified'
p28954
S'(-200099)'
p28955
sS'DAQmxErrorWriteDataTypeTooSmall'
p28956
S'(-200790)'
p28957
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Dual_32x1_Mux'
p28958
S'"2576/2-Wire Dual 32x1 Mux"'
p28959
sS'DAQmxErrorAOMinMaxNotInGainRange'
p28960
S'(-200760)'
p28961
sS'DAQmxErrorEmptyStringTermNameNotSupported'
p28962
S'(-200797)'
p28963
sS'DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript'
p28964
S'(-201014)'
p28965
sS'DAQmxErrorWriteWhenTaskNotRunningCOTime'
p28966
S'(-200874)'
p28967
sS'DAQmx_ReadWaitMode'
p28968
S'0x2232'
p28969
sS'DAQmx_Sys_Scales'
p28970
S'0x1266'
p28971
sS'DAQmxErrorPALTransferStopped'
p28972
S'(-50404)'
p28973
sS'DAQmx_AnlgLvl_PauseTrig_When'
p28974
S'0x1371'
p28975
sS'DAQmx_Val_BurstHandshake'
p28976
S'12548'
p28977
sS'_NI_int8_DEFINED_'
p28978
g28678
sS'DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth'
p28979
S'0x21FC'
p28980
sS'DAQmxErrorDSFStopClock'
p28981
S'(-200632)'
p28982
sS'DAQmxErrorDevAbsentOrUnavailable_Routing'
p28983
S'(-89130)'
p28984
sS'DAQmx_Read_NumChans'
p28985
S'0x217B'
p28986
sS'DAQmx_Val_Switch_Topology_1192_8_SPDT'
p28987
S'"1192/8-SPDT"'
p28988
sS'DAQmx_Val_Software'
p28989
S'10292'
p28990
sS'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate'
p28991
S'0x2226'
p28992
sS'DAQmxErrorInvalidEscapeCharacterInString'
p28993
S'(-201068)'
p28994
sS'DAQmxErrorCOWriteFreqOutOfRange'
p28995
S'(-200685)'
p28996
sS'DAQmxErrorWriteToTEDSNotSupportedOnRT'
p28997
S'(-200828)'
p28998
sS'DAQmxErrorAutoStartReadNotAllowedEventRegistered'
p28999
S'(-200984)'
p29000
sS'DAQmx_Val_Linear'
p29001
S'10447'
p29002
sS'DAQmx_CI_Period_Units'
p29003
S'0x18A3'
p29004
sS'DAQmxErrorPALComponentNeverLoaded'
p29005
S'(-50261)'
p29006
sS'DAQmx_Dev_CO_PhysicalChans'
p29007
S'0x2325'
p29008
sS'DAQmx_AI_Lowpass_CutoffFreq'
p29009
S'0x1803'
p29010
sS'DAQmx_Val_CurrReadPos'
p29011
S'10425'
p29012
sS'DAQmx_CI_Period_Term'
p29013
S'0x18A4'
p29014
sS'DAQmx_AO_DevScalingCoeff'
p29015
S'0x1931'
p29016
sS'DAQmxErrorIncapableSCCDigitizingDeviceSpecd'
p29017
S'(-201049)'
p29018
sS'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing'
p29019
S'(-89145)'
p29020
sS'DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc'
p29021
S'0x220C'
p29022
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_Quad_16x1_Mux'
p29023
S'"2530/2-Wire Quad 16x1 Mux"'
p29024
sS'DAQmx_Val_Switch_Topology_1128_1_Wire_64x1_Mux'
p29025
S'"1128/1-Wire 64x1 Mux"'
p29026
sS'DAQmxErrorAIMaxNotSpecified'
p29027
S'(-200695)'
p29028
sS'DAQmxErrorNoSyncPulseAnotherTaskRunning'
p29029
S'(-200761)'
p29030
sS'DAQmx_SwitchChan_MaxDCCarryPwr'
p29031
S'0x0643'
p29032
sS'DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing'
p29033
S'(-89122)'
p29034
sS'DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript'
p29035
S'(-201009)'
p29036
sS'DAQmx_AI_Rng_Low'
p29037
S'0x1816'
p29038
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_16x16_Matrix'
p29039
S'"1129/2-Wire 16x16 Matrix"'
p29040
sS'DAQmx_CI_Count'
p29041
S'0x0148'
p29042
sS'DAQmx_Val_NoBridge'
p29043
S'10228'
p29044
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc'
p29045
S'0x2211'
p29046
sS'DAQmx_Val_Save_Overwrite'
p29047
S'(1<<0)'
p29048
sS'DAQmx_Val_USBbulk'
p29049
S'12590'
p29050
sS'DAQmx_AnlgEdge_StartTrig_Slope'
p29051
S'0x1397'
p29052
sS'DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput'
p29053
S'(-200964)'
p29054
sS'DAQmx_Val_Switch_Topology_1193_Quad_4x1_Terminated_Mux'
p29055
S'"1193/Quad 4x1 Terminated Mux"'
p29056
sS'DAQmxErrorCouldNotReserveLinesForSCXIControl'
p29057
S'(-200158)'
p29058
sS'DAQmx_Exported_CtrOutEvent_OutputTerm'
p29059
S'0x1717'
p29060
sS'DAQmx_Exported_SyncPulseEvent_OutputTerm'
p29061
S'0x223C'
p29062
sS'DAQmxErrorRangeSyntaxNumberTooBig'
p29063
S'(-200605)'
p29064
sS'DAQmx_AI_Excit_VoltageOrCurrent'
p29065
S'0x17F6'
p29066
sS'DAQmx_Val_USB'
p29067
S'12586'
p29068
sS'DAQmx_DigEdge_RefTrig_Src'
p29069
S'0x1434'
p29070
sS'DAQmxErrorCantGetPropertyTaskNotRunning'
p29071
S'(-200973)'
p29072
sS'DAQmxErrorCannotSelfCalDuringExtCal'
p29073
S'(-200522)'
p29074
sS'DAQmxErrorPropertyConflictsWithScale'
p29075
S'(-201061)'
p29076
sS'DAQmxErrorInvalidIdentifierInListFollowingDeviceID'
p29077
S'(-200047)'
p29078
sS'DAQmxErrorPALTransferOverwritten'
p29079
S'(-50410)'
p29080
sS'DAQmx_AO_Max'
p29081
S'0x1186'
p29082
sS'DAQmx_DigLvl_PauseTrig_DigFltr_Enable'
p29083
S'0x2228'
p29084
sS'DAQmxErrorCalibrationFailed'
p29085
S'(-200157)'
p29086
sS'DAQmxErrorInvalidAOChanOrder'
p29087
S'(-200219)'
p29088
sS'DAQmxErrorInvalidCalLowPassCutoffFreq'
p29089
S'(-200857)'
p29090
sS'DAQmxErrorInvalidGainBasedOnMinMax'
p29091
S'(-200258)'
p29092
sS'DAQmxErrorInvalidAIChanOrder'
p29093
S'(-200618)'
p29094
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_4x6_Matrix'
p29095
S'"2501/2-Wire 4x6 Matrix"'
p29096
sS'DAQmx_Val_RisingSlope'
p29097
S'10280'
p29098
sS'DAQmxErrorPALComponentCircularDependency'
p29099
S'(-50259)'
p29100
sS'DAQmxErrorDigFilterIntervalNotEqualForLines'
p29101
S'(-200646)'
p29102
sS'DAQmx_DO_InvertLines'
p29103
S'0x1133'
p29104
sS'DAQmxErrorMultipleActivePhysChansNotSupported'
p29105
S'(-200752)'
p29106
sS'DAQmxErrorInvalidRangeOfObjectsSyntaxInString'
p29107
S'(-200498)'
p29108
sS'DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint'
p29109
S'(200037)'
p29110
sS'DAQmxErrorNoPathToDisconnect'
p29111
S'(-200182)'
p29112
sS'DAQmxErrorEEPROMDataInvalid'
p29113
S'(-200152)'
p29114
sS'DAQmx_Val_Switch_Topology_1191_Quad_4x1_Mux'
p29115
S'"1191/Quad 4x1 Mux"'
p29116
sS'DAQmx_Dev_PXI_SlotNum'
p29117
S'0x232A'
p29118
sS'DAQmx_AO_DAC_Offset_ExtSrc'
p29119
S'0x2254'
p29120
sS'DAQmx_Val_Temp_RTD'
p29121
S'10301'
p29122
sS'DAQmx_AnlgWin_PauseTrig_When'
p29123
S'0x1374'
p29124
sS'DAQmxErrorAIMinTooSmall'
p29125
S'(-200578)'
p29126
sS'DAQmx_AIConv_Timebase_Src'
p29127
S'0x1339'
p29128
sS'DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript'
p29129
S'(-201008)'
p29130
sS'DAQmx_AI_Thrmstr_R1'
p29131
S'0x1061'
p29132
sS'DAQmx_Val_ActiveLow'
p29133
S'10096'
p29134
sS'DAQmx_SampQuant_SampPerChan'
p29135
S'0x1310'
p29136
sS'DAQmx_Val_Task_Abort'
p29137
S'6'
p29138
sS'DAQmx_AI_MeasType'
p29139
S'0x0695'
p29140
sS'DAQmxErrorInvalidExtClockFreqAndDivCombo'
p29141
S'(-200379)'
p29142
sS'DAQmxErrorFREQOUTCannotProduceDesiredFrequency'
p29143
S'(-200148)'
p29144
sS'DAQmxErrorNoRegenWhenUsingBrdMem'
p29145
S'(-200656)'
p29146
sS'DAQmx_Val_Switch_Topology_1130_4_Wire_64x1_Mux'
p29147
S'"1130/4-Wire 64x1 Mux"'
p29148
sS'DAQmxErrorWaitUntilDoneDoesNotIndicateDone'
p29149
S'(-200560)'
p29150
sS'DAQmxErrorTEDSIncompatibleSensorAndMeasType'
p29151
S'(-200756)'
p29152
sS'DAQmx_Val_Switch_Topology_2599_2_SPDT'
p29153
S'"2599/2-SPDT"'
p29154
sS'DAQmx_RealTime_NumOfWarmupIters'
p29155
S'0x22ED'
p29156
sS'DAQmx_AI_RawDataCompressionType'
p29157
S'0x22D8'
p29158
sS'DAQmx_AI_SoundPressure_Units'
p29159
S'0x1528'
p29160
sS'_NI_uInt16_DEFINED_'
p29161
g28678
sS'DAQmxWarningInputTerminationOverloaded'
p29162
S'(200004)'
p29163
sS'DAQmx_Val_DegC'
p29164
S'10143'
p29165
sS'DAQmxErrorEmptyPhysChanInPowerUpStatesArray'
p29166
S'(-200626)'
p29167
sS'DAQmx_Val_DegF'
p29168
S'10144'
p29169
sS'DAQmxErrorSampRateTooHigh'
p29170
S'(-200332)'
p29171
sS'DAQmx_Val_DegR'
p29172
S'10145'
p29173
sS'DAQmx_Val_Internal'
p29174
S'10200'
p29175
sS'DAQmx_CI_TwoEdgeSep_Units'
p29176
S'0x18AC'
p29177
sS'DAQmx_SwitchScan_BreakMode'
p29178
S'0x1247'
p29179
sS'DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO'
p29180
S'(-200769)'
p29181
sS'DAQmxErrorPALRetryLimitExceeded'
p29182
S'(-50412)'
p29183
sS'DAQmxErrorDACRngLowNotMinusRefValNorZero'
p29184
S'(-200449)'
p29185
sS'DAQmxErrorMasterTbRateMasterTbSrcMismatch'
p29186
S'(-200307)'
p29187
sS'DAQmx_Write_SpaceAvail'
p29188
S'0x1460'
p29189
sS'DAQmx_SwitchChan_MaxACSwitchCurrent'
p29190
S'0x0646'
p29191
sS'DAQmx_Val_Strain_Gage'
p29192
S'10300'
p29193
sS'DAQmxErrorCannotCreateChannelAfterTaskVerified'
p29194
S'(-200160)'
p29195
sS'DAQmx_Val_E_Type_TC'
p29196
S'10055'
p29197
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_4x32_Matrix'
p29198
S'"2530/1-Wire 4x32 Matrix"'
p29199
sS'DAQmx_Val_T_Type_TC'
p29200
S'10086'
p29201
sS'DAQmx_AI_Impedance'
p29202
S'0x0062'
p29203
sS'DAQmx_SwitchDev_SwitchChanList'
p29204
S'0x18E7'
p29205
sS'DAQmx_Val_MostRecentSamp'
p29206
S'10428'
p29207
sS'DAQmxErrorInvalidSampAndMasterTimebaseRateCombo'
p29208
S'(-200173)'
p29209
sS'DAQmxErrorFinitePulseTrainNotPossible'
p29210
S'(-200305)'
p29211
sS'DAQmxErrorExpectedConnectOperatorInList'
p29212
S'(-200062)'
p29213
sS'DAQmx_Read_AvailSampPerChan'
p29214
S'0x1223'
p29215
sS'DAQmxErrorInvalidCalConstCalADCAdjustment'
p29216
S'(-200520)'
p29217
sS'DAQmxErrorInvalidSampRateConsiderRIS'
p29218
S'(-200420)'
p29219
sS'DAQmx_Val_Switch_Topology_2566_16_SPDT'
p29220
S'"2566/16-SPDT"'
p29221
sS'DAQmxErrorIncapableTEDSInterfaceControllingDeviceSpecd'
p29222
S'(-201051)'
p29223
sS'DAQmx_Val_Switch_Topology_1130_4_Wire_Quad_16x1_Mux'
p29224
S'"1130/4-Wire Quad 16x1 Mux"'
p29225
sS'DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans'
p29226
S'0x2195'
p29227
sS'DAQmx_Dev_SerialNum'
p29228
S'0x0632'
p29229
sS'DAQmx_AnlgEdge_StartTrig_Hyst'
p29230
S'0x1395'
p29231
sS'DAQmx_Val_AHighBHigh'
p29232
S'10040'
p29233
sS'DAQmxErrorGlobalTaskNameAlreadyChanName'
p29234
S'(-200919)'
p29235
sS'DAQmxErrorTableScalePreScaledValsNotSpecd'
p29236
S'(-200349)'
p29237
sS'DAQmxErrorPALBadReadOffset'
p29238
S'(-50010)'
p29239
sS'DAQmxErrorZeroBasedChanIndexInvalid'
p29240
S'(-200612)'
p29241
sS'DAQmxErrorNonBufferedAOAndDataXferNotProgIO'
p29242
S'(-200768)'
p29243
sS'DAQmx_AI_ACExcit_SyncEnable'
p29244
S'0x0102'
p29245
sS'DAQmxErrorNoChansOfGivenTypeInTask'
p29246
S'(-200611)'
p29247
sS'DAQmxErrorChanNotInTask'
p29248
S'(-200486)'
p29249
sS'DAQmxErrorDuplicateDeviceIDInListWhenSettling'
p29250
S'(-200057)'
p29251
sS'DAQmx_Val_OpenCollector'
p29252
S'12574'
p29253
sS'DAQmxErrorSelfCalDateTimeNotDAQmx'
p29254
S'(-200541)'
p29255
sS'__CFUNCPTRVAR'
p29256
S'__cdecl'
p29257
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_Dual_32x1_Mux'
p29258
S'"2530/2-Wire Dual 32x1 Mux"'
p29259
sS'DAQmx_CI_Freq_DigFltr_TimebaseSrc'
p29260
S'0x21E9'
p29261
sS'DAQmxErrorNoSyncPulseExtSampClkTimebase'
p29262
S'(-200762)'
p29263
sS'DAQmxErrorValueOutOfRange'
p29264
S'(-54021)'
p29265
sS'DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq'
p29266
S'(-200734)'
p29267
sS'DAQmxWarningPALTransferNotInProgress'
p29268
S'(50402)'
p29269
sS'DAQmxErrorBufferWithHWTimedSinglePointSampMode'
p29270
S'(-200690)'
p29271
sS'DAQmxErrorWaveformPreviouslyAllocated'
p29272
S'(-200310)'
p29273
sS'DAQmxErrorAnalogWaveformExpected'
p29274
S'(-200095)'
p29275
sS'DAQmx_DigLvl_PauseTrig_Src'
p29276
S'0x1379'
p29277
sS'DAQmx_Val_Task_Commit'
p29278
S'3'
p29279
sS'DAQmx_AnlgEdge_StartTrig_Src'
p29280
S'0x1398'
p29281
sS'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove'
p29282
S'(-200702)'
p29283
sS'DAQmxErrorTaskVersionNew'
p29284
S'(-200470)'
p29285
sS'DAQmx_AI_Rng_High'
p29286
S'0x1815'
p29287
sS'DAQmxErrorPALSyncTimedOut'
p29288
S'(-50550)'
p29289
sS'DAQmxErrorTrigLineNotFoundSingleDevRoute'
p29290
S'(-200574)'
p29291
sS'DAQmx_Dev_AO_PhysicalChans'
p29292
S'0x231F'
p29293
sS'DAQmxErrorFullySpecifiedPathInListContainsRange'
p29294
S'(-200060)'
p29295
sS'DAQmxWarningValueNotInSet'
p29296
S'(54022)'
p29297
sS'DAQmx_Val_Switch_Topology_2575_2_Wire_98x1_Mux'
p29298
S'"2575/2-Wire 98x1 Mux"'
p29299
sS'DAQmx_CI_Freq_StartingEdge'
p29300
S'0x0799'
p29301
sS'DAQmxErrorCOCannotKeepUpInHWTimedSinglePointPolled'
p29302
S'(-201022)'
p29303
sS'DAQmxErrorPALMemoryFull'
p29304
S'(-50352)'
p29305
sS'DAQmxErrorDSFFailedToResetStream'
p29306
S'(-200586)'
p29307
sS'DAQmxErrorInvalidActionInControlTask'
p29308
S'(-200538)'
p29309
sS'DAQmxErrorMarkerPositionNotAlignedInScript'
p29310
S'(-200031)'
p29311
sS'DAQmx_Val_None'
p29312
S'10230'
p29313
sS'DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask'
p29314
S'(-200987)'
p29315
sS'DAQmxWarningPALBadWriteMode'
p29316
S'(50012)'
p29317
sS'DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT'
p29318
S'(-200844)'
p29319
sS'DAQmxErrorPortConfiguredForOutput'
p29320
S'(-200121)'
p29321
sS'DAQmxErrorParsingTEDSData'
p29322
S'(-200753)'
p29323
sS'DAQmxWarningPALOSFault'
p29324
S'(50202)'
p29325
sS'DAQmx_Val_ReferenceTrigger'
p29326
S'12490'
p29327
sS'DAQmx_Write_RegenMode'
p29328
S'0x1453'
p29329
sS'DAQmx_Val_Switch_Topology_2527_2_Wire_32x1_Mux'
p29330
S'"2527/2-Wire 32x1 Mux"'
p29331
sS'DAQmxErrorInvalidTimingType'
p29332
S'(-200300)'
p29333
sS'DAQmxErrorBufferNameExpectedInScript'
p29334
S'(-200026)'
p29335
sS'DAQmxErrorConfiguredTEDSInterfaceDevNotDetected'
p29336
S'(-200958)'
p29337
sS'DAQmx_AO_ReglitchEnable'
p29338
S'0x0133'
p29339
sS'DAQmx_SwitchDev_Topology'
p29340
S'0x193D'
p29341
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing'
p29342
S'(-89143)'
p29343
sS'DAQmx_AI_Strain_Units'
p29344
S'0x0981'
p29345
sS'DAQmxErrorTaskMissingChannelProperty'
p29346
S'(-201070)'
p29347
sS'DAQmxErrorSCCCarrierSpecdIsMissing'
p29348
S'(-201050)'
p29349
sS'DAQmx_Scale_Poly_ForwardCoeff'
p29350
S'0x1234'
p29351
sS'DAQmxErrorNoChansSpecdForChangeDetect'
p29352
S'(-200751)'
p29353
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRange'
p29354
S'(-200872)'
p29355
sS'DAQmx_SwitchChan_Impedance'
p29356
S'0x0641'
p29357
sS'DAQmxErrorEventDelayOutOfRange'
p29358
S'(-200345)'
p29359
sS'DAQmxErrorPALResourceBusy'
p29360
S'(-50106)'
p29361
sS'DAQmx_DigEdge_WatchdogExpirTrig_Edge'
p29362
S'0x21A5'
p29363
sS'DAQmx_AnlgWin_StartTrig_Top'
p29364
S'0x1403'
p29365
sS'DAQmx_Val_Low'
p29366
S'10214'
p29367
sS'DAQmxErrorChannelNameGenerationNumberTooBig'
p29368
S'(-200600)'
p29369
sS'DAQmx_Val_FirstSample'
p29370
S'10424'
p29371
sS'DAQmxErrorExtSampClkSrcNotSpecified'
p29372
S'(-200303)'
p29373
sS'DAQmxErrorPortConfiguredForInput'
p29374
S'(-200120)'
p29375
sS'DAQmx_DigEdge_RefTrig_Edge'
p29376
S'0x1430'
p29377
sS'DAQmx_Exported_HshkEvent_OutputTerm'
p29378
S'0x22BA'
p29379
sS'DAQmx_Read_AutoStart'
p29380
S'0x1826'
p29381
sS'DAQmx_ExtCal_LastTemp'
p29382
S'0x1867'
p29383
sS'DAQmxErrorPALSoftwareFault'
p29384
S'(-50150)'
p29385
sS'DAQmxErrorInterconnectBridgeRouteReserved'
p29386
S'(-54012)'
p29387
sS'DAQmx_Val_ChanForAllLines'
p29388
g28873
sS'DAQmx_Val_HandshakeTriggerAsserts'
p29389
S'12552'
p29390
sS'DAQmxErrorExtSampClkRateTooHighForBackplane'
p29391
S'(-200274)'
p29392
sS'DAQmx_CI_SemiPeriod_Units'
p29393
S'0x18AF'
p29394
sS'DAQmxErrorHWTimedAndDataXferPIO'
p29395
S'(-201026)'
p29396
sS'DAQmx_Read_RelativeTo'
p29397
S'0x190A'
p29398
sS'DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback'
p29399
S'(-200968)'
p29400
sS'DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition'
p29401
S'(-200294)'
p29402
sS'DAQmxErrorAIDuringCounter0DMAConflict'
p29403
S'(-200078)'
p29404
sS'DAQmx_DigEdge_ArmStartTrig_DigSync_Enable'
p29405
S'0x2231'
p29406
sS'DAQmxWarningPotentialGlitchDuringWrite'
p29407
S'(200015)'
p29408
sS'DAQmx_AI_Bridge_InitialVoltage'
p29409
S'0x17ED'
p29410
sS'DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth'
p29411
S'0x220B'
p29412
sS'DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize'
p29413
S'(-200895)'
p29414
sS'DAQmx_Val_Switch_Topology_2569_100_SPST'
p29415
S'"2569/100-SPST"'
p29416
sS'DAQmx_AI_RVDT_Units'
p29417
S'0x0877'
p29418
sS'DAQmx_Val_Current'
p29419
S'10134'
p29420
sS'DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges'
p29421
S'(-200357)'
p29422
sS'DAQmx_Val_N_Type_TC'
p29423
S'10077'
p29424
sS'DAQmxErrorTermWithoutDevInMultiDevTask'
p29425
S'(-200853)'
p29426
sS'DAQmxErrorNoHWTimingWithOnDemand'
p29427
S'(-200731)'
p29428
sS'DAQmx_SampClk_Rate'
p29429
S'0x1344'
p29430
sS'DAQmx_Val_Task_Unreserve'
p29431
S'5'
p29432
sS'DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType'
p29433
S'(-200912)'
p29434
sS'DAQmxErrorExtSampClkRateTooLowForClkIn'
p29435
S'(-200275)'
p29436
sS'DAQmxErrorInvalidReadPosDuringRIS'
p29437
S'(-200419)'
p29438
sS'DAQmxErrorUnexpectedIDFollowingRelayNameInList'
p29439
S'(-200530)'
p29440
sS'DAQmxErrorTEDSNotSupported'
p29441
S'(-200741)'
p29442
sS'DAQmxErrorWriteBufferTooSmall'
p29443
S'(-200234)'
p29444
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod'
p29445
S'(-200993)'
p29446
sS'DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth'
p29447
S'0x2206'
p29448
sS'DAQmxError3InputPortCombinationGivenSampTimingType653x'
p29449
S'(-200931)'
p29450
sS'DAQmxErrorReadNotCompleteBefore3SampClkEdges'
p29451
S'(-200843)'
p29452
sS'DAQmxErrorRefTrigMasterSessionUnavailable'
p29453
S'(-200682)'
p29454
sS'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc'
p29455
S'0x21FD'
p29456
sS'DAQmxErrorSwitchDifferentSettlingTimeWhenScanning'
p29457
S'(-200178)'
p29458
sS'DAQmx_Val_Once'
p29459
S'10244'
p29460
sS'DAQmxErrorRefTrigDigPatternChanNotTristated'
p29461
S'(-200888)'
p29462
sS'DAQmx_AnlgWin_RefTrig_When'
p29463
S'0x1427'
p29464
sS'DAQmxErrorCanNotPerformOpWhileTaskRunning'
p29465
S'(-200479)'
p29466
sS'DAQmxErrorRangeWithTooManyObjects'
p29467
S'(-200592)'
p29468
sS'DAQmxErrorDevAlreadyInTask'
p29469
S'(-200481)'
p29470
sS'DAQmx_Val_OnbrdMemCustomThreshold'
p29471
S'12577'
p29472
sS'DAQmxErrorInterruptsInsufficientDataXferMech'
p29473
S'(-200322)'
p29474
sS'DAQmx_AI_Thrmcpl_CJCVal'
p29475
S'0x1036'
p29476
sS'DAQmxErrorCAPIReservedParamNotZero'
p29477
S'(-200491)'
p29478
sS'DAQmx_Val_CounterOutputEvent'
p29479
S'12494'
p29480
sS'DAQmx_Scale_Descr'
p29481
S'0x1226'
p29482
sS'DAQmx_Val_Switch_Topology_1190_Quad_4x1_Mux'
p29483
S'"1190/Quad 4x1 Mux"'
p29484
sS'DAQmxErrorSCXI1126ThreshHystCombination'
p29485
S'(-200223)'
p29486
sS'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate'
p29487
S'0x21FE'
p29488
sS'DAQmx_AIConv_TimebaseDiv'
p29489
S'0x1335'
p29490
sS'DAQmxErrorSMIOPauseTriggersNotSupportedWithChannelExpansion'
p29491
S'(-201019)'
p29492
sS'DAQmxErrorMemMapOnlyForProgIOXfer'
p29493
S'(-200169)'
p29494
sS'DAQmxErrorVirtualTEDSDataFileError'
p29495
S'(-200827)'
p29496
sS'DAQmx_Val_Switch_Topology_1193_Quad_8x1_Mux'
p29497
S'"1193/Quad 8x1 Mux"'
p29498
sS'DAQmxErrorWhenAcqCompAndNoRefTrig'
p29499
S'(-200864)'
p29500
sS'DAQmxErrorTrigWindowAIMinAIMaxCombo'
p29501
S'(-200423)'
p29502
sS'DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType'
p29503
S'(-200906)'
p29504
sS'DAQmx_AI_Thrmcpl_CJCChan'
p29505
S'0x1034'
p29506
sS'DAQmxErrorReadAllAvailableDataWithoutBuffer'
p29507
S'(-200340)'
p29508
sS'DAQmx_CI_CountEdges_DigFltr_Enable'
p29509
S'0x21F6'
p29510
sS'DAQmx_Val_Switch_Topology_2503_1_Wire_48x1_Mux'
p29511
S'"2503/1-Wire 48x1 Mux"'
p29512
sS'DAQmxErrorIncorrectNumChannelsToWrite'
p29513
S'(-200101)'
p29514
sS'DAQmxWarningPALBadThreadMultitask'
p29515
S'(50019)'
p29516
sS'DAQmx_Write_CurrWritePos'
p29517
S'0x1458'
p29518
sS'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2'
p29519
S'(-200705)'
p29520
sS'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate'
p29521
S'0x2208'
p29522
sS'DAQmx_Val_Rising'
p29523
S'10280'
p29524
sS'DAQmx_Val_2Wire'
p29525
S'2'
p29526
sS'DAQmxErrorDigFilterAndSyncBothEnabled'
p29527
S'(-200770)'
p29528
sS'DAQmxErrorPALBadWriteMode'
p29529
S'(-50012)'
p29530
sS'DAQmxErrorMinAndMaxNotSymmetric'
p29531
S'(-200266)'
p29532
sS'DAQmx_Val_Task_Verify'
p29533
g29526
sS'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt'
p29534
S'(-200803)'
p29535
sS'DAQmx_Val_Switch_Topology_2598_Dual_Transfer'
p29536
S'"2598/Dual Transfer"'
p29537
sS'DAQmx_CI_PulseWidth_Units'
p29538
S'0x0823'
p29539
sS'DAQmxErrorPALFileFault'
p29540
S'(-50209)'
p29541
sS'DAQmx_Val_Switch_Topology_1169_100_SPST'
p29542
S'"1169/100-SPST"'
p29543
sS'DAQmxErrorGetPropertyNotInputBufferedTask'
p29544
S'(-200455)'
p29545
sS'DAQmx_AO_DAC_Offset_Val'
p29546
S'0x2255'
p29547
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_4x64_Matrix'
p29548
S'"2532/2-Wire 4x64 Matrix"'
p29549
sS'DAQmx_Val_X4'
p29550
S'10092'
p29551
sS'DAQmx_Val_X1'
p29552
S'10090'
p29553
sS'DAQmx_Val_X2'
p29554
S'10091'
p29555
sS'DAQmx_RefClk_Src'
p29556
S'0x1316'
p29557
sS'DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks'
p29558
S'(-209803)'
p29559
sS'DAQmxErrorPALComponentBusy'
p29560
S'(-50264)'
p29561
sS'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev'
p29562
S'(-200806)'
p29563
sS'DAQmxWarningChanCalExpired'
p29564
S'(200043)'
p29565
sS'DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput'
p29566
S'(-200725)'
p29567
sS'DAQmx_Val_Pulse_Ticks'
p29568
S'10268'
p29569
sS'DAQmxErrorEmptyString'
p29570
S'(-200467)'
p29571
sS'DAQmxErrorOpNotSupportedWhenRefClkSrcNone'
p29572
S'(-200661)'
p29573
sS'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev'
p29574
S'(-200920)'
p29575
sS'_NI_int16_DEFINED_'
p29576
g28678
sS'DAQmxErrorInputFIFOOverflow'
p29577
S'(-200010)'
p29578
sS'DAQmx_CI_LinEncoder_InitialPos'
p29579
S'0x0915'
p29580
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled'
p29581
S'(-201024)'
p29582
sS'DAQmxErrorSamplesNoLongerAvailable'
p29583
S'(-200279)'
p29584
sS'DAQmx_Val_J_Type_TC'
p29585
S'10072'
p29586
sS'DAQmx_Val_Switch_Topology_1160_16_SPDT'
p29587
S'"1160/16-SPDT"'
p29588
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc'
p29589
S'0x21F3'
p29590
sS'DAQmxErrorDigDevChansSpecdInModeOtherThanParallel'
p29591
S'(-201035)'
p29592
sS'DAQmxErrorChanCalExpired'
p29593
S'(-200934)'
p29594
sS'DAQmxWarningAIConvRateTooLow'
p29595
S'(200018)'
p29596
sS'DAQmx_AI_Microphone_Sensitivity'
p29597
S'0x1536'
p29598
sS'DAQmxErrorSuitableTimebaseNotFoundTimeCombo2'
p29599
S'(-200746)'
p29600
sS'DAQmx_CI_TwoEdgeSep_SecondEdge'
p29601
S'0x0834'
p29602
sS'DAQmx_Val_Temp_TC'
p29603
S'10303'
p29604
sS'DAQmx_Val_Voltage_CustomWithExcitation'
p29605
S'10323'
p29606
sS'DAQmxErrorExtCalFunctionOutsideExtCalSession'
p29607
S'(-200439)'
p29608
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Quad_4x16_Matrix'
p29609
S'"1129/2-Wire Quad 4x16 Matrix"'
p29610
sS'DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning'
p29611
S'(-200960)'
p29612
sS'DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms'
p29613
S'(-200978)'
p29614
sS'DAQmxErrorRoutingPathNotAvailable'
p29615
S'(-200044)'
p29616
sS'DAQmxErrorCantMaintainExistingValueAOSync'
p29617
S'(-200793)'
p29618
sS'DAQmx_AI_ChanCal_ScaleType'
p29619
S'0x229C'
p29620
sS'DAQmxErrorDevCannotBeAccessed'
p29621
S'(-201003)'
p29622
sS'DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth'
p29623
S'0x2277'
p29624
sS'DAQmx_SampClk_Timebase_ActiveEdge'
p29625
S'0x18EC'
p29626
sS'DAQmxErrorMultiDevsInTask'
p29627
S'(-200558)'
p29628
sS'DAQmxErrorCVIFailedToLoadDAQmxDLL'
p29629
S'(-200397)'
p29630
sS'DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance'
p29631
S'(-200514)'
p29632
sS'DAQmxErrorInvalidDateTimeInEEPROM'
p29633
S'(-200501)'
p29634
sS'DAQmx_Val_Switch_Topology_2527_Independent'
p29635
S'"2527/Independent"'
p29636
sS'DAQmxErrorNoDevMemForWaveform'
p29637
S'(-200315)'
p29638
sS'DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning'
p29639
S'(-200994)'
p29640
sS'DAQmx_Val_Toggle'
p29641
S'10307'
p29642
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2'
p29643
S'(-200704)'
p29644
sS'DAQmx_AI_Dither_Enable'
p29645
S'0x0068'
p29646
sS'DAQmxWarningPALBadWriteCount'
p29647
S'(50014)'
p29648
sS'DAQmx_AnlgWin_StartTrig_Btm'
p29649
S'0x1402'
p29650
sS'DAQmxErrorPALValueConflict'
p29651
S'(-50000)'
p29652
sS'DAQmxErrorInvalidRelayName'
p29653
S'(-200202)'
p29654
sS'DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans'
p29655
S'0x2196'
p29656
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal'
p29657
S'(-200869)'
p29658
sS'DAQmx_Scale_Table_ScaledVals'
p29659
S'0x1236'
p29660
sS'DAQmxErrorScriptNameSameAsWfmName'
p29661
S'(-200633)'
p29662
sS'DAQmxErrorPALBusResetOccurred'
p29663
S'(-50800)'
p29664
sS'DAQmx_CI_Freq_Div'
p29665
S'0x0147'
p29666
sS'DAQmxErrorPropertyUnavailWhenUsingOnboardMemory'
p29667
S'(-200297)'
p29668
sS'DAQmxErrorCppCantRemoveInvalidEventHandler'
p29669
S'(-200590)'
p29670
sS'DAQmx_AI_ResistanceCfg'
p29671
S'0x1881'
p29672
sS'DAQmx_Cal_DevTemp'
p29673
S'0x223B'
p29674
sS'DAQmxErrorInputCfgFailedBecauseWatchdogExpired'
p29675
S'(-200712)'
p29676
sS'DAQmx_Val_Voltage'
p29677
S'10322'
p29678
sS'DAQmx_Exported_RefTrig_OutputTerm'
p29679
S'0x0590'
p29680
sS'DAQmxErrorPALBadCount'
p29681
S'(-50008)'
p29682
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_Dual_12x1_Mux'
p29683
S'"2503/2-Wire Dual 12x1 Mux"'
p29684
sS'DAQmx_Val_Table'
p29685
S'10450'
p29686
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove'
p29687
S'(-200703)'
p29688
sS'DAQmxErrorNoAvailTrigLinesOnDevice'
p29689
S'(-200227)'
p29690
sS'DAQmx_AnlgEdge_RefTrig_Lvl'
p29691
S'0x1422'
p29692
sS'DAQmxErrorCalFunctionNotSupported'
p29693
S'(-200445)'
p29694
sS'DAQmx_Val_PCIe'
p29695
S'13612'
p29696
sS'DAQmxErrorMemMapDataXferModeSampTimingCombo'
p29697
S'(-200260)'
p29698
sS'DAQmx_Val_Pt3750'
p29699
S'12481'
p29700
sS'DAQmxErrorSampClkRateUnavailable'
p29701
S'(-200660)'
p29702
sS'DAQmx_Exported_AIHoldCmpltEvent_PulsePolarity'
p29703
S'0x18EE'
p29704
sS'DAQmxErrorReadDataTypeTooSmall'
p29705
S'(-200789)'
p29706
sS'DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech'
p29707
S'(-200613)'
p29708
sS'DAQmx_Val_Open'
p29709
S'10437'
p29710
sS'DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth'
p29711
S'0x2224'
p29712
sS'DAQmx_Task_Channels'
p29713
S'0x1273'
p29714
sS'DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly'
p29715
S'(-200928)'
p29716
sS'DAQmx_Val_Pt3916'
p29717
S'10069'
p29718
sS'DAQmx_Exported_SampClkTimebase_OutputTerm'
p29719
S'0x18F9'
p29720
sS'DAQmxErrorInvalidAttributeValue'
p29721
S'(-200077)'
p29722
sS'DAQmx_Val_Pt3911'
p29723
S'12482'
p29724
sS'DAQmxErrorGlobalChanNameAlreadyTaskName'
p29725
S'(-200918)'
p29726
sS'DAQmxErrorInversionNotSupportedByHW_Routing'
p29727
S'(-89133)'
p29728
sS'DAQmxErrorCannotHaveCJTempWithOtherChans'
p29729
S'(-200167)'
p29730
sS'DAQmxErrorMissingStartOfTable'
p29731
S'(-201065)'
p29732
sS'DAQmx_AI_DevScalingCoeff'
p29733
S'0x1930'
p29734
sS'DAQmx_Val_LosslessPacking'
p29735
S'12555'
p29736
sS'DAQmx_AI_Excit_DCorAC'
p29737
S'0x17FB'
p29738
sS'DAQmxErrorDigSyncNotAvailableOnTerm'
p29739
S'(-200773)'
p29740
sS'DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions'
p29741
S'(200038)'
p29742
sS'DAQmx_Val_Switch_Topology_1193_Independent'
p29743
S'"1193/Independent"'
p29744
sS'DAQmx_AIConv_Src'
p29745
S'0x1502'
p29746
sS'DAQmx_SampTimingType'
p29747
S'0x1347'
p29748
sS'DAQmxWarningPALDispatcherAlreadyExported'
p29749
S'(50500)'
p29750
sS'DAQmx_Exported_AdvTrig_OutputTerm'
p29751
S'0x1645'
p29752
sS'DAQmxWarningPALBadDataSize'
p29753
S'(50005)'
p29754
sS'DAQmxErrorPALBadWindowType'
p29755
S'(-50016)'
p29756
sS'DAQmxErrorInvalidHWProductType'
p29757
S'(-201057)'
p29758
sS'DAQmxErrorUnsupportedSignalTypeExportSignal'
p29759
S'(-200375)'
p29760
sS'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero'
p29761
S'(-200802)'
p29762
sS'DAQmxErrorTimeoutExceeded'
p29763
S'(-200221)'
p29764
sS'DAQmxErrorOnboardMemTooSmall'
p29765
S'(-200341)'
p29766
sS'DAQmx_Val_Switch_Topology_1167_Independent'
p29767
S'"1167/Independent"'
p29768
sS'DAQmxErrorMStudioPropertyGetWhileTaskNotVerified'
p29769
S'(-200593)'
p29770
sS'DAQmxErrorCounterNoTimebaseEdgesBetweenGates'
p29771
S'(-200140)'
p29772
sS'DAQmxErrorHWTimedSinglePointOddNumChansInAITask'
p29773
S'(-200820)'
p29774
sS'DAQmxErrorRangeWithoutAConnectActionInList'
p29775
S'(-200052)'
p29776
sS'DAQmxErrorPALMessageQueueFull'
p29777
S'(-50108)'
p29778
sS'DAQmx_CI_Encoder_BInputTerm'
p29779
S'0x219E'
p29780
sS'DAQmx_AnlgLvl_PauseTrig_Hyst'
p29781
S'0x1368'
p29782
sS'DAQmxErrorCOInvalidTimingSrcDueToSignal'
p29783
S'(-200801)'
p29784
sS'DAQmx_AI_Temp_Units'
p29785
S'0x1033'
p29786
sS'DAQmxErrorChanDoesNotSupportCJC'
p29787
S'(-200976)'
p29788
sS'DAQmxErrorCustomScaleNameUsed'
p29789
S'(-200356)'
p29790
sS'DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing'
p29791
S'(-89140)'
p29792
sS'DAQmx_PhysicalChan_TEDS_BitStream'
p29793
S'0x21DF'
p29794
sS'DAQmx_AI_EnhancedAliasRejectionEnable'
p29795
S'0x2294'
p29796
sS'DAQmxErrorPALMemoryAlignmentFault'
p29797
S'(-50351)'
p29798
sS'DAQmxErrorAttributeNotSupportedInTaskContext'
p29799
S'(-200452)'
p29800
sS'DAQmxErrorInvalidRefClkRate'
p29801
S'(-200427)'
p29802
sS'DAQmxErrorDeviceDoesNotSupportScanning'
p29803
S'(-200068)'
p29804
sS'DAQmxWarningRateViolatesMaxADCRate'
p29805
S'(200012)'
p29806
sS'DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize'
p29807
S'(-200865)'
p29808
sS'DAQmx_Val_CountUp'
p29809
S'10128'
p29810
sS'DAQmxErrorPALResourceAmbiguous'
p29811
S'(-50107)'
p29812
sS'DAQmxErrorIncorrectDigitalPattern'
p29813
S'(-200102)'
p29814
sS'DAQmxErrorDCMLock'
p29815
S'(-200385)'
p29816
sS'DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist'
p29817
S'(-200638)'
p29818
sS'DAQmx_Val_WriteToPROM'
p29819
S'12539'
p29820
sS'DAQmx_CI_Encoder_AInput_DigSync_Enable'
p29821
S'0x21FF'
p29822
sS'DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset'
p29823
S'(-200504)'
p29824
sS'DAQmx_Val_Switch_Topology_1193_Dual_16x1_Mux'
p29825
S'"1193/Dual 16x1 Mux"'
p29826
sS'DAQmx_Hshk_StartCond'
p29827
S'0x22C3'
p29828
sS'DAQmx_CI_CountEdges_CountDir_DigSync_Enable'
p29829
S'0x21F5'
p29830
sS'DAQmx_SwitchChan_MaxDCVoltage'
p29831
S'0x0650'
p29832
sS'DAQmxErrorInvalidSampClkSrc'
p29833
S'(-200414)'
p29834
sS'DAQmx_SampClk_Timebase_Rate'
p29835
S'0x1303'
p29836
sS'DAQmxErrorCtrMinMax'
p29837
S'(-200527)'
p29838
sS'DAQmx_Val_OnBrdMemEmpty'
p29839
S'10235'
p29840
sS'DAQmx_Task_Devices'
p29841
S'0x230E'
p29842
sS'DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning'
p29843
S'(-200556)'
p29844
sS'DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed'
p29845
S'(-200921)'
p29846
sS'DAQmxErrorInputFIFOUnderflow'
p29847
S'(-200017)'
p29848
sS'DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl'
p29849
S'(-200728)'
p29850
sS'DAQmx_CI_CtrTimebase_DigFltr_Enable'
p29851
S'0x2271'
p29852
sS'DAQmxErrorDSFReadyForOutputNotAsserted'
p29853
S'(-200585)'
p29854
sS'DAQmxErrorInternalSampClkNotRisingEdge'
p29855
S'(-200890)'
p29856
sS'DAQmx_SwitchChan_MaxDCCarryCurrent'
p29857
S'0x0647'
p29858
sS'DAQmxErrorConnectionNotPermittedOnChanReservedForRouting'
p29859
S'(-200189)'
p29860
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth'
p29861
S'0x2210'
p29862
sS'DAQmxErrorBracketPairingMismatchInList'
p29863
S'(-200104)'
p29864
sS'DAQmxErrorInconsistentChannelDirections'
p29865
S'(-200011)'
p29866
sS'DAQmxErrorExplanationNotFound'
p29867
S'(-200235)'
p29868
sS'DAQmx_Val_MaintainExistingValue'
p29869
S'12528'
p29870
sS'DAQmx_Read_TotalSampPerChanAcquired'
p29871
S'0x192A'
p29872
sS'DAQmx_SampClk_DigFltr_MinPulseWidth'
p29873
S'0x221F'
p29874
sS'DAQmx_Dev_PCI_DevNum'
p29875
S'0x2328'
p29876
sS'DAQmx_Dev_DI_Lines'
p29877
S'0x2320'
p29878
sS'DAQmxWarningPALResourceAmbiguous'
p29879
S'(50107)'
p29880
sS'DAQmxErrorPALReceiverSocketInvalid'
p29881
S'(-50503)'
p29882
sS'DAQmxErrorNoCommonTrigLineForImmedRoute'
p29883
S'(-200396)'
p29884
sS'DAQmx_SwitchChan_MaxACVoltage'
p29885
S'0x0651'
p29886
sS'DAQmxWarningPALBadReadMode'
p29887
S'(50009)'
p29888
sS'DAQmxErrorPALResourceReserved'
p29889
S'(-50103)'
p29890
sS'DAQmxErrorSampClkTimebaseRateInvalid'
p29891
S'(-201089)'
p29892
sS'DAQmx_AI_ChanCal_HasValidCalInfo'
p29893
S'0x2297'
p29894
sS'DAQmxErrorRefTrigTypeNotSupportedGivenTimingType'
p29895
S'(-200907)'
p29896
sS'DAQmx_Val_Transferred_From_Buffer'
p29897
g29526
sS'DAQmx_CO_Pulse_Freq_Units'
p29898
S'0x18D5'
p29899
sS'DAQmxErrorInvalidRoutingDestinationTerminalName'
p29900
S'(-200041)'
p29901
sS'DAQmx_Val_ClearExpiration'
p29902
g28873
sS'DAQmx_Val_Task_Start'
p29903
g28779
sS'DAQmxErrorCouldNotDownloadFirmwareHWDamaged'
p29904
S'(-200962)'
p29905
sS'DAQmxErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks'
p29906
S'(-201027)'
p29907
sS'DAQmxErrorWriteNumChansMismatch'
p29908
S'(-200524)'
p29909
sS'DAQmxErrorNoAdvTrigForMultiDevScan'
p29910
S'(-200323)'
p29911
sS'DAQmxErrorTooManyChansForAnalogPauseTrig'
p29912
S'(-200263)'
p29913
sS'DAQmx_AI_TEDS_Units'
p29914
S'0x21E0'
p29915
sS'DAQmxErrorCannotStoreCalConst'
p29916
S'(-200074)'
p29917
sS'DAQmx_CO_Pulse_Time_Units'
p29918
S'0x18D6'
p29919
sS'DAQmx_Val_Switch_Topology_1175_2_Wire_98x1_Mux'
p29920
S'"1175/2-Wire 98x1 Mux"'
p29921
sS'DAQmxErrorTooManyPhysicalChansForTEDSInterfaceSpecd'
p29922
S'(-201052)'
p29923
sS'DAQmxErrorCannotTristateTerm_Routing'
p29924
S'(-89128)'
p29925
sS'DAQmxErrorPALDeviceNotSupported'
p29926
S'(-50302)'
p29927
sS'DAQmx_Val_GND'
p29928
S'10066'
p29929
sS'DAQmxErrorSwitchNotResetBeforeScan'
p29930
S'(-200199)'
p29931
sS'DAQmxErrorNoDivisorForExternalSignal'
p29932
S'(-200130)'
p29933
sS'DAQmx_SwitchChan_MaxDCSwitchCurrent'
p29934
S'0x0645'
p29935
sS'DAQmxErrorRepeatedAIPhysicalChan'
p29936
S'(-200620)'
p29937
sS'DAQmxErrorInvalidTimeValue'
p29938
S'(-201037)'
p29939
sS'DAQmx_AnlgWin_RefTrig_Coupling'
p29940
S'0x1857'
p29941
sS'DAQmxErrorDigInputNotSupported'
p29942
S'(-200647)'
p29943
sS'DAQmxErrorSampClkOutputTermIncludesStartTrigSrc'
p29944
S'(-200954)'
p29945
sS'DAQmx_AI_SoundPressure_MaxSoundPressureLvl'
p29946
S'0x223A'
p29947
sS'DAQmxErrorCantResetExpiredWatchdog'
p29948
S'(-200644)'
p29949
sS'DAQmxErrorInvalidSyntaxForPhysicalChannelRange'
p29950
S'(-200086)'
p29951
sS'DAQmxErrorNonZeroBufferSizeInProgIOXfer'
p29952
S'(-200172)'
p29953
sS'DAQmx_Val_QuarterBridgeII'
p29954
S'10272'
p29955
sS'DAQmxErrorInputBufSizeTooSmallToStartAcq'
p29956
S'(-200608)'
p29957
sS'DAQmx_AdvTrig_Type'
p29958
S'0x1365'
p29959
sS'DAQmx_PhysicalChan_TEDS_VersionLetter'
p29960
S'0x21DE'
p29961
sS'DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS'
p29962
S'(-200825)'
p29963
sS'DAQmx_Val_K_Type_TC'
p29964
S'10073'
p29965
sS'DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported'
p29966
S'(-200766)'
p29967
sS'DAQmx_CI_CountEdges_ActiveEdge'
p29968
S'0x0697'
p29969
sS'DAQmxErrorRepeatedNumberInScaledValues'
p29970
S'(-200599)'
p29971
sS'DAQmx_Exported_AdvTrig_Pulse_WidthUnits'
p29972
S'0x1647'
p29973
sS'DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript'
p29974
S'(-201011)'
p29975
sS'DAQmx_CI_SemiPeriod_Term'
p29976
S'0x18B0'
p29977
sS'DAQmx_AI_LossyLSBRemoval_CompressedSampSize'
p29978
S'0x22D9'
p29979
sS'DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange'
p29980
S'(-200076)'
p29981
sS'DAQmxErrorSampPerChanNotMultipleOfIncr'
p29982
S'(-200344)'
p29983
sS'DAQmx_Val_Chan'
p29984
S'10113'
p29985
sS'DAQmxErrorRoutingNotSupportedForDevice'
p29986
S'(-200039)'
p29987
sS'DAQmxErrorCOSampModeSampTimingTypeSampClkConflict'
p29988
S'(-200778)'
p29989
sS'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning'
p29990
S'(-200846)'
p29991
sS'DAQmx_CI_LinEncoder_Units'
p29992
S'0x18A9'
p29993
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_Octal_16x1_Mux'
p29994
S'"1130/2-Wire Octal 16x1 Mux"'
p29995
sS'DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay'
p29996
S'0x22BF'
p29997
sS'DAQmx_CI_CountEdges_DigFltr_TimebaseSrc'
p29998
S'0x21F8'
p29999
sS'DAQmxErrorLines4To7ConfiguredForOutput'
p30000
S'(-200125)'
p30001
sS'DAQmx_Val_SampleCompleteEvent'
p30002
S'12530'
p30003
sS'DAQmxErrorStrainGageCalibration'
p30004
S'(-200380)'
p30005
sS'DAQmxWarningPALIrrelevantAttribute'
p30006
S'(50001)'
p30007
sS'DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript'
p30008
S'(-200850)'
p30009
sS'DAQmx_CI_Prescaler'
p30010
S'0x2239'
p30011
sS'DAQmxErrorReversePolynomialCoefNotSpecd'
p30012
S'(-200325)'
p30013
sS'DAQmx_Val_OnBrdMemHalfFullOrLess'
p30014
S'10239'
p30015
sS'DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint'
p30016
S'(-200997)'
p30017
sS'DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev'
p30018
S'(-200856)'
p30019
sS'DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv'
p30020
S'0x1886'
p30021
sS'DAQmx_PhysicalChan_TEDS_VersionNum'
p30022
S'0x21DD'
p30023
sS'DAQmx_Scale_Lin_YIntercept'
p30024
S'0x1228'
p30025
sS'DAQmxErrorCannotTristateBusyTerm'
p30026
S'(-200252)'
p30027
sS'DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing'
p30028
S'(-89144)'
p30029
sS'DAQmxErrorRepeatedNumberInPreScaledValues'
p30030
S'(-200598)'
p30031
sS'DAQmx_Val_Pt3928'
p30032
S'12483'
p30033
sS'DAQmx_Val_PathStatus_AlreadyExists'
p30034
S'10432'
p30035
sS'DAQmxErrorWaitModeValueNotSupportedNonBuffered'
p30036
S'(-200924)'
p30037
sS'DAQmx_Val_Pt3920'
p30038
S'10053'
p30039
sS'DAQmxErrorSCXIModuleIncorrect'
p30040
S'(-200107)'
p30041
sS'DAQmx_Val_Polynomial'
p30042
S'10449'
p30043
sS'DAQmx_Val_Implicit'
p30044
S'10451'
p30045
sS'DAQmxErrorPLLBecameUnlocked'
p30046
S'(-200246)'
p30047
sS'DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads'
p30048
S'(-200990)'
p30049
sS'DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals'
p30050
S'(-200657)'
p30051
sS'DAQmxErrorTimebaseCalFreqVarianceTooLarge'
p30052
S'(-200723)'
p30053
sS'DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth'
p30054
S'0x2229'
p30055
sS'DAQmxErrorDelayFromSampClkTooShort'
p30056
S'(-200336)'
p30057
sS'DAQmxErrorNoRefTrigConfigured'
p30058
S'(-200282)'
p30059
sS'DAQmx_Val_Switch_Topology_2501_4_Wire_12x1_Mux'
p30060
S'"2501/4-Wire 12x1 Mux"'
p30061
sS'DAQmxError3OutputPortCombinationGivenSampTimingType653x'
p30062
S'(-200932)'
p30063
sS'DAQmx_CO_Prescaler'
p30064
S'0x226D'
p30065
sS'DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2'
p30066
S'(-200970)'
p30067
sS'DAQmxErrorReferenceCurrentInvalid'
p30068
S'(-200154)'
p30069
sS'DAQmx_AI_LVDT_Units'
p30070
S'0x0910'
p30071
sS'DAQmxErrorLines0To3ConfiguredForInput'
p30072
S'(-200122)'
p30073
sS'DAQmx_Val_DMA'
p30074
S'10054'
p30075
sS'DAQmx_DigPattern_RefTrig_When'
p30076
S'0x1438'
p30077
sS'DAQmxErrorCalChanReversePolyCoefNotSpecd'
p30078
S'(-200941)'
p30079
sS'DAQmxErrorTopologyNotSupportedByCfgTermBlock'
p30080
S'(-200256)'
p30081
sS'DAQmx_Val_Accelerometer'
p30082
S'10356'
p30083
sS'DAQmx_CI_Period_Div'
p30084
S'0x192E'
p30085
sS'DAQmxErrorRegisterNotWritable'
p30086
S'(-200393)'
p30087
sS'DAQmx_DO_DataXferMech'
p30088
S'0x2266'
p30089
sS'DAQmxErrorPALComponentTooOld'
p30090
S'(-50252)'
p30091
sS'DAQmx_Write_SleepTime'
p30092
S'0x22B2'
p30093
sS'DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand'
p30094
S'(-200999)'
p30095
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing'
p30096
S'(-89149)'
p30097
sS'DAQmxErrorDevNotInTask'
p30098
S'(-200482)'
p30099
sS'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Mux'
p30100
S'"2501/1-Wire 48x1 Mux"'
p30101
sS'DAQmx_Val_NoChange'
p30102
S'10160'
p30103
sS'DAQmxErrorAIMaxTooLarge'
p30104
S'(-200579)'
p30105
sS'DAQmxErrorPALCalculationOverflow'
p30106
S'(-50175)'
p30107
sS'DAQmx_DigEdge_StartTrig_Src'
p30108
S'0x1407'
p30109
sS'DAQmx_CI_CtrTimebaseSrc'
p30110
S'0x0143'
p30111
sS'DAQmxErrorUnsupportedUnicodeByteOrderMarker'
p30112
S'(-201017)'
p30113
sS'DAQmxErrorDevOnlySupportsSampClkTimingAI'
p30114
S'(-200757)'
p30115
sS'DAQmx_DI_DataXferReqCond'
p30116
S'0x2264'
p30117
sS'DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x'
p30118
S'(-200897)'
p30119
sS'DAQmxErrorDevOnlySupportsSampClkTimingAO'
p30120
S'(-200758)'
p30121
sS'DAQmx_PhysicalChan_TEDS_TemplateIDs'
p30122
S'0x228F'
p30123
sS'DAQmxErrorInvalidExcitValForScaling'
p30124
S'(-200318)'
p30125
sS'DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx'
p30126
S'(-200804)'
p30127
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing'
p30128
S'(-89147)'
p30129
sS'DAQmxErrorDisconnectionRequiredInScanlist'
p30130
S'(-200639)'
p30131
sS'DAQmxErrorMultiChanTypesInTask'
p30132
S'(-200559)'
p30133
sS'DAQmx_Val_Hz'
p30134
S'10373'
p30135
sS'DAQmxErrorOperationOnlyPermittedWhileScanning'
p30136
S'(-200177)'
p30137
sS'DAQmxErrorCannotCalculateNumSampsTaskNotStarted'
p30138
S'(-200343)'
p30139
sS'DAQmxErrorMemMapAndHWTimedSinglePoint'
p30140
S'(-200995)'
p30141
sS'DAQmxErrorValueInvalid'
p30142
S'(-54023)'
p30143
sS'DAQmxErrorSetupCalNeededBeforeAdjustCal'
p30144
S'(-201005)'
p30145
sS'DAQmxWarningPALResourceNotAvailable'
p30146
S'(50101)'
p30147
sS'DAQmxErrorCAPIReservedParamNotNULL'
p30148
S'(-200492)'
p30149
sS'DAQmx_Val_PXI'
p30150
S'12583'
p30151
sS'DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction'
p30152
S'(-200046)'
p30153
sS'DAQmxErrorExternalTimebaseRateNotKnownForDelay'
p30154
S'(-200149)'
p30155
sS'DAQmx_CO_CtrTimebase_DigSync_Enable'
p30156
S'0x227A'
p30157
sS'DAQmx_Val_SoundPressure_Microphone'
p30158
S'10354'
p30159
sS'DAQmxErrorCalChanForwardPolyCoefNotSpecd'
p30160
S'(-200940)'
p30161
sS'DAQmx_CI_CountEdges_InitialCnt'
p30162
S'0x0698'
p30163
sS'DAQmxErrorProgIODataXferForBufferedAO'
p30164
S'(-200767)'
p30165
sS'DAQmxErrorPALBadLibrarySpecifier'
p30166
S'(-50018)'
p30167
sS'DAQmxErrorFREQOUTCannotProduceDesiredFrequency2'
p30168
S'(-200736)'
p30169
sS'DAQmxErrorTooManyPretrigPlusMinPostTrigSamps'
p30170
S'(-200213)'
p30171
sS'DAQmx_Val_PatternMatches'
p30172
S'10254'
p30173
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_8x32_Matrix'
p30174
S'"2532/1-Wire Dual 8x32 Matrix"'
p30175
sS'DAQmxErrorDriverDeviceGUIDNotFound_Routing'
p30176
S'(-88705)'
p30177
sS'DAQmxErrorTooManyPostTrigSampsPerChan'
p30178
S'(-200575)'
p30179
sS'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA'
p30180
S'(-200877)'
p30181
sS'DAQmxErrorAIConvRateTooHigh'
p30182
S'(-200335)'
p30183
sS'DAQmx_AI_Bridge_ShuntCal_Select'
p30184
S'0x21D5'
p30185
sS'DAQmx_Val_ReservedForRouting'
p30186
S'10441'
p30187
sS'DAQmx_AI_AutoZeroMode'
p30188
S'0x1760'
p30189
sS'DAQmxError2InputPortCombinationGivenSampTimingType653x'
p30190
S'(-200929)'
p30191
sS'DAQmx_AO_DAC_Rng_Low'
p30192
S'0x182D'
p30193
sS'DAQmxErrorLinesAlreadyReservedForOutput'
p30194
S'(-200597)'
p30195
sS'DAQmxErrorDigPrptyCannotBeSetPerLine'
p30196
S'(-200641)'
p30197
sS'DAQmx_AnlgLvl_PauseTrig_Src'
p30198
S'0x1370'
p30199
sS'DAQmxErrorStartTrigTypeNotSupportedGivenTimingType'
p30200
S'(-200904)'
p30201
sS'DAQmxErrorPALLogicalBufferEmpty'
p30202
S'(-50406)'
p30203
sS'DAQmx_Sys_NIDAQMajorVersion'
p30204
S'0x1272'
p30205
sS'DAQmxErrorSwitchOpFailedDueToPrevError'
p30206
S'(-200674)'
p30207
sS'DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall'
p30208
S'(-200873)'
p30209
sS'DAQmx_CI_CtrTimebaseRate'
p30210
S'0x18B2'
p30211
sS'DAQmx_Exported_AdvCmpltEvent_Pulse_Width'
p30212
S'0x1654'
p30213
sS'DAQmxErrorClearIsLastInstructionInIfElseBlockInScript'
p30214
S'(-201012)'
p30215
sS'DAQmxWarningPALBadOffset'
p30216
S'(50007)'
p30217
sS'DAQmxErrorPXIStarAndClock10Sync'
p30218
S'(-200885)'
p30219
sS'DAQmx_Val_SameAsMasterTimebase'
p30220
S'10282'
p30221
sS'DAQmxErrorInternalTimebaseSourceRateCombo'
p30222
S'(-200134)'
p30223
sS'DAQmxErrorCAPIChanIndexInvalid'
p30224
S'(-200570)'
p30225
sS'DAQmx_DI_DigFltr_MinPulseWidth'
p30226
S'0x21D7'
p30227
sS'DAQmx_Read_DigitalLines_BytesPerChan'
p30228
S'0x217C'
p30229
sS'DAQmx_CO_Pulse_Ticks_InitialDelay'
p30230
S'0x0298'
p30231
sS'DAQmxErrorNoPathAvailableBetween2SwitchChans'
p30232
S'(-200180)'
p30233
sS'DAQmxErrorCounterMaxMinRangeTime'
p30234
S'(-200138)'
p30235
sS'DAQmxErrorAOBufferSizeZeroForSampClkTimingType'
p30236
S'(-200859)'
p30237
sS'DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode'
p30238
S'(-200799)'
p30239
sS'DAQmxErrorPALSocketListenerInvalid'
p30240
S'(-50502)'
p30241
sS'DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType'
p30242
S'(-200913)'
p30243
sS'DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType'
p30244
S'(-200910)'
p30245
sS'DAQmxErrorPALCommunicationsFault'
p30246
S'(-50401)'
p30247
sS'DAQmx_AI_ChanCal_Poly_ReverseCoeff'
p30248
S'0x22A0'
p30249
sS'DAQmxErrorMeasCalAdjustMainPathOutputImpedance'
p30250
S'(-200506)'
p30251
sS'DAQmx_CI_DataXferMech'
p30252
S'0x0200'
p30253
sS'DAQmxErrorVirtualTEDSFileNotFound'
p30254
S'(-200784)'
p30255
sS'DAQmxErrorInvalidCalConstOscillatorPhaseDACValue'
p30256
S'(-200518)'
p30257
sS'DAQmx_AI_Thrmcpl_Type'
p30258
S'0x1050'
p30259
sS'DAQmx_Sys_Tasks'
p30260
S'0x1267'
p30261
sS'DAQmxErrorInvalidEnumValueSpecd'
p30262
S'(-201054)'
p30263
sS'DAQmxErrorStopTriggerHasNotOccurred'
p30264
S'(-200008)'
p30265
sS'DAQmxWarningPALFirmwareFault'
p30266
S'(50151)'
p30267
sS'DAQmx_AI_CurrentShunt_Resistance'
p30268
S'0x17F3'
p30269
sS'DAQmx_Val_Interlocked'
p30270
S'12549'
p30271
sS'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty'
p30272
S'(-200774)'
p30273
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_16x32_Matrix'
p30274
S'"2532/1-Wire 16x32 Matrix"'
p30275
sS'DAQmxErrorCascadeDigitizationModeNotSupported'
p30276
S'(-201034)'
p30277
sS'DAQmxErrorMeasCalAdjustOscillatorPhaseDAC'
p30278
S'(-200521)'
p30279
sS'DAQmx_Read_ChangeDetect_HasOverflowed'
p30280
S'0x2194'
p30281
sS'DAQmx_Val_Switch_Topology_2527_1_Wire_64x1_Mux'
p30282
S'"2527/1-Wire 64x1 Mux"'
p30283
sS'DAQmxErrorDeviceNameNotFound_Routing'
p30284
S'(-88717)'
p30285
sS'DAQmxErrorDataXferCustomThresholdNotSpecified'
p30286
S'(-200943)'
p30287
sS'DAQmx_CI_TwoEdgeSep_First_DigSync_Enable'
p30288
S'0x2213'
p30289
sS'DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal'
p30290
S'(-200545)'
p30291
sS'DAQmx_Cal_UserDefinedInfo_MaxSize'
p30292
S'0x191C'
p30293
sS'DAQmxErrorActiveDevNotSupportedWithChanExpansion'
p30294
S'(-201094)'
p30295
sS'DAQmx_Val_Switch_Topology_1127_4_Wire_16x1_Mux'
p30296
S'"1127/4-Wire 16x1 Mux"'
p30297
sS'DAQmxErrorTrailingSpaceInString'
p30298
S'(-200554)'
p30299
sS'DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce'
p30300
S'(-200014)'
p30301
sS'DAQmx_CI_Encoder_ZIndexEnable'
p30302
S'0x0890'
p30303
sS'DAQmx_AI_DataXferCustomThreshold'
p30304
S'0x230C'
p30305
sS'DAQmxErrorCanNotPerformOpWhenNoDevInTask'
p30306
S'(-200477)'
p30307
sS'DAQmxWarningPLLUnlocked'
p30308
S'(200007)'
p30309
sS'DAQmxErrorEveryNSampsTransferredFromBufferNotForInput'
p30310
S'(-200965)'
p30311
sS'DAQmx_Buf_Output_BufSize'
p30312
S'0x186D'
p30313
sS'DAQmxErrorRefTrigDigPatternChanNotInTask'
p30314
S'(-200889)'
p30315
sS'DAQmx_Val_mVoltsPerVoltPerMilliInch'
p30316
S'12505'
p30317
sS'DAQmx_AI_ChanCal_Poly_ForwardCoeff'
p30318
S'0x229F'
p30319
sS'DAQmxErrorSamplesNoLongerWriteable'
p30320
S'(-200289)'
p30321
sS'DAQmxErrorClearTEDSNotSupportedOnRT'
p30322
S'(-200809)'
p30323
sS'DAQmx_Val_Switch_Topology_1194_Quad_4x1_Mux'
p30324
S'"1194/Quad 4x1 Mux"'
p30325
sS'DAQmxErrorCOWritePulseHighTicksNotSupported'
p30326
S'(-200688)'
p30327
sS'DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions'
p30328
S'(200039)'
p30329
sS'DAQmxErrorClearIsLastInstructionOfLoopInScript'
p30330
S'(-200037)'
p30331
sS'DAQmx_CO_CtrTimebaseSrc'
p30332
S'0x0339'
p30333
sS'DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals'
p30334
S'(-200659)'
p30335
sS'DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset'
p30336
S'(-200510)'
p30337
sS'DAQmxErrorWriteChanTypeMismatch'
p30338
S'(-200526)'
p30339
sS'DAQmxErrorPALFileCloseFault'
p30340
S'(-50205)'
p30341
sS'DAQmxErrorCantConfigureTEDSForChan'
p30342
S'(-200791)'
p30343
sS'DAQmx_CI_CountEdges_DirTerm'
p30344
S'0x21E1'
p30345
sS'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc'
p30346
S'0x222A'
p30347
sS'DAQmx_CI_CtrTimebaseActiveEdge'
p30348
S'0x0142'
p30349
sS'DAQmxWarningSampClkRateViolatesSettlingTimeForGen'
p30350
S'(200040)'
p30351
sS'DAQmxErrorMeasCalAdjustMainPathPreAmpOffset'
p30352
S'(-200502)'
p30353
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Mux'
p30354
S'"2501/2-Wire 24x1 Mux"'
p30355
sS'DAQmx_CO_Count'
p30356
S'0x0293'
p30357
sS'DAQmx_DO_UseOnlyOnBrdMem'
p30358
S'0x2265'
p30359
sS'DAQmx_Val_Switch_Topology_2503_4_Wire_12x1_Mux'
p30360
S'"2503/4-Wire 12x1 Mux"'
p30361
sS'DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen'
p30362
S'(-200795)'
p30363
sS'DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse'
p30364
S'(-200733)'
p30365
sS'DAQmxWarningPALResourceNotReserved'
p30366
S'(50102)'
p30367
sS'DAQmx_PersistedTask_AllowInteractiveEditing'
p30368
S'0x22CD'
p30369
sS'DAQmxErrorPALBadWriteOffset'
p30370
S'(-50013)'
p30371
sS'DAQmxErrorCannotConnectChannelToItself'
p30372
S'(-200187)'
p30373
sS'DAQmxErrorKeywordExpectedInScript'
p30374
S'(-200027)'
p30375
sS'DAQmx_DO_Tristate'
p30376
S'0x18F3'
p30377
sS'DAQmx_Val_4Wire'
p30378
S'4'
p30379
sS'DAQmxErrorSamplesCanNotYetBeWritten'
p30380
S'(-200292)'
p30381
sS'DAQmx_CO_Pulse_HighTime'
p30382
S'0x18BA'
p30383
sS'DAQmx_Val_Switch_Topology_2567_Independent'
p30384
S'"2567/Independent"'
p30385
sS'DAQmx_SwitchChan_MaxACSwitchPwr'
p30386
S'0x0644'
p30387
sS'DAQmxErrorCantSyncToExtStimulusFreqDuringCal'
p30388
S'(-200442)'
p30389
sS'DAQmx_SelfCal_LastTemp'
p30390
S'0x1864'
p30391
sS'DAQmx_MasterTimebase_Src'
p30392
S'0x1343'
p30393
sS'DAQmx_Exported_WatchdogExpiredEvent_OutputTerm'
p30394
S'0x21AA'
p30395
sS'DAQmx_Val_SCXI'
p30396
S'12584'
p30397
sS'DAQmxErrorDevCannotProduceMinPulseWidth'
p30398
S'(-200777)'
p30399
sS'DAQmx_ChanType'
p30400
S'0x187F'
p30401
sS'DAQmxErrorZeroSlopeLinearScale'
p30402
S'(-200409)'
p30403
sS'DAQmx_CI_CtrTimebase_DigSync_Enable'
p30404
S'0x2275'
p30405
sS'DAQmxWarningSampValCoercedToMax'
p30406
S'(200021)'
p30407
sS'DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan'
p30408
S'(-200548)'
p30409
sS'DAQmx_DigEdge_StartTrig_Edge'
p30410
S'0x1404'
p30411
sS'DAQmxErrorMarkerOutsideWaveformInScript'
p30412
S'(-200029)'
p30413
sS'DAQmxErrorPALMemoryPageLockFailed'
p30414
S'(-50353)'
p30415
sS'DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall'
p30416
S'(-200868)'
p30417
sS'DAQmx_HshkTrig_Type'
p30418
S'0x22B7'
p30419
sS'DAQmxErrorNoChangeDetectionOnSelectedLineForDevice'
p30420
S'(-201020)'
p30421
sS'DAQmx_AI_RVDT_Sensitivity'
p30422
S'0x0903'
p30423
sS'DAQmxErrorPALThreadControllerIsNotThreadCreator'
p30424
S'(-50602)'
p30425
sS'DAQmx_AO_DataXferMech'
p30426
S'0x0134'
p30427
sS'DAQmxWarningRateViolatesSettlingTime'
p30428
S'(200011)'
p30429
sS'DAQmxErrorDotNetAPINotUnsigned32BitNumber'
p30430
S'(-200499)'
p30431
sS'DAQmx_DO_OutputDriveType'
p30432
S'0x1137'
p30433
sS'DAQmxErrorACCouplingNotAllowedWith50OhmImpedance'
p30434
S'(-200411)'
p30435
sS'DAQmxErrorInvalidSignalModifier_Routing'
p30436
S'(-89150)'
p30437
sS'DAQmxErrorPALMemoryConfigurationFault'
p30438
S'(-50350)'
p30439
sS'DAQmxErrorDuplicatePhysicalChansNotSupported'
p30440
S'(-200072)'
p30441
sS'DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed'
p30442
S'(-200922)'
p30443
sS'DAQmx_AI_Thrmcpl_CJCSrc'
p30444
S'0x1035'
p30445
sS'DAQmx_AI_ResolutionUnits'
p30446
S'0x1764'
p30447
sS'DAQmxErrorInvalidJumperedAttr'
p30448
S'(-200259)'
p30449
sS'DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues'
p30450
S'(-200708)'
p30451
sS'DAQmx_Val_ZeroVolts'
p30452
S'12526'
p30453
sS'DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange'
p30454
S'(-200075)'
p30455
sS'DAQmxErrorReversePolyOrderNotPositive'
p30456
S'(-200402)'
p30457
sS'_NI_uInt32_DEFINED_'
p30458
g28678
sS'DAQmxWarningPALFunctionNotFound'
p30459
S'(50255)'
p30460
sS'DAQmx_AnlgWin_RefTrig_Top'
p30461
S'0x1429'
p30462
sS'DAQmxErrorInvalidCalConstOffsetDACValue'
p30463
S'(-200517)'
p30464
sS'DAQmxErrorPropertyValNotValidTermName'
p30465
S'(-200354)'
p30466
sS'DAQmx_CI_GPS_SyncMethod'
p30467
S'0x1092'
p30468
sS'DAQmx_Val_Lvl'
p30469
S'10210'
p30470
sS'DAQmxErrorExpectedTerminatorInList'
p30471
S'(-200063)'
p30472
sS'DAQmxErrorInvalidSampModeForPositionMeas'
p30473
S'(-200813)'
p30474
sS'DAQmx_Exported_SampClk_Pulse_Polarity'
p30475
S'0x1664'
p30476
sS'DAQmx_AI_MemMapEnable'
p30477
S'0x188C'
p30478
sS'DAQmx_Val_AboveLvl'
p30479
S'10093'
p30480
sS'DAQmxErrorTEDSDoesNotContainPROM'
p30481
S'(-200822)'
p30482
sS'DAQmx_Val_OnBrdMemNotFull'
p30483
S'10242'
p30484
sS'DAQmxErrorRoutingDestTermPXIChassisNotIdentified'
p30485
S'(-200699)'
p30486
sS'DAQmxErrorIncorrectPassword'
p30487
S'(-200110)'
p30488
sS'DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples'
p30489
S'(-200291)'
p30490
sS'DAQmxErrorWriteFailsBufferSizeAutoConfigured'
p30491
S'(-200547)'
p30492
sS'DAQmx_AI_StrainGage_Cfg'
p30493
S'0x0982'
p30494
sS'DAQmx_Exported_CtrOutEvent_Pulse_Polarity'
p30495
S'0x1718'
p30496
sS'DAQmxErrorResourceNotInPool_Routing'
p30497
S'(-88708)'
p30498
sS'DAQmx_Val_AccelUnit_g'
p30499
S'10186'
p30500
sS'DAQmx_Val_CountEdges'
p30501
S'10125'
p30502
sS'DAQmx_CI_Encoder_BInput_DigSync_Enable'
p30503
S'0x2204'
p30504
sS'DAQmx_Val_Switch_Topology_1161_8_SPDT'
p30505
S'"1161/8-SPDT"'
p30506
sS'DAQmxErrorSwitchChanInUse'
p30507
S'(-200200)'
p30508
sS'DAQmxErrorPALDispatcherAlreadyExported'
p30509
S'(-50500)'
p30510
sS'DAQmx_CI_AngEncoder_InitialAngle'
p30511
S'0x0881'
p30512
sS'DAQmxErrorChanSizeTooBigForU32PortWrite'
p30513
S'(-200566)'
p30514
sS'DAQmx_Val_Switch_Topology_1163R_Octal_4x1_Mux'
p30515
S'"1163R/Octal 4x1 Mux"'
p30516
sS'DAQmx_CI_Encoder_AInput_DigFltr_Enable'
p30517
S'0x21FB'
p30518
sS'DAQmxErrorBuiltInCJCSrcNotSupported'
p30519
S'(-200576)'
p30520
sS'DAQmxErrorCouldNotConnectToServer_Routing'
p30521
S'(-88900)'
p30522
sS'DAQmxErrorPALBadDataSize'
p30523
S'(-50005)'
p30524
sS'DAQmx_AnlgEdge_RefTrig_Src'
p30525
S'0x1424'
p30526
sS'DAQmxWarningReadOffsetCoercion'
p30527
S'(200019)'
p30528
sS'DAQmxErrorSelfTestFailed'
p30529
S'(-200020)'
p30530
sS'DAQmx_AI_LVDT_SensitivityUnits'
p30531
S'0x219A'
p30532
sS'DAQmx_Val_TwoPulseCounting'
p30533
S'10313'
p30534
sS'DAQmxErrorUnableToLocateErrorResources'
p30535
S'(-200500)'
p30536
sS'DAQmxErrorPALBadWriteCount'
p30537
S'(-50014)'
p30538
sS'DAQmxErrorPasswordRequired'
p30539
S'(-200111)'
p30540
sS'DAQmxErrorSensorValTooLow'
p30541
S'(-200536)'
p30542
sS'DAQmx_Val_Freq_Voltage'
p30543
S'10181'
p30544
sS'DAQmxErrorStartTrigDigPatternChanNotTristated'
p30545
S'(-200886)'
p30546
sS'DAQmxErrorScaledMinEqualMax'
p30547
S'(-200603)'
p30548
sS'DAQmx_Val_InsideWin'
p30549
S'10199'
p30550
sS'DAQmxErrorDACUnderflow'
p30551
S'(-200018)'
p30552
sS'DAQmxErrorCannotDetectChangesWhenTristateIsFalse'
p30553
S'(-200730)'
p30554
sS'DAQmx_Val_Switch_Topology_1127_2_Wire_4x8_Matrix'
p30555
S'"1127/2-Wire 4x8 Matrix"'
p30556
sS'DAQmx_Val_LeavingWin'
p30557
S'10208'
p30558
sS'DAQmxErrorIdentifierInUse'
p30559
S'(-201028)'
p30560
sS'DAQmx_Val_LeftJustified'
p30561
S'10209'
p30562
sS'DAQmx_Val_AnlgEdge'
p30563
S'10099'
p30564
sS'DAQmxErrorCalibrationSessionAlreadyOpen'
p30565
S'(-200108)'
p30566
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_4x64_Matrix'
p30567
S'"1129/2-Wire 4x64 Matrix"'
p30568
sS'DAQmx_DelayFromSampClk_DelayUnits'
p30569
S'0x1304'
p30570
sS'DAQmxErrorPALFunctionObsolete'
p30571
S'(-50254)'
p30572
sS'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Amplified_Mux'
p30573
S'"2501/1-Wire 48x1 Amplified Mux"'
p30574
sS'DAQmxErrorDifftInternalAIInputSrcs'
p30575
S'(-200677)'
p30576
sS'DAQmx_AI_Accel_Units'
p30577
S'0x0673'
p30578
sS'DAQmxErrorPALMemoryBlockCheckFailed'
p30579
S'(-50354)'
p30580
sS'DAQmxErrorDeviceIDNotSpecifiedInList'
p30581
S'(-200055)'
p30582
sS'DAQmxErrorBufferedAndDataXferPIO'
p30583
S'(-200847)'
p30584
sS'DAQmx_Val_GroupByChannel'
p30585
g28779
sS'DAQmxErrorUnexpectedIDFollowingSwitchOpInList'
p30586
S'(-200529)'
p30587
sS'DAQmxErrorCAPISyncCallbackNotSupportedOnThisPlatform'
p30588
S'(-200942)'
p30589
sS'DAQmx_Exported_RdyForXferEvent_OutputTerm'
p30590
S'0x22B5'
p30591
sS'DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt'
p30592
S'(-200974)'
p30593
sS'DAQmx_Val_GroupByScanNumber'
p30594
g28873
sS'DAQmxErrorAnalogMultiSampWriteNotSupported'
p30595
S'(-200539)'
p30596
sS'DAQmxErrorOffsetTooSmall'
p30597
S'(-200268)'
p30598
sS'DAQmx_Val_AdvCmpltEvent'
p30599
S'12492'
p30600
sS'DAQmxErrorScriptHasInvalidCharacter'
p30601
S'(-200023)'
p30602
sS'DAQmx_Val_10MHzRefClock'
p30603
S'12536'
p30604
sS'DAQmxErrorPALSocketListenerAlreadyRegistered'
p30605
S'(-50501)'
p30606
sS'DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType'
p30607
S'(-200914)'
p30608
sS'DAQmxErrorInvalidSubsetLengthWithinLoopInScript'
p30609
S'(-200249)'
p30610
sS'DAQmxErrorSwitchOperationNotSupported'
p30611
S'(-200193)'
p30612
sS'DAQmxWarningPALResourceNotInitialized'
p30613
S'(50104)'
p30614
sS'DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty'
p30615
S'(-200624)'
p30616
sS'DAQmxErrorGetPropertyNotOutputBufferedTask'
p30617
S'(-200454)'
p30618
sS'DAQmxErrorPrimingCfgFIFO'
p30619
S'(-200329)'
p30620
sS'DAQmx_Val_Switch_Topology_2576_Independent'
p30621
S'"2576/Independent"'
p30622
sS'DAQmx_AO_Gain'
p30623
S'0x0118'
p30624
sS'DAQmxErrorDataVoltageLowAndHighIncompatible'
p30625
S'(-200902)'
p30626
sS'DAQmxErrorTooManyEventsGenerated'
p30627
S'(-200992)'
p30628
sS'DAQmxError2OutputPortCombinationGivenSampTimingType653x'
p30629
S'(-200930)'
p30630
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_8x32_Matrix'
p30631
S'"1130/1-Wire 8x32 Matrix"'
p30632
sS'DAQmxErrorVirtualChanDoesNotExist'
p30633
S'(-200488)'
p30634
sS'DAQmx_Val_SampleClock'
p30635
S'12487'
p30636
sS'DAQmxErrorProcedureNameExpectedInScript'
p30637
S'(-200025)'
p30638
sS'DAQmx_Val_Period'
p30639
S'10256'
p30640
sS'DAQmxErrorTrigBusLineNotAvail'
p30641
S'(-200226)'
p30642
sS'DAQmx_AI_Accel_Sensitivity'
p30643
S'0x0692'
p30644
sS'DAQmxErrorReferenceFrequencyInvalid'
p30645
S'(-200156)'
p30646
sS'DAQmxErrorPrescalerNot1ForInputTerminal'
p30647
S'(-200841)'
p30648
sS'DAQmxErrorTEDSTemplateParametersNotSupported'
p30649
S'(-200754)'
p30650
sS'DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty'
p30651
S'(-200625)'
p30652
sS'DAQmxErrorMoreThanOneMatchForSpecdDevice'
p30653
S'(-201043)'
p30654
sS'DAQmxErrorLocalChannelSpecdWithNoParentTask'
p30655
S'(-201073)'
p30656
sS'DAQmxErrorReversePowerProtectionActivated'
p30657
S'(-200617)'
p30658
sS'DAQmx_Val_Switch_Topology_2593_Independent'
p30659
S'"2593/Independent"'
p30660
sS'DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO'
p30661
S'(-200996)'
p30662
sS'DAQmxErrorOnlyFrontEndChanOpsDuringScan'
p30663
S'(-200377)'
p30664
sS'DAQmxErrorMultScanOpsInOneChassis'
p30665
S'(-200619)'
p30666
sS'DAQmx_Scale_Map_ScaledMax'
p30667
S'0x1229'
p30668
sS'DAQmxErrorPreScaledMinEqualMax'
p30669
S'(-200602)'
p30670
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_4x64_Matrix'
p30671
S'"1130/1-Wire 4x64 Matrix"'
p30672
sS'DAQmx_PauseTrig_Type'
p30673
S'0x1366'
p30674
sS'DAQmx_SwitchDev_Settled'
p30675
S'0x1243'
p30676
sS'DAQmx_AnlgWin_PauseTrig_Top'
p30677
S'0x1376'
p30678
sS'DAQmx_Val_FiniteSamps'
p30679
S'10178'
p30680
sS'DAQmxErrorInvalidTimeFormat'
p30681
S'(-201036)'
p30682
sS'DAQmxErrorPALFeatureDisabled'
p30683
S'(-50265)'
p30684
sS'DAQmx_SyncPulse_MinDelayToStart'
p30685
S'0x223F'
p30686
sS'DAQmx_DelayFromSampClk_Delay'
p30687
S'0x1317'
p30688
sS'DAQmxErrorZeroForwardPolyScaleCoeffs'
p30689
S'(-200407)'
p30690
sS'DAQmx_Val_LossyLSBRemoval'
p30691
S'12556'
p30692
sS'DAQmxErrorInvalidAIGainCalConst'
p30693
S'(-200718)'
p30694
sS'DAQmx_CI_AngEncoder_PulsesPerRev'
p30695
S'0x0875'
p30696
sS'DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals'
p30697
S'(-200938)'
p30698
sS'DAQmxErrorInterconnectLineReserved'
p30699
S'(-54010)'
p30700
sS'DAQmxErrorChanCalTableScaledValsNotSpecd'
p30701
S'(-200937)'
p30702
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_Quad_32x1_Mux'
p30703
S'"1130/2-Wire Quad 32x1 Mux"'
p30704
sS'DAQmx_ExtCal_RecommendedInterval'
p30705
S'0x1868'
p30706
sS'DAQmx_Val_Diff'
p30707
S'10106'
p30708
sS'DAQmx_ArmStartTrig_Type'
p30709
S'0x1414'
p30710
sS'DAQmx_Val_AnlgLvl'
p30711
S'10101'
p30712
sS'DAQmx_Val_OnDemand'
p30713
S'10390'
p30714
sS'DAQmx_AI_SampAndHold_Enable'
p30715
S'0x181A'
p30716
sS'DAQmx_PersistedChan_Author'
p30717
S'0x22D0'
p30718
sS'DAQmxErrorNULLPtr'
p30719
S'(-200604)'
p30720
sS'DAQmxWarningRateViolatesMinADCRate'
p30721
S'(200035)'
p30722
sS'DAQmx_Exported_StartTrig_OutputTerm'
p30723
S'0x0584'
p30724
sS'DAQmxErrorInvalidCloseAction'
p30725
S'(-200440)'
p30726
sS'DAQmxErrorInvalidDigDataWrite'
p30727
S'(-200562)'
p30728
sS'DAQmxErrorCannotPerformOpWhenTaskNotRunning'
p30729
S'(-200475)'
p30730
sS'DAQmxErrorChangeDetectionChanNotTristated'
p30731
S'(-200925)'
p30732
sS'DAQmxErrorVirtualChanNameUsed'
p30733
S'(-200171)'
p30734
sS'DAQmx_Val_Switch_Topology_1195_Quad_4x1_Mux'
p30735
S'"1195/Quad 4x1 Mux"'
p30736
sS'DAQmxErrorFailedToEnableHighSpeedInputClock'
p30737
S'(-200627)'
p30738
sS'DAQmx_AO_IdleOutputBehavior'
p30739
S'0x2240'
p30740
sS'DAQmx_Val_Volts'
p30741
S'10348'
p30742
sS'DAQmx_Dev_PCI_BusNum'
p30743
S'0x2327'
p30744
sS'DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit'
p30745
S'(-200977)'
p30746
sS'DAQmx_WatchdogExpirTrig_Type'
p30747
S'0x21A3'
p30748
sS'DAQmxErrorRoutingDestTermPXIStarInSlot2'
p30749
S'(-200701)'
p30750
sS'DAQmxErrorValueFoundInInvalidColumn'
p30751
S'(-201066)'
p30752
sS'DAQmxErrorPALBadReadMode'
p30753
S'(-50009)'
p30754
sS'DAQmxErrorRouteSrcAndDestSame'
p30755
S'(-200326)'
p30756
sS'DAQmxErrorInvalidCalVoltageForGivenGain'
p30757
S'(-200750)'
p30758
sS'DAQmxErrorExtCalAdjustExtRefVoltageFailed'
p30759
S'(-200546)'
p30760
sS'DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x'
p30761
S'(-200899)'
p30762
sS'DAQmx_Scale_Map_PreScaledMin'
p30763
S'0x1232'
p30764
sS'DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2'
p30765
S'(-200852)'
p30766
sS'DAQmx_Val_Switch_Topology_1128_2_Wire_32x1_Mux'
p30767
S'"1128/2-Wire 32x1 Mux"'
p30768
sS'DAQmx_Val_5Wire'
p30769
g29432
sS'DAQmx_Val_Switch_Topology_1128_4_Wire_16x1_Mux'
p30770
S'"1128/4-Wire 16x1 Mux"'
p30771
sS'DAQmx_AI_RTD_R0'
p30772
S'0x1030'
p30773
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Quad_64x1_Mux'
p30774
S'"1130/1-Wire Quad 64x1 Mux"'
p30775
sS'DAQmxErrorPALMessageUnderflow'
p30776
S'(-50651)'
p30777
sS'DAQmxErrorPALBusError'
p30778
S'(-50413)'
p30779
sS'DAQmx_Val_AandB'
p30780
S'12515'
p30781
sS'DAQmxErrorInvalidCharInPattern'
p30782
S'(-200496)'
p30783
sS'DAQmxErrorWaveformInScriptNotInMem'
p30784
S'(-200028)'
p30785
sS'DAQmx_AO_DAC_Ref_Val'
p30786
S'0x1832'
p30787
sS'DAQmxErrorCOWritePulseLowTicksNotSupported'
p30788
S'(-200689)'
p30789
sS'DAQmx_CI_GPS_SyncSrc'
p30790
S'0x1093'
p30791
sS'DAQmxErrorRepeatedPhysicalChan'
p30792
S'(-200371)'
p30793
sS'DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc'
p30794
S'0x2278'
p30795
sS'DAQmx_Watchdog_HasExpired'
p30796
S'0x21A8'
p30797
sS'DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice'
p30798
S'(-200981)'
p30799
sS'DAQmx_Val_CountDown'
p30800
S'10124'
p30801
sS'DAQmx_Val_Falling'
p30802
S'10171'
p30803
sS'DAQmxErrorChangeDetectionChanNotInTask'
p30804
S'(-200926)'
p30805
sS'DAQmxErrorLabVIEWInvalidTaskOrChans'
p30806
S'(-200428)'
p30807
sS'DAQmx_Hshk_DelayAfterXfer'
p30808
S'0x22C2'
p30809
sS'DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort'
p30810
S'(-200665)'
p30811
sS'DAQmx_PersistedChan_AllowInteractiveEditing'
p30812
S'0x22D1'
p30813
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_8x64_Matrix'
p30814
S'"2532/1-Wire 8x64 Matrix"'
p30815
sS'DAQmxErrorReferenceResistanceInvalid'
p30816
S'(-200155)'
p30817
sS'DAQmx_Val_Save_AllowInteractiveDeletion'
p30818
S'(1<<2)'
p30819
sS'DAQmx_DigEdge_StartTrig_DigFltr_Enable'
p30820
S'0x2223'
p30821
sS'DAQmxErrorPALTransferOverread'
p30822
S'(-50411)'
p30823
sS'DAQmx_CO_Pulse_LowTicks'
p30824
S'0x1171'
p30825
sS'DAQmx_RefTrig_Type'
p30826
S'0x1419'
p30827
sS'DAQmx_AO_OutputImpedance'
p30828
S'0x1490'
p30829
sS'DAQmx_CI_LinEncoder_DistPerPulse'
p30830
S'0x0911'
p30831
sS'DAQmx_Val_Switch_Topology_2565_16_SPST'
p30832
S'"2565/16-SPST"'
p30833
sS'DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate'
p30834
S'0x2279'
p30835
sS'DAQmxErrorUnexpectedSwitchActionInList'
p30836
S'(-200065)'
p30837
sS'DAQmxErrorNoTEDSTerminalBlock'
p30838
S'(-200743)'
p30839
sS'DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList'
p30840
S'(-200204)'
p30841
sS'DAQmx_Val_WaitForHandshakeTriggerDeassert'
p30842
S'12551'
p30843
sS'DAQmx_PersistedChan_AllowInteractiveDeletion'
p30844
S'0x22D2'
p30845
sS'DAQmxErrorResourceAlreadyReserved'
p30846
S'(-200022)'
p30847
sS'DAQmx_Val_SameAsSampTimebase'
p30848
S'10284'
p30849
sS'DAQmx_StartTrig_Delay'
p30850
S'0x1856'
p30851
sS'DAQmx_AO_Resolution'
p30852
S'0x182C'
p30853
sS'DAQmx_Val_Amps'
p30854
S'10342'
p30855
sS'DAQmx_Val_DoNotWrite'
p30856
S'12540'
p30857
sS'DAQmxErrorOddTotalBufferSizeToWrite'
p30858
S'(-200693)'
p30859
sS'DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist'
p30860
S'(-200637)'
p30861
sS'DAQmx_Val_B'
p30862
S'12514'
p30863
sS'DAQmx_Val_A'
p30864
S'12513'
p30865
sS'DAQmx_AI_Bridge_ShuntCal_GainAdjust'
p30866
S'0x193F'
p30867
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_8x16_Matrix'
p30868
S'"2529/2-Wire 8x16 Matrix"'
p30869
sS'DAQmxErrorInvalidAOGainCalConst'
p30870
S'(-200720)'
p30871
sS'DAQmx_Val_High'
p30872
S'10192'
p30873
sS'DAQmxErrorWriteWhenTaskNotRunningCOTicks'
p30874
S'(-200876)'
p30875
sS'DAQmxErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint'
p30876
S'(-201021)'
p30877
sS'DAQmx_AI_Excit_UseMultiplexed'
p30878
S'0x2180'
p30879
sS'DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType'
p30880
S'(-200858)'
p30881
sS'DAQmx_Val_g'
p30882
S'10186'
p30883
sS'DAQmxWarningPXIDevTempExceedsMaxOpTemp'
p30884
S'(200030)'
p30885
sS'DAQmxErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc'
p30886
S'(-201091)'
p30887
sS'DAQmxErrorSignalEventAlreadyRegistered'
p30888
S'(-200949)'
p30889
sS'DAQmx_AnlgLvl_PauseTrig_Coupling'
p30890
S'0x2236'
p30891
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_4x128_Matrix'
p30892
S'"2532/1-Wire 4x128 Matrix"'
p30893
sS'DAQmxErrorLeadingSpaceInString'
p30894
S'(-200553)'
p30895
sS'DAQmxErrorInvalidRecordNum'
p30896
S'(-200410)'
p30897
sS'DAQmx_Interlocked_HshkTrig_AssertedLvl'
p30898
S'0x22B9'
p30899
sS'DAQmx_AI_ChanCal_OperatorName'
p30900
S'0x22A3'
p30901
sS'DAQmxErrorUnitsNotFromCustomScale'
p30902
S'(-200447)'
p30903
sS'DAQmx_Val_Task_Stop'
p30904
g28873
sS'DAQmx_Val_DigPattern'
p30905
S'10398'
p30906
sS'DAQmxErrorTEDSLinearMappingSlopeZero'
p30907
S'(-200764)'
p30908
sS'DAQmxErrorCtrExportSignalNotPossible'
p30909
S'(-200359)'
p30910
sS'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo'
p30911
S'(-200136)'
p30912
sS'DAQmxErrorAttrCannotBeSet'
p30913
S'(-200231)'
p30914
sS'DAQmx_SampClk_DigFltr_Enable'
p30915
S'0x221E'
p30916
sS'DAQmxErrorSubsetOutsideWaveformInScript'
p30917
S'(-200030)'
p30918
sS'DAQmx_Val_BreakBeforeMake'
p30919
S'10110'
p30920
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc'
p30921
S'0x222F'
p30922
sS'DAQmx_Val_NRSE'
p30923
S'10078'
p30924
sS'DAQmxErrorNoPolyScaleCoeffs'
p30925
S'(-200404)'
p30926
sS'DAQmx_Val_Temp_BuiltInSensor'
p30927
S'10311'
p30928
sS'DAQmxErrorPrescalerNot1ForTimebaseSrc'
p30929
S'(-200840)'
p30930
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_Dual_4x16_Matrix'
p30931
S'"2529/2-Wire Dual 4x16 Matrix"'
p30932
sS'DAQmx_DI_NumLines'
p30933
S'0x2178'
p30934
sS'DAQmxErrorChansAlreadyConnected'
p30935
S'(-200184)'
p30936
sS'DAQmxErrorOutputBoardClkDCMBecameUnlocked'
p30937
S'(-200388)'
p30938
sS'DAQmxErrorDelayFromStartTrigTooLong'
p30939
S'(-200334)'
p30940
sS'DAQmxErrorInvalidCharInDigPatternString'
p30941
S'(-200901)'
p30942
sS'DAQmxErrorTrigAIMinAIMax'
p30943
S'(-200422)'
p30944
sS'DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc'
p30945
S'0x2273'
p30946
sS'DAQmx_PhysicalChan_TEDS_MfgID'
p30947
S'0x21DA'
p30948
sS'DAQmx_Buf_Input_BufSize'
p30949
S'0x186C'
p30950
sS'DAQmx_Val_ContSamps'
p30951
S'10123'
p30952
sS'DAQmx_Val_AHighBLow'
p30953
S'10041'
p30954
sS'DAQmx_CI_Freq_Term'
p30955
S'0x18A2'
p30956
sS'DAQmx_CI_SemiPeriod_DigFltr_Enable'
p30957
S'0x2219'
p30958
sS'DAQmx_Dev_DO_Lines'
p30959
S'0x2322'
p30960
sS'DAQmxErrorTooManyChans'
p30961
S'(-200168)'
p30962
sS'DAQmxErrorMultiRecWithRIS'
p30963
S'(-200416)'
p30964
sS'DAQmx_Val_Handshake'
p30965
S'10389'
p30966
sS'DAQmx_Val_Switch_Topology_2591_4x1_Mux'
p30967
S'"2591/4x1 Mux"'
p30968
sS'DAQmx_Val_FullBridge'
p30969
S'10182'
p30970
sS'DAQmxErrorMoreThanOneActiveChannelSpecified'
p30971
S'(-200097)'
p30972
sS'DAQmxErrorPALTransferAborted'
p30973
S'(-50405)'
p30974
sS'DAQmxErrorChanDuplicatedInPath'
p30975
S'(-200183)'
p30976
sS'DAQmxErrorInvalidCharInString'
p30977
S'(-200552)'
p30978
sS'DAQmxErrorChannelNameNotSpecifiedInList'
p30979
S'(-200056)'
p30980
sS'DAQmx_CO_Pulse_Time_InitialDelay'
p30981
S'0x18BC'
p30982
sS'DAQmx_Val_Switch_Topology_2593_16x1_Mux'
p30983
S'"2593/16x1 Mux"'
p30984
sS'DAQmxErrorSampClkTimebaseSrcInvalid'
p30985
S'(-201088)'
p30986
sS'DAQmx_Val_Switch_Topology_2570_40_SPDT'
p30987
S'"2570/40-SPDT"'
p30988
sS'DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO'
p30989
S'(-200796)'
p30990
sS'DAQmx_AI_LVDT_Sensitivity'
p30991
S'0x0939'
p30992
sS'DAQmxErrorSensorValTooHigh'
p30993
S'(-200535)'
p30994
sS'DAQmxWarningPALBadWindowType'
p30995
S'(50016)'
p30996
sS'DAQmx_DigPattern_StartTrig_Src'
p30997
S'0x1410'
p30998
sS'DAQmxErrorPALComponentImageCorrupt'
p30999
S'(-50257)'
p31000
sS'DAQmxErrorTooManyPhysicalChansInList'
p31001
S'(-200071)'
p31002
sS'DAQmx_CI_PulseWidth_StartingEdge'
p31003
S'0x0825'
p31004
sS'DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript'
p31005
S'(-201007)'
p31006
sS'DAQmxErrorSampClkRateTooLowForDivDown'
p31007
S'(-200272)'
p31008
sS'DAQmx_Val_Sleep'
p31009
S'12547'
p31010
sS'DAQmxErrorFailedToAcquireCalData'
p31011
S'(-200697)'
p31012
sS'DAQmx_Dev_BusType'
p31013
S'0x2326'
p31014
sS'DAQmxErrorHystTrigLevelAIMin'
p31015
S'(-200421)'
p31016
sS'_NI_int32_DEFINED_'
p31017
g28678
sS'DAQmxErrorInconsistentUnitsSpecified'
p31018
S'(-200212)'
p31019
sS'DAQmxErrorSampClkRateDoesntMatchSampClkSrc'
p31020
S'(-201002)'
p31021
sS'DAQmx_Val_Inches'
p31022
S'10379'
p31023
sS'DAQmxSuccess'
p31024
S'(0)'
p31025
sS'DAQmxErrorInvalidRoutingSourceTerminalName'
p31026
S'(-200040)'
p31027
sS'DAQmx_Exported_20MHzTimebase_OutputTerm'
p31028
S'0x1657'
p31029
sS'DAQmx_Val_GPS_Timestamp'
p31030
S'10362'
p31031
sS'DAQmx_AI_ForceReadFromChan'
p31032
S'0x18F8'
p31033
sS'DAQmx_AI_ChanCal_Table_ScaledVals'
p31034
S'0x229E'
p31035
sS'DAQmxErrorGenStoppedToPreventRegenOfOldSamples'
p31036
S'(-200290)'
p31037
sS'DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning'
p31038
S'(-200832)'
p31039
sS'DAQmxErrorInvalidInstallation'
p31040
S'(-200683)'
p31041
sS'DAQmxErrorExtMasterTimebaseRateNotSpecified'
p31042
S'(-200304)'
p31043
sS'DAQmxErrorAccessorySettingNotApplicable'
p31044
S'(-201048)'
p31045
sS'DAQmx_Val_BelowLvl'
p31046
S'10107'
p31047
sS'DAQmx_AnlgEdge_RefTrig_Coupling'
p31048
S'0x2235'
p31049
sS'DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode'
p31050
S'(-200737)'
p31051
sS'DAQmx_AnlgEdge_RefTrig_Hyst'
p31052
S'0x1421'
p31053
sS'DAQmxErrorEventOutputTermIncludesTrigSrc'
p31054
S'(-200952)'
p31055
sS'DAQmxErrorInvalidSubsetLengthInScript'
p31056
S'(-200032)'
p31057
sS'DAQmxWarningDevNotSelfCalibratedWithDAQmx'
p31058
S'(200016)'
p31059
sS'DAQmxErrorExcitationNotSupportedWhenTermCfgDiff'
p31060
S'(-200817)'
p31061
sS'DAQmxErrorChanSizeTooBigForU16PortWrite'
p31062
S'(-200879)'
p31063
sS'DAQmx_Val_FallingSlope'
p31064
S'10171'
p31065
sS'DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset'
p31066
S'(-200512)'
p31067
sS'DAQmxErrorCouldNotReserveRequestedTrigLine_Routing'
p31068
S'(-89126)'
p31069
sS'DAQmxErrorInvalidAccessoryName'
p31070
S'(-201044)'
p31071
sS'DAQmx_Val_ResetTimer'
p31072
g28779
sS'DAQmxErrorNoChangeDetectOnNonInputDigLineForDev'
p31073
S'(-200798)'
p31074
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Octal_32x1_Mux'
p31075
S'"1130/1-Wire Octal 32x1 Mux"'
p31076
sS'DAQmx_DI_Tristate'
p31077
S'0x1890'
p31078
sS'DAQmxErrorPALDiskFull'
p31079
S'(-50203)'
p31080
sS'DAQmxErrorExtCalNotComplete'
p31081
S'(-200443)'
p31082
sS'DAQmxErrorTaskReferencesMissingLocalChannel'
p31083
S'(-201072)'
p31084
sS'DAQmx_AO_ResolutionUnits'
p31085
S'0x182B'
p31086
sS'DAQmxErrorOutputBufferEmpty'
p31087
S'(-200462)'
p31088
sS'DAQmxErrorInvalidHWProductNumber'
p31089
S'(-201058)'
p31090
sS'DAQmx_Val_Switch_Topology_2594_4x1_Mux'
p31091
S'"2594/4x1 Mux"'
p31092
sS'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask'
p31093
S'(-200775)'
p31094
sS'DAQmxErrorOutputCantStartChangedBufferSize'
p31095
S'(-200567)'
p31096
sS'DAQmxErrorFunctionNotInLibrary'
p31097
S'(-200091)'
p31098
sS'DAQmxErrorPALFileOpenFault'
p31099
S'(-50204)'
p31100
sS'DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning'
p31101
S'(-200986)'
p31102
sS'DAQmxWarningPALComponentInitializationFault'
p31103
S'(50258)'
p31104
sS'DAQmxErrorNonbufferedReadMoreThanSampsPerChan'
p31105
S'(-200655)'
p31106
sS'DAQmx_Val_Action_Commit'
p31107
g28779
sS'DAQmxErrorInvalidExtTrigImpedance'
p31108
S'(-200426)'
p31109
sS'DAQmxErrorResourcesInUseForRoute_Routing'
p31110
S'(-89137)'
p31111
sS'DAQmxErrorDifferentDITristateValsForChansInTask'
p31112
S'(-200724)'
p31113
sS'DAQmx_Val_Pascals'
p31114
S'10081'
p31115
sS'DAQmxErrorStartFailedDueToWriteFailure'
p31116
S'(-200946)'
p31117
sS'DAQmxErrorTooManyChansForAnalogRefTrig'
p31118
S'(-200264)'
p31119
sS'DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch'
p31120
S'(-200893)'
p31121
sS'DAQmxWarningAISampRateTooLow'
p31122
S'(200017)'
p31123
sS'DAQmx_CI_Period_DigFltr_TimebaseRate'
p31124
S'0x21EF'
p31125
sS'DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt'
p31126
S'(-200787)'
p31127
sS'DAQmxErrorDigOutputOverrun'
p31128
S'(-200716)'
p31129
sS'DAQmx_RealTime_ConvLateErrorsToWarnings'
p31130
S'0x22EE'
p31131
sS'DAQmx_Val_RSE'
p31132
S'10083'
p31133
sS'DAQmx_Val_PathStatus_Unsupported'
p31134
S'10433'
p31135
sS'DAQmxWarningPALFeatureNotSupported'
p31136
S'(50256)'
p31137
sS'DAQmxErrorCannotHandshakeWhenTristateIsFalse'
p31138
S'(-200729)'
p31139
sS'DAQmx_Dev_ProductNum'
p31140
S'0x231D'
p31141
sS'DAQmxErrorFunctionNotSupportedForDeviceTasks'
p31142
S'(-200092)'
p31143
sS'DAQmxErrorTrigWhenOnDemandSampTiming'
p31144
S'(-200262)'
p31145
sS'DAQmxErrorPALBadAddressSpace'
p31146
S'(-50017)'
p31147
sS'DAQmx_Exported_AIConvClk_OutputTerm'
p31148
S'0x1687'
p31149
sS'DAQmx_Val_PCCard'
p31150
S'12585'
p31151
sS'DAQmxErrorDACRngHighNotEqualRefVal'
p31152
S'(-200448)'
p31153
sS'DAQmxErrorCJCChanNotSpecd'
p31154
S'(-200360)'
p31155
sS'DAQmx_Val_Switch_Topology_1130_Independent'
p31156
S'"1130/Independent"'
p31157
sS'DAQmx_Val_ALowBLow'
p31158
S'10043'
p31159
sS'__CFUNC'
p31160
S'__stdcall'
p31161
sS'DAQmxErrorPLLNotLocked'
p31162
S'(-201015)'
p31163
sS'DAQmxErrorSCXIModuleNotFound'
p31164
S'(-200073)'
p31165
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_4x16_Matrix'
p31166
S'"2530/2-Wire 4x16 Matrix"'
p31167
sS'DAQmx_CI_OutputState'
p31168
S'0x0149'
p31169
sS'DAQmxErrorRoutingHardwareBusy'
p31170
S'(-200043)'
p31171
sS'DAQmx_Val_ChangeDetectionEvent'
p31172
S'12511'
p31173
sS'DAQmxErrorInvalidTimingSrcDueToSampTimingType'
p31174
S'(-200785)'
p31175
sS'DAQmx_AO_Current_Units'
p31176
S'0x1109'
p31177
sS'DAQmxWarningPALSyncAbandoned'
p31178
S'(50551)'
p31179
sS'DAQmx_AI_Min'
p31180
S'0x17DE'
p31181
sS'DAQmxErrorDuplicateChanNameInCfgFile'
p31182
S'(-201081)'
p31183
sS'DAQmxErrorChansCantAppearInSameTask'
p31184
S'(-200713)'
p31185
sS'DAQmxErrorIntExcitSrcNotAvailable'
p31186
S'(-200161)'
p31187
sS'DAQmx_Val_mVoltsPerVoltPerDegree'
p31188
S'12507'
p31189
sS'DAQmx_AI_ChanCal_EnableCal'
p31190
S'0x2298'
p31191
sS'DAQmx_Read_ChannelsToRead'
p31192
S'0x1823'
p31193
sS'DAQmx_AI_StrainGage_GageFactor'
p31194
S'0x0994'
p31195
sS'DAQmx_Read_CurrReadPos'
p31196
S'0x1221'
p31197
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate'
p31198
S'0x21F4'
p31199
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate'
p31200
S'0x2230'
p31201
sS'DAQmxErrorInvalidTerm_Routing'
p31202
S'(-89129)'
p31203
sS'DAQmxErrorCppCantRemoveOtherObjectsEventHandler'
p31204
S'(-200588)'
p31205
sS'DAQmxErrorCantSetPowerupStateOnDigInChan'
p31206
S'(-200650)'
p31207
sS'DAQmx_CI_TwoEdgeSep_FirstTerm'
p31208
S'0x18AD'
p31209
sS'DAQmxErrorMinNotLessThanMax'
p31210
S'(-200082)'
p31211
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth'
p31212
S'0x2215'
p31213
sS'DAQmx_DigLvl_PauseTrig_DigSync_Enable'
p31214
S'0x222C'
p31215
sS'DAQmxErrorInvalidTopology'
p31216
S'(-200198)'
p31217
sS'DAQmxErrorCAPINoExtendedErrorInfoAvailable'
p31218
S'(-200399)'
p31219
sS'DAQmx_Val_Switch_Topology_2593_Dual_4x1_Terminated_Mux'
p31220
S'"2593/Dual 4x1 Terminated Mux"'
p31221
sS'DAQmxErrorInvalidOutputVoltageAtSampClkRate'
p31222
S'(-200392)'
p31223
sS'DAQmx_Exported_AdvCmpltEvent_OutputTerm'
p31224
S'0x1651'
p31225
sS'DAQmx_AI_Bridge_Cfg'
p31226
S'0x0087'
p31227
sS'DAQmxWarningSampClkRateAboveDevSpecs'
p31228
S'(200036)'
p31229
sS'DAQmxErrorMoreThanOneTerminal'
p31230
S'(-200098)'
p31231
sS'DAQmxErrorDuplicateDeviceName_Routing'
p31232
S'(-88715)'
p31233
sS'DAQmxErrorConnectOperatorInvalidAtPointInList'
p31234
S'(-200066)'
p31235
sS'DAQmx_AnlgEdge_StartTrig_Lvl'
p31236
S'0x1396'
p31237
sS'DAQmxWarningPALResourceInitialized'
p31238
S'(50105)'
p31239
sS'DAQmxErrorPhysicalChanNotOnThisConnector'
p31240
S'(-200851)'
p31241
sS'DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels'
p31242
S'(-200128)'
p31243
sS'DAQmxErrorChanSizeTooBigForU8PortWrite'
p31244
S'(-200565)'
p31245
sS'DAQmx_CI_CtrTimebaseMasterTimebaseDiv'
p31246
S'0x18B3'
p31247
sS'DAQmx_Val_20MHzTimebaseClock'
p31248
S'12486'
p31249
sS'DAQmxErrorBufferAndDataXferMode'
p31250
S'(-200216)'
p31251
sS'_NI_float64_DEFINED_'
p31252
g28678
sS'DAQmx_AO_DAC_Ref_ExtSrc'
p31253
S'0x2252'
p31254
sS'DAQmx_Val_3Wire'
p31255
g29279
sS'DAQmx_Val_ActiveDrive'
p31256
S'12573'
p31257
sS'DAQmx_Val_Ticks'
p31258
S'10304'
p31259
sS'_NI_int64_DEFINED_'
p31260
g28678
sS'DAQmxErrorIntegerExpectedInScript'
p31261
S'(-200247)'
p31262
sS'DAQmxErrorCOWritePulseLowTimeOutOfRange'
p31263
S'(-200687)'
p31264
sS'DAQmx_SampClk_Timebase_MasterTimebaseDiv'
p31265
S'0x1305'
p31266
sS'DAQmxErrorSuitableTimebaseNotFoundTimeCombo'
p31267
S'(-200137)'
p31268
sS'DAQmxErrorCJCChanAlreadyUsed'
p31269
S'(-200352)'
p31270
sS'DAQmxErrorChanAlreadyInTask'
p31271
S'(-200489)'
p31272
sS'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev'
p31273
S'(-200807)'
p31274
sS'DAQmxErrorPropertyNotSupportedForScaleType'
p31275
S'(-200601)'
p31276
sS'DAQmxWarningPALBadMode'
p31277
S'(50006)'
p31278
sS'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc'
p31279
S'0x2225'
p31280
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_Quad_6x1_Mux'
p31281
S'"2503/2-Wire Quad 6x1 Mux"'
p31282
sS'DAQmxErrorWriteToTEDSFailed'
p31283
S'(-200836)'
p31284
sS'DAQmx_CO_Pulse_LowTime'
p31285
S'0x18BB'
p31286
sS'DAQmxErrorHystTrigLevelAIMax'
p31287
S'(-200425)'
p31288
sS'DAQmx_RefTrig_PretrigSamples'
p31289
S'0x1445'
p31290
sS'DAQmxErrorPropertyNotSupportedForTimingSrc'
p31291
S'(-200739)'
p31292
sS'DAQmx_Val_Switch_Topology_1193_Dual_8x1_Terminated_Mux'
p31293
S'"1193/Dual 8x1 Terminated Mux"'
p31294
sS'DAQmxErrorTypeUnknown'
p31295
S'(-54020)'
p31296
sS'DAQmxErrorCounterMaxMinRangeFreq'
p31297
S'(-200139)'
p31298
sS'DAQmx_Val_NoAction'
p31299
S'10227'
p31300
sS'DAQmxWarningPALBadSelector'
p31301
S'(50003)'
p31302
sS'DAQmxErrorNULLPtrForC_Api'
p31303
S'(-200230)'
p31304
sS'DAQmx_AnlgLvl_PauseTrig_Lvl'
p31305
S'0x1369'
p31306
sS'DAQmx_Val_Closed'
p31307
S'10438'
p31308
sS'DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x'
p31309
S'(-200892)'
p31310
sS'DAQmxErrorPowerupStateNotSpecdForEntirePort'
p31311
S'(-200652)'
p31312
sS'DAQmxErrorReadNotCompleteBeforeSampClk'
p31313
S'(-209800)'
p31314
sS'DAQmx_Val_Switch_Topology_1193_16x1_Terminated_Mux'
p31315
S'"1193/16x1 Terminated Mux"'
p31316
sS'DAQmx_Exported_CtrOutEvent_Toggle_IdleState'
p31317
S'0x186A'
p31318
sS'DAQmxErrorPolyCoeffsInconsistent'
p31319
S'(-200537)'
p31320
sS'DAQmxErrorOperationTimedOut'
p31321
S'(-200474)'
p31322
sS'DAQmxWarningUserDefInfoStringTooLong'
p31323
S'(200013)'
p31324
sS'DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev'
p31325
S'(-200494)'
p31326
sS'DAQmxErrorIllegalAccessoryTypeForDeviceSpecd'
p31327
S'(-201046)'
p31328
sS'DAQmxErrorHardwareNotResponding'
p31329
S'(-200175)'
p31330
sS'DAQmxErrorInvalidTerm'
p31331
S'(-200254)'
p31332
sS'DAQmxErrorSampClkDCMLock'
p31333
S'(-200239)'
p31334
sS'DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x'
p31335
S'(-200898)'
p31336
sS'DAQmx_Exported_AdvTrig_Pulse_Width'
p31337
S'0x1648'
p31338
sS'DAQmx_AI_Bridge_ShuntCal_Enable'
p31339
S'0x0094'
p31340
sS'DAQmxErrorDoneEventAlreadyRegistered'
p31341
S'(-200950)'
p31342
sS'DAQmxErrorInvalidOptionForDigitalPortChannel'
p31343
S'(-200376)'
p31344
sS'DAQmx_StartTrig_Retriggerable'
p31345
S'0x190F'
p31346
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Sixteen_2x16_Matrix'
p31347
S'"2532/1-Wire Sixteen 2x16 Matrix"'
p31348
sS'DAQmx_Watchdog_Timeout'
p31349
S'0x21A9'
p31350
sS'DAQmxErrorInvalidNumCalADCReadsToAverage'
p31351
S'(-200515)'
p31352
sS'DAQmxWarningPALTransferAborted'
p31353
S'(50405)'
p31354
sS'DAQmxWarningDeviceMayShutDownDueToHighTemp'
p31355
S'(200034)'
p31356
sS'DAQmxErrorTaskReferencesLocalChannelFromOtherTask'
p31357
S'(-201071)'
p31358
sS'DAQmxErrorCounterOverflow'
p31359
S'(-200141)'
p31360
sS'DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput'
p31361
S'(-200727)'
p31362
sS'DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks'
p31363
S'(-200848)'
p31364
sS'DAQmx_Exported_AdvTrig_Pulse_Polarity'
p31365
S'0x1646'
p31366
sS'DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType'
p31367
S'(-200905)'
p31368
sS'DAQmxErrorTEDSMinElecValGEMaxElecVal'
p31369
S'(-200816)'
p31370
sS'DAQmxErrorCannotUpdatePulseGenProperty'
p31371
S'(-200301)'
p31372
sS'DAQmxErrorWaitModePropertyNotSupportedNonBuffered'
p31373
S'(-200923)'
p31374
sS'DAQmxErrorExtSyncPulseSrcCannotBeExported'
p31375
S'(-201092)'
p31376
sS'DAQmx_CI_PulseWidth_DigFltr_Enable'
p31377
S'0x220A'
p31378
sS'DAQmx_Val_Save_AllowInteractiveEditing'
p31379
S'(1<<1)'
p31380
sS'DAQmx_Val_WhenAcqComplete'
p31381
S'12546'
p31382
sS'DAQmxErrorHWObjectsFoundInFile'
p31383
S'(-201074)'
p31384
sS'DAQmx_Val_mVoltsPerVoltPerMillimeter'
p31385
S'12506'
p31386
sS'DAQmxErrorPALDeviceInitializationFault'
p31387
S'(-50303)'
p31388
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_256x1_Mux'
p31389
S'"1130/1-Wire 256x1 Mux"'
p31390
sS'DAQmxErrorResourcesInUseForInversion_Routing'
p31391
S'(-89134)'
p31392
sS'DAQmxErrorPALOSFault'
p31393
S'(-50202)'
p31394
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth'
p31395
S'0x21F2'
p31396
sS'DAQmxErrorBufferWithWaitMode'
p31397
S'(-200691)'
p31398
sS'DAQmxErrorPALOSUnsupported'
p31399
S'(-50200)'
p31400
sS'DAQmx_DigEdge_ArmStartTrig_Edge'
p31401
S'0x1415'
p31402
sS'DAQmxErrorPALBadPointer'
p31403
S'(-50004)'
p31404
sS'DAQmxErrorResourcesInUseForProperty'
p31405
S'(-200353)'
p31406
sS'DAQmxErrorTriggerPolarityConflict'
p31407
S'(-200206)'
p31408
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_Dual_12x1_Mux'
p31409
S'"2501/2-Wire Dual 12x1 Mux"'
p31410
sS'DAQmxErrorDigFilterEnableSetWhenTristateIsFalse'
p31411
S'(-200732)'
p31412
sS'DAQmxErrorProductOfAOMaxAndGainTooLarge'
p31413
S'(-200267)'
p31414
sS'DAQmxErrorEveryNSampsEventIntervalZeroNotSupported'
p31415
S'(-200880)'
p31416
sS'DAQmxErrorInterconnectBusNotFound'
p31417
S'(-54002)'
p31418
sS'DAQmx_Val_Switch_Topology_2590_4x1_Mux'
p31419
S'"2590/4x1 Mux"'
p31420
sS'DAQmx_AI_Excit_ActualVal'
p31421
S'0x1883'
p31422
sS'DAQmxErrorDeviceRemoved'
p31423
S'(-200045)'
p31424
sS'DAQmx_DigPattern_StartTrig_Pattern'
p31425
S'0x2186'
p31426
sS'DAQmxErrorDSFReadyForStartClock'
p31427
S'(-200631)'
p31428
sS'DAQmxErrorInvalidNumericFormatSpecd'
p31429
S'(-201056)'
p31430
sS'DAQmx_AI_ChanCal_Table_PreScaledVals'
p31431
S'0x229D'
p31432
sS'DAQmxWarningPALTransferInProgress'
p31433
S'(50403)'
p31434
sS'DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice'
p31435
S'(-200980)'
p31436
sS'DAQmx_CI_Min'
p31437
S'0x189D'
p31438
sS'DAQmx_Val_FromCustomScale'
p31439
S'10065'
p31440
sS'DAQmxErrorRuntimeAborting_Routing'
p31441
S'(-88710)'
p31442
sS'DAQmxWarningPALComponentAlreadyLoaded'
p31443
S'(50260)'
p31444
sS'DAQmx_Val_OnBrdMemMoreThanHalfFull'
p31445
S'10237'
p31446
sS'DAQmx_SampClk_DigFltr_TimebaseSrc'
p31447
S'0x2220'
p31448
sS'DAQmx_Watchdog_DO_ExpirState'
p31449
S'0x21A7'
p31450
sS'DAQmxErrorFailedToEnableHighSpeedOutput'
p31451
S'(-200615)'
p31452
sS'DAQmx_Val_Custom'
p31453
S'10137'
p31454
sS'DAQmx_Val_Switch_Topology_2593_8x1_Terminated_Mux'
p31455
S'"2593/8x1 Terminated Mux"'
p31456
sS'DAQmxErrorSwitchActionInListSpansMultipleDevices'
p31457
S'(-200053)'
p31458
sS'DAQmxErrorMarkerPosInvalidForLoopInScript'
p31459
S'(-200248)'
p31460
sS'DAQmxErrorDataOverwrittenInDeviceMemory'
p31461
S'(-200004)'
p31462
sS'DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh'
p31463
S'(-200381)'
p31464
sS'DAQmx_Val_Interrupts'
p31465
S'10204'
p31466
sS'DAQmxErrorRequiredPropertyMissing'
p31467
S'(-201039)'
p31468
sS'DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch'
p31469
S'(-200786)'
p31470
sS'DAQmx_AnlgEdge_StartTrig_Coupling'
p31471
S'0x2233'
p31472
sS'DAQmxErrorInvalidCalConstOscillatorFreqDACValue'
p31473
S'(-200519)'
p31474
sS'DAQmxErrorOutputBufferSizeNotMultOfXferSize'
p31475
S'(-200838)'
p31476
sS'DAQmxWarningPALBadAddressClass'
p31477
S'(50015)'
p31478
sS'DAQmxErrorDifftAIInputSrcInOneChanGroup'
p31479
S'(-200676)'
p31480
sS'DAQmx_Val_OnBrdMemNotEmpty'
p31481
S'10241'
p31482
sS'DAQmx_Val_Degrees'
p31483
S'10146'
p31484
sS'DAQmxErrorPALBadThreadMultitask'
p31485
S'(-50019)'
p31486
sS'DAQmx_Val_ConstVal'
p31487
S'10116'
p31488
sS'DAQmxWarningRISAcqCompletedSomeBinsNotFilled'
p31489
S'(200029)'
p31490
sS'DAQmx_Cal_UserDefinedInfo'
p31491
S'0x1861'
p31492
sS'DAQmxErrorExportSignalPolarityNotSupportedByHW'
p31493
S'(-200364)'
p31494
sS'DAQmxErrorWroteMultiSampsUsingSingleSampWrite'
p31495
S'(-200673)'
p31496
sS'DAQmx_AnlgWin_RefTrig_Btm'
p31497
S'0x1428'
p31498
sS'DAQmxErrorRefAndPauseTrigConfigured'
p31499
S'(-200628)'
p31500
sS'DAQmxErrorOutputFIFOUnderflow2'
p31501
S'(-200621)'
p31502
sS'DAQmxErrorForwardPolynomialCoefNotSpecd'
p31503
S'(-200351)'
p31504
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Dual_64x1_Mux'
p31505
S'"2530/1-Wire Dual 64x1 Mux"'
p31506
sS'DAQmx_Val_Finite'
p31507
S'10172'
p31508
sS'DAQmxErrorControlLineConflictOnPortC'
p31509
S'(-200126)'
p31510
sS'DAQmx_Val_Switch_Topology_2597_6x1_Terminated_Mux'
p31511
S'"2597/6x1 Terminated Mux"'
p31512
sS'DAQmxErrorCounterOutputPauseTriggerInvalid'
p31513
S'(-200144)'
p31514
sS'DAQmxErrorEventPulseWidthOutOfRange'
p31515
S'(-200346)'
p31516
sS'DAQmxErrorNoDevMemForScript'
p31517
S'(-200317)'
p31518
sS'DAQmxErrorActiveChannelNotSpecified'
p31519
S'(-200093)'
p31520
sS'DAQmxErrorAttributeNotSettableWhenTaskIsRunning'
p31521
S'(-200450)'
p31522
sS'DAQmxErrorInvalidWaveformLengthWithinLoopInScript'
p31523
S'(-200250)'
p31524
sS'DAQmx_Sys_DevNames'
p31525
S'0x193B'
p31526
sS'DAQmxErrorDisconnectPathNotSameAsExistingPath'
p31527
S'(-200190)'
p31528
sS'DAQmxWarningStoppedBeforeDone'
p31529
S'(200010)'
p31530
sS'DAQmx_CI_Encoder_ZInputTerm'
p31531
S'0x219F'
p31532
sS'DAQmxErrorMismatchedInputArraySizes'
p31533
S'(-200672)'
p31534
sS'DAQmx_AI_Excit_UseForScaling'
p31535
S'0x17FC'
p31536
sS'DAQmx_Val_WDTExpiredEvent'
p31537
S'12512'
p31538
sS'DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType'
p31539
S'(-200800)'
p31540
sS'DAQmx_SampClk_TimebaseDiv'
p31541
S'0x18EB'
p31542
sS'DAQmxErrorExtRefClkRateNotSpecified'
p31543
S'(-200735)'
p31544
sS'DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled'
p31545
S'(-200497)'
p31546
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_24x1_Mux'
p31547
S'"2503/2-Wire 24x1 Mux"'
p31548
sS'DAQmxErrorPALVersionMismatch'
p31549
S'(-50250)'
p31550
sS'DAQmxErrorBufferTooSmallForString'
p31551
S'(-200228)'
p31552
sS'DAQmx_Val_ExtControlled'
p31553
S'10326'
p31554
sS'DAQmx_Val_TwoEdgeSep'
p31555
S'10267'
p31556
sS'DAQmxErrorSampClkDCMBecameUnlocked'
p31557
S'(-200240)'
p31558
sS'DAQmxErrorChannelSizeTooBigForPortWriteType'
p31559
S'(-200465)'
p31560
sS'DAQmx_Val_HalfBridgeI'
p31561
S'10188'
p31562
sS'DAQmxErrorMStudioNoReversePolyScaleCoeffs'
p31563
S'(-200782)'
p31564
sS'DAQmxErrorScanListCannotBeTimed'
p31565
S'(-200067)'
p31566
sS'DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked'
p31567
S'(-200389)'
p31568
sS'DAQmxErrorChanCalRepeatedNumberInPreScaledVals'
p31569
S'(-200939)'
p31570
sS'DAQmx_Val_Switch_Topology_1175_1_Wire_196x1_Mux'
p31571
S'"1175/1-Wire 196x1 Mux"'
p31572
sS'DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold'
p31573
S'(-200944)'
p31574
sS'DAQmxErrorCppDotNetAPINegativeBufferSize'
p31575
S'(-200591)'
p31576
sS'DAQmx_PersistedTask_Author'
p31577
S'0x22CC'
p31578
sS'DAQmxWarningOutputGainTooHighForRFFreq'
p31579
S'(200032)'
p31580
sS'DAQmx_CO_CtrTimebaseActiveEdge'
p31581
S'0x0341'
p31582
sS'DAQmx_Val_MetersPerSecondSquared'
p31583
S'12470'
p31584
sS'DAQmxErrorPALWaitInterrupted'
p31585
S'(-50700)'
p31586
sS'DAQmxErrorPALFileReadFault'
p31587
S'(-50207)'
p31588
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_8x16_Matrix'
p31589
S'"1129/2-Wire Dual 8x16 Matrix"'
p31590
sS'DAQmx_CI_TCReached'
p31591
S'0x0150'
p31592
sS'DAQmx_Val_Switch_Topology_2586_10_SPST'
p31593
S'"2586/10-SPST"'
p31594
sS'DAQmx_Val_Tristate'
p31595
S'10310'
p31596
sS'DAQmx_Val_HighImpedance'
p31597
S'12527'
p31598
sS'DAQmx_Val_BuiltIn'
p31599
S'10200'
p31600
sS'DAQmx_Sys_GlobalChans'
p31601
S'0x1265'
p31602
sS'DAQmx_AI_Lowpass_SwitchCap_ClkSrc'
p31603
S'0x1884'
p31604
sS'DAQmxErrorRouteFailedBecauseWatchdogExpired'
p31605
S'(-200681)'
p31606
sS'DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents'
p31607
S'(-201000)'
p31608
sS'DAQmxErrorDeviceIDDoesNotMatch'
p31609
S'(-201063)'
p31610
sS'DAQmxWarningPALBadReadCount'
p31611
S'(50011)'
p31612
sS'DAQmx_CI_Freq_DigSync_Enable'
p31613
S'0x21EB'
p31614
sS'DAQmxErrorCompressedSampSizeExceedsResolution'
p31615
S'(-200957)'
p31616
sS'DAQmx_Val_LowFreq1Ctr'
p31617
S'10105'
p31618
sS'DAQmxErrorInconsistentAnalogTrigSettings'
p31619
S'(-200261)'
p31620
sS'DAQmx_AI_CurrentShunt_Loc'
p31621
S'0x17F2'
p31622
sS'DAQmxErrorCanNotPerformOpWhenNoChansInTask'
p31623
S'(-200478)'
p31624
sS'DAQmxErrorRefClkRateRefClkSrcMismatch'
p31625
S'(-200744)'
p31626
sS'DAQmxErrorPasswordTooLong'
p31627
S'(-200109)'
p31628
sS'DAQmx_Val_DoNotAllowRegen'
p31629
S'10158'
p31630
sS'DAQmxErrorInvalidDeviceConnectorNumberSpecd'
p31631
S'(-201045)'
p31632
sS'DAQmxErrorSyncPulseSrcInvalid'
p31633
S'(-201090)'
p31634
sS'DAQmx_CI_MeasType'
p31635
S'0x18A0'
p31636
sS'DAQmxErrorOffsetTooLarge'
p31637
S'(-200269)'
p31638
sS'DAQmxErrorImmedTrigDuringRISMode'
p31639
S'(-200418)'
p31640
sS'DAQmxErrorNoMatchForSpecdDevice'
p31641
S'(-201042)'
p31642
sS'DAQmx_DigEdge_AdvTrig_Src'
p31643
S'0x1362'
p31644
sS'DAQmx_Read_RawDataWidth'
p31645
S'0x217A'
p31646
sS'DAQmx_SyncPulse_Src'
p31647
S'0x223D'
p31648
sS'DAQmxErrorInvalidDTInsideWfmDataType'
p31649
S'(-200327)'
p31650
sS'DAQmxErrorDelayFromSampClkTooLong'
p31651
S'(-200337)'
p31652
sS'DAQmx_AI_Voltage_Units'
p31653
S'0x1094'
p31654
sS'DAQmxErrorDuplicateHiddenChanNamesInCfgFile'
p31655
S'(-201082)'
p31656
sS'DAQmxErrorPortReservedForHandshaking'
p31657
S'(-200118)'
p31658
sS'DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning'
p31659
S'(-200833)'
p31660
sS'DAQmxErrorAttrCannotBeReset'
p31661
S'(-200236)'
p31662
sS'DAQmx_Hshk_SampleInputDataWhen'
p31663
S'0x22C4'
p31664
sS'DAQmxErrorRefTrigWhenContinuous'
p31665
S'(-200358)'
p31666
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Dual_128x1_Mux'
p31667
S'"1130/1-Wire Dual 128x1 Mux"'
p31668
sS'DAQmx_PhysicalChan_TEDS_ModelNum'
p31669
S'0x21DB'
p31670
sS'DAQmxErrorCannotPerformOpWhenTaskNotReserved'
p31671
S'(-200664)'
p31672
sS'DAQmxErrorInternalTimebaseSourceDivisorCombo'
p31673
S'(-200135)'
p31674
sS'DAQmxWarningMultipleWritesBetweenSampClks'
p31675
S'(200033)'
p31676
sS'DAQmxErrorCVIFunctionNotFoundInDAQmxDLL'
p31677
S'(-200398)'
p31678
sS'DAQmx_Val_EverySample'
p31679
S'10164'
p31680
sS'DAQmx_CI_Freq_MeasMeth'
p31681
S'0x0144'
p31682
sS'DAQmxErrorPhysicalChanDoesNotExist'
p31683
S'(-200170)'
p31684
sS'DAQmx_Val_Switch_Topology_2527_1_Wire_Dual_32x1_Mux'
p31685
S'"2527/1-Wire Dual 32x1 Mux"'
p31686
sS'DAQmxErrorNoCommonTrigLineForRoute_Routing'
p31687
S'(-89139)'
p31688
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_Quad_6x1_Mux'
p31689
S'"2501/2-Wire Quad 6x1 Mux"'
p31690
sS'DAQmxErrorCalibrationHandleInvalid'
p31691
S'(-200112)'
p31692
sS'DAQmx_SelfCal_Supported'
p31693
S'0x1860'
p31694
sS'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing'
p31695
S'(-89148)'
p31696
sS'DAQmxErrorNonBufferedAndDataXferInterrupts'
p31697
S'(-200845)'
p31698
sS'DAQmx_SwitchScan_WaitingForAdv'
p31699
S'0x17D9'
p31700
sS'DAQmxErrorInputSignalSlowerThanMeasTime'
p31701
S'(-200302)'
p31702
sS'DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed'
p31703
S'(-200883)'
p31704
sS'DAQmx_AO_Min'
p31705
S'0x1187'
p31706
sS'DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered'
p31707
S'(-200966)'
p31708
sS'DAQmxErrorSWObjectsFoundInFile'
p31709
S'(-201075)'
p31710
sS'DAQmx_Val_Switch_Topology_2530_Independent'
p31711
S'"2530/Independent"'
p31712
sS'DAQmx_AO_CustomScaleName'
p31713
S'0x1188'
p31714
sS'DAQmx_Val_mVoltsPerG'
p31715
S'12509'
p31716
sS'DAQmx_CI_Period_DigFltr_TimebaseSrc'
p31717
S'0x21EE'
p31718
sS'DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps'
p31719
S'(-200413)'
p31720
sS'DAQmxErrorPALFeatureNotSupported'
p31721
S'(-50256)'
p31722
sS'DAQmx_PersistedTask_AllowInteractiveDeletion'
p31723
S'0x22CE'
p31724
sS'DAQmxErrorMeasCalAdjustOscillatorFrequency'
p31725
S'(-200508)'
p31726
sS'DAQmx_CO_AutoIncrCnt'
p31727
S'0x0295'
p31728
sS'DAQmxErrorCannotSetPropertyWhenTaskRunning'
p31729
S'(-200557)'
p31730
sS'DAQmx_DigEdge_StartTrig_DigSync_Enable'
p31731
S'0x2227'
p31732
sS'DAQmx_Val_Resistance'
p31733
S'10278'
p31734
sS'DAQmxErrorDelayFromStartTrigTooShort'
p31735
S'(-200333)'
p31736
sS'DAQmx_AO_DAC_Ref_AllowConnToGnd'
p31737
S'0x1830'
p31738
sS'DAQmxErrorMeasCalAdjustMainPathPreAmpGain'
p31739
S'(-200503)'
p31740
sS'DAQmx_CI_TwoEdgeSep_SecondTerm'
p31741
S'0x18AE'
p31742
sS'DAQmxErrorInternalTimebaseRateDivisorSourceCombo'
p31743
S'(-200133)'
p31744
sS'DAQmxErrorSCXIDevNotUsablePowerTurnedOff'
p31745
S'(-200835)'
p31746
sS'DAQmx_Val_Auto'
p31747
S'-1'
p31748
sS'DAQmxErrorF64PrptyValNotUnsignedInt'
p31749
S'(-200394)'
p31750
sS'DAQmxWarningPALBadWriteOffset'
p31751
S'(50013)'
p31752
sS'DAQmxErrorOutputBufSizeTooSmallToStartGen'
p31753
S'(-200609)'
p31754
sS'DAQmxErrorResourcesInUseForInversion'
p31755
S'(-200365)'
p31756
sS'DAQmxErrorLines0To3ConfiguredForOutput'
p31757
S'(-200123)'
p31758
sS'DAQmx_AI_ChanCal_Verif_RefVals'
p31759
S'0x22A1'
p31760
sS'DAQmxErrorIdentifierTooLongInScript'
p31761
S'(-200533)'
p31762
sS'DAQmx_Scale_PreScaledUnits'
p31763
S'0x18F7'
p31764
sS'DAQmxErrorRouteNotSupportedByHW'
p31765
S'(-200368)'
p31766
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_8x32_Matrix'
p31767
S'"2532/2-Wire 8x32 Matrix"'
p31768
sS'DAQmxErrorAIInputBufferSizeNotMultOfXferSize'
p31769
S'(-200763)'
p31770
sS'DAQmx_Val_Source'
p31771
S'10439'
p31772
sS'DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO'
p31773
S'(-200819)'
p31774
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_8x32_Matrix'
p31775
S'"1129/2-Wire 8x32 Matrix"'
p31776
sS'DAQmxErrorDAQmxVersionNotSupported'
p31777
S'(-201076)'
p31778
sS'DAQmx_DigEdge_WatchdogExpirTrig_Src'
p31779
S'0x21A4'
p31780
sS'DAQmx_CI_SemiPeriod_DigSync_Enable'
p31781
S'0x221D'
p31782
sS'DAQmxErrorCantExceedRelayDriveLimit'
p31783
S'(-200671)'
p31784
sS'DAQmxErrorSwitchOperationChansSpanMultipleDevsInList'
p31785
S'(-200596)'
p31786
sS'DAQmx_AI_DataXferReqCond'
p31787
S'0x188B'
p31788
sS'DAQmx_Val_Strain'
p31789
S'10299'
p31790
sS'DAQmxErrorDigitalOutputNotSupported'
p31791
S'(-200012)'
p31792
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Quad_16x1_Mux'
p31793
S'"2576/2-Wire Quad 16x1 Mux"'
p31794
sS'DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents'
p31795
S'(-200947)'
p31796
sS'DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal'
p31797
S'(-200668)'
p31798
sS'DAQmx_Scale_Table_PreScaledVals'
p31799
S'0x1237'
p31800
sS'DAQmxErrorInconsistentExcit'
p31801
S'(-200257)'
p31802
sS'DAQmxErrorConnectionSeparatorAtEndOfList'
p31803
S'(-200059)'
p31804
sS'DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc'
p31805
S'(-200309)'
p31806
sS'DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint'
p31807
S'(-209805)'
p31808
sS'DAQmx_Val_ChannelCurrent'
p31809
g28873
sS'DAQmx_AO_DAC_Offset_Src'
p31810
S'0x2253'
p31811
sS'DAQmx_Val_HighFreq2Ctr'
p31812
S'10157'
p31813
sS'DAQmx_Exported_SampClk_OutputTerm'
p31814
S'0x1663'
p31815
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_64x1_Mux'
p31816
S'"2530/2-Wire 64x1 Mux"'
p31817
sS'DAQmx_Val_ChangeDetection'
p31818
S'12504'
p31819
sS'DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript'
p31820
S'(-200849)'
p31821
sS'DAQmxErrorSpecdDeviceDoesNotSupportRTSI'
p31822
S'(-201030)'
p31823
sS'DAQmxErrorResourcesInUseForRouteInTask'
p31824
S'(-200370)'
p31825
sS'DAQmxErrorPALResourceNotReserved'
p31826
S'(-50102)'
p31827
sS'DAQmxErrorUnableToDetectExtStimulusFreqDuringCal'
p31828
S'(-200441)'
p31829
sS'DAQmx_CI_Timestamp_InitialSeconds'
p31830
S'0x22B4'
p31831
sS'DAQmx_CO_CtrTimebase_DigFltr_Enable'
p31832
S'0x2276'
p31833
sS'DAQmx_SwitchDev_NumSwitchChans'
p31834
S'0x18E8'
p31835
sS'DAQmxErrorPALComponentNotUnloadable'
p31836
S'(-50262)'
p31837
sS'DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues'
p31838
S'(-200776)'
p31839
sS'DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x'
p31840
S'(-200900)'
p31841
sS'DAQmx_CI_Encoder_ZIndexVal'
p31842
S'0x0888'
p31843
sS'DAQmxErrorNoMemMapWhenHWTimedSinglePoint'
p31844
S'(-200679)'
p31845
sS'DAQmxErrorFileMissingRequiredDAQmxHeader'
p31846
S'(-201064)'
p31847
sS'DAQmxErrorInvalidSCXISlotNumberSpecd'
p31848
S'(-201032)'
p31849
sS'DAQmxErrorChanSizeTooBigForU8PortRead'
p31850
S'(-200563)'
p31851
sS'DAQmxWarningPretrigCoercion'
p31852
S'(200020)'
p31853
sS'DAQmxErrorOutputBufferUnderwrite'
p31854
S'(-200166)'
p31855
sS'DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing'
p31856
S'(-89142)'
p31857
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing'
p31858
S'(-89146)'
p31859
sS'DAQmxErrorInvalidAODataWrite'
p31860
S'(-200561)'
p31861
sS'DAQmxErrorInternalAIInputSrcInMultChanGroups'
p31862
S'(-200675)'
p31863
sS'DAQmxWarningWaitForNextSampClkDetectedMissedSampClk'
p31864
S'(209802)'
p31865
sS'DAQmx_Val_PseudoDiff'
p31866
S'12529'
p31867
sS'DAQmxErrorPowerBudgetExceeded'
p31868
S'(-200195)'
p31869
sS'DAQmxErrorNumLinesMismatchInReadOrWrite'
p31870
S'(-200463)'
p31871
sS'DAQmxErrorWaitForNextSampClkDetectedMissedSampClk'
p31872
S'(-209802)'
p31873
sS'DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual'
p31874
S'(-200350)'
p31875
sS'DAQmxErrorSimultaneousAOWhenNotOnDemandTiming'
p31876
S'(-200831)'
p31877
sS'DAQmxErrorCanExportOnlyDigEdgeTrigs'
p31878
S'(-200896)'
p31879
sS'DAQmx_Val_VoltsPerG'
p31880
S'12510'
p31881
sS'DAQmx_Val_SemiPeriod'
p31882
S'10289'
p31883
sS'DAQmx_Write_TotalSampPerChanGenerated'
p31884
S'0x192B'
p31885
sS'DAQmx_Val_PathStatus_ChannelInUse'
p31886
S'10434'
p31887
sS'DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted'
p31888
S'(-200451)'
p31889
sS'DAQmxWarningADCOverloaded'
p31890
S'(200005)'
p31891
sS'DAQmx_Dev_DO_Ports'
p31892
S'0x2323'
p31893
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal'
p31894
S'(-200871)'
p31895
sS'DAQmx_Val_PathStatus_Available'
p31896
S'10431'
p31897
sS'DAQmxErrorVoltageExcitIncompatibleWith2WireCfg'
p31898
S'(-200162)'
p31899
sS'DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart'
p31900
S'0x22BE'
p31901
sS'DAQmx_AI_RawSampJustification'
p31902
S'0x0050'
p31903
sS'DAQmxErrorLeadingUnderscoreInString'
p31904
S'(-200555)'
p31905
sS'DAQmx_Val_mVoltsPerVoltPerRadian'
p31906
S'12508'
p31907
sS'DAQmxErrorNegativeWriteSampleNumber'
p31908
S'(-200287)'
p31909
sS'DAQmxErrorSampClkRateInvalid'
p31910
S'(-201093)'
p31911
sS'DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev'
p31912
S'(-200945)'
p31913
sS'DAQmx_CI_DupCountPrevent'
p31914
S'0x21AC'
p31915
sS'DAQmx_SampClk_MaxRate'
p31916
S'0x22C8'
p31917
sS'DAQmxErrorInvalidPhysChanType'
p31918
S'(-200430)'
p31919
sS'DAQmx_AO_EnhancedImageRejectionEnable'
p31920
S'0x2241'
p31921
sS'DAQmxErrorStartTrigDelayWithExtSampClk'
p31922
S'(-200436)'
p31923
sS'DAQmxErrorDigFilterNotAvailableOnTerm'
p31924
S'(-200772)'
p31925
sS'DAQmxWarningPALMemoryAlignmentFault'
p31926
S'(50351)'
p31927
sS'DAQmx_Val_ChanPerLine'
p31928
g28779
sS'DAQmx_PersistedScale_AllowInteractiveDeletion'
p31929
S'0x22D6'
p31930
sS'DAQmxErrorAIMinNotSpecified'
p31931
S'(-200694)'
p31932
sS'DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask'
p31933
S'(-200854)'
p31934
sS'DAQmxErrorTooManyChansForInternalAIInputSrc'
p31935
S'(-200710)'
p31936
sS'DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth'
p31937
S'0x2272'
p31938
sS'DAQmxWarningUnrecognizedEnumValueEncounteredInStorage'
p31939
S'(200044)'
p31940
sS'DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain'
p31941
S'(-200511)'
p31942
sS'DAQmx_CI_Encoder_ZIndexPhase'
p31943
S'0x0889'
p31944
sS'DAQmxErrorChanSizeTooBigForU16PortRead'
p31945
S'(-200878)'
p31946
sS'DAQmx_AI_LeadWireResistance'
p31947
S'0x17EE'
p31948
sS'DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable'
p31949
S'0x2218'
p31950
sS'DAQmx_Val_FirstPretrigSamp'
p31951
S'10427'
p31952
sS'DAQmxErrorInternalClkDCMBecameUnlocked'
p31953
S'(-200386)'
p31954
sS'DAQmx_Read_SleepTime'
p31955
S'0x22B0'
p31956
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_4x32_Matrix'
p31957
S'"2529/2-Wire 4x32 Matrix"'
p31958
sS'DAQmxErrorStartTrigSrcEqualToSampClkSrc'
p31959
S'(-200953)'
p31960
sS'DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint'
p31961
S'(-200975)'
p31962
sS'DAQmx_Val_Switch_Topology_1128_2_Wire_4x8_Matrix'
p31963
S'"1128/2-Wire 4x8 Matrix"'
p31964
sS'DAQmxWarningPALLogicalBufferEmpty'
p31965
S'(50406)'
p31966
sS'DAQmx_Exported_AIConvClk_Pulse_Polarity'
p31967
S'0x1688'
p31968
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_Enable'
p31969
S'0x21F1'
p31970
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Sixteen_4x1_Mux'
p31971
S'"2576/2-Wire Sixteen 4x1 Mux"'
p31972
sS'DAQmx_Val_Pulse_Freq'
p31973
S'10119'
p31974
sS'DAQmxErrorInvalidTask'
p31975
S'(-200088)'
p31976
sS'DAQmx_Exported_DividedSampClkTimebase_OutputTerm'
p31977
S'0x21A1'
p31978
sS'DAQmxErrorRelayNameNotSpecifiedInList'
p31979
S'(-200531)'
p31980
sS'DAQmx_AI_Atten'
p31981
S'0x1801'
p31982
sS'DAQmx_Val_Meters'
p31983
S'10219'
p31984
sS'DAQmx_Exported_AIHoldCmpltEvent_OutputTerm'
p31985
S'0x18ED'
p31986
sS'DAQmxErrorAIMaxTooSmall'
p31987
S'(-200580)'
p31988
sS'DAQmxErrorLibraryNotPresent'
p31989
S'(-200090)'
p31990
sS'DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc'
p31991
S'0x221B'
p31992
sS'DAQmxErrorInconsistentNumSamplesToWrite'
p31993
S'(-200103)'
p31994
sS'DAQmx_Exported_ChangeDetectEvent_Pulse_Polarity'
p31995
S'0x2303'
p31996
sS'DAQmx_Dev_PXI_ChassisNum'
p31997
S'0x2329'
p31998
sS'DAQmx_AI_Max'
p31999
S'0x17DD'
p32000
sS'DAQmx_Val_Switch_Topology_2568_31_SPST'
p32001
S'"2568/31-SPST"'
p32002
sS'DAQmxErrorReadNoInputChansInTask'
p32003
S'(-200460)'
p32004
sS'DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate'
p32005
S'(-200870)'
p32006
sS'DAQmx_Val_Switch_Topology_2530_4_Wire_Dual_16x1_Mux'
p32007
S'"2530/4-Wire Dual 16x1 Mux"'
p32008
sS'DAQmx_Val_AllowRegen'
p32009
S'10097'
p32010
sS'DAQmxErrorCustomScaleDoesNotExist'
p32011
S'(-200378)'
p32012
sS'DAQmxErrorAOPropertiesCauseVoltageOverMax'
p32013
S'(-200582)'
p32014
sS'DAQmx_Write_RelativeTo'
p32015
S'0x190C'
p32016
sS'DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev'
p32017
S'(-200860)'
p32018
sS'DAQmxErrorDeviceAndConnectorSpecdAlreadyOccupied'
p32019
S'(-201047)'
p32020
sS'DAQmx_AO_OutputType'
p32021
S'0x1108'
p32022
sS'DAQmxErrorRoutingPathNotAvailable_Routing'
p32023
S'(-89124)'
p32024
sS'DAQmxErrorDelayFromSampClkWithExtConv'
p32025
S'(-200435)'
p32026
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_4x6_Matrix'
p32027
S'"2503/2-Wire 4x6 Matrix"'
p32028
sS'DAQmx_CI_PulseWidth_DigSync_Enable'
p32029
S'0x220E'
p32030
sS'DAQmxErrorWaveformLengthNotMultipleOfIncr'
p32031
S'(-200400)'
p32032
sS'DAQmx_Val_Temp_Thrmstr'
p32033
S'10302'
p32034
sS'DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode'
p32035
S'(-200812)'
p32036
sS'DAQmxErrorInvalidDeviceID'
p32037
S'(-200220)'
p32038
sS'DAQmxErrorDevAbsentOrUnavailable'
p32039
S'(-200324)'
p32040
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_4x32_Matrix'
p32041
S'"1129/2-Wire Dual 4x32 Matrix"'
p32042
sS'DAQmx_AI_StrainGage_PoissonRatio'
p32043
S'0x0998'
p32044
sS'DAQmxErrorDigLinesReservedOrUnavailable'
p32045
S'(-200587)'
p32046
sS'DAQmxErrorPALBadDevice'
p32047
S'(-50002)'
p32048
sS'DAQmxErrorSampleTimingTypeAndDataXferMode'
p32049
S'(-200218)'
p32050
sS'DAQmxWarningReadNotCompleteBeforeSampClk'
p32051
S'(209800)'
p32052
sS'DAQmxErrorCAPIReservedParamNotNULLNorEmpty'
p32053
S'(-200493)'
p32054
sS'DAQmx_Val_ChannelVoltage'
p32055
g28779
sS'DAQmxErrorPALComponentNotFound'
p32056
S'(-50251)'
p32057
sS'DAQmx_StartTrig_DelayUnits'
p32058
S'0x18C8'
p32059
sS'DAQmxErrorSamplesWillNeverBeGenerated'
p32060
S'(-200288)'
p32061
sS'DAQmxErrorRouteNotSupportedByHW_Routing'
p32062
S'(-89136)'
p32063
sS'DAQmxErrorCannotHandshakeWithPort0'
p32064
S'(-200127)'
p32065
sS'DAQmx_Val_PPS'
p32066
S'10080'
p32067
sS'DAQmxErrorNoWatchdogOutputOnPortReservedForInput'
p32068
S'(-200667)'
p32069
sS'DAQmx_Val_B_Type_TC'
p32070
S'10047'
p32071
sS'DAQmx_RealTime_ReportMissedSamp'
p32072
S'0x2319'
p32073
sS'DAQmx_CI_CountEdges_DigFltr_TimebaseRate'
p32074
S'0x21F9'
p32075
sS'DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals'
p32076
S'(-200658)'
p32077
sS'DAQmx_CI_Period_DigFltr_Enable'
p32078
S'0x21EC'
p32079
sS'DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance'
p32080
S'(-200513)'
p32081
sS'DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted'
p32082
S'(-200473)'
p32083
sS'DAQmxErrorResourcesInUseForInversionInTask'
p32084
S'(-200366)'
p32085
sS'DAQmx_Val_DigLvl'
p32086
S'10152'
p32087
sS'DAQmx_AnlgWin_StartTrig_Coupling'
p32088
S'0x2234'
p32089
sS'DAQmxWarningPALFunctionObsolete'
p32090
S'(50254)'
p32091
sS'DAQmx_SwitchDev_NumColumns'
p32092
S'0x18EA'
p32093
sS'DAQmxErrorScriptDataUnderflow'
p32094
S'(-200316)'
p32095
sS'DAQmx_SwitchScan_RepeatMode'
p32096
S'0x1248'
p32097
sS'DAQmx_AO_DAC_Ref_ConnToGnd'
p32098
S'0x0130'
p32099
sS'DAQmxErrorUnexpectedSeparatorInList'
p32100
S'(-200064)'
p32101
sS'DAQmxErrorMultipleRelaysForSingleRelayOp'
p32102
S'(-200211)'
p32103
sS'DAQmx_AnlgWin_StartTrig_Src'
p32104
S'0x1400'
p32105
sS'DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc'
p32106
S'(-200780)'
p32107
sS'DAQmxErrorPALComponentTooNew'
p32108
S'(-50253)'
p32109
sS'DAQmxErrorAODuringCounter1DMAConflict'
p32110
S'(-200079)'
p32111
sS'DAQmx_Val_SampClkPeriods'
p32112
S'10286'
p32113
sS'DAQmx_DigEdge_ArmStartTrig_Src'
p32114
S'0x1417'
p32115
sS'DAQmx_AO_UseOnlyOnBrdMem'
p32116
S'0x183A'
p32117
sS'DAQmx_Buf_Output_OnbrdBufSize'
p32118
S'0x230B'
p32119
sS'DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript'
p32120
S'(-201013)'
p32121
sS'DAQmxErrorInvalidAnalogTrigSrc'
p32122
S'(-200265)'
p32123
sS'DAQmxWarningPALTransferOverwritten'
p32124
S'(50410)'
p32125
sS'DAQmx_Val_Acquired_Into_Buffer'
p32126
g28873
sS'DAQmxErrorOutputFIFOUnderflow'
p32127
S'(-200016)'
p32128
sS'DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript'
p32129
S'(-201010)'
p32130
sS'DAQmx_Val_Switch_Topology_2527_2_Wire_Dual_16x1_Mux'
p32131
S'"2527/2-Wire Dual 16x1 Mux"'
p32132
sS'DAQmxErrorActionNotSupportedTaskNotWatchdog'
p32133
S'(-200635)'
p32134
sS'DAQmxErrorTemperatureOutOfRangeForCalibration'
p32135
S'(-200113)'
p32136
sS'DAQmx_Val_QuarterBridgeI'
p32137
S'10271'
p32138
sS'DAQmxErrorPALResourceNotAvailable'
p32139
S'(-50101)'
p32140
sS'DAQmx_CO_PulseDone'
p32141
S'0x190E'
p32142
sS'DAQmx_AI_Bridge_Balance_CoarsePot'
p32143
S'0x17F1'
p32144
sS'DAQmx_AI_Coupling'
p32145
S'0x0064'
p32146
sS'DAQmx_Val_WaitForInterrupt'
p32147
S'12523'
p32148
sS'DAQmxErrorCannotOpenTopologyCfgFile'
p32149
S'(-200328)'
p32150
sS'DAQmx_AI_Freq_Hyst'
p32151
S'0x0814'
p32152
sS'DAQmxErrorInvalidTableIdentifier'
p32153
S'(-201067)'
p32154
sS'DAQmx_DigPattern_RefTrig_Src'
p32155
S'0x1437'
p32156
sS'DAQmxErrorInvalidRangeStatementCharInList'
p32157
S'(-200208)'
p32158
sS'DAQmxErrorPALBadAddressClass'
p32159
S'(-50015)'
p32160
sS'DAQmxErrorNoCommonTrigLineForTaskRoute'
p32161
S'(-200395)'
p32162
sS'DAQmxErrorSamplesWillNeverBeAvailable'
p32163
S'(-200278)'
p32164
sS'DAQmxErrorRuntimeAborted_Routing'
p32165
S'(-88709)'
p32166
sS'DAQmxErrorLines4To7ConfiguredForInput'
p32167
S'(-200124)'
p32168
sS'DAQmx_CI_TwoEdgeSep_FirstEdge'
p32169
S'0x0833'
p32170
sS'DAQmx_AO_DAC_Rng_High'
p32171
S'0x182E'
p32172
sS'DAQmxErrorInvalidAcqTypeForFREQOUT'
p32173
S'(-200747)'
p32174
sS'DAQmxErrorExpectedSeparatorInList'
p32175
S'(-200061)'
p32176
sS'DAQmx_Val_Switch_Topology_1127_1_Wire_64x1_Mux'
p32177
S'"1127/1-Wire 64x1 Mux"'
p32178
sS'DAQmx_CI_Encoder_ZInput_DigFltr_Enable'
p32179
S'0x2205'
p32180
sS'DAQmx_AI_Gain'
p32181
S'0x1818'
p32182
sS'DAQmxErrorFewerThan2PreScaledVals'
p32183
S'(-200434)'
p32184
sS'DAQmx_CO_Pulse_HighTicks'
p32185
S'0x1169'
p32186
sS'DAQmxErrorOnlyContinuousScanSupported'
p32187
S'(-200192)'
p32188
sS'DAQmxErrorMStudioInvalidPolyDirection'
p32189
S'(-200594)'
p32190
sS'DAQmxErrorReadWaitNextSampClkWaitMismatchOne'
p32191
S'(-200988)'
p32192
sS'DAQmxErrorInvalidCalConstGainDACValue'
p32193
S'(-200516)'
p32194
sS'DAQmx_CI_PulseWidth_Term'
p32195
S'0x18AA'
p32196
sS'DAQmxWarningCAPIStringTruncatedToFitBuffer'
p32197
S'(200026)'
p32198
sS'DAQmxErrorAttrCannotBeRead'
p32199
S'(-200232)'
p32200
sS'DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed'
p32201
S'(-200884)'
p32202
sS'DAQmxErrorExtCalConstsInvalid'
p32203
S'(-200437)'
p32204
sS'DAQmxErrorTEDSSensorNotDetected'
p32205
S'(-200709)'
p32206
sS'DAQmx_AnlgEdge_RefTrig_Slope'
p32207
S'0x1423'
p32208
sS'DAQmx_DI_DigFltr_Enable'
p32209
S'0x21D6'
p32210
sS'DAQmxWarningCounter0DMADuringAIConflict'
p32211
S'(200008)'
p32212
sS'DAQmxErrorCODAQmxWriteMultipleChans'
p32213
S'(-200794)'
p32214
sS'DAQmxErrorInvalidAdvanceEventTriggerType'
p32215
S'(-200070)'
p32216
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2'
p32217
S'(-201023)'
p32218
sS'DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr'
p32219
S'(-200347)'
p32220
sS'DAQmx_DigPattern_RefTrig_Pattern'
p32221
S'0x2187'
p32222
sS'DAQmxErrorWaveformNameTooLong'
p32223
S'(-200534)'
p32224
sS'DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2'
p32225
S'(-200917)'
p32226
sS'DAQmxWarningPALPhysicalBufferEmpty'
p32227
S'(50408)'
p32228
sS'DAQmx_Sys_NIDAQMinorVersion'
p32229
S'0x1923'
p32230
sS'DAQmx_AIConv_ActiveEdge'
p32231
S'0x1853'
p32232
sS'DAQmxErrorResourcesInUseForProperty_Routing'
p32233
S'(-89132)'
p32234
sS'DAQmx_SampClk_DigSync_Enable'
p32235
S'0x2222'
p32236
sS'DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg'
p32237
S'(-200105)'
p32238
sS'DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling'
p32239
S'0x22DB'
p32240
sS'DAQmxErrorStartTrigDigPatternChanNotInTask'
p32241
S'(-200887)'
p32242
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2'
p32243
S'(-200706)'
p32244
sS'DAQmxErrorCannotReadRelativeToRefTrigUntilDone'
p32245
S'(-200281)'
p32246
sS'DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar'
p32247
S'(-200810)'
p32248
sS'DAQmxErrorClkDoublerDCMLock'
p32249
S'(-200241)'
p32250
sS'DAQmx_CO_RdyForNewVal'
p32251
S'0x22FF'
p32252
sS'DAQmxErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan'
p32253
S'(-201085)'
p32254
sS'DAQmxErrorRecordOverwritten'
p32255
S'(-200006)'
p32256
sS'DAQmx_Exported_HshkEvent_Pulse_Polarity'
p32257
S'0x22C0'
p32258
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_4x32_Matrix'
p32259
S'"1130/2-Wire 4x32 Matrix"'
p32260
sS'DAQmxWarningPALMemoryHeapNotEmpty'
p32261
S'(50355)'
p32262
sS'DAQmx_Scale_ScaledUnits'
p32263
S'0x191B'
p32264
sS'DAQmx_Write_WaitMode'
p32265
S'0x22B1'
p32266
sS'DAQmx_CI_Period_MeasMeth'
p32267
S'0x192C'
p32268
sS'DAQmxErrorZeroReversePolyScaleCoeffs'
p32269
S'(-200408)'
p32270
sS'DAQmxErrorDifferentInternalAIInputSources'
p32271
S'(-200573)'
p32272
sS'DAQmx_AO_LoadImpedance'
p32273
S'0x0121'
p32274
sS'DAQmxErrorDifferentAIInputSrcInOneChanGroup'
p32275
S'(-200572)'
p32276
sS'DAQmxWarningTooManyInterruptsPerSecond'
p32277
S'(200014)'
p32278
sS'DAQmx_Val_HandshakeTriggerDeasserts'
p32279
S'12553'
p32280
sS'DAQmx_Val_PathStatus_SourceChannelConflict'
p32281
S'10435'
p32282
sS'DAQmxErrorCantSetAuthorForLocalChan'
p32283
S'(-201038)'
p32284
sS'DAQmxErrorReadBufferTooSmall'
p32285
S'(-200229)'
p32286
sS'DAQmx_Val_Cfg_Default'
p32287
S'-1'
p32288
sS'DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput'
p32289
S'(-200726)'
p32290
sS'DAQmx_Val_Switch_Topology_1175_2_Wire_95x1_Mux'
p32291
S'"1175/2-Wire 95x1 Mux"'
p32292
sS'DAQmx_CI_Encoder_ZInput_DigSync_Enable'
p32293
S'0x2209'
p32294
sS'DAQmx_Val_Switch_Topology_2596_Dual_6x1_Mux'
p32295
S'"2596/Dual 6x1 Mux"'
p32296
sS'DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType'
p32297
S'(-200911)'
p32298
sS'DAQmxErrorCannotTristate8255OutputLines'
p32299
S'(-200116)'
p32300
sS'DAQmx_AI_Excit_Src'
p32301
S'0x17F4'
p32302
sS'DAQmxErrorPhysChanDevNotInTask'
p32303
S'(-200648)'
p32304
sS'DAQmx_SwitchChan_Bandwidth'
p32305
S'0x0640'
p32306
sS'DAQmx_AI_RawSampSize'
p32307
S'0x22DA'
p32308
sS'DAQmx_Val_EnteringWin'
p32309
S'10163'
p32310
sS'DAQmxErrorResourceNotFound'
p32311
S'(-54000)'
p32312
sS'DAQmxErrorRouteSrcAndDestSame_Routing'
p32313
S'(-89131)'
p32314
sS'DAQmxErrorInvalidINIFileSyntax'
p32315
S'(-201060)'
p32316
sS'DAQmxErrorInvalidCalArea'
p32317
S'(-200438)'
p32318
sS'DAQmxErrorCorruptedTEDSMemory'
p32319
S'(-200742)'
p32320
sS'DAQmxErrorCannotScanWithCurrentTopology'
p32321
S'(-200205)'
p32322
sS'DAQmx_Dev_CI_PhysicalChans'
p32323
S'0x2324'
p32324
sS'DAQmxErrorAOMinMaxNotInDACRange'
p32325
S'(-200759)'
p32326
sS'DAQmxErrorInputFIFOOverflow2'
p32327
S'(-200361)'
p32328
sS'DAQmx_AO_TermCfg'
p32329
S'0x188E'
p32330
sS'DAQmx_Val_Action_Cancel'
p32331
g28873
sS'DAQmxErrorSampClkSrcInvalidForOutputValidForInput'
p32332
S'(-200610)'
p32333
sS'DAQmxErrorSampleRateNumChansConvertPeriodCombo'
p32334
S'(-200081)'
p32335
sS'DAQmxErrorNumPtsToComputeNotPositive'
p32336
S'(-200401)'
p32337
sS'DAQmx_AI_RVDT_SensitivityUnits'
p32338
S'0x219B'
p32339
sS'DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize'
p32340
S'(-200894)'
p32341
sS'DAQmxErrorInvalidTrigTypeSendsSWTrig'
p32342
S'(-200372)'
p32343
sS'DAQmx_CI_CountEdges_DigFltr_MinPulseWidth'
p32344
S'0x21F7'
p32345
sS'DAQmxErrorPALDMALinkEventMissed'
p32346
S'(-50450)'
p32347
sS'DAQmxErrorBridgeOffsetNullingCalNotSupported'
p32348
S'(-200696)'
p32349
sS'DAQmxWarningCounter1DMADuringAOConflict'
p32350
S'(200009)'
p32351
sS'DAQmx_Write_DigitalLines_BytesPerChan'
p32352
S'0x217F'
p32353
sS'DAQmxWarningOutputGainTooLowForRFFreq'
p32354
S'(200031)'
p32355
sS'DAQmx_Task_Complete'
p32356
S'0x1274'
p32357
sS'DAQmx_AO_MemMapEnable'
p32358
S'0x188F'
p32359
sS'DAQmx_CI_PulseWidth_DigFltr_TimebaseRate'
p32360
S'0x220D'
p32361
sS'DAQmx_SwitchChan_MaxACCarryCurrent'
p32362
S'0x0648'
p32363
sS'DAQmxErrorChannelNotAvailableInParallelMode'
p32364
S'(-200150)'
p32365
sS'DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning'
p32366
S'(-200983)'
p32367
sS'DAQmx_AIConv_Rate'
p32368
S'0x1848'
p32369
sS'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified'
p32370
S'(-200698)'
p32371
sS'DAQmx_Val_AdvanceTrigger'
p32372
S'12488'
p32373
sS'DAQmx_Val_Switch_Topology_1127_2_Wire_32x1_Mux'
p32374
S'"1127/2-Wire 32x1 Mux"'
p32375
sS'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing'
p32376
S'(-89141)'
p32377
sS'DAQmxErrorTEDSMinPhysValGEMaxPhysVal'
p32378
S'(-200815)'
p32379
sS'DAQmx_AI_Bridge_NomResistance'
p32380
S'0x17EC'
p32381
sS'DAQmxErrorMultipleWritesBetweenSampClks'
p32382
S'(-200748)'
p32383
sS'DAQmxErrorPALMessageOverflow'
p32384
S'(-50650)'
p32385
sS'DAQmxErrorTrigLineNotFound_Routing'
p32386
S'(-89125)'
p32387
sS'DAQmx_Val_AO'
p32388
S'10102'
p32389
sS'DAQmxErrorBuiltInTempSensorNotSupported'
p32390
S'(-200255)'
p32391
sS'DAQmx_Val_AI'
p32392
S'10100'
p32393
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Sixteen_16x1_Mux'
p32394
S'"1130/1-Wire Sixteen 16x1 Mux"'
p32395
sS'DAQmx_Read_Offset'
p32396
S'0x190B'
p32397
sS'DAQmx_Val_AC'
p32398
S'10045'
p32399
sS'DAQmxErrorReadWaitNextSampClkWaitMismatchTwo'
p32400
S'(-200989)'
p32401
sS'DAQmxErrorOverloadedChansExistNotRead'
p32402
S'(-200362)'
p32403
sS'DAQmxErrorPALIrrelevantAttribute'
p32404
S'(-50001)'
p32405
sS'DAQmx_Exported_AdvCmpltEvent_Pulse_Polarity'
p32406
S'0x1652'
p32407
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate'
p32408
S'0x2217'
p32409
sS'DAQmxErrorMemMapAndBuffer'
p32410
S'(-200215)'
p32411
sS'DAQmxErrorExtCalTemperatureNotDAQmx'
p32412
S'(-200544)'
p32413
sS'DAQmx_Val_OutsideWin'
p32414
S'10251'
p32415
sS'DAQmx_Val_Load'
p32416
S'10440'
p32417
sS'DAQmxErrorPXIDevTempCausedShutDown'
p32418
S'(-200623)'
p32419
sS'DAQmx_CI_CountEdges_Dir'
p32420
S'0x0696'
p32421
sS'DAQmxErrorPALBadSelector'
p32422
S'(-50003)'
p32423
sS'DAQmx_AI_Current_Units'
p32424
S'0x0701'
p32425
sS'DAQmxErrorIntermediateBufferFull'
p32426
S'(-200495)'
p32427
sS'DAQmx_CI_CustomScaleName'
p32428
S'0x189E'
p32429
sS'DAQmxErrorAOSampTimingTypeDifferentIn2Tasks'
p32430
S'(-200963)'
p32431
sS'DAQmxErrorPALBadOffset'
p32432
S'(-50007)'
p32433
sS'DAQmxErrorInvalidNumberSamplesToRead'
p32434
S'(-200096)'
p32435
sS'DAQmxErrorNoDMAChansAvailable'
p32436
S'(-200251)'
p32437
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_16x16_Matrix'
p32438
S'"2532/1-Wire Dual 16x16 Matrix"'
p32439
sS'DAQmx_Val_HalfBridgeII'
p32440
S'10189'
p32441
sS'DAQmxErrorWatchdogTimerNotSupported'
p32442
S'(-200662)'
p32443
sS'DAQmxErrorSamplesNotYetAvailable'
p32444
S'(-200284)'
p32445
sS'DAQmxErrorMultipleChansNotSupportedDuringCalSetup'
p32446
S'(-201004)'
p32447
sS'DAQmx_Val_Unknown'
p32448
S'12588'
p32449
sS'DAQmxErrorCantSaveTaskWithoutReplace'
p32450
S'(-200484)'
p32451
sS'DAQmx_Exported_AdvCmpltEvent_Delay'
p32452
S'0x1757'
p32453
sS'DAQmx_CI_SemiPeriod_StartingEdge'
p32454
S'0x22FE'
p32455
sS'DAQmx_Val_Kelvins'
p32456
S'10325'
p32457
sS'DAQmxErrorDuplicateTask'
p32458
S'(-200089)'
p32459
sS'DAQmx_RefClk_Rate'
p32460
S'0x1315'
p32461
sS'DAQmx_CI_Freq_MeasTime'
p32462
S'0x0145'
p32463
sS'DAQmxErrorNonBufferedAndHWTimed'
p32464
S'(-201025)'
p32465
sS'DAQmxErrorNoChansSpecdForPatternSource'
p32466
S'(-200927)'
p32467
sS'DAQmx_AI_Lowpass_Enable'
p32468
S'0x1802'
p32469
sS'DAQmxErrorCounterStartPauseTriggerConflict'
p32470
S'(-200146)'
p32471
sS'DAQmxErrorPALFileWriteFault'
p32472
S'(-50208)'
p32473
sS'DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc'
p32474
S'(-200779)'
p32475
sS'DAQmxErrorPALFirmwareFault'
p32476
S'(-50151)'
p32477
sS'DAQmxErrorMemMapAndSimultaneousAO'
p32478
S'(-200830)'
p32479
sS'DAQmx_Val_HalfBridge'
p32480
S'10187'
p32481
sS'DAQmxWarningPALBadDevice'
p32482
S'(50002)'
p32483
sS'DAQmxErrorSampClkTimebaseDCMBecameUnlocked'
p32484
S'(-200238)'
p32485
sS'DAQmxErrorSemicolonDoesNotFollowRangeInList'
p32486
S'(-200054)'
p32487
sS'DAQmx_Val_PCI'
p32488
S'12582'
p32489
sS'DAQmx_Val_Position_AngEncoder'
p32490
S'10360'
p32491
sS'DAQmxErrorCannotAddNewDevsAfterTaskConfiguration'
p32492
S'(-200855)'
p32493
sS'DAQmxErrorWaitIsLastInstructionOfLoopInScript'
p32494
S'(-200038)'
p32495
sS'DAQmxErrorReversePolyOrderLessThanNumPtsToCompute'
p32496
S'(-200403)'
p32497
sS'DAQmx_Val_SynchronousEventCallbacks'
p32498
S'(1<<0)'
p32499
sS'DAQmxErrorDataLineReservedForDynamicOutput'
p32500
S'(-200384)'
p32501
sS'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc'
p32502
S'0x2207'
p32503
sS'DAQmxErrorPALThreadHasNoThreadObject'
p32504
S'(-50601)'
p32505
sS'DAQmx_Val_DoNotOverwriteUnreadSamps'
p32506
S'10159'
p32507
sS'DAQmxErrorInvalidPhysicalChanForCal'
p32508
S'(-200444)'
p32509
sS'DAQmx_AO_DAC_Ref_Src'
p32510
S'0x0132'
p32511
sS'DAQmxErrorEndpointNotFound'
p32512
S'(-54001)'
p32513
sS'DAQmxErrorSubsetStartOffsetNotAlignedInScript'
p32514
S'(-200033)'
p32515
sS'DAQmxErrorUnexpectedEndOfActionsInList'
p32516
S'(-200196)'
p32517
sS'DAQmxWarningPALBadReadOffset'
p32518
S'(50010)'
p32519
sS'DAQmxErrorSwitchDevShutDownDueToHighTemp'
p32520
S'(-200818)'
p32521
sS'DAQmx_Val_Task_Reserve'
p32522
g30379
sS'DAQmx_AnlgWin_StartTrig_When'
p32523
S'0x1401'
p32524
sS'DAQmx_AI_Accel_SensitivityUnits'
p32525
S'0x219C'
p32526
sS'_NI_float32_DEFINED_'
p32527
g28678
sS'DAQmxErrorChanCalScaleTypeNotSet'
p32528
S'(-200935)'
p32529
sS'DAQmx_CI_Freq_DigFltr_Enable'
p32530
S'0x21E7'
p32531
sS'DAQmxErrorExplicitConnectionExists'
p32532
S'(-200179)'
p32533
sS'DAQmxErrorCannotReadPastEndOfRecord'
p32534
S'(-200614)'
p32535
sS'DAQmx_Scale_Poly_ReverseCoeff'
p32536
S'0x1235'
p32537
sS'DAQmxErrorPropertyNotSupportedNotOutputTask'
p32538
S'(-200456)'
p32539
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal'
p32540
S'(-200867)'
p32541
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable'
p32542
S'0x220F'
p32543
sS'DAQmxErrorInvalidRefClkSrcGivenSampClkSrc'
p32544
S'(-200383)'
p32545
sS'DAQmx_AI_Lowpass_SwitchCap_OutClkDiv'
p32546
S'0x1887'
p32547
sS'_NI_uInt64_DEFINED_'
p32548
g28678
sS'DAQmx_Dev_AI_PhysicalChans'
p32549
S'0x231E'
p32550
sS'DAQmxErrorExtraPropertyDetectedInSpecdObject'
p32551
S'(-201040)'
p32552
sS'DAQmxErrorDLLLock'
p32553
S'(-200550)'
p32554
sS'DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc'
p32555
S'(-200781)'
p32556
sS'DAQmxErrorStreamDCMLock'
p32557
S'(-200313)'
p32558
sS'DAQmx_CO_Pulse_Freq_InitialDelay'
p32559
S'0x0299'
p32560
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal'
p32561
S'(-200866)'
p32562
sS'DAQmxErrorHWTimedSinglePointNotSupportedAI'
p32563
S'(-200821)'
p32564
sS'DAQmx_SwitchChan_MaxACCarryPwr'
p32565
S'0x0642'
p32566
sS'DAQmxErrorSampsPerChanTooBig'
p32567
S'(-200306)'
p32568
sS'DAQmx_CO_CtrTimebaseMasterTimebaseDiv'
p32569
S'0x18C3'
p32570
sS'DAQmxErrorSwitchCannotDriveMultipleTrigLines'
p32571
S'(-200203)'
p32572
sS'DAQmx_Exported_CtrOutEvent_OutputBehavior'
p32573
S'0x174F'
p32574
sS'DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO'
p32575
S'(-200842)'
p32576
sS'DAQmx_Val_Cont'
p32577
S'10117'
p32578
sS'DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered'
p32579
S'(-200967)'
p32580
sS'DAQmxErrorAcqStoppedDriverCantXferDataFastEnough'
p32581
S'(-200714)'
p32582
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Amplified_Mux'
p32583
S'"2501/2-Wire 24x1 Amplified Mux"'
p32584
sS'DAQmx_AI_Bridge_Balance_FinePot'
p32585
S'0x18F4'
p32586
sS'DAQmx_CI_Period_DigSync_Enable'
p32587
S'0x21F0'
p32588
sS'DAQmxErrorAOPropertiesCauseVoltageBelowMin'
p32589
S'(-200583)'
p32590
sS'DAQmx_CI_NumPossiblyInvalidSamps'
p32591
S'0x193C'
p32592
sS'DAQmx_AI_ChanCal_ApplyCalIfExp'
p32593
S'0x2299'
p32594
sS'DAQmxErrorPulseActiveAtStart'
p32595
S'(-200339)'
p32596
sS'DAQmxErrorTEDSMappingMethodInvalidOrUnsupported'
p32597
S'(-200765)'
p32598
sS'DAQmx_Write_RawDataWidth'
p32599
S'0x217D'
p32600
sS'DAQmxErrorAttrNotSupported'
p32601
S'(-200197)'
p32602
sS'DAQmxError20MhzTimebaseNotSupportedGivenTimingType'
p32603
S'(-200909)'
p32604
sS'DAQmx_Write_Offset'
p32605
S'0x190D'
p32606
sS'DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation'
p32607
S'(-200595)'
p32608
sS'DAQmxErrorCOMultipleWritesBetweenSampClks'
p32609
S'(-200951)'
p32610
sS'DAQmx_AnlgWin_RefTrig_Src'
p32611
S'0x1426'
p32612
sS'DAQmxErrorPALFunctionNotFound'
p32613
S'(-50255)'
p32614
sS'DAQmxErrorPortDoesNotSupportHandshakingDataIO'
p32615
S'(-200117)'
p32616
sS'DAQmxErrorDACRefValNotSet'
p32617
S'(-200540)'
p32618
sS'DAQmx_AI_CustomScaleName'
p32619
S'0x17E0'
p32620
sS'DAQmxErrorTDCNotEnabledDuringRISMode'
p32621
S'(-200417)'
p32622
sS'DAQmxErrorCalPasswordNotSupported'
p32623
S'(-201006)'
p32624
sS'DAQmx_Val_Immediate'
p32625
S'10198'
p32626
sS'DAQmx_StartTrig_Type'
p32627
S'0x1393'
p32628
sS'DAQmxErrorCannotConnectChansDirectly'
p32629
S'(-200185)'
p32630
sS'DAQmx_OnDemand_SimultaneousAOEnable'
p32631
S'0x21A0'
p32632
sS'DAQmxErrorIdentifierInListTooLong'
p32633
S'(-200058)'
p32634
sS'DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice'
p32635
S'(-200106)'
p32636
sS'DAQmx_Val_Switch_Topology_2575_1_Wire_196x1_Mux'
p32637
S'"2575/1-Wire 196x1 Mux"'
p32638
sS'DAQmxErrorWriteWhenTaskNotRunningCOFreq'
p32639
S'(-200875)'
p32640
sS'DAQmx_SwitchChan_MaxDCSwitchPwr'
p32641
S'0x0649'
p32642
sS'DAQmxErrorSampClkRateNotSupportedWithEARDisabled'
p32643
S'(-201001)'
p32644
sS'DAQmxErrorCabledModuleCannotRouteConvClk'
p32645
S'(-200319)'
p32646
sS'DAQmx_Val_Freq'
p32647
S'10179'
p32648
sS'DAQmxErrorNoMoreSpace'
p32649
S'(-200293)'
p32650
sS'DAQmxErrorDDCClkOutDCMLock'
p32651
S'(-200243)'
p32652
sS'DAQmxWarningPALComponentNotUnloadable'
p32653
S'(50262)'
p32654
sS'DAQmxErrorDigInputOverrun'
p32655
S'(-200715)'
p32656
sS'DAQmx_ChanDescr'
p32657
S'0x1926'
p32658
sS'__CFUNC_C'
p32659
S'__cdecl'
p32660
sS'DAQmx_CI_Freq_DigFltr_MinPulseWidth'
p32661
S'0x21E8'
p32662
sS'DAQmx_Val_Poll'
p32663
S'12524'
p32664
sS'DAQmxErrorSignalEventsNotSupportedByDevice'
p32665
S'(-200982)'
p32666
sS'DAQmxErrorDuplicateDevIDInList'
p32667
S'(-200209)'
p32668
sS'DAQmx_DigEdge_AdvTrig_DigFltr_Enable'
p32669
S'0x2238'
p32670
sS'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate'
p32671
S'0x2203'
p32672
sS'NULL'
p32673
S'(0L)'
p32674
sS'DAQmx_Interlocked_HshkTrig_Src'
p32675
S'0x22B8'
p32676
sS'DAQmxErrorPALComponentAlreadyInstalled'
p32677
S'(-50263)'
p32678
sS'DAQmxErrorPALTransferNotInProgress'
p32679
S'(-50402)'
p32680
sS'DAQmxErrorTimeStampOverwritten'
p32681
S'(-200009)'
p32682
sS'DAQmxErrorPALOSInitializationFault'
p32683
S'(-50201)'
p32684
sS'DAQmx_Val_SampClk'
p32685
S'10388'
p32686
sS'DAQmx_Exported_10MHzRefClk_OutputTerm'
p32687
S'0x226E'
p32688
sS'DAQmxErrorMultipleCounterInputTask'
p32689
S'(-200147)'
p32690
sS'DAQmxErrorAutoStartWriteNotAllowedEventRegistered'
p32691
S'(-200985)'
p32692
sS'DAQmxErrorChanDoesNotSupportCompression'
p32693
S'(-200956)'
p32694
sS'DAQmx_Val_DigEdge'
p32695
S'10150'
p32696
sS'DAQmxErrorDACRngLowNotEqualToMinusRefVal'
p32697
S'(-200670)'
p32698
sS'DAQmxErrorPALResourceNotInitialized'
p32699
S'(-50104)'
p32700
sS'DAQmxErrorCIOnboardClockNotSupportedAsInputTerm'
p32701
S'(-200814)'
p32702
sS'DAQmxErrorSampClockSourceNotSupportedGivenTimingType'
p32703
S'(-200908)'
p32704
sS'DAQmx_Val_RefTrig'
p32705
S'10426'
p32706
sS'DAQmxErrorInvalidChannel'
p32707
S'(-200087)'
p32708
sS'DAQmxErrorCanExportOnlyOnboardSampClk'
p32709
S'(-200891)'
p32710
sS'DAQmxErrorDifferentRawDataFormats'
p32711
S'(-200955)'
p32712
sS'DAQmx_CO_OutputState'
p32713
S'0x0294'
p32714
sS'DAQmx_Val_FullBridgeII'
p32715
S'10184'
p32716
sS'DAQmx_AI_Freq_Units'
p32717
S'0x0806'
p32718
sS'DAQmxErrorCOWriteDutyCycleOutOfRange'
p32719
S'(-200684)'
p32720
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_8x16_Matrix'
p32721
S'"2530/1-Wire 8x16 Matrix"'
p32722
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Octal_16x1_Mux'
p32723
S'"2530/1-Wire Octal 16x1 Mux"'
p32724
sS'DAQmxErrorPowerupStateNotSupported'
p32725
S'(-200663)'
p32726
sS'DAQmxErrorCantSetPropertyTaskNotRunning'
p32727
S'(-200972)'
p32728
sS'DAQmx_CO_Pulse_IdleState'
p32729
S'0x1170'
p32730
sS'DAQmxErrorPALResourceOwnedBySystem'
p32731
S'(-50100)'
p32732
ssg16
(dp32733
sg18
(dp32734
g28103
I8993
sg28105
I-200186
sg28107
I4113
sg28109
I4115
sg28111
I4112
sg28113
I-200651
sg28115
I8905
sg28117
I-200584
sg28119
I6377
sg28121
I50411
sg28123
I-209801
sg28125
I-200233
sg28127
S'2575/2-Wire 95x1 Mux'
p32735
sg28129
I4247
sg28131
I-200143
sg28133
I-200194
sg28135
I6133
sg28137
I10185
sg28139
I-200094
sg28141
I4960
sg28143
I-200979
sg28145
I-200721
sg28147
I-200270
sg28149
I-200042
sg28151
I10109
sg28153
I-200051
sg28155
I8732
sg28157
I4676
sg28159
I-200616
sg28161
I8730
sg28163
I6204
sg28165
I-200722
sg28167
I6108
sg28169
I-200745
sg28171
I-200882
sg28173
I-200191
sg28175
I-200824
sg28177
I10205
sg28179
I-200507
sg28181
I-200669
sg28183
I-50408
sg28185
I-89135
sg28187
I-200837
sg28189
I-200915
sg28191
I-200201
sg28193
I-50400
sg28195
I-200163
sg28197
I-201053
sg28199
I-50006
sg28201
I209801
sg28203
I-200405
sg28205
I-200653
sg28207
I-200466
sg28209
I-200412
sg28211
I-200680
sg28213
I-200217
sg28215
I8726
sg28217
I-200564
sg28219
I8868
sg28221
I-200971
sg28223
I4472
sg28225
I-200005
sg28227
I6373
sg28229
I8943
sg28231
I50152
sg28233
I10279
sg28235
I-200961
sg28237
I-200686
sg28239
I-200312
sg28241
I-200485
sg28243
I-54011
sg28245
I8883
sg28247
I-200581
sg28249
I6372
sg28251
I6345
sg28253
I6347
sg28255
I6346
sg28257
I8577
sg28259
I-200131
sg28261
I8897
sg28263
I10270
sg28265
I-200528
sg28267
I6226
sg28269
I-200237
sg28271
I-200881
sg28273
I50004
sg28275
I-200277
sg28277
I-200834
sg28279
I10352
sg28281
I-200936
sg28283
I10183
sg28285
I50200
sg28287
I8722
sg28289
I50100
sg28291
I-200342
sg28293
I-50152
sg28295
I-200431
sg28297
I50000
sg28299
I-200034
sg28301
I10359
sg28303
I-200245
sg28305
I12550
sg28307
I-201029
sg28309
S'2576/2-Wire 64x1 Mux'
p32736
sg28311
I-200415
sg28313
I6369
sg28315
I8807
sg28317
I8682
sg28319
I-200283
sg28321
I-200863
sg28323
I-201059
sg28325
I-200214
sg28327
I6277
sg28329
I2389
sg28331
I-200630
sg28333
I10364
sg28335
I-201018
sg28337
I8916
sg28339
I8906
sg28341
I8892
sg28343
I8759
sg28345
I4981
sg28347
S'2585/1-Wire 10x1 Mux'
p32737
sg28349
I-200432
sg28351
I200022
sg28353
I-200406
sg28355
I-50260
sg28357
I-200649
sg28359
Nsg28361
I-200903
sg28363
I-50258
sg28365
I8891
sg28367
I10070
sg28369
I10361
sg28371
I-200382
sg28373
I8754
sg28375
I-200369
sg28377
S'1166/32-SPDT'
p32738
sg28379
I-50403
sg28381
I6300
sg28383
I-200543
sg28385
I-200424
sg28387
I8886
sg28389
I-50300
sg28391
I-200792
sg28393
I-200019
sg28395
I-200142
sg28397
I-50407
sg28399
I6338
sg28401
I10448
sg28403
S'2593/Dual 8x1 Mux'
p32739
sg28405
I8605
sg28407
L1L
sg28409
I-200464
sg28411
I-201079
sg28413
I-200224
sg28415
I6106
sg28417
I-200132
sg28419
I10132
sg28421
I-200525
sg28423
I10131
sg28425
S'2532/1-Wire Dual 4x64 Matrix'
p32740
sg28427
I4470
sg28429
I-50600
sg28431
I-201031
sg28433
I-200295
sg28435
I10273
sg28437
I-200390
sg28439
I50407
sg28441
I8750
sg28443
I-200826
sg28445
S'2584/1-Wire 15x1 Mux'
p32741
sg28447
I-200916
sg28449
I-200433
sg28451
I4864
sg28453
I-200367
sg28455
I6343
sg28457
I-201041
sg28459
I-200711
sg28461
I-200717
sg28463
I-200225
sg28465
I-200738
sg28467
I8866
sg28469
I8820
sg28471
S'2595/4x1 Mux'
p32742
sg28473
S'1193/32x1 Mux'
p32743
sg28475
I-200640
sg28477
I-200048
sg28479
I6310
sg28481
I-88716
sg28483
I10264
sg28485
I-200348
sg28487
I1939
sg28489
I-200159
sg28491
I6251
sg28493
I6441
sg28495
Nsg28497
I-200991
sg28499
I50404
sg28501
S'2576/2-Wire Octal 8x1 Mux'
p32744
sg28503
I6325
sg28505
I8705
sg28507
I-200749
sg28509
I-200024
sg28511
I-200808
sg28513
I-50301
sg28515
I-200571
sg28517
I-200222
sg28519
I-201033
sg28521
I-200446
sg28523
I-200311
sg28525
I8698
sg28527
I-89121
sg28529
I200025
sg28531
I-200003
sg28533
I-201016
sg28535
I10265
sg28537
I8706
sg28539
I8803
sg28541
I4629
sg28543
I-200811
sg28545
I-200692
sg28547
I-200308
sg28549
I-200998
sg28551
I-200461
sg28553
I8569
sg28555
I12531
sg28557
I-200589
sg28559
I-50206
sg28561
I10042
sg28563
I4726
sg28565
I8747
sg28567
I-200829
sg28569
I6445
sg28571
I8893
sg28573
I-200636
sg28575
I-50105
sg28577
I-50020
sg28579
I-89127
sg28581
I8749
sg28583
I-200862
sg28585
I-200244
sg28587
I6374
sg28589
I-200321
sg28591
I-50603
sg28593
I-200253
sg28595
I50103
sg28597
I-201083
sg28599
I8724
sg28601
I4656
sg28603
I-200273
sg28605
I-200472
sg28607
I-200469
sg28609
I50106
sg28611
L0L
sg28613
I-200145
sg28615
I-201086
sg28617
I-200948
sg28619
I5269
sg28621
I12538
sg28623
I10071
sg28625
I-201069
sg28627
I257
sg28629
I-200242
sg28631
I-200069
sg28633
I-201078
sg28635
I4625
sg28637
I-200740
sg28639
I-200551
sg28641
I6389
sg28643
S'2532/2-Wire 16x16 Matrix'
p32745
sg28645
I-200314
sg28647
I-200959
sg28649
I12491
sg28651
I4979
sg28653
I10085
sg28655
I-200505
sg28657
I-200271
sg28659
I-200933
sg28661
I-200276
sg28663
I-200119
sg28665
I10082
sg28667
I8564
sg28669
I-200035
sg28671
I-200568
sg28673
I-200622
sg28675
I-200007
sg28677
Nsg28679
I4657
sg28681
I-200483
sg28683
I-50011
sg28685
I8685
sg28687
S'1127/Independent'
p32746
sg28689
I-200387
sg28691
I-201084
sg28693
I8917
sg28695
I-200188
sg28697
I10430
sg28699
F-1.0
sg28701
I-200542
sg28703
I-201077
sg28705
I-200606
sg28707
I10095
sg28709
I-200654
sg28711
I6349
sg28713
I-200509
sg28715
I-200391
sg28717
I4992
sg28719
I8704
sg28721
I12484
sg28723
I8565
sg28725
I-200569
sg28727
I-89120
sg28729
I8766
sg28731
I-200643
sg28733
I-200153
sg28735
I8964
sg28737
I-200678
sg28739
I4647
sg28741
I10252
sg28743
I-200338
sg28745
I-200373
sg28747
I-200036
sg28749
I-200549
sg28751
I200003
sg28753
I-200363
sg28755
I-200015
sg28757
I12525
sg28759
I-200320
sg28761
Nsg28762
S'2530/1-Wire Quad 32x1 Mux'
p32747
sg28764
I-200666
sg28766
I-200839
sg28768
I-200374
sg28770
I-200523
sg28772
I-200286
sg28774
I-201055
sg28776
I10436
sg28778
I0
sg28780
I-200181
sg28782
I-200490
sg28784
S'2530/1-Wire 128x1 Mux'
p32748
sg28786
I10384
sg28788
I-200642
sg28790
I-200645
sg28792
S'1128/Independent'
p32749
sg28794
I-200210
sg28796
I-200459
sg28798
I-200532
sg28800
I-201095
sg28802
I200028
sg28804
I10269
sg28806
I1585
sg28808
I-200755
sg28810
I8737
sg28812
I-200771
sg28814
I12537
sg28816
I6177
sg28818
I50409
sg28820
I8574
sg28822
I10050
sg28824
I10151
sg28826
I12516
sg28828
I2069
sg28830
I8600
sg28832
I10153
sg28834
I-200331
sg28836
I-200330
sg28838
I-201062
sg28840
I8678
sg28842
I-200453
sg28844
I-200788
sg28846
I-200049
sg28848
I-200783
sg28850
I-54022
sg28852
S'2564/16-SPST'
p32750
sg28854
I8986
sg28856
I-50409
sg28858
I200042
sg28860
I-200457
sg28862
I200041
sg28864
I-200355
sg28866
I5989
sg28868
I-201080
sg28870
I-200050
sg28872
I1
sg28874
I-200629
sg28876
I6305
sg28878
I-200207
sg28880
I-200100
sg28882
I50008
sg28884
I-200823
sg28886
I-50604
sg28888
I4146
sg28890
I-200634
sg28892
I10353
sg28894
I8599
sg28896
I10103
sg28898
I10253
sg28900
I-200969
sg28902
I12522
sg28904
I-200176
sg28906
I12493
sg28908
I-200577
sg28910
I-201087
sg28912
I5137
sg28914
I-89123
sg28916
I200027
sg28918
I4484
sg28920
S'2530/4-Wire 32x1 Mux'
p32751
sg28922
I-200429
sg28924
I-200607
sg28926
I4872
sg28928
S'2527/4-Wire 16x1 Mux'
p32752
sg28930
I-200151
sg28932
I4865
sg28934
I-200700
sg28936
I200024
sg28938
I-200861
sg28940
I-200719
sg28942
I8668
sg28944
S'1130/2-Wire 128x1 Mux'
p32753
sg28946
I8970
sg28948
I10167
sg28950
I2130
sg28952
I-89138
sg28954
I-200099
sg28956
I-200790
sg28958
S'2576/2-Wire Dual 32x1 Mux'
p32754
sg28960
I-200760
sg28962
I-200797
sg28964
I-201014
sg28966
I-200874
sg28968
I8754
sg28970
I4710
sg28972
I-50404
sg28974
I4977
sg28976
I12548
sg28978
Nsg28979
I8700
sg28981
I-200632
sg28983
I-89130
sg28985
I8571
sg28987
S'1192/8-SPDT'
p32755
sg28989
I10292
sg28991
I8742
sg28993
I-201068
sg28995
I-200685
sg28997
I-200828
sg28999
I-200984
sg29001
I10447
sg29003
I6307
sg29005
I-50261
sg29007
I8997
sg29009
I6147
sg29011
I10425
sg29013
I6308
sg29015
I6449
sg29017
I-201049
sg29019
I-89145
sg29021
I8716
sg29023
S'2530/2-Wire Quad 16x1 Mux'
p32756
sg29025
S'1128/1-Wire 64x1 Mux'
p32757
sg29027
I-200695
sg29029
I-200761
sg29031
I1603
sg29033
I-89122
sg29035
I-201009
sg29037
I6166
sg29039
S'1129/2-Wire 16x16 Matrix'
p32758
sg29041
I328
sg29043
I10228
sg29045
I8721
sg29047
I1
sg29049
I12590
sg29051
I5015
sg29053
I-200964
sg29055
S'1193/Quad 4x1 Terminated Mux'
p32759
sg29057
I-200158
sg29059
I5911
sg29061
I8764
sg29063
I-200605
sg29065
I6134
sg29067
I12586
sg29069
I5172
sg29071
I-200973
sg29073
I-200522
sg29075
I-201061
sg29077
I-200047
sg29079
I-50410
sg29081
I4486
sg29083
I8744
sg29085
I-200157
sg29087
I-200219
sg29089
I-200857
sg29091
I-200258
sg29093
I-200618
sg29095
S'2501/2-Wire 4x6 Matrix'
p32760
sg29097
I10280
sg29099
I-50259
sg29101
I-200646
sg29103
I4403
sg29105
I-200752
sg29107
I-200498
sg29109
I200037
sg29111
I-200182
sg29113
I-200152
sg29115
S'1191/Quad 4x1 Mux'
p32761
sg29117
I9002
sg29119
I8788
sg29121
I10301
sg29123
I4980
sg29125
I-200578
sg29127
I4921
sg29129
I-201008
sg29131
I4193
sg29133
I10096
sg29135
I4880
sg29137
I6
sg29139
I1685
sg29141
I-200379
sg29143
I-200148
sg29145
I-200656
sg29147
S'1130/4-Wire 64x1 Mux'
p32762
sg29149
I-200560
sg29151
I-200756
sg29153
S'2599/2-SPDT'
p32763
sg29155
I8941
sg29157
I8920
sg29159
I5416
sg29161
Nsg29162
I200004
sg29164
I10143
sg29166
I-200626
sg29168
I10144
sg29170
I-200332
sg29172
I10145
sg29174
I10200
sg29176
I6316
sg29178
I4679
sg29180
I-200769
sg29182
I-50412
sg29184
I-200449
sg29186
I-200307
sg29188
I5216
sg29190
I1606
sg29192
I10300
sg29194
I-200160
sg29196
I10055
sg29198
S'2530/1-Wire 4x32 Matrix'
p32764
sg29200
I10086
sg29202
I98
sg29204
I6375
sg29206
I10428
sg29208
I-200173
sg29210
I-200305
sg29212
I-200062
sg29214
I4643
sg29216
I-200520
sg29218
I-200420
sg29220
S'2566/16-SPDT'
p32765
sg29222
I-201051
sg29224
S'1130/4-Wire Quad 16x1 Mux'
p32766
sg29226
I8597
sg29228
I1586
sg29230
I5013
sg29232
I10040
sg29234
I-200919
sg29236
I-200349
sg29238
I-50010
sg29240
I-200612
sg29242
I-200768
sg29244
I258
sg29246
I-200611
sg29248
I-200486
sg29250
I-200057
sg29252
I12574
sg29254
I-200541
sg29256
Nsg29258
S'2530/2-Wire Dual 32x1 Mux'
p32767
sg29260
I8681
sg29262
I-200762
sg29264
I-54021
sg29266
I-200734
sg29268
I50402
sg29270
I-200690
sg29272
I-200310
sg29274
I-200095
sg29276
I4985
sg29278
I3
sg29280
I5016
sg29282
I-200702
sg29284
I-200470
sg29286
I6165
sg29288
I-50550
sg29290
I-200574
sg29292
I8991
sg29294
I-200060
sg29296
I54022
sg29298
S'2575/2-Wire 98x1 Mux'
p32768
sg29300
I1945
sg29302
I-201022
sg29304
I-50352
sg29306
I-200586
sg29308
I-200538
sg29310
I-200031
sg29312
I10230
sg29314
I-200987
sg29316
I50012
sg29318
I-200844
sg29320
I-200121
sg29322
I-200753
sg29324
I50202
sg29326
I12490
sg29328
I5203
sg29330
S'2527/2-Wire 32x1 Mux'
p32769
sg29332
I-200300
sg29334
I-200026
sg29336
I-200958
sg29338
I307
sg29340
I6461
sg29342
I-89143
sg29344
I2433
sg29346
I-201070
sg29348
I-201050
sg29350
I4660
sg29352
I-200751
sg29354
I-200872
sg29356
I1601
sg29358
I-200345
sg29360
I-50106
sg29362
I8613
sg29364
I5123
sg29366
I10214
sg29368
I-200600
sg29370
I10424
sg29372
I-200303
sg29374
I-200120
sg29376
I5168
sg29378
I8890
sg29380
I6182
sg29382
I6247
sg29384
I-50150
sg29386
I-54012
sg29388
I1
sg29389
I12552
sg29391
I-200274
sg29393
I6319
sg29395
I-201026
sg29397
I6410
sg29399
I-200968
sg29401
I-200294
sg29403
I-200078
sg29405
I8753
sg29407
I200015
sg29409
I6125
sg29411
I8715
sg29413
I-200895
sg29415
S'2569/100-SPST'
p32770
sg29417
I2167
sg29419
I10134
sg29421
I-200357
sg29423
I10077
sg29425
I-200853
sg29427
I-200731
sg29429
I4932
sg29431
I5
sg29433
I-200912
sg29435
I-200275
sg29437
I-200419
sg29439
I-200530
sg29441
I-200741
sg29443
I-200234
sg29445
I-200993
sg29447
I8710
sg29449
I-200931
sg29451
I-200843
sg29453
I-200682
sg29455
I8701
sg29457
I-200178
sg29459
I10244
sg29461
I-200888
sg29463
I5159
sg29465
I-200479
sg29467
I-200592
sg29469
I-200481
sg29471
I12577
sg29473
I-200322
sg29475
I4150
sg29477
I-200491
sg29479
I12494
sg29481
I4646
sg29483
S'1190/Quad 4x1 Mux'
p32771
sg29485
I-200223
sg29487
I8702
sg29489
I4917
sg29491
I-201019
sg29493
I-200169
sg29495
I-200827
sg29497
S'1193/Quad 8x1 Mux'
p32772
sg29499
I-200864
sg29501
I-200423
sg29503
I-200906
sg29505
I4148
sg29507
I-200340
sg29509
I8694
sg29511
S'2503/1-Wire 48x1 Mux'
p32773
sg29513
I-200101
sg29515
I50019
sg29517
I5208
sg29519
I-200705
sg29521
I8712
sg29523
I10280
sg29525
I2
sg29527
I-200770
sg29529
I-50012
sg29531
I-200266
sg29533
I2
sg29534
I-200803
sg29536
S'2598/Dual Transfer'
p32774
sg29538
I2083
sg29540
I-50209
sg29542
S'1169/100-SPST'
p32775
sg29544
I-200455
sg29546
I8789
sg29548
S'2532/2-Wire 4x64 Matrix'
p32776
sg29550
I10092
sg29552
I10090
sg29554
I10091
sg29556
I4886
sg29558
I-209803
sg29560
I-50264
sg29562
I-200806
sg29564
I200043
sg29566
I-200725
sg29568
I10268
sg29570
I-200467
sg29572
I-200661
sg29574
I-200920
sg29576
Nsg29577
I-200010
sg29579
I2325
sg29581
I-201024
sg29583
I-200279
sg29585
I10072
sg29587
S'1160/16-SPDT'
p32777
sg29589
I8691
sg29591
I-201035
sg29593
I-200934
sg29595
I200018
sg29597
I5430
sg29599
I-200746
sg29601
I2100
sg29603
I10303
sg29605
I10323
sg29607
I-200439
sg29609
S'1129/2-Wire Quad 4x16 Matrix'
p32778
sg29611
I-200960
sg29613
I-200978
sg29615
I-200044
sg29617
I-200793
sg29619
I8860
sg29621
I-201003
sg29623
I8823
sg29625
I6380
sg29627
I-200558
sg29629
I-200397
sg29631
I-200514
sg29633
I-200501
sg29635
S'2527/Independent'
p32779
sg29637
I-200315
sg29639
I-200994
sg29641
I10307
sg29643
I-200704
sg29645
I104
sg29647
I50014
sg29649
I5122
sg29651
I-50000
sg29653
I-200202
sg29655
I8598
sg29657
I-200869
sg29659
I4662
sg29661
I-200633
sg29663
I-50800
sg29665
I327
sg29667
I-200297
sg29669
I-200590
sg29671
I6273
sg29673
I8763
sg29675
I-200712
sg29677
I10322
sg29679
I1424
sg29681
I-50008
sg29683
S'2503/2-Wire Dual 12x1 Mux'
p32780
sg29685
I10450
sg29687
I-200703
sg29689
I-200227
sg29691
I5154
sg29693
I-200445
sg29695
I13612
sg29697
I-200260
sg29699
I12481
sg29701
I-200660
sg29703
I6382
sg29705
I-200789
sg29707
I-200613
sg29709
I10437
sg29711
I8740
sg29713
I4723
sg29715
I-200928
sg29717
I10069
sg29719
I6393
sg29721
I-200077
sg29723
I12482
sg29725
I-200918
sg29727
I-89133
sg29729
I-200167
sg29731
I-201065
sg29733
I6448
sg29735
I12555
sg29737
I6139
sg29739
I-200773
sg29741
I200038
sg29743
S'1193/Independent'
p32781
sg29745
I5378
sg29747
I4935
sg29749
I50500
sg29751
I5701
sg29753
I50005
sg29755
I-50016
sg29757
I-201057
sg29759
I-200375
sg29761
I-200802
sg29763
I-200221
sg29765
I-200341
sg29767
S'1167/Independent'
p32782
sg29769
I-200593
sg29771
I-200140
sg29773
I-200820
sg29775
I-200052
sg29777
I-50108
sg29779
I8606
sg29781
I4968
sg29783
I-200801
sg29785
I4147
sg29787
I-200976
sg29789
I-200356
sg29791
I-89140
sg29793
I8671
sg29795
I8852
sg29797
I-50351
sg29799
I-200452
sg29801
I-200427
sg29803
I-200068
sg29805
I200012
sg29807
I-200865
sg29809
I10128
sg29811
I-50107
sg29813
I-200102
sg29815
I-200385
sg29817
I-200638
sg29819
I12539
sg29821
I8703
sg29823
I-200504
sg29825
S'1193/Dual 16x1 Mux'
p32783
sg29827
I8899
sg29829
I8693
sg29831
I1616
sg29833
I-200414
sg29835
I4867
sg29837
I-200527
sg29839
I10235
sg29841
I8974
sg29843
I-200556
sg29845
I-200921
sg29847
I-200017
sg29849
I-200728
sg29851
I8817
sg29853
I-200585
sg29855
I-200890
sg29857
I1607
sg29859
I-200189
sg29861
I8720
sg29863
I-200104
sg29865
I-200011
sg29867
I-200235
sg29869
I12528
sg29871
I6442
sg29873
I8735
sg29875
I9000
sg29877
I8992
sg29879
I50107
sg29881
I-50503
sg29883
I-200396
sg29885
I1617
sg29887
I50009
sg29889
I-50103
sg29891
I-201089
sg29893
I8855
sg29895
I-200907
sg29897
I2
sg29898
I6357
sg29900
I-200041
sg29902
I1
sg29903
I0
sg29904
I-200962
sg29906
I-201027
sg29908
I-200524
sg29910
I-200323
sg29912
I-200263
sg29914
I8672
sg29916
I-200074
sg29918
I6358
sg29920
S'1175/2-Wire 98x1 Mux'
p32784
sg29922
I-201052
sg29924
I-89128
sg29926
I-50302
sg29928
I10066
sg29930
I-200199
sg29932
I-200130
sg29934
I1605
sg29936
I-200620
sg29938
I-201037
sg29940
I6231
sg29942
I-200647
sg29944
I-200954
sg29946
I8762
sg29948
I-200644
sg29950
I-200086
sg29952
I-200172
sg29954
I10272
sg29956
I-200608
sg29958
I4965
sg29960
I8670
sg29962
I-200825
sg29964
I10073
sg29966
I-200766
sg29968
I1687
sg29970
I-200599
sg29972
I5703
sg29974
I-201011
sg29976
I6320
sg29978
I8921
sg29980
I-200076
sg29982
I-200344
sg29984
I10113
sg29986
I-200039
sg29988
I-200778
sg29990
I-200846
sg29992
I6313
sg29994
S'1130/2-Wire Octal 16x1 Mux'
p32785
sg29996
I8895
sg29998
I8696
sg30000
I-200125
sg30002
I12530
sg30004
I-200380
sg30006
I50001
sg30008
I-200850
sg30010
I8761
sg30012
I-200325
sg30014
I10239
sg30016
I-200997
sg30018
I-200856
sg30020
I6278
sg30022
I8669
sg30024
I4648
sg30026
I-200252
sg30028
I-89144
sg30030
I-200598
sg30032
I12483
sg30034
I10432
sg30036
I-200924
sg30038
I10053
sg30040
I-200107
sg30042
I10449
sg30044
I10451
sg30046
I-200246
sg30048
I-200990
sg30050
I-200657
sg30052
I-200723
sg30054
I8745
sg30056
I-200336
sg30058
I-200282
sg30060
S'2501/4-Wire 12x1 Mux'
p32786
sg30062
I-200932
sg30064
I8813
sg30066
I-200970
sg30068
I-200154
sg30070
I2320
sg30072
I-200122
sg30074
I10054
sg30076
I5176
sg30078
I-200941
sg30080
I-200256
sg30082
I10356
sg30084
I6446
sg30086
I-200393
sg30088
I8806
sg30090
I-50252
sg30092
I8882
sg30094
I-200999
sg30096
I-89149
sg30098
I-200482
sg30100
S'2501/1-Wire 48x1 Mux'
p32787
sg30102
I10160
sg30104
I-200579
sg30106
I-50175
sg30108
I5127
sg30110
I323
sg30112
I-201017
sg30114
I-200757
sg30116
I8804
sg30118
I-200897
sg30120
I-200758
sg30122
I8847
sg30124
I-200318
sg30126
I-200804
sg30128
I-89147
sg30130
I-200639
sg30132
I-200559
sg30134
I10373
sg30136
I-200177
sg30138
I-200343
sg30140
I-200995
sg30142
I-54023
sg30144
I-201005
sg30146
I50101
sg30148
I-200492
sg30150
I12583
sg30152
I-200046
sg30154
I-200149
sg30156
I8826
sg30158
I10354
sg30160
I-200940
sg30162
I1688
sg30164
I-200767
sg30166
I-50018
sg30168
I-200736
sg30170
I-200213
sg30172
I10254
sg30174
S'2532/1-Wire Dual 8x32 Matrix'
p32788
sg30176
I-88705
sg30178
I-200575
sg30180
I-200877
sg30182
I-200335
sg30184
I8661
sg30186
I10441
sg30188
I5984
sg30190
I-200929
sg30192
I6189
sg30194
I-200597
sg30196
I-200641
sg30198
I4976
sg30200
I-200904
sg30202
I-50406
sg30204
I4722
sg30206
I-200674
sg30208
I-200873
sg30210
I6322
sg30212
I5716
sg30214
I-201012
sg30216
I50007
sg30218
I-200885
sg30220
I10282
sg30222
I-200134
sg30224
I-200570
sg30226
I8663
sg30228
I8572
sg30230
I664
sg30232
I-200180
sg30234
I-200138
sg30236
I-200859
sg30238
I-200799
sg30240
I-50502
sg30242
I-200913
sg30244
I-200910
sg30246
I-50401
sg30248
I8864
sg30250
I-200506
sg30252
I512
sg30254
I-200784
sg30256
I-200518
sg30258
I4176
sg30260
I4711
sg30262
I-201054
sg30264
I-200008
sg30266
I50151
sg30268
I6131
sg30270
I12549
sg30272
I-200774
sg30274
S'2532/1-Wire 16x32 Matrix'
p32789
sg30276
I-201034
sg30278
I-200521
sg30280
I8596
sg30282
S'2527/1-Wire 64x1 Mux'
p32790
sg30284
I-88717
sg30286
I-200943
sg30288
I8723
sg30290
I-200545
sg30292
I6428
sg30294
I-201094
sg30296
S'1127/4-Wire 16x1 Mux'
p32791
sg30298
I-200554
sg30300
I-200014
sg30302
I2192
sg30304
I8972
sg30306
I-200477
sg30308
I200007
sg30310
I-200965
sg30312
I6253
sg30314
I-200889
sg30316
I12505
sg30318
I8863
sg30320
I-200289
sg30322
I-200809
sg30324
S'1194/Quad 4x1 Mux'
p32792
sg30326
I-200688
sg30328
I200039
sg30330
I-200037
sg30332
I825
sg30334
I-200659
sg30336
I-200510
sg30338
I-200526
sg30340
I-50205
sg30342
I-200791
sg30344
I8673
sg30346
I8746
sg30348
I322
sg30350
I200040
sg30352
I-200502
sg30354
S'2501/2-Wire 24x1 Mux'
p32793
sg30356
I659
sg30358
I8805
sg30360
S'2503/4-Wire 12x1 Mux'
p32794
sg30362
I-200795
sg30364
I-200733
sg30366
I50102
sg30368
I8909
sg30370
I-50013
sg30372
I-200187
sg30374
I-200027
sg30376
I6387
sg30378
I4
sg30380
I-200292
sg30382
I6330
sg30384
S'2567/Independent'
p32795
sg30386
I1604
sg30388
I-200442
sg30390
I6244
sg30392
I4931
sg30394
I8618
sg30396
I12584
sg30398
I-200777
sg30400
I6271
sg30402
I-200409
sg30404
I8821
sg30406
I200021
sg30408
I-200548
sg30410
I5124
sg30412
I-200029
sg30414
I-50353
sg30416
I-200868
sg30418
I8887
sg30420
I-201020
sg30422
I2307
sg30424
I-50602
sg30426
I308
sg30428
I200011
sg30430
I-200499
sg30432
I4407
sg30434
I-200411
sg30436
I-89150
sg30438
I-50350
sg30440
I-200072
sg30442
I-200922
sg30444
I4149
sg30446
I5988
sg30448
I-200259
sg30450
I-200708
sg30452
I12526
sg30454
I-200075
sg30456
I-200402
sg30458
Nsg30459
I50255
sg30461
I5161
sg30463
I-200517
sg30465
I-200354
sg30467
I4242
sg30469
I10210
sg30471
I-200063
sg30473
I-200813
sg30475
I5732
sg30477
I6284
sg30479
I10093
sg30481
I-200822
sg30483
I10242
sg30485
I-200699
sg30487
I-200110
sg30489
I-200291
sg30491
I-200547
sg30493
I2434
sg30495
I5912
sg30497
I-88708
sg30499
I10186
sg30501
I10125
sg30503
I8708
sg30505
S'1161/8-SPDT'
p32796
sg30507
I-200200
sg30509
I-50500
sg30511
I2177
sg30513
I-200566
sg30515
S'1163R/Octal 4x1 Mux'
p32797
sg30517
I8699
sg30519
I-200576
sg30521
I-88900
sg30523
I-50005
sg30525
I5156
sg30527
I200019
sg30529
I-200020
sg30531
I8602
sg30533
I10313
sg30535
I-200500
sg30537
I-50014
sg30539
I-200111
sg30541
I-200536
sg30543
I10181
sg30545
I-200886
sg30547
I-200603
sg30549
I10199
sg30551
I-200018
sg30553
I-200730
sg30555
S'1127/2-Wire 4x8 Matrix'
p32798
sg30557
I10208
sg30559
I-201028
sg30561
I10209
sg30563
I10099
sg30565
I-200108
sg30567
S'1129/2-Wire 4x64 Matrix'
p32799
sg30569
I4868
sg30571
I-50254
sg30573
S'2501/1-Wire 48x1 Amplified Mux'
p32800
sg30575
I-200677
sg30577
I1651
sg30579
I-50354
sg30581
I-200055
sg30583
I-200847
sg30585
I0
sg30586
I-200529
sg30588
I-200942
sg30590
I8885
sg30592
I-200974
sg30594
I1
sg30595
I-200539
sg30597
I-200268
sg30599
I12492
sg30601
I-200023
sg30603
I12536
sg30605
I-50501
sg30607
I-200914
sg30609
I-200249
sg30611
I-200193
sg30613
I50104
sg30615
I-200624
sg30617
I-200454
sg30619
I-200329
sg30621
S'2576/Independent'
p32801
sg30623
I280
sg30625
I-200902
sg30627
I-200992
sg30629
I-200930
sg30631
S'1130/1-Wire 8x32 Matrix'
p32802
sg30633
I-200488
sg30635
I12487
sg30637
I-200025
sg30639
I10256
sg30641
I-200226
sg30643
I1682
sg30645
I-200156
sg30647
I-200841
sg30649
I-200754
sg30651
I-200625
sg30653
I-201043
sg30655
I-201073
sg30657
I-200617
sg30659
S'2593/Independent'
p32803
sg30661
I-200996
sg30663
I-200377
sg30665
I-200619
sg30667
I4649
sg30669
I-200602
sg30671
S'1130/1-Wire 4x64 Matrix'
p32804
sg30673
I4966
sg30675
I4675
sg30677
I4982
sg30679
I10178
sg30681
I-201036
sg30683
I-50265
sg30685
I8767
sg30687
I4887
sg30689
I-200407
sg30691
I12556
sg30693
I-200718
sg30695
I2165
sg30697
I-200938
sg30699
I-54010
sg30701
I-200937
sg30703
S'1130/2-Wire Quad 32x1 Mux'
p32805
sg30705
I6248
sg30707
I10106
sg30709
I5140
sg30711
I10101
sg30713
I10390
sg30715
I6170
sg30717
I8912
sg30719
I-200604
sg30721
I200035
sg30723
I1412
sg30725
I-200440
sg30727
I-200562
sg30729
I-200475
sg30731
I-200925
sg30733
I-200171
sg30735
S'1195/Quad 4x1 Mux'
p32806
sg30737
I-200627
sg30739
I8768
sg30741
I10348
sg30743
I8999
sg30745
I-200977
sg30747
I8611
sg30749
I-200701
sg30751
I-201066
sg30753
I-50009
sg30755
I-200326
sg30757
I-200750
sg30759
I-200546
sg30761
I-200899
sg30763
I4658
sg30765
I-200852
sg30767
S'1128/2-Wire 32x1 Mux'
p32807
sg30769
I5
sg30770
S'1128/4-Wire 16x1 Mux'
p32808
sg30772
I4144
sg30774
S'1130/1-Wire Quad 64x1 Mux'
p32809
sg30776
I-50651
sg30778
I-50413
sg30780
I12515
sg30782
I-200496
sg30784
I-200028
sg30786
I6194
sg30788
I-200689
sg30790
I4243
sg30792
I-200371
sg30794
I8824
sg30796
I8616
sg30798
I-200981
sg30800
I10124
sg30802
I10171
sg30804
I-200926
sg30806
I-200428
sg30808
I8898
sg30810
I-200665
sg30812
I8913
sg30814
S'2532/1-Wire 8x64 Matrix'
p32810
sg30816
I-200155
sg30818
I4
sg30820
I8739
sg30822
I-50411
sg30824
I4465
sg30826
I5145
sg30828
I5264
sg30830
I2321
sg30832
S'2565/16-SPST'
p32811
sg30834
I8825
sg30836
I-200065
sg30838
I-200743
sg30840
I-200204
sg30842
I12551
sg30844
I8914
sg30846
I-200022
sg30848
I10284
sg30850
I6230
sg30852
I6188
sg30854
I10342
sg30856
I12540
sg30858
I-200693
sg30860
I-200637
sg30862
I12514
sg30864
I12513
sg30866
I6463
sg30868
S'2529/2-Wire 8x16 Matrix'
p32812
sg30870
I-200720
sg30872
I10192
sg30874
I-200876
sg30876
I-201021
sg30878
I8576
sg30880
I-200858
sg30882
I10186
sg30884
I200030
sg30886
I-201091
sg30888
I-200949
sg30890
I8758
sg30892
S'2532/1-Wire 4x128 Matrix'
p32813
sg30894
I-200553
sg30896
I-200410
sg30898
I8889
sg30900
I8867
sg30902
I-200447
sg30904
I1
sg30905
I10398
sg30907
I-200764
sg30909
I-200359
sg30911
I-200136
sg30913
I-200231
sg30915
I8734
sg30917
I-200030
sg30919
I10110
sg30921
I8751
sg30923
I10078
sg30925
I-200404
sg30927
I10311
sg30929
I-200840
sg30931
S'2529/2-Wire Dual 4x16 Matrix'
p32814
sg30933
I8568
sg30935
I-200184
sg30937
I-200388
sg30939
I-200334
sg30941
I-200901
sg30943
I-200422
sg30945
I8819
sg30947
I8666
sg30949
I6252
sg30951
I10123
sg30953
I10041
sg30955
I6306
sg30957
I8729
sg30959
I8994
sg30961
I-200168
sg30963
I-200416
sg30965
I10389
sg30967
S'2591/4x1 Mux'
p32815
sg30969
I10182
sg30971
I-200097
sg30973
I-50405
sg30975
I-200183
sg30977
I-200552
sg30979
I-200056
sg30981
I6332
sg30983
S'2593/16x1 Mux'
p32816
sg30985
I-201088
sg30987
S'2570/40-SPDT'
p32817
sg30989
I-200796
sg30991
I2361
sg30993
I-200535
sg30995
I50016
sg30997
I5136
sg30999
I-50257
sg31001
I-200071
sg31003
I2085
sg31005
I-201007
sg31007
I-200272
sg31009
I12547
sg31011
I-200697
sg31013
I8998
sg31015
I-200421
sg31017
Nsg31018
I-200212
sg31020
I-201002
sg31022
I10379
sg31024
I0
sg31026
I-200040
sg31028
I5719
sg31030
I10362
sg31032
I6392
sg31034
I8862
sg31036
I-200290
sg31038
I-200832
sg31040
I-200683
sg31042
I-200304
sg31044
I-201048
sg31046
I10107
sg31048
I8757
sg31050
I-200737
sg31052
I5153
sg31054
I-200952
sg31056
I-200032
sg31058
I200016
sg31060
I-200817
sg31062
I-200879
sg31064
I10171
sg31066
I-200512
sg31068
I-89126
sg31070
I-201044
sg31072
I0
sg31073
I-200798
sg31075
S'1130/1-Wire Octal 32x1 Mux'
p32818
sg31077
I6288
sg31079
I-50203
sg31081
I-200443
sg31083
I-201072
sg31085
I6187
sg31087
I-200462
sg31089
I-201058
sg31091
S'2594/4x1 Mux'
p32819
sg31093
I-200775
sg31095
I-200567
sg31097
I-200091
sg31099
I-50204
sg31101
I-200986
sg31103
I50258
sg31105
I-200655
sg31107
I0
sg31108
I-200426
sg31110
I-89137
sg31112
I-200724
sg31114
I10081
sg31116
I-200946
sg31118
I-200264
sg31120
I-200893
sg31122
I200017
sg31124
I8687
sg31126
I-200787
sg31128
I-200716
sg31130
I8942
sg31132
I10083
sg31134
I10433
sg31136
I50256
sg31138
I-200729
sg31140
I8989
sg31142
I-200092
sg31144
I-200262
sg31146
I-50017
sg31148
I5767
sg31150
I12585
sg31152
I-200448
sg31154
I-200360
sg31156
S'1130/Independent'
p32820
sg31158
I10043
sg31160
Nsg31162
I-201015
sg31164
I-200073
sg31166
S'2530/2-Wire 4x16 Matrix'
p32821
sg31168
I329
sg31170
I-200043
sg31172
I12511
sg31174
I-200785
sg31176
I4361
sg31178
I50551
sg31180
I6110
sg31182
I-201081
sg31184
I-200713
sg31186
I-200161
sg31188
I12507
sg31190
I8856
sg31192
I6179
sg31194
I2452
sg31196
I4641
sg31198
I8692
sg31200
I8752
sg31202
I-89129
sg31204
I-200588
sg31206
I-200650
sg31208
I6317
sg31210
I-200082
sg31212
I8725
sg31214
I8748
sg31216
I-200198
sg31218
I-200399
sg31220
S'2593/Dual 4x1 Terminated Mux'
p32822
sg31222
I-200392
sg31224
I5713
sg31226
I135
sg31228
I200036
sg31230
I-200098
sg31232
I-88715
sg31234
I-200066
sg31236
I5014
sg31238
I50105
sg31240
I-200851
sg31242
I-200128
sg31244
I-200565
sg31246
I6323
sg31248
I12486
sg31250
I-200216
sg31252
Nsg31253
I8786
sg31255
I3
sg31256
I12573
sg31258
I10304
sg31260
Nsg31261
I-200247
sg31263
I-200687
sg31265
I4869
sg31267
I-200137
sg31269
I-200352
sg31271
I-200489
sg31273
I-200807
sg31275
I-200601
sg31277
I50006
sg31279
I8741
sg31281
S'2503/2-Wire Quad 6x1 Mux'
p32823
sg31283
I-200836
sg31285
I6331
sg31287
I-200425
sg31289
I5189
sg31291
I-200739
sg31293
S'1193/Dual 8x1 Terminated Mux'
p32824
sg31295
I-54020
sg31297
I-200139
sg31299
I10227
sg31301
I50003
sg31303
I-200230
sg31305
I4969
sg31307
I10438
sg31309
I-200892
sg31311
I-200652
sg31313
I-209800
sg31315
S'1193/16x1 Terminated Mux'
p32825
sg31317
I6250
sg31319
I-200537
sg31321
I-200474
sg31323
I200013
sg31325
I-200494
sg31327
I-201046
sg31329
I-200175
sg31331
I-200254
sg31333
I-200239
sg31335
I-200898
sg31337
I5704
sg31339
I148
sg31341
I-200950
sg31343
I-200376
sg31345
I6415
sg31347
S'2532/1-Wire Sixteen 2x16 Matrix'
p32826
sg31349
I8617
sg31351
I-200515
sg31353
I50405
sg31355
I200034
sg31357
I-201071
sg31359
I-200141
sg31361
I-200727
sg31363
I-200848
sg31365
I5702
sg31367
I-200905
sg31369
I-200816
sg31371
I-200301
sg31373
I-200923
sg31375
I-201092
sg31377
I8714
sg31379
I2
sg31381
I12546
sg31383
I-201074
sg31385
I12506
sg31387
I-50303
sg31389
S'1130/1-Wire 256x1 Mux'
p32827
sg31391
I-89134
sg31393
I-50202
sg31395
I8690
sg31397
I-200691
sg31399
I-50200
sg31401
I5141
sg31403
I-50004
sg31405
I-200353
sg31407
I-200206
sg31409
S'2501/2-Wire Dual 12x1 Mux'
p32828
sg31411
I-200732
sg31413
I-200267
sg31415
I-200880
sg31417
I-54002
sg31419
S'2590/4x1 Mux'
p32829
sg31421
I6275
sg31423
I-200045
sg31425
I8582
sg31427
I-200631
sg31429
I-201056
sg31431
I8861
sg31433
I50403
sg31435
I-200980
sg31437
I6301
sg31439
I10065
sg31441
I-88710
sg31443
I50260
sg31445
I10237
sg31447
I8736
sg31449
I8615
sg31451
I-200615
sg31453
I10137
sg31455
S'2593/8x1 Terminated Mux'
p32830
sg31457
I-200053
sg31459
I-200248
sg31461
I-200004
sg31463
I-200381
sg31465
I10204
sg31467
I-201039
sg31469
I-200786
sg31471
I8755
sg31473
I-200519
sg31475
I-200838
sg31477
I50015
sg31479
I-200676
sg31481
I10241
sg31483
I10146
sg31485
I-50019
sg31487
I10116
sg31489
I200029
sg31491
I6241
sg31493
I-200364
sg31495
I-200673
sg31497
I5160
sg31499
I-200628
sg31501
I-200621
sg31503
I-200351
sg31505
S'2530/1-Wire Dual 64x1 Mux'
p32831
sg31507
I10172
sg31509
I-200126
sg31511
S'2597/6x1 Terminated Mux'
p32832
sg31513
I-200144
sg31515
I-200346
sg31517
I-200317
sg31519
I-200093
sg31521
I-200450
sg31523
I-200250
sg31525
I6459
sg31527
I-200190
sg31529
I200010
sg31531
I8607
sg31533
I-200672
sg31535
I6140
sg31537
I12512
sg31539
I-200800
sg31541
I6379
sg31543
I-200735
sg31545
I-200497
sg31547
S'2503/2-Wire 24x1 Mux'
p32833
sg31549
I-50250
sg31551
I-200228
sg31553
I10326
sg31555
I10267
sg31557
I-200240
sg31559
I-200465
sg31561
I10188
sg31563
I-200782
sg31565
I-200067
sg31567
I-200389
sg31569
I-200939
sg31571
S'1175/1-Wire 196x1 Mux'
p32834
sg31573
I-200944
sg31575
I-200591
sg31577
I8908
sg31579
I200032
sg31581
I833
sg31583
I12470
sg31585
I-50700
sg31587
I-50207
sg31589
S'1129/2-Wire Dual 8x16 Matrix'
p32835
sg31591
I336
sg31593
S'2586/10-SPST'
p32836
sg31595
I10310
sg31597
I12527
sg31599
I10200
sg31601
I4709
sg31603
I6276
sg31605
I-200681
sg31607
I-201000
sg31609
I-201063
sg31611
I50011
sg31613
I8683
sg31615
I-200957
sg31617
I10105
sg31619
I-200261
sg31621
I6130
sg31623
I-200478
sg31625
I-200744
sg31627
I-200109
sg31629
I10158
sg31631
I-201045
sg31633
I-201090
sg31635
I6304
sg31637
I-200269
sg31639
I-200418
sg31641
I-201042
sg31643
I4962
sg31645
I8570
sg31647
I8765
sg31649
I-200327
sg31651
I-200337
sg31653
I4244
sg31655
I-201082
sg31657
I-200118
sg31659
I-200833
sg31661
I-200236
sg31663
I8900
sg31665
I-200358
sg31667
S'1130/1-Wire Dual 128x1 Mux'
p32837
sg31669
I8667
sg31671
I-200664
sg31673
I-200135
sg31675
I200033
sg31677
I-200398
sg31679
I10164
sg31681
I324
sg31683
I-200170
sg31685
S'2527/1-Wire Dual 32x1 Mux'
p32838
sg31687
I-89139
sg31689
S'2501/2-Wire Quad 6x1 Mux'
p32839
sg31691
I-200112
sg31693
I6240
sg31695
I-89148
sg31697
I-200845
sg31699
I6105
sg31701
I-200302
sg31703
I-200883
sg31705
I4487
sg31707
I-200966
sg31709
I-201075
sg31711
S'2530/Independent'
p32840
sg31713
I4488
sg31715
I12509
sg31717
I8686
sg31719
I-200413
sg31721
I-50256
sg31723
I8910
sg31725
I-200508
sg31727
I661
sg31729
I-200557
sg31731
I8743
sg31733
I10278
sg31735
I-200333
sg31737
I6192
sg31739
I-200503
sg31741
I6318
sg31743
I-200133
sg31745
I-200835
sg31747
I-1
sg31749
I-200394
sg31751
I50013
sg31753
I-200609
sg31755
I-200365
sg31757
I-200123
sg31759
I8865
sg31761
I-200533
sg31763
I6391
sg31765
I-200368
sg31767
S'2532/2-Wire 8x32 Matrix'
p32841
sg31769
I-200763
sg31771
I10439
sg31773
I-200819
sg31775
S'1129/2-Wire 8x32 Matrix'
p32842
sg31777
I-201076
sg31779
I8612
sg31781
I8733
sg31783
I-200671
sg31785
I-200596
sg31787
I6283
sg31789
I10299
sg31791
I-200012
sg31793
S'2576/2-Wire Quad 16x1 Mux'
p32843
sg31795
I-200947
sg31797
I-200668
sg31799
I4663
sg31801
I-200257
sg31803
I-200059
sg31805
I-200309
sg31807
I-209805
sg31809
I1
sg31810
I8787
sg31812
I10157
sg31814
I5731
sg31816
S'2530/2-Wire 64x1 Mux'
p32844
sg31818
I12504
sg31820
I-200849
sg31822
I-201030
sg31824
I-200370
sg31826
I-50102
sg31828
I-200441
sg31830
I8884
sg31832
I8822
sg31834
I6376
sg31836
I-50262
sg31838
I-200776
sg31840
I-200900
sg31842
I2184
sg31844
I-200679
sg31846
I-201064
sg31848
I-201032
sg31850
I-200563
sg31852
I200020
sg31854
I-200166
sg31856
I-89142
sg31858
I-89146
sg31860
I-200561
sg31862
I-200675
sg31864
I209802
sg31866
I12529
sg31868
I-200195
sg31870
I-200463
sg31872
I-209802
sg31874
I-200350
sg31876
I-200831
sg31878
I-200896
sg31880
I12510
sg31882
I10289
sg31884
I6443
sg31886
I10434
sg31888
I-200451
sg31890
I200005
sg31892
I8995
sg31894
I-200871
sg31896
I10431
sg31898
I-200162
sg31900
I8894
sg31902
I80
sg31904
I-200555
sg31906
I12508
sg31908
I-200287
sg31910
I-201093
sg31912
I-200945
sg31914
I8620
sg31916
I8904
sg31918
I-200430
sg31920
I8769
sg31922
I-200436
sg31924
I-200772
sg31926
I50351
sg31928
I0
sg31929
I8918
sg31931
I-200694
sg31933
I-200854
sg31935
I-200710
sg31937
I8818
sg31939
I200044
sg31941
I-200511
sg31943
I2185
sg31945
I-200878
sg31947
I6126
sg31949
I8728
sg31951
I10427
sg31953
I-200386
sg31955
I8880
sg31957
S'2529/2-Wire 4x32 Matrix'
p32845
sg31959
I-200953
sg31961
I-200975
sg31963
S'1128/2-Wire 4x8 Matrix'
p32846
sg31965
I50406
sg31967
I5768
sg31969
I8689
sg31971
S'2576/2-Wire Sixteen 4x1 Mux'
p32847
sg31973
I10119
sg31975
I-200088
sg31977
I8609
sg31979
I-200531
sg31981
I6145
sg31983
I10219
sg31985
I6381
sg31987
I-200580
sg31989
I-200090
sg31991
I8731
sg31993
I-200103
sg31995
I8963
sg31997
I9001
sg31999
I6109
sg32001
S'2568/31-SPST'
p32848
sg32003
I-200460
sg32005
I-200870
sg32007
S'2530/4-Wire Dual 16x1 Mux'
p32849
sg32009
I10097
sg32011
I-200378
sg32013
I-200582
sg32015
I6412
sg32017
I-200860
sg32019
I-201047
sg32021
I4360
sg32023
I-89124
sg32025
I-200435
sg32027
S'2503/2-Wire 4x6 Matrix'
p32850
sg32029
I8718
sg32031
I-200400
sg32033
I10302
sg32035
I-200812
sg32037
I-200220
sg32039
I-200324
sg32041
S'1129/2-Wire Dual 4x32 Matrix'
p32851
sg32043
I2456
sg32045
I-200587
sg32047
I-50002
sg32049
I-200218
sg32051
I209800
sg32053
I-200493
sg32055
I0
sg32056
I-50251
sg32058
I6344
sg32060
I-200288
sg32062
I-89136
sg32064
I-200127
sg32066
I10080
sg32068
I-200667
sg32070
I10047
sg32072
I8985
sg32074
I8697
sg32076
I-200658
sg32078
I8684
sg32080
I-200513
sg32082
I-200473
sg32084
I-200366
sg32086
I10152
sg32088
I8756
sg32090
I50254
sg32092
I6378
sg32094
I-200316
sg32096
I4680
sg32098
I304
sg32100
I-200064
sg32102
I-200211
sg32104
I5120
sg32106
I-200780
sg32108
I-50253
sg32110
I-200079
sg32112
I10286
sg32114
I5143
sg32116
I6202
sg32118
I8971
sg32120
I-201013
sg32122
I-200265
sg32124
I50410
sg32126
I1
sg32127
I-200016
sg32129
I-201010
sg32131
S'2527/2-Wire Dual 16x1 Mux'
p32852
sg32133
I-200635
sg32135
I-200113
sg32137
I10271
sg32139
I-50101
sg32141
I6414
sg32143
I6129
sg32145
I100
sg32147
I12523
sg32149
I-200328
sg32151
I2068
sg32153
I-201067
sg32155
I5175
sg32157
I-200208
sg32159
I-50015
sg32161
I-200395
sg32163
I-200278
sg32165
I-88709
sg32167
I-200124
sg32169
I2099
sg32171
I6190
sg32173
I-200747
sg32175
I-200061
sg32177
S'1127/1-Wire 64x1 Mux'
p32853
sg32179
I8709
sg32181
I6168
sg32183
I-200434
sg32185
I4457
sg32187
I-200192
sg32189
I-200594
sg32191
I-200988
sg32193
I-200516
sg32195
I6314
sg32197
I200026
sg32199
I-200232
sg32201
I-200884
sg32203
I-200437
sg32205
I-200709
sg32207
I5155
sg32209
I8662
sg32211
I200008
sg32213
I-200794
sg32215
I-200070
sg32217
I-201023
sg32219
I-200347
sg32221
I8583
sg32223
I-200534
sg32225
I-200917
sg32227
I50408
sg32229
I6435
sg32231
I6227
sg32233
I-89132
sg32235
I8738
sg32237
I-200105
sg32239
I8923
sg32241
I-200887
sg32243
I-200706
sg32245
I-200281
sg32247
I-200810
sg32249
I-200241
sg32251
I8959
sg32253
I-201085
sg32255
I-200006
sg32257
I8896
sg32259
S'1130/2-Wire 4x32 Matrix'
p32854
sg32261
I50355
sg32263
I6427
sg32265
I8881
sg32267
I6444
sg32269
I-200408
sg32271
I-200573
sg32273
I289
sg32275
I-200572
sg32277
I200014
sg32279
I12553
sg32281
I10435
sg32283
I-201038
sg32285
I-200229
sg32287
I-1
sg32289
I-200726
sg32291
S'1175/2-Wire 95x1 Mux'
p32855
sg32293
I8713
sg32295
S'2596/Dual 6x1 Mux'
p32856
sg32297
I-200911
sg32299
I-200116
sg32301
I6132
sg32303
I-200648
sg32305
I1600
sg32307
I8922
sg32309
I10163
sg32311
I-54000
sg32313
I-89131
sg32315
I-201060
sg32317
I-200438
sg32319
I-200742
sg32321
I-200205
sg32323
I8996
sg32325
I-200759
sg32327
I-200361
sg32329
I6286
sg32331
I1
sg32332
I-200610
sg32334
I-200081
sg32336
I-200401
sg32338
I8603
sg32340
I-200894
sg32342
I-200372
sg32344
I8695
sg32346
I-50450
sg32348
I-200696
sg32350
I200009
sg32352
I8575
sg32354
I200031
sg32356
I4724
sg32358
I6287
sg32360
I8717
sg32362
I1608
sg32364
I-200150
sg32366
I-200983
sg32368
I6216
sg32370
I-200698
sg32372
I12488
sg32374
S'1127/2-Wire 32x1 Mux'
p32857
sg32376
I-89141
sg32378
I-200815
sg32380
I6124
sg32382
I-200748
sg32384
I-50650
sg32386
I-89125
sg32388
I10102
sg32390
I-200255
sg32392
I10100
sg32394
S'1130/1-Wire Sixteen 16x1 Mux'
p32858
sg32396
I6411
sg32398
I10045
sg32400
I-200989
sg32402
I-200362
sg32404
I-50001
sg32406
I5714
sg32408
I8727
sg32410
I-200215
sg32412
I-200544
sg32414
I10251
sg32416
I10440
sg32418
I-200623
sg32420
I1686
sg32422
I-50003
sg32424
I1793
sg32426
I-200495
sg32428
I6302
sg32430
I-200963
sg32432
I-50007
sg32434
I-200096
sg32436
I-200251
sg32438
S'2532/1-Wire Dual 16x16 Matrix'
p32859
sg32440
I10189
sg32442
I-200662
sg32444
I-200284
sg32446
I-201004
sg32448
I12588
sg32450
I-200484
sg32452
I5975
sg32454
I8958
sg32456
I10325
sg32458
I-200089
sg32460
I4885
sg32462
I325
sg32464
I-201025
sg32466
I-200927
sg32468
I6146
sg32470
I-200146
sg32472
I-50208
sg32474
I-200779
sg32476
I-50151
sg32478
I-200830
sg32480
I10187
sg32482
I50002
sg32484
I-200238
sg32486
I-200054
sg32488
I12582
sg32490
I10360
sg32492
I-200855
sg32494
I-200038
sg32496
I-200403
sg32498
I1
sg32500
I-200384
sg32502
I8711
sg32504
I-50601
sg32506
I10159
sg32508
I-200444
sg32510
I306
sg32512
I-54001
sg32514
I-200033
sg32516
I-200196
sg32518
I50010
sg32520
I-200818
sg32522
I4
sg32523
I5121
sg32525
I8604
sg32527
Nsg32528
I-200935
sg32530
I8679
sg32532
I-200179
sg32534
I-200614
sg32536
I4661
sg32538
I-200456
sg32540
I-200867
sg32542
I8719
sg32544
I-200383
sg32546
I6279
sg32548
Nsg32549
I8990
sg32551
I-201040
sg32553
I-200550
sg32555
I-200781
sg32557
I-200313
sg32559
I665
sg32561
I-200866
sg32563
I-200821
sg32565
I1602
sg32567
I-200306
sg32569
I6339
sg32571
I-200203
sg32573
I5967
sg32575
I-200842
sg32577
I10117
sg32579
I-200967
sg32581
I-200714
sg32583
S'2501/2-Wire 24x1 Amplified Mux'
p32860
sg32585
I6388
sg32587
I8688
sg32589
I-200583
sg32591
I6460
sg32593
I8857
sg32595
I-200339
sg32597
I-200765
sg32599
I8573
sg32601
I-200197
sg32603
I-200909
sg32605
I6413
sg32607
I-200595
sg32609
I-200951
sg32611
I5158
sg32613
I-50255
sg32615
I-200117
sg32617
I-200540
sg32619
I6112
sg32621
I-200417
sg32623
I-201006
sg32625
I10198
sg32627
I5011
sg32629
I-200185
sg32631
I8608
sg32633
I-200058
sg32635
I-200106
sg32637
S'2575/1-Wire 196x1 Mux'
p32861
sg32639
I-200875
sg32641
I1609
sg32643
I-201001
sg32645
I-200319
sg32647
I10179
sg32649
I-200293
sg32651
I-200243
sg32653
I50262
sg32655
I-200715
sg32657
I6438
sg32659
Nsg32661
I8680
sg32663
I12524
sg32665
I-200982
sg32667
I-200209
sg32669
I8760
sg32671
I8707
sg32673
L0L
sg32675
I8888
sg32677
I-50263
sg32679
I-50402
sg32681
I-200009
sg32683
I-50201
sg32685
I10388
sg32687
I8814
sg32689
I-200147
sg32691
I-200985
sg32693
I-200956
sg32695
I10150
sg32697
I-200670
sg32699
I-50104
sg32701
I-200814
sg32703
I-200908
sg32705
I10426
sg32707
I-200087
sg32709
I-200891
sg32711
I-200955
sg32713
I660
sg32715
I10184
sg32717
I2054
sg32719
I-200684
sg32721
S'2530/1-Wire 8x16 Matrix'
p32862
sg32723
S'2530/1-Wire Octal 16x1 Mux'
p32863
sg32725
I-200663
sg32727
I-200972
sg32729
I4464
sg32731
I-50100
ssg20
(dp32864
S'DAQmxFailed'
p32865
(S'((%s)<0)'
p32866
(lp32867
I0
atp32868
ssg22
(dp32869
sg24
(dp32870
S'uInt64'
p32871
(lp32872
S'unsigned __int64'
p32873
asS'int32'
p32874
(lp32875
S'signed long'
p32876
asS'int16'
p32877
(lp32878
S'signed short'
p32879
asS'DAQmxDoneEventCallbackPtr'
p32880
(lp32881
S'int32'
p32882
a((S'taskHandle'
p32883
(lp32884
S'TaskHandle'
p32885
aNtp32886
(S'status'
p32887
(lp32888
S'int32'
p32889
aNtp32890
(S'callbackData'
p32891
(lp32892
S'void'
p32893
ag42
aNtp32894
tp32895
ag2565
ag42
asS'float64'
p32896
(lp32897
S'double'
p32898
asS'TaskHandle'
p32899
(lp32900
S'uInt32'
p32901
asS'bool32'
p32902
(lp32903
S'uInt32'
p32904
asS'uInt8'
p32905
(lp32906
S'unsigned char'
p32907
asS'int8'
p32908
(lp32909
S'signed char'
p32910
asS'DAQmxEveryNSamplesEventCallbackPtr'
p32911
(lp32912
S'int32'
p32913
a((S'taskHandle'
p32914
(lp32915
S'TaskHandle'
p32916
aNtp32917
(S'everyNsamplesEventType'
p32918
(lp32919
S'int32'
p32920
aNtp32921
(S'nSamples'
p32922
(lp32923
S'uInt32'
p32924
aNtp32925
(S'callbackData'
p32926
(lp32927
S'void'
p32928
ag42
aNtp32929
tp32930
ag2565
ag42
asS'uInt16'
p32931
(lp32932
S'unsigned short'
p32933
asS'int64'
p32934
(lp32935
S'__int64'
p32936
asS'uInt32'
p32937
(lp32938
S'unsigned long'
p32939
asS'float32'
p32940
(lp32941
S'float'
p32942
asS'DAQmxSignalEventCallbackPtr'
p32943
(lp32944
S'int32'
p32945
a((S'taskHandle'
p32946
(lp32947
S'TaskHandle'
p32948
aNtp32949
(S'signalID'
p32950
(lp32951
S'int32'
p32952
aNtp32953
(S'callbackData'
p32954
(lp32955
S'void'
p32956
ag42
aNtp32957
tp32958
ag2565
ag42
assssS'opts'
p32959
(dp32960
S'files'
p32961
(lp32962
S'NIDAQmx.h'
p32963
asg24
(dp32964
g26
g27
ssS'replace'
p32965
(dp32966
g32963
Nsss.