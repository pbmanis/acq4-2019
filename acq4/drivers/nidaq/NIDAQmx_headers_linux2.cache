(dp0
S'version'
p1
I22
sS'fileOrder'
p2
(lp3
S'/10.04/home/luke/work/manis_lab/code/acq4/lib/drivers/nidaq/NIDAQmx.h'
p4
asS'fileDefs'
p5
(dp6
S'NIDAQmx.h'
p7
(dp8
S'functions'
p9
(dp10
S'DAQmxSetSampClkSrc'
p11
((lp12
S'int32'
p13
aS'__stdcall'
p14
a((S'taskHandle'
p15
(lp16
S'TaskHandle'
p17
aNtp18
(S'data'
p19
(lp20
S'char'
p21
aS'*'
p22
aNtp23
tp24
tp25
sS'DAQmxSetCITwoEdgeSepSecondDigSyncEnable'
p26
((lp27
S'int32'
p28
ag14
a((S'taskHandle'
p29
(lp30
S'TaskHandle'
p31
aNtp32
(S'channel'
p33
(lp34
S'char'
p35
a(lp36
I-1
aaNtp37
(S'data'
p38
(lp39
S'bool32'
p40
aNtp41
tp42
tp43
sS'DAQmxTaskControl'
p44
((lp45
S'int32'
p46
ag14
a((S'taskHandle'
p47
(lp48
S'TaskHandle'
p49
aNtp50
(S'action'
p51
(lp52
S'int32'
p53
aNtp54
tp55
tp56
sS'DAQmxGetReadSleepTime'
p57
((lp58
S'int32'
p59
ag14
a((S'taskHandle'
p60
(lp61
S'TaskHandle'
p62
aNtp63
(S'data'
p64
(lp65
S'float64'
p66
ag22
aNtp67
tp68
tp69
sS'DAQmxGetCIDataXferMech'
p70
((lp71
S'int32'
p72
ag14
a((S'taskHandle'
p73
(lp74
S'TaskHandle'
p75
aNtp76
(S'channel'
p77
(lp78
S'char'
p79
a(lp80
I-1
aaNtp81
(S'data'
p82
(lp83
S'int32'
p84
ag22
aNtp85
tp86
tp87
sS'DAQmxResetAIDataXferCustomThreshold'
p88
((lp89
S'int32'
p90
ag14
a((S'taskHandle'
p91
(lp92
S'TaskHandle'
p93
aNtp94
(S'channel'
p95
(lp96
S'char'
p97
a(lp98
I-1
aaNtp99
tp100
tp101
sS'DAQmxLoadTask'
p102
((lp103
S'int32'
p104
ag14
a((S'taskName'
p105
(lp106
S'char'
p107
a(lp108
I-1
aaNtp109
(S'taskHandle'
p110
(lp111
S'TaskHandle'
p112
ag22
aNtp113
tp114
tp115
sS'DAQmxCreateAIResistanceChan'
p116
((lp117
S'int32'
p118
ag14
a((S'taskHandle'
p119
(lp120
S'TaskHandle'
p121
aNtp122
(S'physicalChannel'
p123
(lp124
S'char'
p125
a(lp126
I-1
aaNtp127
(S'nameToAssignToChannel'
p128
(lp129
S'char'
p130
a(lp131
I-1
aaNtp132
(S'minVal'
p133
(lp134
S'float64'
p135
aNtp136
(S'maxVal'
p137
(lp138
S'float64'
p139
aNtp140
(S'units'
p141
(lp142
S'int32'
p143
aNtp144
(S'resistanceConfig'
p145
(lp146
S'int32'
p147
aNtp148
(S'currentExcitSource'
p149
(lp150
S'int32'
p151
aNtp152
(S'currentExcitVal'
p153
(lp154
S'float64'
p155
aNtp156
(S'customScaleName'
p157
(lp158
S'char'
p159
a(lp160
I-1
aaNtp161
tp162
tp163
sS'DAQmxGetCICountEdgesActiveEdge'
p164
((lp165
S'int32'
p166
ag14
a((S'taskHandle'
p167
(lp168
S'TaskHandle'
p169
aNtp170
(S'channel'
p171
(lp172
S'char'
p173
a(lp174
I-1
aaNtp175
(S'data'
p176
(lp177
S'int32'
p178
ag22
aNtp179
tp180
tp181
sS'DAQmxGetSysDevNames'
p182
((lp183
S'int32'
p184
ag14
a((S'data'
p185
(lp186
S'char'
p187
ag22
aNtp188
(S'bufferSize'
p189
(lp190
S'uInt32'
p191
aNtp192
tp193
tp194
sS'DAQmxSwitchCreateScanList'
p195
((lp196
S'int32'
p197
ag14
a((S'scanList'
p198
(lp199
S'char'
p200
a(lp201
I-1
aaNtp202
(S'taskHandle'
p203
(lp204
S'TaskHandle'
p205
ag22
aNtp206
tp207
tp208
sS'DAQmxResetAITempUnits'
p209
((lp210
S'int32'
p211
ag14
a((S'taskHandle'
p212
(lp213
S'TaskHandle'
p214
aNtp215
(S'channel'
p216
(lp217
S'char'
p218
a(lp219
I-1
aaNtp220
tp221
tp222
sS'DAQmxGetAIStrainUnits'
p223
((lp224
S'int32'
p225
ag14
a((S'taskHandle'
p226
(lp227
S'TaskHandle'
p228
aNtp229
(S'channel'
p230
(lp231
S'char'
p232
a(lp233
I-1
aaNtp234
(S'data'
p235
(lp236
S'int32'
p237
ag22
aNtp238
tp239
tp240
sS'DAQmxGetSampClkDigFltrEnable'
p241
((lp242
S'int32'
p243
ag14
a((S'taskHandle'
p244
(lp245
S'TaskHandle'
p246
aNtp247
(S'data'
p248
(lp249
S'bool32'
p250
ag22
aNtp251
tp252
tp253
sS'DAQmxGetAIExcitActualVal'
p254
((lp255
S'int32'
p256
ag14
a((S'taskHandle'
p257
(lp258
S'TaskHandle'
p259
aNtp260
(S'channel'
p261
(lp262
S'char'
p263
a(lp264
I-1
aaNtp265
(S'data'
p266
(lp267
S'float64'
p268
ag22
aNtp269
tp270
tp271
sS'DAQmxGetCITimestampInitialSeconds'
p272
((lp273
S'int32'
p274
ag14
a((S'taskHandle'
p275
(lp276
S'TaskHandle'
p277
aNtp278
(S'channel'
p279
(lp280
S'char'
p281
a(lp282
I-1
aaNtp283
(S'data'
p284
(lp285
S'uInt32'
p286
ag22
aNtp287
tp288
tp289
sS'DAQmxSetCOPulseFreqInitialDelay'
p290
((lp291
S'int32'
p292
ag14
a((S'taskHandle'
p293
(lp294
S'TaskHandle'
p295
aNtp296
(S'channel'
p297
(lp298
S'char'
p299
a(lp300
I-1
aaNtp301
(S'data'
p302
(lp303
S'float64'
p304
aNtp305
tp306
tp307
sS'DAQmxSetSwitchDevAutoConnAnlgBus'
p308
((lp309
S'int32'
p310
ag14
a((S'deviceName'
p311
(lp312
S'char'
p313
a(lp314
I-1
aaNtp315
(S'data'
p316
(lp317
S'bool32'
p318
aNtp319
tp320
tp321
sS'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate'
p322
((lp323
S'int32'
p324
ag14
a((S'taskHandle'
p325
(lp326
S'TaskHandle'
p327
aNtp328
(S'data'
p329
(lp330
S'float64'
p331
aNtp332
tp333
tp334
sS'DAQmxSetCIEncoderBInputDigSyncEnable'
p335
((lp336
S'int32'
p337
ag14
a((S'taskHandle'
p338
(lp339
S'TaskHandle'
p340
aNtp341
(S'channel'
p342
(lp343
S'char'
p344
a(lp345
I-1
aaNtp346
(S'data'
p347
(lp348
S'bool32'
p349
aNtp350
tp351
tp352
sS'DAQmxResetAIChanCalScaleType'
p353
((lp354
S'int32'
p355
ag14
a((S'taskHandle'
p356
(lp357
S'TaskHandle'
p358
aNtp359
(S'channel'
p360
(lp361
S'char'
p362
a(lp363
I-1
aaNtp364
tp365
tp366
sS'DAQmxResetCIFreqDigSyncEnable'
p367
((lp368
S'int32'
p369
ag14
a((S'taskHandle'
p370
(lp371
S'TaskHandle'
p372
aNtp373
(S'channel'
p374
(lp375
S'char'
p376
a(lp377
I-1
aaNtp378
tp379
tp380
sS'DAQmxGetAIChanCalVerifRefVals'
p381
((lp382
S'int32'
p383
ag14
a((S'taskHandle'
p384
(lp385
S'TaskHandle'
p386
aNtp387
(S'channel'
p388
(lp389
S'char'
p390
a(lp391
I-1
aaNtp392
(S'data'
p393
(lp394
S'float64'
p395
ag22
aNtp396
(S'arraySizeInSamples'
p397
(lp398
S'uInt32'
p399
aNtp400
tp401
tp402
sS'DAQmxGetAnlgEdgeRefTrigSlope'
p403
((lp404
S'int32'
p405
ag14
a((S'taskHandle'
p406
(lp407
S'TaskHandle'
p408
aNtp409
(S'data'
p410
(lp411
S'int32'
p412
ag22
aNtp413
tp414
tp415
sS'DAQmxGetDigEdgeRefTrigEdge'
p416
((lp417
S'int32'
p418
ag14
a((S'taskHandle'
p419
(lp420
S'TaskHandle'
p421
aNtp422
(S'data'
p423
(lp424
S'int32'
p425
ag22
aNtp426
tp427
tp428
sS'DAQmxSetHshkTrigType'
p429
((lp430
S'int32'
p431
ag14
a((S'taskHandle'
p432
(lp433
S'TaskHandle'
p434
aNtp435
(S'data'
p436
(lp437
S'int32'
p438
aNtp439
tp440
tp441
sS'DAQmxSetWriteWaitMode'
p442
((lp443
S'int32'
p444
ag14
a((S'taskHandle'
p445
(lp446
S'TaskHandle'
p447
aNtp448
(S'data'
p449
(lp450
S'int32'
p451
aNtp452
tp453
tp454
sS'DAQmxSetAIConvSrc'
p455
((lp456
S'int32'
p457
ag14
a((S'taskHandle'
p458
(lp459
S'TaskHandle'
p460
aNtp461
(S'data'
p462
(lp463
S'char'
p464
ag22
aNtp465
tp466
tp467
sS'DAQmxTristateOutputTerm'
p468
((lp469
S'int32'
p470
ag14
a((S'outputTerminal'
p471
(lp472
S'char'
p473
a(lp474
I-1
aaNtp475
tp476
tp477
sS'DAQmxGetExportedSampClkOutputBehavior'
p478
((lp479
S'int32'
p480
ag14
a((S'taskHandle'
p481
(lp482
S'TaskHandle'
p483
aNtp484
(S'data'
p485
(lp486
S'int32'
p487
ag22
aNtp488
tp489
tp490
sS'DAQmxGetPersistedChanAllowInteractiveDeletion'
p491
((lp492
S'int32'
p493
ag14
a((S'channel'
p494
(lp495
S'char'
p496
a(lp497
I-1
aaNtp498
(S'data'
p499
(lp500
S'bool32'
p501
ag22
aNtp502
tp503
tp504
sS'DAQmxGetAIAccelSensitivityUnits'
p505
((lp506
S'int32'
p507
ag14
a((S'taskHandle'
p508
(lp509
S'TaskHandle'
p510
aNtp511
(S'channel'
p512
(lp513
S'char'
p514
a(lp515
I-1
aaNtp516
(S'data'
p517
(lp518
S'int32'
p519
ag22
aNtp520
tp521
tp522
sS'DAQmxCreateCITwoEdgeSepChan'
p523
((lp524
S'int32'
p525
ag14
a((S'taskHandle'
p526
(lp527
S'TaskHandle'
p528
aNtp529
(S'counter'
p530
(lp531
S'char'
p532
a(lp533
I-1
aaNtp534
(S'nameToAssignToChannel'
p535
(lp536
S'char'
p537
a(lp538
I-1
aaNtp539
(S'minVal'
p540
(lp541
S'float64'
p542
aNtp543
(S'maxVal'
p544
(lp545
S'float64'
p546
aNtp547
(S'units'
p548
(lp549
S'int32'
p550
aNtp551
(S'firstEdge'
p552
(lp553
S'int32'
p554
aNtp555
(S'secondEdge'
p556
(lp557
S'int32'
p558
aNtp559
(S'customScaleName'
p560
(lp561
S'char'
p562
a(lp563
I-1
aaNtp564
tp565
tp566
sS'DAQmxGetCISemiPeriodDigFltrMinPulseWidth'
p567
((lp568
S'int32'
p569
ag14
a((S'taskHandle'
p570
(lp571
S'TaskHandle'
p572
aNtp573
(S'channel'
p574
(lp575
S'char'
p576
a(lp577
I-1
aaNtp578
(S'data'
p579
(lp580
S'float64'
p581
ag22
aNtp582
tp583
tp584
sS'DAQmxRestoreLastExtCalConst'
p585
((lp586
S'int32'
p587
ag14
a((S'deviceName'
p588
(lp589
S'char'
p590
a(lp591
I-1
aaNtp592
tp593
tp594
sS'DAQmxSetHshkSampleInputDataWhen'
p595
((lp596
S'int32'
p597
ag14
a((S'taskHandle'
p598
(lp599
S'TaskHandle'
p600
aNtp601
(S'data'
p602
(lp603
S'int32'
p604
aNtp605
tp606
tp607
sS'DAQmxGetCITwoEdgeSepSecondDigFltrEnable'
p608
((lp609
S'int32'
p610
ag14
a((S'taskHandle'
p611
(lp612
S'TaskHandle'
p613
aNtp614
(S'channel'
p615
(lp616
S'char'
p617
a(lp618
I-1
aaNtp619
(S'data'
p620
(lp621
S'bool32'
p622
ag22
aNtp623
tp624
tp625
sS'DAQmxGetNthTaskChannel'
p626
((lp627
S'int32'
p628
ag14
a((S'taskHandle'
p629
(lp630
S'TaskHandle'
p631
aNtp632
(S'index'
p633
(lp634
S'uInt32'
p635
aNtp636
(S'buffer'
p637
(lp638
S'char'
p639
a(lp640
I-1
aaNtp641
(S'bufferSize'
p642
(lp643
S'int32'
p644
aNtp645
tp646
tp647
sS'DAQmxSetCIMin'
p648
((lp649
S'int32'
p650
ag14
a((S'taskHandle'
p651
(lp652
S'TaskHandle'
p653
aNtp654
(S'channel'
p655
(lp656
S'char'
p657
a(lp658
I-1
aaNtp659
(S'data'
p660
(lp661
S'float64'
p662
aNtp663
tp664
tp665
sS'DAQmxSetup1520Cal'
p666
((lp667
S'int32'
p668
ag14
a((S'calHandle'
p669
(lp670
S'uInt32'
p671
aNtp672
(S'channelNames'
p673
(lp674
S'char'
p675
a(lp676
I-1
aaNtp677
(S'gain'
p678
(lp679
S'float64'
p680
aNtp681
tp682
tp683
sS'DAQmxGetCIEncoderZInputDigFltrTimebaseSrc'
p684
((lp685
S'int32'
p686
ag14
a((S'taskHandle'
p687
(lp688
S'TaskHandle'
p689
aNtp690
(S'channel'
p691
(lp692
S'char'
p693
a(lp694
I-1
aaNtp695
(S'data'
p696
(lp697
S'char'
p698
ag22
aNtp699
(S'bufferSize'
p700
(lp701
S'uInt32'
p702
aNtp703
tp704
tp705
sS'DAQmxGetAITermCfg'
p706
((lp707
S'int32'
p708
ag14
a((S'taskHandle'
p709
(lp710
S'TaskHandle'
p711
aNtp712
(S'channel'
p713
(lp714
S'char'
p715
a(lp716
I-1
aaNtp717
(S'data'
p718
(lp719
S'int32'
p720
ag22
aNtp721
tp722
tp723
sS'DAQmxSetCICustomScaleName'
p724
((lp725
S'int32'
p726
ag14
a((S'taskHandle'
p727
(lp728
S'TaskHandle'
p729
aNtp730
(S'channel'
p731
(lp732
S'char'
p733
a(lp734
I-1
aaNtp735
(S'data'
p736
(lp737
S'char'
p738
ag22
aNtp739
tp740
tp741
sS'DAQmxSetAnlgWinStartTrigSrc'
p742
((lp743
S'int32'
p744
ag14
a((S'taskHandle'
p745
(lp746
S'TaskHandle'
p747
aNtp748
(S'data'
p749
(lp750
S'char'
p751
ag22
aNtp752
tp753
tp754
sS'DAQmxDisableRefTrig'
p755
((lp756
S'int32'
p757
ag14
a((S'taskHandle'
p758
(lp759
S'TaskHandle'
p760
aNtp761
tp762
tp763
sS'DAQmxResetAIBridgeShuntCalGainAdjust'
p764
((lp765
S'int32'
p766
ag14
a((S'taskHandle'
p767
(lp768
S'TaskHandle'
p769
aNtp770
(S'channel'
p771
(lp772
S'char'
p773
a(lp774
I-1
aaNtp775
tp776
tp777
sS'DAQmxSetAIThrmcplType'
p778
((lp779
S'int32'
p780
ag14
a((S'taskHandle'
p781
(lp782
S'TaskHandle'
p783
aNtp784
(S'channel'
p785
(lp786
S'char'
p787
a(lp788
I-1
aaNtp789
(S'data'
p790
(lp791
S'int32'
p792
aNtp793
tp794
tp795
sS'DAQmxResetExportedDividedSampClkTimebaseOutputTerm'
p796
((lp797
S'int32'
p798
ag14
a((S'taskHandle'
p799
(lp800
S'TaskHandle'
p801
aNtp802
tp803
tp804
sS'DAQmxResetAOMax'
p805
((lp806
S'int32'
p807
ag14
a((S'taskHandle'
p808
(lp809
S'TaskHandle'
p810
aNtp811
(S'channel'
p812
(lp813
S'char'
p814
a(lp815
I-1
aaNtp816
tp817
tp818
sS'DAQmxSetAIInputSrc'
p819
((lp820
S'int32'
p821
ag14
a((S'taskHandle'
p822
(lp823
S'TaskHandle'
p824
aNtp825
(S'channel'
p826
(lp827
S'char'
p828
a(lp829
I-1
aaNtp830
(S'data'
p831
(lp832
S'char'
p833
ag22
aNtp834
tp835
tp836
sS'DAQmxSetAnlgWinRefTrigWhen'
p837
((lp838
S'int32'
p839
ag14
a((S'taskHandle'
p840
(lp841
S'TaskHandle'
p842
aNtp843
(S'data'
p844
(lp845
S'int32'
p846
aNtp847
tp848
tp849
sS'DAQmxGetAIRawDataCompressionType'
p850
((lp851
S'int32'
p852
ag14
a((S'taskHandle'
p853
(lp854
S'TaskHandle'
p855
aNtp856
(S'channel'
p857
(lp858
S'char'
p859
a(lp860
I-1
aaNtp861
(S'data'
p862
(lp863
S'int32'
p864
ag22
aNtp865
tp866
tp867
sS'DAQmxMSeriesCalAdjust'
p868
((lp869
S'int32'
p870
ag14
a((S'calHandle'
p871
(lp872
S'uInt32'
p873
aNtp874
(S'referenceVoltage'
p875
(lp876
S'float64'
p877
aNtp878
tp879
tp880
sS'DAQmxGetAIACExcitWireMode'
p881
((lp882
S'int32'
p883
ag14
a((S'taskHandle'
p884
(lp885
S'TaskHandle'
p886
aNtp887
(S'channel'
p888
(lp889
S'char'
p890
a(lp891
I-1
aaNtp892
(S'data'
p893
(lp894
S'int32'
p895
ag22
aNtp896
tp897
tp898
sS'DAQmxCfgBurstHandshakingTimingImportClock'
p899
((lp900
S'int32'
p901
ag14
a((S'taskHandle'
p902
(lp903
S'TaskHandle'
p904
aNtp905
(S'sampleMode'
p906
(lp907
S'int32'
p908
aNtp909
(S'sampsPerChan'
p910
(lp911
S'uInt64'
p912
aNtp913
(S'sampleClkRate'
p914
(lp915
S'float64'
p916
aNtp917
(S'sampleClkSrc'
p918
(lp919
S'char'
p920
a(lp921
I-1
aaNtp922
(S'sampleClkActiveEdge'
p923
(lp924
S'int32'
p925
aNtp926
(S'pauseWhen'
p927
(lp928
S'int32'
p929
aNtp930
(S'readyEventActiveLevel'
p931
(lp932
S'int32'
p933
aNtp934
tp935
tp936
sS'DAQmxResetExported20MHzTimebaseOutputTerm'
p937
((lp938
S'int32'
p939
ag14
a((S'taskHandle'
p940
(lp941
S'TaskHandle'
p942
aNtp943
tp944
tp945
sS'DAQmxGetDigEdgeArmStartTrigSrc'
p946
((lp947
S'int32'
p948
ag14
a((S'taskHandle'
p949
(lp950
S'TaskHandle'
p951
aNtp952
(S'data'
p953
(lp954
S'char'
p955
ag22
aNtp956
(S'bufferSize'
p957
(lp958
S'uInt32'
p959
aNtp960
tp961
tp962
sS'DAQmxCreateAIVoltageChanWithExcit'
p963
((lp964
S'int32'
p965
ag14
a((S'taskHandle'
p966
(lp967
S'TaskHandle'
p968
aNtp969
(S'physicalChannel'
p970
(lp971
S'char'
p972
a(lp973
I-1
aaNtp974
(S'nameToAssignToChannel'
p975
(lp976
S'char'
p977
a(lp978
I-1
aaNtp979
(S'terminalConfig'
p980
(lp981
S'int32'
p982
aNtp983
(S'minVal'
p984
(lp985
S'float64'
p986
aNtp987
(S'maxVal'
p988
(lp989
S'float64'
p990
aNtp991
(S'units'
p992
(lp993
S'int32'
p994
aNtp995
(S'bridgeConfig'
p996
(lp997
S'int32'
p998
aNtp999
(S'voltageExcitSource'
p1000
(lp1001
S'int32'
p1002
aNtp1003
(S'voltageExcitVal'
p1004
(lp1005
S'float64'
p1006
aNtp1007
(S'useExcitForScaling'
p1008
(lp1009
S'bool32'
p1010
aNtp1011
(S'customScaleName'
p1012
(lp1013
S'char'
p1014
a(lp1015
I-1
aaNtp1016
tp1017
tp1018
sS'DAQmxSetCIPeriodDigFltrEnable'
p1019
((lp1020
S'int32'
p1021
ag14
a((S'taskHandle'
p1022
(lp1023
S'TaskHandle'
p1024
aNtp1025
(S'channel'
p1026
(lp1027
S'char'
p1028
a(lp1029
I-1
aaNtp1030
(S'data'
p1031
(lp1032
S'bool32'
p1033
aNtp1034
tp1035
tp1036
sS'DAQmxSetCICtrTimebaseDigFltrTimebaseSrc'
p1037
((lp1038
S'int32'
p1039
ag14
a((S'taskHandle'
p1040
(lp1041
S'TaskHandle'
p1042
aNtp1043
(S'channel'
p1044
(lp1045
S'char'
p1046
a(lp1047
I-1
aaNtp1048
(S'data'
p1049
(lp1050
S'char'
p1051
ag22
aNtp1052
tp1053
tp1054
sS'DAQmxGetAIACExcitFreq'
p1055
((lp1056
S'int32'
p1057
ag14
a((S'taskHandle'
p1058
(lp1059
S'TaskHandle'
p1060
aNtp1061
(S'channel'
p1062
(lp1063
S'char'
p1064
a(lp1065
I-1
aaNtp1066
(S'data'
p1067
(lp1068
S'float64'
p1069
ag22
aNtp1070
tp1071
tp1072
sS'DAQmxCreateTEDSAIMicrophoneChan'
p1073
((lp1074
S'int32'
p1075
ag14
a((S'taskHandle'
p1076
(lp1077
S'TaskHandle'
p1078
aNtp1079
(S'physicalChannel'
p1080
(lp1081
S'char'
p1082
a(lp1083
I-1
aaNtp1084
(S'nameToAssignToChannel'
p1085
(lp1086
S'char'
p1087
a(lp1088
I-1
aaNtp1089
(S'terminalConfig'
p1090
(lp1091
S'int32'
p1092
aNtp1093
(S'units'
p1094
(lp1095
S'int32'
p1096
aNtp1097
(S'maxSndPressLevel'
p1098
(lp1099
S'float64'
p1100
aNtp1101
(S'currentExcitSource'
p1102
(lp1103
S'int32'
p1104
aNtp1105
(S'currentExcitVal'
p1106
(lp1107
S'float64'
p1108
aNtp1109
(S'customScaleName'
p1110
(lp1111
S'char'
p1112
a(lp1113
I-1
aaNtp1114
tp1115
tp1116
sS'DAQmxCfgDigEdgeAdvTrig'
p1117
((lp1118
S'int32'
p1119
ag14
a((S'taskHandle'
p1120
(lp1121
S'TaskHandle'
p1122
aNtp1123
(S'triggerSource'
p1124
(lp1125
S'char'
p1126
a(lp1127
I-1
aaNtp1128
(S'triggerEdge'
p1129
(lp1130
S'int32'
p1131
aNtp1132
tp1133
tp1134
sS'DAQmxSSeriesCalAdjust'
p1135
((lp1136
S'int32'
p1137
ag14
a((S'calHandle'
p1138
(lp1139
S'uInt32'
p1140
aNtp1141
(S'referenceVoltage'
p1142
(lp1143
S'float64'
p1144
aNtp1145
tp1146
tp1147
sS'DAQmxGetDigEdgeAdvTrigEdge'
p1148
((lp1149
S'int32'
p1150
ag14
a((S'taskHandle'
p1151
(lp1152
S'TaskHandle'
p1153
aNtp1154
(S'data'
p1155
(lp1156
S'int32'
p1157
ag22
aNtp1158
tp1159
tp1160
sS'DAQmxGetCISemiPeriodDigFltrEnable'
p1161
((lp1162
S'int32'
p1163
ag14
a((S'taskHandle'
p1164
(lp1165
S'TaskHandle'
p1166
aNtp1167
(S'channel'
p1168
(lp1169
S'char'
p1170
a(lp1171
I-1
aaNtp1172
(S'data'
p1173
(lp1174
S'bool32'
p1175
ag22
aNtp1176
tp1177
tp1178
sS'DAQmxGetAnlgWinPauseTrigCoupling'
p1179
((lp1180
S'int32'
p1181
ag14
a((S'taskHandle'
p1182
(lp1183
S'TaskHandle'
p1184
aNtp1185
(S'data'
p1186
(lp1187
S'int32'
p1188
ag22
aNtp1189
tp1190
tp1191
sS'DAQmxResetCIFreqDiv'
p1192
((lp1193
S'int32'
p1194
ag14
a((S'taskHandle'
p1195
(lp1196
S'TaskHandle'
p1197
aNtp1198
(S'channel'
p1199
(lp1200
S'char'
p1201
a(lp1202
I-1
aaNtp1203
tp1204
tp1205
sS'DAQmxGetCOPulseDone'
p1206
((lp1207
S'int32'
p1208
ag14
a((S'taskHandle'
p1209
(lp1210
S'TaskHandle'
p1211
aNtp1212
(S'channel'
p1213
(lp1214
S'char'
p1215
a(lp1216
I-1
aaNtp1217
(S'data'
p1218
(lp1219
S'bool32'
p1220
ag22
aNtp1221
tp1222
tp1223
sS'DAQmxSetSampClkTimebaseRate'
p1224
((lp1225
S'int32'
p1226
ag14
a((S'taskHandle'
p1227
(lp1228
S'TaskHandle'
p1229
aNtp1230
(S'data'
p1231
(lp1232
S'float64'
p1233
aNtp1234
tp1235
tp1236
sS'DAQmxGetCIPulseWidthDigFltrTimebaseSrc'
p1237
((lp1238
S'int32'
p1239
ag14
a((S'taskHandle'
p1240
(lp1241
S'TaskHandle'
p1242
aNtp1243
(S'channel'
p1244
(lp1245
S'char'
p1246
a(lp1247
I-1
aaNtp1248
(S'data'
p1249
(lp1250
S'char'
p1251
ag22
aNtp1252
(S'bufferSize'
p1253
(lp1254
S'uInt32'
p1255
aNtp1256
tp1257
tp1258
sS'DAQmxCfgBurstHandshakingTimingExportClock'
p1259
((lp1260
S'int32'
p1261
ag14
a((S'taskHandle'
p1262
(lp1263
S'TaskHandle'
p1264
aNtp1265
(S'sampleMode'
p1266
(lp1267
S'int32'
p1268
aNtp1269
(S'sampsPerChan'
p1270
(lp1271
S'uInt64'
p1272
aNtp1273
(S'sampleClkRate'
p1274
(lp1275
S'float64'
p1276
aNtp1277
(S'sampleClkOutpTerm'
p1278
(lp1279
S'char'
p1280
a(lp1281
I-1
aaNtp1282
(S'sampleClkPulsePolarity'
p1283
(lp1284
S'int32'
p1285
aNtp1286
(S'pauseWhen'
p1287
(lp1288
S'int32'
p1289
aNtp1290
(S'readyEventActiveLevel'
p1291
(lp1292
S'int32'
p1293
aNtp1294
tp1295
tp1296
sS'DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc'
p1297
((lp1298
S'int32'
p1299
ag14
a((S'taskHandle'
p1300
(lp1301
S'TaskHandle'
p1302
aNtp1303
(S'data'
p1304
(lp1305
S'char'
p1306
ag22
aNtp1307
(S'bufferSize'
p1308
(lp1309
S'uInt32'
p1310
aNtp1311
tp1312
tp1313
sS'DAQmxGetAIChanCalExpDate'
p1314
((lp1315
S'int32'
p1316
ag14
a((S'taskHandle'
p1317
(lp1318
S'TaskHandle'
p1319
aNtp1320
(S'channelName'
p1321
(lp1322
S'char'
p1323
a(lp1324
I-1
aaNtp1325
(S'year'
p1326
(lp1327
S'uInt32'
p1328
ag22
aNtp1329
(S'month'
p1330
(lp1331
S'uInt32'
p1332
ag22
aNtp1333
(S'day'
p1334
(lp1335
S'uInt32'
p1336
ag22
aNtp1337
(S'hour'
p1338
(lp1339
S'uInt32'
p1340
ag22
aNtp1341
(S'minute'
p1342
(lp1343
S'uInt32'
p1344
ag22
aNtp1345
tp1346
tp1347
sS'DAQmxResetAICurrentShuntResistance'
p1348
((lp1349
S'int32'
p1350
ag14
a((S'taskHandle'
p1351
(lp1352
S'TaskHandle'
p1353
aNtp1354
(S'channel'
p1355
(lp1356
S'char'
p1357
a(lp1358
I-1
aaNtp1359
tp1360
tp1361
sS'DAQmxSetDIDataXferReqCond'
p1362
((lp1363
S'int32'
p1364
ag14
a((S'taskHandle'
p1365
(lp1366
S'TaskHandle'
p1367
aNtp1368
(S'channel'
p1369
(lp1370
S'char'
p1371
a(lp1372
I-1
aaNtp1373
(S'data'
p1374
(lp1375
S'int32'
p1376
aNtp1377
tp1378
tp1379
sS'DAQmxResetSampClkTimebaseActiveEdge'
p1380
((lp1381
S'int32'
p1382
ag14
a((S'taskHandle'
p1383
(lp1384
S'TaskHandle'
p1385
aNtp1386
tp1387
tp1388
sS'DAQmxGetRefClkRate'
p1389
((lp1390
S'int32'
p1391
ag14
a((S'taskHandle'
p1392
(lp1393
S'TaskHandle'
p1394
aNtp1395
(S'data'
p1396
(lp1397
S'float64'
p1398
ag22
aNtp1399
tp1400
tp1401
sS'DAQmxSetExportedCtrOutEventToggleIdleState'
p1402
((lp1403
S'int32'
p1404
ag14
a((S'taskHandle'
p1405
(lp1406
S'TaskHandle'
p1407
aNtp1408
(S'data'
p1409
(lp1410
S'int32'
p1411
aNtp1412
tp1413
tp1414
sS'DAQmxCreateTEDSAIVoltageChanWithExcit'
p1415
((lp1416
S'int32'
p1417
ag14
a((S'taskHandle'
p1418
(lp1419
S'TaskHandle'
p1420
aNtp1421
(S'physicalChannel'
p1422
(lp1423
S'char'
p1424
a(lp1425
I-1
aaNtp1426
(S'nameToAssignToChannel'
p1427
(lp1428
S'char'
p1429
a(lp1430
I-1
aaNtp1431
(S'terminalConfig'
p1432
(lp1433
S'int32'
p1434
aNtp1435
(S'minVal'
p1436
(lp1437
S'float64'
p1438
aNtp1439
(S'maxVal'
p1440
(lp1441
S'float64'
p1442
aNtp1443
(S'units'
p1444
(lp1445
S'int32'
p1446
aNtp1447
(S'voltageExcitSource'
p1448
(lp1449
S'int32'
p1450
aNtp1451
(S'voltageExcitVal'
p1452
(lp1453
S'float64'
p1454
aNtp1455
(S'customScaleName'
p1456
(lp1457
S'char'
p1458
a(lp1459
I-1
aaNtp1460
tp1461
tp1462
sS'DAQmxGetAILowpassEnable'
p1463
((lp1464
S'int32'
p1465
ag14
a((S'taskHandle'
p1466
(lp1467
S'TaskHandle'
p1468
aNtp1469
(S'channel'
p1470
(lp1471
S'char'
p1472
a(lp1473
I-1
aaNtp1474
(S'data'
p1475
(lp1476
S'bool32'
p1477
ag22
aNtp1478
tp1479
tp1480
sS'DAQmxSetSampClkDigFltrTimebaseSrc'
p1481
((lp1482
S'int32'
p1483
ag14
a((S'taskHandle'
p1484
(lp1485
S'TaskHandle'
p1486
aNtp1487
(S'data'
p1488
(lp1489
S'char'
p1490
ag22
aNtp1491
tp1492
tp1493
sS'DAQmxGetCOOutputType'
p1494
((lp1495
S'int32'
p1496
ag14
a((S'taskHandle'
p1497
(lp1498
S'TaskHandle'
p1499
aNtp1500
(S'channel'
p1501
(lp1502
S'char'
p1503
a(lp1504
I-1
aaNtp1505
(S'data'
p1506
(lp1507
S'int32'
p1508
ag22
aNtp1509
tp1510
tp1511
sS'DAQmxResetStartTrigDelay'
p1512
((lp1513
S'int32'
p1514
ag14
a((S'taskHandle'
p1515
(lp1516
S'TaskHandle'
p1517
aNtp1518
tp1519
tp1520
sS'DAQmxCreateTEDSAIResistanceChan'
p1521
((lp1522
S'int32'
p1523
ag14
a((S'taskHandle'
p1524
(lp1525
S'TaskHandle'
p1526
aNtp1527
(S'physicalChannel'
p1528
(lp1529
S'char'
p1530
a(lp1531
I-1
aaNtp1532
(S'nameToAssignToChannel'
p1533
(lp1534
S'char'
p1535
a(lp1536
I-1
aaNtp1537
(S'minVal'
p1538
(lp1539
S'float64'
p1540
aNtp1541
(S'maxVal'
p1542
(lp1543
S'float64'
p1544
aNtp1545
(S'units'
p1546
(lp1547
S'int32'
p1548
aNtp1549
(S'resistanceConfig'
p1550
(lp1551
S'int32'
p1552
aNtp1553
(S'currentExcitSource'
p1554
(lp1555
S'int32'
p1556
aNtp1557
(S'currentExcitVal'
p1558
(lp1559
S'float64'
p1560
aNtp1561
(S'customScaleName'
p1562
(lp1563
S'char'
p1564
a(lp1565
I-1
aaNtp1566
tp1567
tp1568
sS'DAQmxSetDigEdgeStartTrigEdge'
p1569
((lp1570
S'int32'
p1571
ag14
a((S'taskHandle'
p1572
(lp1573
S'TaskHandle'
p1574
aNtp1575
(S'data'
p1576
(lp1577
S'int32'
p1578
aNtp1579
tp1580
tp1581
sS'DAQmxSetCIFreqDigFltrMinPulseWidth'
p1582
((lp1583
S'int32'
p1584
ag14
a((S'taskHandle'
p1585
(lp1586
S'TaskHandle'
p1587
aNtp1588
(S'channel'
p1589
(lp1590
S'char'
p1591
a(lp1592
I-1
aaNtp1593
(S'data'
p1594
(lp1595
S'float64'
p1596
aNtp1597
tp1598
tp1599
sS'DAQmxSetCICountEdgesCountDirDigFltrEnable'
p1600
((lp1601
S'int32'
p1602
ag14
a((S'taskHandle'
p1603
(lp1604
S'TaskHandle'
p1605
aNtp1606
(S'channel'
p1607
(lp1608
S'char'
p1609
a(lp1610
I-1
aaNtp1611
(S'data'
p1612
(lp1613
S'bool32'
p1614
aNtp1615
tp1616
tp1617
sS'DAQmxSetDigEdgeStartTrigSrc'
p1618
((lp1619
S'int32'
p1620
ag14
a((S'taskHandle'
p1621
(lp1622
S'TaskHandle'
p1623
aNtp1624
(S'data'
p1625
(lp1626
S'char'
p1627
ag22
aNtp1628
tp1629
tp1630
sS'DAQmxResetTrigAttribute'
p1631
((lp1632
S'int32'
p1633
ag14
a((S'taskHandle'
p1634
(lp1635
S'TaskHandle'
p1636
aNtp1637
(S'attribute'
p1638
(lp1639
S'int32'
p1640
aNtp1641
tp1642
tp1643
sS'DAQmxGetExportedHshkEventPulseWidth'
p1644
((lp1645
S'int32'
p1646
ag14
a((S'taskHandle'
p1647
(lp1648
S'TaskHandle'
p1649
aNtp1650
(S'data'
p1651
(lp1652
S'float64'
p1653
ag22
aNtp1654
tp1655
tp1656
sS'DAQmxGetAIMax'
p1657
((lp1658
S'int32'
p1659
ag14
a((S'taskHandle'
p1660
(lp1661
S'TaskHandle'
p1662
aNtp1663
(S'channel'
p1664
(lp1665
S'char'
p1666
a(lp1667
I-1
aaNtp1668
(S'data'
p1669
(lp1670
S'float64'
p1671
ag22
aNtp1672
tp1673
tp1674
sS'DAQmxResetAODACRngLow'
p1675
((lp1676
S'int32'
p1677
ag14
a((S'taskHandle'
p1678
(lp1679
S'TaskHandle'
p1680
aNtp1681
(S'channel'
p1682
(lp1683
S'char'
p1684
a(lp1685
I-1
aaNtp1686
tp1687
tp1688
sS'DAQmxResetAISampAndHoldEnable'
p1689
((lp1690
S'int32'
p1691
ag14
a((S'taskHandle'
p1692
(lp1693
S'TaskHandle'
p1694
aNtp1695
(S'channel'
p1696
(lp1697
S'char'
p1698
a(lp1699
I-1
aaNtp1700
tp1701
tp1702
sS'DAQmxResetAIChanCalVerifAcqVals'
p1703
((lp1704
S'int32'
p1705
ag14
a((S'taskHandle'
p1706
(lp1707
S'TaskHandle'
p1708
aNtp1709
(S'channel'
p1710
(lp1711
S'char'
p1712
a(lp1713
I-1
aaNtp1714
tp1715
tp1716
sS'DAQmxSetAOTermCfg'
p1717
((lp1718
S'int32'
p1719
ag14
a((S'taskHandle'
p1720
(lp1721
S'TaskHandle'
p1722
aNtp1723
(S'channel'
p1724
(lp1725
S'char'
p1726
a(lp1727
I-1
aaNtp1728
(S'data'
p1729
(lp1730
S'int32'
p1731
aNtp1732
tp1733
tp1734
sS'DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc'
p1735
((lp1736
S'int32'
p1737
ag14
a((S'taskHandle'
p1738
(lp1739
S'TaskHandle'
p1740
aNtp1741
(S'channel'
p1742
(lp1743
S'char'
p1744
a(lp1745
I-1
aaNtp1746
(S'data'
p1747
(lp1748
S'char'
p1749
ag22
aNtp1750
tp1751
tp1752
sS'DAQmxResetCISemiPeriodDigFltrEnable'
p1753
((lp1754
S'int32'
p1755
ag14
a((S'taskHandle'
p1756
(lp1757
S'TaskHandle'
p1758
aNtp1759
(S'channel'
p1760
(lp1761
S'char'
p1762
a(lp1763
I-1
aaNtp1764
tp1765
tp1766
sS'DAQmxSetAODACRefSrc'
p1767
((lp1768
S'int32'
p1769
ag14
a((S'taskHandle'
p1770
(lp1771
S'TaskHandle'
p1772
aNtp1773
(S'channel'
p1774
(lp1775
S'char'
p1776
a(lp1777
I-1
aaNtp1778
(S'data'
p1779
(lp1780
S'int32'
p1781
aNtp1782
tp1783
tp1784
sS'DAQmxPerformBridgeOffsetNullingCal'
p1785
((lp1786
S'int32'
p1787
ag14
a((S'taskHandle'
p1788
(lp1789
S'TaskHandle'
p1790
aNtp1791
(S'channel'
p1792
(lp1793
S'char'
p1794
a(lp1795
I-1
aaNtp1796
tp1797
tp1798
sS'DAQmxGetCITwoEdgeSepUnits'
p1799
((lp1800
S'int32'
p1801
ag14
a((S'taskHandle'
p1802
(lp1803
S'TaskHandle'
p1804
aNtp1805
(S'channel'
p1806
(lp1807
S'char'
p1808
a(lp1809
I-1
aaNtp1810
(S'data'
p1811
(lp1812
S'int32'
p1813
ag22
aNtp1814
tp1815
tp1816
sS'DAQmxSetAIChanCalTableScaledVals'
p1817
((lp1818
S'int32'
p1819
ag14
a((S'taskHandle'
p1820
(lp1821
S'TaskHandle'
p1822
aNtp1823
(S'channel'
p1824
(lp1825
S'char'
p1826
a(lp1827
I-1
aaNtp1828
(S'data'
p1829
(lp1830
S'float64'
p1831
ag22
aNtp1832
(S'arraySizeInSamples'
p1833
(lp1834
S'uInt32'
p1835
aNtp1836
tp1837
tp1838
sS'DAQmxGetDOOutputDriveType'
p1839
((lp1840
S'int32'
p1841
ag14
a((S'taskHandle'
p1842
(lp1843
S'TaskHandle'
p1844
aNtp1845
(S'channel'
p1846
(lp1847
S'char'
p1848
a(lp1849
I-1
aaNtp1850
(S'data'
p1851
(lp1852
S'int32'
p1853
ag22
aNtp1854
tp1855
tp1856
sS'DAQmxResetAnlgLvlPauseTrigCoupling'
p1857
((lp1858
S'int32'
p1859
ag14
a((S'taskHandle'
p1860
(lp1861
S'TaskHandle'
p1862
aNtp1863
tp1864
tp1865
sS'DAQmxGetCIPeriodDigFltrEnable'
p1866
((lp1867
S'int32'
p1868
ag14
a((S'taskHandle'
p1869
(lp1870
S'TaskHandle'
p1871
aNtp1872
(S'channel'
p1873
(lp1874
S'char'
p1875
a(lp1876
I-1
aaNtp1877
(S'data'
p1878
(lp1879
S'bool32'
p1880
ag22
aNtp1881
tp1882
tp1883
sS'DAQmxResetDigEdgeAdvTrigSrc'
p1884
((lp1885
S'int32'
p1886
ag14
a((S'taskHandle'
p1887
(lp1888
S'TaskHandle'
p1889
aNtp1890
tp1891
tp1892
sS'DAQmxGetAIRawSampSize'
p1893
((lp1894
S'int32'
p1895
ag14
a((S'taskHandle'
p1896
(lp1897
S'TaskHandle'
p1898
aNtp1899
(S'channel'
p1900
(lp1901
S'char'
p1902
a(lp1903
I-1
aaNtp1904
(S'data'
p1905
(lp1906
S'uInt32'
p1907
ag22
aNtp1908
tp1909
tp1910
sS'DAQmxGetSampClkMaxRate'
p1911
((lp1912
S'int32'
p1913
ag14
a((S'taskHandle'
p1914
(lp1915
S'TaskHandle'
p1916
aNtp1917
(S'data'
p1918
(lp1919
S'float64'
p1920
ag22
aNtp1921
tp1922
tp1923
sS'DAQmxResetAnlgWinRefTrigSrc'
p1924
((lp1925
S'int32'
p1926
ag14
a((S'taskHandle'
p1927
(lp1928
S'TaskHandle'
p1929
aNtp1930
tp1931
tp1932
sS'DAQmxSetCIEncoderZInputDigFltrMinPulseWidth'
p1933
((lp1934
S'int32'
p1935
ag14
a((S'taskHandle'
p1936
(lp1937
S'TaskHandle'
p1938
aNtp1939
(S'channel'
p1940
(lp1941
S'char'
p1942
a(lp1943
I-1
aaNtp1944
(S'data'
p1945
(lp1946
S'float64'
p1947
aNtp1948
tp1949
tp1950
sS'DAQmxGetAnlgEdgeStartTrigCoupling'
p1951
((lp1952
S'int32'
p1953
ag14
a((S'taskHandle'
p1954
(lp1955
S'TaskHandle'
p1956
aNtp1957
(S'data'
p1958
(lp1959
S'int32'
p1960
ag22
aNtp1961
tp1962
tp1963
sS'DAQmxGetCITwoEdgeSepSecondEdge'
p1964
((lp1965
S'int32'
p1966
ag14
a((S'taskHandle'
p1967
(lp1968
S'TaskHandle'
p1969
aNtp1970
(S'channel'
p1971
(lp1972
S'char'
p1973
a(lp1974
I-1
aaNtp1975
(S'data'
p1976
(lp1977
S'int32'
p1978
ag22
aNtp1979
tp1980
tp1981
sS'DAQmxGetSampTimingType'
p1982
((lp1983
S'int32'
p1984
ag14
a((S'taskHandle'
p1985
(lp1986
S'TaskHandle'
p1987
aNtp1988
(S'data'
p1989
(lp1990
S'int32'
p1991
ag22
aNtp1992
tp1993
tp1994
sS'DAQmxSetCIEncoderBInputDigFltrMinPulseWidth'
p1995
((lp1996
S'int32'
p1997
ag14
a((S'taskHandle'
p1998
(lp1999
S'TaskHandle'
p2000
aNtp2001
(S'channel'
p2002
(lp2003
S'char'
p2004
a(lp2005
I-1
aaNtp2006
(S'data'
p2007
(lp2008
S'float64'
p2009
aNtp2010
tp2011
tp2012
sS'DAQmxGetDevCOPhysicalChans'
p2013
((lp2014
S'int32'
p2015
ag14
a((S'device'
p2016
(lp2017
S'char'
p2018
a(lp2019
I-1
aaNtp2020
(S'data'
p2021
(lp2022
S'char'
p2023
ag22
aNtp2024
(S'bufferSize'
p2025
(lp2026
S'uInt32'
p2027
aNtp2028
tp2029
tp2030
sS'DAQmxResetDigLvlPauseTrigDigFltrEnable'
p2031
((lp2032
S'int32'
p2033
ag14
a((S'taskHandle'
p2034
(lp2035
S'TaskHandle'
p2036
aNtp2037
tp2038
tp2039
sS'DAQmxSwitchWaitForSettling'
p2040
((lp2041
S'int32'
p2042
ag14
a((S'deviceName'
p2043
(lp2044
S'char'
p2045
a(lp2046
I-1
aaNtp2047
tp2048
tp2049
sS'DAQmxSetCIFreqDigFltrTimebaseSrc'
p2050
((lp2051
S'int32'
p2052
ag14
a((S'taskHandle'
p2053
(lp2054
S'TaskHandle'
p2055
aNtp2056
(S'channel'
p2057
(lp2058
S'char'
p2059
a(lp2060
I-1
aaNtp2061
(S'data'
p2062
(lp2063
S'char'
p2064
ag22
aNtp2065
tp2066
tp2067
sS'DAQmxGetAIChanCalHasValidCalInfo'
p2068
((lp2069
S'int32'
p2070
ag14
a((S'taskHandle'
p2071
(lp2072
S'TaskHandle'
p2073
aNtp2074
(S'channel'
p2075
(lp2076
S'char'
p2077
a(lp2078
I-1
aaNtp2079
(S'data'
p2080
(lp2081
S'bool32'
p2082
ag22
aNtp2083
tp2084
tp2085
sS'DAQmxResetCIEncoderAInputTerm'
p2086
((lp2087
S'int32'
p2088
ag14
a((S'taskHandle'
p2089
(lp2090
S'TaskHandle'
p2091
aNtp2092
(S'channel'
p2093
(lp2094
S'char'
p2095
a(lp2096
I-1
aaNtp2097
tp2098
tp2099
sS'DAQmxDeviceSupportsCal'
p2100
((lp2101
S'int32'
p2102
ag14
a((S'deviceName'
p2103
(lp2104
S'char'
p2105
a(lp2106
I-1
aaNtp2107
(S'calSupported'
p2108
(lp2109
S'bool32'
p2110
ag22
aNtp2111
tp2112
tp2113
sS'DAQmxGetCalUserDefinedInfoMaxSize'
p2114
((lp2115
S'int32'
p2116
ag14
a((S'deviceName'
p2117
(lp2118
S'char'
p2119
a(lp2120
I-1
aaNtp2121
(S'data'
p2122
(lp2123
S'uInt32'
p2124
ag22
aNtp2125
tp2126
tp2127
sS'DAQmxSetAIExcitActualVal'
p2128
((lp2129
S'int32'
p2130
ag14
a((S'taskHandle'
p2131
(lp2132
S'TaskHandle'
p2133
aNtp2134
(S'channel'
p2135
(lp2136
S'char'
p2137
a(lp2138
I-1
aaNtp2139
(S'data'
p2140
(lp2141
S'float64'
p2142
aNtp2143
tp2144
tp2145
sS'DAQmxSetWriteRegenMode'
p2146
((lp2147
S'int32'
p2148
ag14
a((S'taskHandle'
p2149
(lp2150
S'TaskHandle'
p2151
aNtp2152
(S'data'
p2153
(lp2154
S'int32'
p2155
aNtp2156
tp2157
tp2158
sS'DAQmxResetCIPeriodDigFltrTimebaseSrc'
p2159
((lp2160
S'int32'
p2161
ag14
a((S'taskHandle'
p2162
(lp2163
S'TaskHandle'
p2164
aNtp2165
(S'channel'
p2166
(lp2167
S'char'
p2168
a(lp2169
I-1
aaNtp2170
tp2171
tp2172
sS'DAQmxGetAnlgWinRefTrigBtm'
p2173
((lp2174
S'int32'
p2175
ag14
a((S'taskHandle'
p2176
(lp2177
S'TaskHandle'
p2178
aNtp2179
(S'data'
p2180
(lp2181
S'float64'
p2182
ag22
aNtp2183
tp2184
tp2185
sS'DAQmxResetAnlgLvlPauseTrigSrc'
p2186
((lp2187
S'int32'
p2188
ag14
a((S'taskHandle'
p2189
(lp2190
S'TaskHandle'
p2191
aNtp2192
tp2193
tp2194
sS'DAQmxGetAITEDSUnits'
p2195
((lp2196
S'int32'
p2197
ag14
a((S'taskHandle'
p2198
(lp2199
S'TaskHandle'
p2200
aNtp2201
(S'channel'
p2202
(lp2203
S'char'
p2204
a(lp2205
I-1
aaNtp2206
(S'data'
p2207
(lp2208
S'char'
p2209
ag22
aNtp2210
(S'bufferSize'
p2211
(lp2212
S'uInt32'
p2213
aNtp2214
tp2215
tp2216
sS'DAQmxGetExportedSyncPulseEventOutputTerm'
p2217
((lp2218
S'int32'
p2219
ag14
a((S'taskHandle'
p2220
(lp2221
S'TaskHandle'
p2222
aNtp2223
(S'data'
p2224
(lp2225
S'char'
p2226
ag22
aNtp2227
(S'bufferSize'
p2228
(lp2229
S'uInt32'
p2230
aNtp2231
tp2232
tp2233
sS'DAQmxResetCOPulseFreqInitialDelay'
p2234
((lp2235
S'int32'
p2236
ag14
a((S'taskHandle'
p2237
(lp2238
S'TaskHandle'
p2239
aNtp2240
(S'channel'
p2241
(lp2242
S'char'
p2243
a(lp2244
I-1
aaNtp2245
tp2246
tp2247
sS'DAQmxSetDODataXferMech'
p2248
((lp2249
S'int32'
p2250
ag14
a((S'taskHandle'
p2251
(lp2252
S'TaskHandle'
p2253
aNtp2254
(S'channel'
p2255
(lp2256
S'char'
p2257
a(lp2258
I-1
aaNtp2259
(S'data'
p2260
(lp2261
S'int32'
p2262
aNtp2263
tp2264
tp2265
sS'DAQmxGetExtendedErrorInfo'
p2266
((lp2267
S'int32'
p2268
ag14
a((S'errorString'
p2269
(lp2270
S'char'
p2271
a(lp2272
I-1
aaNtp2273
(S'bufferSize'
p2274
(lp2275
S'uInt32'
p2276
aNtp2277
tp2278
tp2279
sS'DAQmxSetReadOverWrite'
p2280
((lp2281
S'int32'
p2282
ag14
a((S'taskHandle'
p2283
(lp2284
S'TaskHandle'
p2285
aNtp2286
(S'data'
p2287
(lp2288
S'int32'
p2289
aNtp2290
tp2291
tp2292
sS'DAQmxCreateCILinEncoderChan'
p2293
((lp2294
S'int32'
p2295
ag14
a((S'taskHandle'
p2296
(lp2297
S'TaskHandle'
p2298
aNtp2299
(S'counter'
p2300
(lp2301
S'char'
p2302
a(lp2303
I-1
aaNtp2304
(S'nameToAssignToChannel'
p2305
(lp2306
S'char'
p2307
a(lp2308
I-1
aaNtp2309
(S'decodingType'
p2310
(lp2311
S'int32'
p2312
aNtp2313
(S'ZidxEnable'
p2314
(lp2315
S'bool32'
p2316
aNtp2317
(S'ZidxVal'
p2318
(lp2319
S'float64'
p2320
aNtp2321
(S'ZidxPhase'
p2322
(lp2323
S'int32'
p2324
aNtp2325
(S'units'
p2326
(lp2327
S'int32'
p2328
aNtp2329
(S'distPerPulse'
p2330
(lp2331
S'float64'
p2332
aNtp2333
(S'initialPos'
p2334
(lp2335
S'float64'
p2336
aNtp2337
(S'customScaleName'
p2338
(lp2339
S'char'
p2340
a(lp2341
I-1
aaNtp2342
tp2343
tp2344
sS'DAQmxResetReadRelativeTo'
p2345
((lp2346
S'int32'
p2347
ag14
a((S'taskHandle'
p2348
(lp2349
S'TaskHandle'
p2350
aNtp2351
tp2352
tp2353
sS'DAQmxSetHshkStartCond'
p2354
((lp2355
S'int32'
p2356
ag14
a((S'taskHandle'
p2357
(lp2358
S'TaskHandle'
p2359
aNtp2360
(S'data'
p2361
(lp2362
S'int32'
p2363
aNtp2364
tp2365
tp2366
sS'DAQmxGetDIDigFltrMinPulseWidth'
p2367
((lp2368
S'int32'
p2369
ag14
a((S'taskHandle'
p2370
(lp2371
S'TaskHandle'
p2372
aNtp2373
(S'channel'
p2374
(lp2375
S'char'
p2376
a(lp2377
I-1
aaNtp2378
(S'data'
p2379
(lp2380
S'float64'
p2381
ag22
aNtp2382
tp2383
tp2384
sS'DAQmxResetChanDescr'
p2385
((lp2386
S'int32'
p2387
ag14
a((S'taskHandle'
p2388
(lp2389
S'TaskHandle'
p2390
aNtp2391
(S'channel'
p2392
(lp2393
S'char'
p2394
a(lp2395
I-1
aaNtp2396
tp2397
tp2398
sS'DAQmxGetAILVDTSensitivity'
p2399
((lp2400
S'int32'
p2401
ag14
a((S'taskHandle'
p2402
(lp2403
S'TaskHandle'
p2404
aNtp2405
(S'channel'
p2406
(lp2407
S'char'
p2408
a(lp2409
I-1
aaNtp2410
(S'data'
p2411
(lp2412
S'float64'
p2413
ag22
aNtp2414
tp2415
tp2416
sS'DAQmxCfgHandshakingTiming'
p2417
((lp2418
S'int32'
p2419
ag14
a((S'taskHandle'
p2420
(lp2421
S'TaskHandle'
p2422
aNtp2423
(S'sampleMode'
p2424
(lp2425
S'int32'
p2426
aNtp2427
(S'sampsPerChan'
p2428
(lp2429
S'uInt64'
p2430
aNtp2431
tp2432
tp2433
sS'DAQmxGetSwitchChanMaxDCCarryPwr'
p2434
((lp2435
S'int32'
p2436
ag14
a((S'switchChannelName'
p2437
(lp2438
S'char'
p2439
a(lp2440
I-1
aaNtp2441
(S'data'
p2442
(lp2443
S'float64'
p2444
ag22
aNtp2445
tp2446
tp2447
sS'DAQmxGetScaleType'
p2448
((lp2449
S'int32'
p2450
ag14
a((S'scaleName'
p2451
(lp2452
S'char'
p2453
a(lp2454
I-1
aaNtp2455
(S'data'
p2456
(lp2457
S'int32'
p2458
ag22
aNtp2459
tp2460
tp2461
sS'DAQmxGetCICountEdgesTerm'
p2462
((lp2463
S'int32'
p2464
ag14
a((S'taskHandle'
p2465
(lp2466
S'TaskHandle'
p2467
aNtp2468
(S'channel'
p2469
(lp2470
S'char'
p2471
a(lp2472
I-1
aaNtp2473
(S'data'
p2474
(lp2475
S'char'
p2476
ag22
aNtp2477
(S'bufferSize'
p2478
(lp2479
S'uInt32'
p2480
aNtp2481
tp2482
tp2483
sS'DAQmxAddGlobalChansToTask'
p2484
((lp2485
S'int32'
p2486
ag14
a((S'taskHandle'
p2487
(lp2488
S'TaskHandle'
p2489
aNtp2490
(S'channelNames'
p2491
(lp2492
S'char'
p2493
a(lp2494
I-1
aaNtp2495
tp2496
tp2497
sS'DAQmxGetAnlgEdgeStartTrigLvl'
p2498
((lp2499
S'int32'
p2500
ag14
a((S'taskHandle'
p2501
(lp2502
S'TaskHandle'
p2503
aNtp2504
(S'data'
p2505
(lp2506
S'float64'
p2507
ag22
aNtp2508
tp2509
tp2510
sS'DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc'
p2511
((lp2512
S'int32'
p2513
ag14
a((S'taskHandle'
p2514
(lp2515
S'TaskHandle'
p2516
aNtp2517
(S'data'
p2518
(lp2519
S'char'
p2520
ag22
aNtp2521
tp2522
tp2523
sS'DAQmxSetCIEncoderAInputDigFltrEnable'
p2524
((lp2525
S'int32'
p2526
ag14
a((S'taskHandle'
p2527
(lp2528
S'TaskHandle'
p2529
aNtp2530
(S'channel'
p2531
(lp2532
S'char'
p2533
a(lp2534
I-1
aaNtp2535
(S'data'
p2536
(lp2537
S'bool32'
p2538
aNtp2539
tp2540
tp2541
sS'DAQmxGetSwitchChanAttribute'
p2542
((lp2543
S'int32'
p2544
aS'__cdecl'
p2545
a((S'switchChannelName'
p2546
(lp2547
S'char'
p2548
a(lp2549
I-1
aaNtp2550
(S'attribute'
p2551
(lp2552
S'int32'
p2553
aNtp2554
(S'value'
p2555
(lp2556
S'void'
p2557
ag22
aNtp2558
tp2559
tp2560
sS'DAQmxSetAIImpedance'
p2561
((lp2562
S'int32'
p2563
ag14
a((S'taskHandle'
p2564
(lp2565
S'TaskHandle'
p2566
aNtp2567
(S'channel'
p2568
(lp2569
S'char'
p2570
a(lp2571
I-1
aaNtp2572
(S'data'
p2573
(lp2574
S'float64'
p2575
aNtp2576
tp2577
tp2578
sS'DAQmxGetAOResolution'
p2579
((lp2580
S'int32'
p2581
ag14
a((S'taskHandle'
p2582
(lp2583
S'TaskHandle'
p2584
aNtp2585
(S'channel'
p2586
(lp2587
S'char'
p2588
a(lp2589
I-1
aaNtp2590
(S'data'
p2591
(lp2592
S'float64'
p2593
ag22
aNtp2594
tp2595
tp2596
sS'DAQmxGetCIFreqDigSyncEnable'
p2597
((lp2598
S'int32'
p2599
ag14
a((S'taskHandle'
p2600
(lp2601
S'TaskHandle'
p2602
aNtp2603
(S'channel'
p2604
(lp2605
S'char'
p2606
a(lp2607
I-1
aaNtp2608
(S'data'
p2609
(lp2610
S'bool32'
p2611
ag22
aNtp2612
tp2613
tp2614
sS'DAQmxWriteAnalogF64'
p2615
((lp2616
S'int32'
p2617
ag14
a((S'taskHandle'
p2618
(lp2619
S'TaskHandle'
p2620
aNtp2621
(S'numSampsPerChan'
p2622
(lp2623
S'int32'
p2624
aNtp2625
(S'autoStart'
p2626
(lp2627
S'bool32'
p2628
aNtp2629
(S'timeout'
p2630
(lp2631
S'float64'
p2632
aNtp2633
(S'dataLayout'
p2634
(lp2635
S'bool32'
p2636
aNtp2637
(S'writeArray'
p2638
(lp2639
S'float64'
p2640
a(lp2641
I-1
aaNtp2642
(S'sampsPerChanWritten'
p2643
(lp2644
S'int32'
p2645
ag22
aNtp2646
(S'reserved'
p2647
(lp2648
S'bool32'
p2649
ag22
aNtp2650
tp2651
tp2652
sS'DAQmxSetAIConvRate'
p2653
((lp2654
S'int32'
p2655
ag14
a((S'taskHandle'
p2656
(lp2657
S'TaskHandle'
p2658
aNtp2659
(S'data'
p2660
(lp2661
S'float64'
p2662
aNtp2663
tp2664
tp2665
sS'DAQmxGetExportedWatchdogExpiredEventOutputTerm'
p2666
((lp2667
S'int32'
p2668
ag14
a((S'taskHandle'
p2669
(lp2670
S'TaskHandle'
p2671
aNtp2672
(S'data'
p2673
(lp2674
S'char'
p2675
ag22
aNtp2676
(S'bufferSize'
p2677
(lp2678
S'uInt32'
p2679
aNtp2680
tp2681
tp2682
sS'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate'
p2683
((lp2684
S'int32'
p2685
ag14
a((S'taskHandle'
p2686
(lp2687
S'TaskHandle'
p2688
aNtp2689
(S'channel'
p2690
(lp2691
S'char'
p2692
a(lp2693
I-1
aaNtp2694
tp2695
tp2696
sS'DAQmxResetExportedRefTrigOutputTerm'
p2697
((lp2698
S'int32'
p2699
ag14
a((S'taskHandle'
p2700
(lp2701
S'TaskHandle'
p2702
aNtp2703
tp2704
tp2705
sS'DAQmxSetDigEdgeAdvTrigDigFltrEnable'
p2706
((lp2707
S'int32'
p2708
ag14
a((S'taskHandle'
p2709
(lp2710
S'TaskHandle'
p2711
aNtp2712
(S'data'
p2713
(lp2714
S'bool32'
p2715
aNtp2716
tp2717
tp2718
sS'DAQmxResetRealTimeAttribute'
p2719
((lp2720
S'int32'
p2721
ag14
a((S'taskHandle'
p2722
(lp2723
S'TaskHandle'
p2724
aNtp2725
(S'attribute'
p2726
(lp2727
S'int32'
p2728
aNtp2729
tp2730
tp2731
sS'DAQmxResetCIPeriodDigFltrTimebaseRate'
p2732
((lp2733
S'int32'
p2734
ag14
a((S'taskHandle'
p2735
(lp2736
S'TaskHandle'
p2737
aNtp2738
(S'channel'
p2739
(lp2740
S'char'
p2741
a(lp2742
I-1
aaNtp2743
tp2744
tp2745
sS'DAQmxSetCISemiPeriodDigFltrTimebaseSrc'
p2746
((lp2747
S'int32'
p2748
ag14
a((S'taskHandle'
p2749
(lp2750
S'TaskHandle'
p2751
aNtp2752
(S'channel'
p2753
(lp2754
S'char'
p2755
a(lp2756
I-1
aaNtp2757
(S'data'
p2758
(lp2759
S'char'
p2760
ag22
aNtp2761
tp2762
tp2763
sS'DAQmxResetDelayFromSampClkDelayUnits'
p2764
((lp2765
S'int32'
p2766
ag14
a((S'taskHandle'
p2767
(lp2768
S'TaskHandle'
p2769
aNtp2770
tp2771
tp2772
sS'DAQmxResetCIEncoderBInputDigFltrTimebaseRate'
p2773
((lp2774
S'int32'
p2775
ag14
a((S'taskHandle'
p2776
(lp2777
S'TaskHandle'
p2778
aNtp2779
(S'channel'
p2780
(lp2781
S'char'
p2782
a(lp2783
I-1
aaNtp2784
tp2785
tp2786
sS'DAQmxSetAOOutputImpedance'
p2787
((lp2788
S'int32'
p2789
ag14
a((S'taskHandle'
p2790
(lp2791
S'TaskHandle'
p2792
aNtp2793
(S'channel'
p2794
(lp2795
S'char'
p2796
a(lp2797
I-1
aaNtp2798
(S'data'
p2799
(lp2800
S'float64'
p2801
aNtp2802
tp2803
tp2804
sS'DAQmxGetBufferAttribute'
p2805
((lp2806
S'int32'
p2807
ag2545
a((S'taskHandle'
p2808
(lp2809
S'TaskHandle'
p2810
aNtp2811
(S'attribute'
p2812
(lp2813
S'int32'
p2814
aNtp2815
(S'value'
p2816
(lp2817
S'void'
p2818
ag22
aNtp2819
tp2820
tp2821
sS'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p2822
((lp2823
S'int32'
p2824
ag14
a((S'taskHandle'
p2825
(lp2826
S'TaskHandle'
p2827
aNtp2828
(S'channel'
p2829
(lp2830
S'char'
p2831
a(lp2832
I-1
aaNtp2833
(S'data'
p2834
(lp2835
S'char'
p2836
ag22
aNtp2837
tp2838
tp2839
sS'DAQmxResetAnlgWinStartTrigSrc'
p2840
((lp2841
S'int32'
p2842
ag14
a((S'taskHandle'
p2843
(lp2844
S'TaskHandle'
p2845
aNtp2846
tp2847
tp2848
sS'DAQmxResetAIResistanceCfg'
p2849
((lp2850
S'int32'
p2851
ag14
a((S'taskHandle'
p2852
(lp2853
S'TaskHandle'
p2854
aNtp2855
(S'channel'
p2856
(lp2857
S'char'
p2858
a(lp2859
I-1
aaNtp2860
tp2861
tp2862
sS'DAQmxESeriesCalAdjust'
p2863
((lp2864
S'int32'
p2865
ag14
a((S'calHandle'
p2866
(lp2867
S'uInt32'
p2868
aNtp2869
(S'referenceVoltage'
p2870
(lp2871
S'float64'
p2872
aNtp2873
tp2874
tp2875
sS'DAQmxResetAIChanCalDesc'
p2876
((lp2877
S'int32'
p2878
ag14
a((S'taskHandle'
p2879
(lp2880
S'TaskHandle'
p2881
aNtp2882
(S'channel'
p2883
(lp2884
S'char'
p2885
a(lp2886
I-1
aaNtp2887
tp2888
tp2889
sS'DAQmxResetDigEdgeArmStartTrigDigSyncEnable'
p2890
((lp2891
S'int32'
p2892
ag14
a((S'taskHandle'
p2893
(lp2894
S'TaskHandle'
p2895
aNtp2896
tp2897
tp2898
sS'DAQmxResetCIEncoderDecodingType'
p2899
((lp2900
S'int32'
p2901
ag14
a((S'taskHandle'
p2902
(lp2903
S'TaskHandle'
p2904
aNtp2905
(S'channel'
p2906
(lp2907
S'char'
p2908
a(lp2909
I-1
aaNtp2910
tp2911
tp2912
sS'DAQmxSetSampClkActiveEdge'
p2913
((lp2914
S'int32'
p2915
ag14
a((S'taskHandle'
p2916
(lp2917
S'TaskHandle'
p2918
aNtp2919
(S'data'
p2920
(lp2921
S'int32'
p2922
aNtp2923
tp2924
tp2925
sS'DAQmxResetCICtrTimebaseDigFltrMinPulseWidth'
p2926
((lp2927
S'int32'
p2928
ag14
a((S'taskHandle'
p2929
(lp2930
S'TaskHandle'
p2931
aNtp2932
(S'channel'
p2933
(lp2934
S'char'
p2935
a(lp2936
I-1
aaNtp2937
tp2938
tp2939
sS'DAQmxGetRealTimeConvLateErrorsToWarnings'
p2940
((lp2941
S'int32'
p2942
ag14
a((S'taskHandle'
p2943
(lp2944
S'TaskHandle'
p2945
aNtp2946
(S'data'
p2947
(lp2948
S'bool32'
p2949
ag22
aNtp2950
tp2951
tp2952
sS'DAQmxGetAOResolutionUnits'
p2953
((lp2954
S'int32'
p2955
ag14
a((S'taskHandle'
p2956
(lp2957
S'TaskHandle'
p2958
aNtp2959
(S'channel'
p2960
(lp2961
S'char'
p2962
a(lp2963
I-1
aaNtp2964
(S'data'
p2965
(lp2966
S'int32'
p2967
ag22
aNtp2968
tp2969
tp2970
sS'DAQmxSetCICtrTimebaseDigFltrTimebaseRate'
p2971
((lp2972
S'int32'
p2973
ag14
a((S'taskHandle'
p2974
(lp2975
S'TaskHandle'
p2976
aNtp2977
(S'channel'
p2978
(lp2979
S'char'
p2980
a(lp2981
I-1
aaNtp2982
(S'data'
p2983
(lp2984
S'float64'
p2985
aNtp2986
tp2987
tp2988
sS'DAQmxGetCIEncoderZInputTerm'
p2989
((lp2990
S'int32'
p2991
ag14
a((S'taskHandle'
p2992
(lp2993
S'TaskHandle'
p2994
aNtp2995
(S'channel'
p2996
(lp2997
S'char'
p2998
a(lp2999
I-1
aaNtp3000
(S'data'
p3001
(lp3002
S'char'
p3003
ag22
aNtp3004
(S'bufferSize'
p3005
(lp3006
S'uInt32'
p3007
aNtp3008
tp3009
tp3010
sS'DAQmxSetCIFreqDiv'
p3011
((lp3012
S'int32'
p3013
ag14
a((S'taskHandle'
p3014
(lp3015
S'TaskHandle'
p3016
aNtp3017
(S'channel'
p3018
(lp3019
S'char'
p3020
a(lp3021
I-1
aaNtp3022
(S'data'
p3023
(lp3024
S'uInt32'
p3025
aNtp3026
tp3027
tp3028
sS'DAQmxResetCIPeriodDigFltrEnable'
p3029
((lp3030
S'int32'
p3031
ag14
a((S'taskHandle'
p3032
(lp3033
S'TaskHandle'
p3034
aNtp3035
(S'channel'
p3036
(lp3037
S'char'
p3038
a(lp3039
I-1
aaNtp3040
tp3041
tp3042
sS'DAQmxResetHshkStartCond'
p3043
((lp3044
S'int32'
p3045
ag14
a((S'taskHandle'
p3046
(lp3047
S'TaskHandle'
p3048
aNtp3049
tp3050
tp3051
sS'DAQmxGetCIFreqUnits'
p3052
((lp3053
S'int32'
p3054
ag14
a((S'taskHandle'
p3055
(lp3056
S'TaskHandle'
p3057
aNtp3058
(S'channel'
p3059
(lp3060
S'char'
p3061
a(lp3062
I-1
aaNtp3063
(S'data'
p3064
(lp3065
S'int32'
p3066
ag22
aNtp3067
tp3068
tp3069
sS'DAQmxGetDigPatternStartTrigSrc'
p3070
((lp3071
S'int32'
p3072
ag14
a((S'taskHandle'
p3073
(lp3074
S'TaskHandle'
p3075
aNtp3076
(S'data'
p3077
(lp3078
S'char'
p3079
ag22
aNtp3080
(S'bufferSize'
p3081
(lp3082
S'uInt32'
p3083
aNtp3084
tp3085
tp3086
sS'DAQmxGetSampClkTimebaseActiveEdge'
p3087
((lp3088
S'int32'
p3089
ag14
a((S'taskHandle'
p3090
(lp3091
S'TaskHandle'
p3092
aNtp3093
(S'data'
p3094
(lp3095
S'int32'
p3096
ag22
aNtp3097
tp3098
tp3099
sS'DAQmxSetAnlgEdgeStartTrigSlope'
p3100
((lp3101
S'int32'
p3102
ag14
a((S'taskHandle'
p3103
(lp3104
S'TaskHandle'
p3105
aNtp3106
(S'data'
p3107
(lp3108
S'int32'
p3109
aNtp3110
tp3111
tp3112
sS'DAQmxGetDevProductType'
p3113
((lp3114
S'int32'
p3115
ag14
a((S'device'
p3116
(lp3117
S'char'
p3118
a(lp3119
I-1
aaNtp3120
(S'data'
p3121
(lp3122
S'char'
p3123
ag22
aNtp3124
(S'bufferSize'
p3125
(lp3126
S'uInt32'
p3127
aNtp3128
tp3129
tp3130
sS'DAQmxSetAILeadWireResistance'
p3131
((lp3132
S'int32'
p3133
ag14
a((S'taskHandle'
p3134
(lp3135
S'TaskHandle'
p3136
aNtp3137
(S'channel'
p3138
(lp3139
S'char'
p3140
a(lp3141
I-1
aaNtp3142
(S'data'
p3143
(lp3144
S'float64'
p3145
aNtp3146
tp3147
tp3148
sS'DAQmxGetCIEncoderAInputDigFltrEnable'
p3149
((lp3150
S'int32'
p3151
ag14
a((S'taskHandle'
p3152
(lp3153
S'TaskHandle'
p3154
aNtp3155
(S'channel'
p3156
(lp3157
S'char'
p3158
a(lp3159
I-1
aaNtp3160
(S'data'
p3161
(lp3162
S'bool32'
p3163
ag22
aNtp3164
tp3165
tp3166
sS'DAQmxGetExtCalLastTemp'
p3167
((lp3168
S'int32'
p3169
ag14
a((S'deviceName'
p3170
(lp3171
S'char'
p3172
a(lp3173
I-1
aaNtp3174
(S'data'
p3175
(lp3176
S'float64'
p3177
ag22
aNtp3178
tp3179
tp3180
sS'DAQmxGetCIMeasType'
p3181
((lp3182
S'int32'
p3183
ag14
a((S'taskHandle'
p3184
(lp3185
S'TaskHandle'
p3186
aNtp3187
(S'channel'
p3188
(lp3189
S'char'
p3190
a(lp3191
I-1
aaNtp3192
(S'data'
p3193
(lp3194
S'int32'
p3195
ag22
aNtp3196
tp3197
tp3198
sS'DAQmxResetAnlgWinPauseTrigCoupling'
p3199
((lp3200
S'int32'
p3201
ag14
a((S'taskHandle'
p3202
(lp3203
S'TaskHandle'
p3204
aNtp3205
tp3206
tp3207
sS'DAQmxGetWriteCurrWritePos'
p3208
((lp3209
S'int32'
p3210
ag14
a((S'taskHandle'
p3211
(lp3212
S'TaskHandle'
p3213
aNtp3214
(S'data'
p3215
(lp3216
S'uInt64'
p3217
ag22
aNtp3218
tp3219
tp3220
sS'DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate'
p3221
((lp3222
S'int32'
p3223
ag14
a((S'taskHandle'
p3224
(lp3225
S'TaskHandle'
p3226
aNtp3227
(S'channel'
p3228
(lp3229
S'char'
p3230
a(lp3231
I-1
aaNtp3232
(S'data'
p3233
(lp3234
S'float64'
p3235
ag22
aNtp3236
tp3237
tp3238
sS'DAQmxResetRealTimeConvLateErrorsToWarnings'
p3239
((lp3240
S'int32'
p3241
ag14
a((S'taskHandle'
p3242
(lp3243
S'TaskHandle'
p3244
aNtp3245
tp3246
tp3247
sS'DAQmxResetCITwoEdgeSepUnits'
p3248
((lp3249
S'int32'
p3250
ag14
a((S'taskHandle'
p3251
(lp3252
S'TaskHandle'
p3253
aNtp3254
(S'channel'
p3255
(lp3256
S'char'
p3257
a(lp3258
I-1
aaNtp3259
tp3260
tp3261
sS'DAQmxCreateLinScale'
p3262
((lp3263
S'int32'
p3264
ag14
a((S'name'
p3265
(lp3266
S'char'
p3267
a(lp3268
I-1
aaNtp3269
(S'slope'
p3270
(lp3271
S'float64'
p3272
aNtp3273
(S'yIntercept'
p3274
(lp3275
S'float64'
p3276
aNtp3277
(S'preScaledUnits'
p3278
(lp3279
S'int32'
p3280
aNtp3281
(S'scaledUnits'
p3282
(lp3283
S'char'
p3284
a(lp3285
I-1
aaNtp3286
tp3287
tp3288
sS'DAQmxResetAnlgEdgeStartTrigSrc'
p3289
((lp3290
S'int32'
p3291
ag14
a((S'taskHandle'
p3292
(lp3293
S'TaskHandle'
p3294
aNtp3295
tp3296
tp3297
sS'DAQmxResetReadSleepTime'
p3298
((lp3299
S'int32'
p3300
ag14
a((S'taskHandle'
p3301
(lp3302
S'TaskHandle'
p3303
aNtp3304
tp3305
tp3306
sS'DAQmxResetAnlgWinPauseTrigWhen'
p3307
((lp3308
S'int32'
p3309
ag14
a((S'taskHandle'
p3310
(lp3311
S'TaskHandle'
p3312
aNtp3313
tp3314
tp3315
sS'DAQmxSetExportedDividedSampClkTimebaseOutputTerm'
p3316
((lp3317
S'int32'
p3318
ag14
a((S'taskHandle'
p3319
(lp3320
S'TaskHandle'
p3321
aNtp3322
(S'data'
p3323
(lp3324
S'char'
p3325
ag22
aNtp3326
tp3327
tp3328
sS'DAQmxGetAODataXferMech'
p3329
((lp3330
S'int32'
p3331
ag14
a((S'taskHandle'
p3332
(lp3333
S'TaskHandle'
p3334
aNtp3335
(S'channel'
p3336
(lp3337
S'char'
p3338
a(lp3339
I-1
aaNtp3340
(S'data'
p3341
(lp3342
S'int32'
p3343
ag22
aNtp3344
tp3345
tp3346
sS'DAQmxGetCIFreqDiv'
p3347
((lp3348
S'int32'
p3349
ag14
a((S'taskHandle'
p3350
(lp3351
S'TaskHandle'
p3352
aNtp3353
(S'channel'
p3354
(lp3355
S'char'
p3356
a(lp3357
I-1
aaNtp3358
(S'data'
p3359
(lp3360
S'uInt32'
p3361
ag22
aNtp3362
tp3363
tp3364
sS'DAQmxSetScalePolyReverseCoeff'
p3365
((lp3366
S'int32'
p3367
ag14
a((S'scaleName'
p3368
(lp3369
S'char'
p3370
a(lp3371
I-1
aaNtp3372
(S'data'
p3373
(lp3374
S'float64'
p3375
ag22
aNtp3376
(S'arraySizeInSamples'
p3377
(lp3378
S'uInt32'
p3379
aNtp3380
tp3381
tp3382
sS'DAQmxGetAnlgEdgeRefTrigHyst'
p3383
((lp3384
S'int32'
p3385
ag14
a((S'taskHandle'
p3386
(lp3387
S'TaskHandle'
p3388
aNtp3389
(S'data'
p3390
(lp3391
S'float64'
p3392
ag22
aNtp3393
tp3394
tp3395
sS'DAQmxResetDigEdgeWatchdogExpirTrigEdge'
p3396
((lp3397
S'int32'
p3398
ag14
a((S'taskHandle'
p3399
(lp3400
S'TaskHandle'
p3401
aNtp3402
tp3403
tp3404
sS'DAQmxCfgChangeDetectionTiming'
p3405
((lp3406
S'int32'
p3407
ag14
a((S'taskHandle'
p3408
(lp3409
S'TaskHandle'
p3410
aNtp3411
(S'risingEdgeChan'
p3412
(lp3413
S'char'
p3414
a(lp3415
I-1
aaNtp3416
(S'fallingEdgeChan'
p3417
(lp3418
S'char'
p3419
a(lp3420
I-1
aaNtp3421
(S'sampleMode'
p3422
(lp3423
S'int32'
p3424
aNtp3425
(S'sampsPerChan'
p3426
(lp3427
S'uInt64'
p3428
aNtp3429
tp3430
tp3431
sS'DAQmxSetDigEdgeWatchdogExpirTrigSrc'
p3432
((lp3433
S'int32'
p3434
ag14
a((S'taskHandle'
p3435
(lp3436
S'TaskHandle'
p3437
aNtp3438
(S'data'
p3439
(lp3440
S'char'
p3441
ag22
aNtp3442
tp3443
tp3444
sS'DAQmxResetDODataXferMech'
p3445
((lp3446
S'int32'
p3447
ag14
a((S'taskHandle'
p3448
(lp3449
S'TaskHandle'
p3450
aNtp3451
(S'channel'
p3452
(lp3453
S'char'
p3454
a(lp3455
I-1
aaNtp3456
tp3457
tp3458
sS'DAQmxGetStartTrigRetriggerable'
p3459
((lp3460
S'int32'
p3461
ag14
a((S'taskHandle'
p3462
(lp3463
S'TaskHandle'
p3464
aNtp3465
(S'data'
p3466
(lp3467
S'bool32'
p3468
ag22
aNtp3469
tp3470
tp3471
sS'DAQmxResetCOPulseTicksInitialDelay'
p3472
((lp3473
S'int32'
p3474
ag14
a((S'taskHandle'
p3475
(lp3476
S'TaskHandle'
p3477
aNtp3478
(S'channel'
p3479
(lp3480
S'char'
p3481
a(lp3482
I-1
aaNtp3483
tp3484
tp3485
sS'DAQmxSetCILinEncoderInitialPos'
p3486
((lp3487
S'int32'
p3488
ag14
a((S'taskHandle'
p3489
(lp3490
S'TaskHandle'
p3491
aNtp3492
(S'channel'
p3493
(lp3494
S'char'
p3495
a(lp3496
I-1
aaNtp3497
(S'data'
p3498
(lp3499
S'float64'
p3500
aNtp3501
tp3502
tp3503
sS'DAQmxSwitchConnectMulti'
p3504
((lp3505
S'int32'
p3506
ag14
a((S'connectionList'
p3507
(lp3508
S'char'
p3509
a(lp3510
I-1
aaNtp3511
(S'waitForSettling'
p3512
(lp3513
S'bool32'
p3514
aNtp3515
tp3516
tp3517
sS'DAQmxGetSwitchDevNumRows'
p3518
((lp3519
S'int32'
p3520
ag14
a((S'deviceName'
p3521
(lp3522
S'char'
p3523
a(lp3524
I-1
aaNtp3525
(S'data'
p3526
(lp3527
S'uInt32'
p3528
ag22
aNtp3529
tp3530
tp3531
sS'DAQmxCreateDIChan'
p3532
((lp3533
S'int32'
p3534
ag14
a((S'taskHandle'
p3535
(lp3536
S'TaskHandle'
p3537
aNtp3538
(S'lines'
p3539
(lp3540
S'char'
p3541
a(lp3542
I-1
aaNtp3543
(S'nameToAssignToLines'
p3544
(lp3545
S'char'
p3546
a(lp3547
I-1
aaNtp3548
(S'lineGrouping'
p3549
(lp3550
S'int32'
p3551
aNtp3552
tp3553
tp3554
sS'DAQmxResetExportedAdvCmpltEventDelay'
p3555
((lp3556
S'int32'
p3557
ag14
a((S'taskHandle'
p3558
(lp3559
S'TaskHandle'
p3560
aNtp3561
tp3562
tp3563
sS'DAQmxGetAIMeasType'
p3564
((lp3565
S'int32'
p3566
ag14
a((S'taskHandle'
p3567
(lp3568
S'TaskHandle'
p3569
aNtp3570
(S'channel'
p3571
(lp3572
S'char'
p3573
a(lp3574
I-1
aaNtp3575
(S'data'
p3576
(lp3577
S'int32'
p3578
ag22
aNtp3579
tp3580
tp3581
sS'DAQmxResetCIEncoderBInputTerm'
p3582
((lp3583
S'int32'
p3584
ag14
a((S'taskHandle'
p3585
(lp3586
S'TaskHandle'
p3587
aNtp3588
(S'channel'
p3589
(lp3590
S'char'
p3591
a(lp3592
I-1
aaNtp3593
tp3594
tp3595
sS'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p3596
((lp3597
S'int32'
p3598
ag14
a((S'taskHandle'
p3599
(lp3600
S'TaskHandle'
p3601
aNtp3602
(S'data'
p3603
(lp3604
S'char'
p3605
ag22
aNtp3606
tp3607
tp3608
sS'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate'
p3609
((lp3610
S'int32'
p3611
ag14
a((S'taskHandle'
p3612
(lp3613
S'TaskHandle'
p3614
aNtp3615
(S'channel'
p3616
(lp3617
S'char'
p3618
a(lp3619
I-1
aaNtp3620
(S'data'
p3621
(lp3622
S'float64'
p3623
ag22
aNtp3624
tp3625
tp3626
sS'DAQmxSetCIEncoderAInputDigSyncEnable'
p3627
((lp3628
S'int32'
p3629
ag14
a((S'taskHandle'
p3630
(lp3631
S'TaskHandle'
p3632
aNtp3633
(S'channel'
p3634
(lp3635
S'char'
p3636
a(lp3637
I-1
aaNtp3638
(S'data'
p3639
(lp3640
S'bool32'
p3641
aNtp3642
tp3643
tp3644
sS'DAQmxGetAIThrmstrR1'
p3645
((lp3646
S'int32'
p3647
ag14
a((S'taskHandle'
p3648
(lp3649
S'TaskHandle'
p3650
aNtp3651
(S'channel'
p3652
(lp3653
S'char'
p3654
a(lp3655
I-1
aaNtp3656
(S'data'
p3657
(lp3658
S'float64'
p3659
ag22
aNtp3660
tp3661
tp3662
sS'DAQmxResetAnlgEdgeRefTrigSlope'
p3663
((lp3664
S'int32'
p3665
ag14
a((S'taskHandle'
p3666
(lp3667
S'TaskHandle'
p3668
aNtp3669
tp3670
tp3671
sS'DAQmxSetAnlgEdgeStartTrigHyst'
p3672
((lp3673
S'int32'
p3674
ag14
a((S'taskHandle'
p3675
(lp3676
S'TaskHandle'
p3677
aNtp3678
(S'data'
p3679
(lp3680
S'float64'
p3681
aNtp3682
tp3683
tp3684
sS'DAQmxResetAIBridgeShuntCalEnable'
p3685
((lp3686
S'int32'
p3687
ag14
a((S'taskHandle'
p3688
(lp3689
S'TaskHandle'
p3690
aNtp3691
(S'channel'
p3692
(lp3693
S'char'
p3694
a(lp3695
I-1
aaNtp3696
tp3697
tp3698
sS'DAQmxSetCISemiPeriodDigFltrMinPulseWidth'
p3699
((lp3700
S'int32'
p3701
ag14
a((S'taskHandle'
p3702
(lp3703
S'TaskHandle'
p3704
aNtp3705
(S'channel'
p3706
(lp3707
S'char'
p3708
a(lp3709
I-1
aaNtp3710
(S'data'
p3711
(lp3712
S'float64'
p3713
aNtp3714
tp3715
tp3716
sS'DAQmxGetCOPulseTimeInitialDelay'
p3717
((lp3718
S'int32'
p3719
ag14
a((S'taskHandle'
p3720
(lp3721
S'TaskHandle'
p3722
aNtp3723
(S'channel'
p3724
(lp3725
S'char'
p3726
a(lp3727
I-1
aaNtp3728
(S'data'
p3729
(lp3730
S'float64'
p3731
ag22
aNtp3732
tp3733
tp3734
sS'DAQmxResetChangeDetectDIFallingEdgePhysicalChans'
p3735
((lp3736
S'int32'
p3737
ag14
a((S'taskHandle'
p3738
(lp3739
S'TaskHandle'
p3740
aNtp3741
tp3742
tp3743
sS'DAQmxWriteCtrTicksScalar'
p3744
((lp3745
S'int32'
p3746
ag14
a((S'taskHandle'
p3747
(lp3748
S'TaskHandle'
p3749
aNtp3750
(S'autoStart'
p3751
(lp3752
S'bool32'
p3753
aNtp3754
(S'timeout'
p3755
(lp3756
S'float64'
p3757
aNtp3758
(S'highTicks'
p3759
(lp3760
S'uInt32'
p3761
aNtp3762
(S'lowTicks'
p3763
(lp3764
S'uInt32'
p3765
aNtp3766
(S'reserved'
p3767
(lp3768
S'bool32'
p3769
ag22
aNtp3770
tp3771
tp3772
sS'DAQmxResetRealTimeWaitForNextSampClkWaitMode'
p3773
((lp3774
S'int32'
p3775
ag14
a((S'taskHandle'
p3776
(lp3777
S'TaskHandle'
p3778
aNtp3779
tp3780
tp3781
sS'DAQmxGetAIAccelUnits'
p3782
((lp3783
S'int32'
p3784
ag14
a((S'taskHandle'
p3785
(lp3786
S'TaskHandle'
p3787
aNtp3788
(S'channel'
p3789
(lp3790
S'char'
p3791
a(lp3792
I-1
aaNtp3793
(S'data'
p3794
(lp3795
S'int32'
p3796
ag22
aNtp3797
tp3798
tp3799
sS'DAQmxSetDigLvlPauseTrigSrc'
p3800
((lp3801
S'int32'
p3802
ag14
a((S'taskHandle'
p3803
(lp3804
S'TaskHandle'
p3805
aNtp3806
(S'data'
p3807
(lp3808
S'char'
p3809
ag22
aNtp3810
tp3811
tp3812
sS'DAQmxGetAICurrentShuntResistance'
p3813
((lp3814
S'int32'
p3815
ag14
a((S'taskHandle'
p3816
(lp3817
S'TaskHandle'
p3818
aNtp3819
(S'channel'
p3820
(lp3821
S'char'
p3822
a(lp3823
I-1
aaNtp3824
(S'data'
p3825
(lp3826
S'float64'
p3827
ag22
aNtp3828
tp3829
tp3830
sS'DAQmxSetAIBridgeBalanceCoarsePot'
p3831
((lp3832
S'int32'
p3833
ag14
a((S'taskHandle'
p3834
(lp3835
S'TaskHandle'
p3836
aNtp3837
(S'channel'
p3838
(lp3839
S'char'
p3840
a(lp3841
I-1
aaNtp3842
(S'data'
p3843
(lp3844
S'int32'
p3845
aNtp3846
tp3847
tp3848
sS'DAQmxResetAIConvTimebaseSrc'
p3849
((lp3850
S'int32'
p3851
ag14
a((S'taskHandle'
p3852
(lp3853
S'TaskHandle'
p3854
aNtp3855
tp3856
tp3857
sS'DAQmxResetCICountEdgesCountDirDigFltrEnable'
p3858
((lp3859
S'int32'
p3860
ag14
a((S'taskHandle'
p3861
(lp3862
S'TaskHandle'
p3863
aNtp3864
(S'channel'
p3865
(lp3866
S'char'
p3867
a(lp3868
I-1
aaNtp3869
tp3870
tp3871
sS'DAQmxResetAIVoltageUnits'
p3872
((lp3873
S'int32'
p3874
ag14
a((S'taskHandle'
p3875
(lp3876
S'TaskHandle'
p3877
aNtp3878
(S'channel'
p3879
(lp3880
S'char'
p3881
a(lp3882
I-1
aaNtp3883
tp3884
tp3885
sS'DAQmxResetAIBridgeBalanceCoarsePot'
p3886
((lp3887
S'int32'
p3888
ag14
a((S'taskHandle'
p3889
(lp3890
S'TaskHandle'
p3891
aNtp3892
(S'channel'
p3893
(lp3894
S'char'
p3895
a(lp3896
I-1
aaNtp3897
tp3898
tp3899
sS'DAQmxSetExportedHshkEventOutputTerm'
p3900
((lp3901
S'int32'
p3902
ag14
a((S'taskHandle'
p3903
(lp3904
S'TaskHandle'
p3905
aNtp3906
(S'data'
p3907
(lp3908
S'char'
p3909
ag22
aNtp3910
tp3911
tp3912
sS'DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth'
p3913
((lp3914
S'int32'
p3915
ag14
a((S'taskHandle'
p3916
(lp3917
S'TaskHandle'
p3918
aNtp3919
(S'channel'
p3920
(lp3921
S'char'
p3922
a(lp3923
I-1
aaNtp3924
(S'data'
p3925
(lp3926
S'float64'
p3927
aNtp3928
tp3929
tp3930
sS'DAQmxSetAOMemMapEnable'
p3931
((lp3932
S'int32'
p3933
ag14
a((S'taskHandle'
p3934
(lp3935
S'TaskHandle'
p3936
aNtp3937
(S'channel'
p3938
(lp3939
S'char'
p3940
a(lp3941
I-1
aaNtp3942
(S'data'
p3943
(lp3944
S'bool32'
p3945
aNtp3946
tp3947
tp3948
sS'DAQmxGetAnlgEdgeStartTrigSrc'
p3949
((lp3950
S'int32'
p3951
ag14
a((S'taskHandle'
p3952
(lp3953
S'TaskHandle'
p3954
aNtp3955
(S'data'
p3956
(lp3957
S'char'
p3958
ag22
aNtp3959
(S'bufferSize'
p3960
(lp3961
S'uInt32'
p3962
aNtp3963
tp3964
tp3965
sS'DAQmxGetWatchdogExpirTrigType'
p3966
((lp3967
S'int32'
p3968
ag14
a((S'taskHandle'
p3969
(lp3970
S'TaskHandle'
p3971
aNtp3972
(S'data'
p3973
(lp3974
S'int32'
p3975
ag22
aNtp3976
tp3977
tp3978
sS'DAQmxSetAnlgWinPauseTrigCoupling'
p3979
((lp3980
S'int32'
p3981
ag14
a((S'taskHandle'
p3982
(lp3983
S'TaskHandle'
p3984
aNtp3985
(S'data'
p3986
(lp3987
S'int32'
p3988
aNtp3989
tp3990
tp3991
sS'DAQmxGetCITwoEdgeSepFirstEdge'
p3992
((lp3993
S'int32'
p3994
ag14
a((S'taskHandle'
p3995
(lp3996
S'TaskHandle'
p3997
aNtp3998
(S'channel'
p3999
(lp4000
S'char'
p4001
a(lp4002
I-1
aaNtp4003
(S'data'
p4004
(lp4005
S'int32'
p4006
ag22
aNtp4007
tp4008
tp4009
sS'DAQmxResetAOLoadImpedance'
p4010
((lp4011
S'int32'
p4012
ag14
a((S'taskHandle'
p4013
(lp4014
S'TaskHandle'
p4015
aNtp4016
(S'channel'
p4017
(lp4018
S'char'
p4019
a(lp4020
I-1
aaNtp4021
tp4022
tp4023
sS'DAQmxGetExportedAIConvClkPulsePolarity'
p4024
((lp4025
S'int32'
p4026
ag14
a((S'taskHandle'
p4027
(lp4028
S'TaskHandle'
p4029
aNtp4030
(S'data'
p4031
(lp4032
S'int32'
p4033
ag22
aNtp4034
tp4035
tp4036
sS'DAQmxCreateCIGPSTimestampChan'
p4037
((lp4038
S'int32'
p4039
ag14
a((S'taskHandle'
p4040
(lp4041
S'TaskHandle'
p4042
aNtp4043
(S'counter'
p4044
(lp4045
S'char'
p4046
a(lp4047
I-1
aaNtp4048
(S'nameToAssignToChannel'
p4049
(lp4050
S'char'
p4051
a(lp4052
I-1
aaNtp4053
(S'units'
p4054
(lp4055
S'int32'
p4056
aNtp4057
(S'syncMethod'
p4058
(lp4059
S'int32'
p4060
aNtp4061
(S'customScaleName'
p4062
(lp4063
S'char'
p4064
a(lp4065
I-1
aaNtp4066
tp4067
tp4068
sS'DAQmxSetAIExcitUseMultiplexed'
p4069
((lp4070
S'int32'
p4071
ag14
a((S'taskHandle'
p4072
(lp4073
S'TaskHandle'
p4074
aNtp4075
(S'channel'
p4076
(lp4077
S'char'
p4078
a(lp4079
I-1
aaNtp4080
(S'data'
p4081
(lp4082
S'bool32'
p4083
aNtp4084
tp4085
tp4086
sS'DAQmxGetAIForceReadFromChan'
p4087
((lp4088
S'int32'
p4089
ag14
a((S'taskHandle'
p4090
(lp4091
S'TaskHandle'
p4092
aNtp4093
(S'channel'
p4094
(lp4095
S'char'
p4096
a(lp4097
I-1
aaNtp4098
(S'data'
p4099
(lp4100
S'bool32'
p4101
ag22
aNtp4102
tp4103
tp4104
sS'DAQmxGetCICtrTimebaseDigFltrTimebaseRate'
p4105
((lp4106
S'int32'
p4107
ag14
a((S'taskHandle'
p4108
(lp4109
S'TaskHandle'
p4110
aNtp4111
(S'channel'
p4112
(lp4113
S'char'
p4114
a(lp4115
I-1
aaNtp4116
(S'data'
p4117
(lp4118
S'float64'
p4119
ag22
aNtp4120
tp4121
tp4122
sS'DAQmxSetAIChanCalVerifRefVals'
p4123
((lp4124
S'int32'
p4125
ag14
a((S'taskHandle'
p4126
(lp4127
S'TaskHandle'
p4128
aNtp4129
(S'channel'
p4130
(lp4131
S'char'
p4132
a(lp4133
I-1
aaNtp4134
(S'data'
p4135
(lp4136
S'float64'
p4137
ag22
aNtp4138
(S'arraySizeInSamples'
p4139
(lp4140
S'uInt32'
p4141
aNtp4142
tp4143
tp4144
sS'DAQmxResetHshkTrigType'
p4145
((lp4146
S'int32'
p4147
ag14
a((S'taskHandle'
p4148
(lp4149
S'TaskHandle'
p4150
aNtp4151
tp4152
tp4153
sS'DAQmxResetCIFreqTerm'
p4154
((lp4155
S'int32'
p4156
ag14
a((S'taskHandle'
p4157
(lp4158
S'TaskHandle'
p4159
aNtp4160
(S'channel'
p4161
(lp4162
S'char'
p4163
a(lp4164
I-1
aaNtp4165
tp4166
tp4167
sS'DAQmxSetWriteOffset'
p4168
((lp4169
S'int32'
p4170
ag14
a((S'taskHandle'
p4171
(lp4172
S'TaskHandle'
p4173
aNtp4174
(S'data'
p4175
(lp4176
S'int32'
p4177
aNtp4178
tp4179
tp4180
sS'DAQmxCreateCIAngEncoderChan'
p4181
((lp4182
S'int32'
p4183
ag14
a((S'taskHandle'
p4184
(lp4185
S'TaskHandle'
p4186
aNtp4187
(S'counter'
p4188
(lp4189
S'char'
p4190
a(lp4191
I-1
aaNtp4192
(S'nameToAssignToChannel'
p4193
(lp4194
S'char'
p4195
a(lp4196
I-1
aaNtp4197
(S'decodingType'
p4198
(lp4199
S'int32'
p4200
aNtp4201
(S'ZidxEnable'
p4202
(lp4203
S'bool32'
p4204
aNtp4205
(S'ZidxVal'
p4206
(lp4207
S'float64'
p4208
aNtp4209
(S'ZidxPhase'
p4210
(lp4211
S'int32'
p4212
aNtp4213
(S'units'
p4214
(lp4215
S'int32'
p4216
aNtp4217
(S'pulsesPerRev'
p4218
(lp4219
S'uInt32'
p4220
aNtp4221
(S'initialAngle'
p4222
(lp4223
S'float64'
p4224
aNtp4225
(S'customScaleName'
p4226
(lp4227
S'char'
p4228
a(lp4229
I-1
aaNtp4230
tp4231
tp4232
sS'DAQmxResetExportedCtrOutEventToggleIdleState'
p4233
((lp4234
S'int32'
p4235
ag14
a((S'taskHandle'
p4236
(lp4237
S'TaskHandle'
p4238
aNtp4239
tp4240
tp4241
sS'DAQmxSetWatchdogTimeout'
p4242
((lp4243
S'int32'
p4244
ag14
a((S'taskHandle'
p4245
(lp4246
S'TaskHandle'
p4247
aNtp4248
(S'data'
p4249
(lp4250
S'float64'
p4251
aNtp4252
tp4253
tp4254
sS'DAQmxResetCOPulseDutyCyc'
p4255
((lp4256
S'int32'
p4257
ag14
a((S'taskHandle'
p4258
(lp4259
S'TaskHandle'
p4260
aNtp4261
(S'channel'
p4262
(lp4263
S'char'
p4264
a(lp4265
I-1
aaNtp4266
tp4267
tp4268
sS'DAQmxSetAITempUnits'
p4269
((lp4270
S'int32'
p4271
ag14
a((S'taskHandle'
p4272
(lp4273
S'TaskHandle'
p4274
aNtp4275
(S'channel'
p4276
(lp4277
S'char'
p4278
a(lp4279
I-1
aaNtp4280
(S'data'
p4281
(lp4282
S'int32'
p4283
aNtp4284
tp4285
tp4286
sS'DAQmxResetAIMicrophoneSensitivity'
p4287
((lp4288
S'int32'
p4289
ag14
a((S'taskHandle'
p4290
(lp4291
S'TaskHandle'
p4292
aNtp4293
(S'channel'
p4294
(lp4295
S'char'
p4296
a(lp4297
I-1
aaNtp4298
tp4299
tp4300
sS'DAQmxSwitchGetMultiRelayPos'
p4301
((lp4302
S'int32'
p4303
ag14
a((S'relayList'
p4304
(lp4305
S'char'
p4306
a(lp4307
I-1
aaNtp4308
(S'relayPos'
p4309
(lp4310
S'uInt32'
p4311
a(lp4312
I-1
aaNtp4313
(S'relayPosArraySize'
p4314
(lp4315
S'uInt32'
p4316
aNtp4317
(S'numRelayPossRead'
p4318
(lp4319
S'uInt32'
p4320
ag22
aNtp4321
tp4322
tp4323
sS'DAQmxResetRealTimeNumOfWarmupIters'
p4324
((lp4325
S'int32'
p4326
ag14
a((S'taskHandle'
p4327
(lp4328
S'TaskHandle'
p4329
aNtp4330
tp4331
tp4332
sS'DAQmxSetWatchdogDOExpirState'
p4333
((lp4334
S'int32'
p4335
ag14
a((S'taskHandle'
p4336
(lp4337
S'TaskHandle'
p4338
aNtp4339
(S'channel'
p4340
(lp4341
S'char'
p4342
a(lp4343
I-1
aaNtp4344
(S'data'
p4345
(lp4346
S'int32'
p4347
aNtp4348
tp4349
tp4350
sS'DAQmxGetHshkStartCond'
p4351
((lp4352
S'int32'
p4353
ag14
a((S'taskHandle'
p4354
(lp4355
S'TaskHandle'
p4356
aNtp4357
(S'data'
p4358
(lp4359
S'int32'
p4360
ag22
aNtp4361
tp4362
tp4363
sS'DAQmxSetAIDataXferMech'
p4364
((lp4365
S'int32'
p4366
ag14
a((S'taskHandle'
p4367
(lp4368
S'TaskHandle'
p4369
aNtp4370
(S'channel'
p4371
(lp4372
S'char'
p4373
a(lp4374
I-1
aaNtp4375
(S'data'
p4376
(lp4377
S'int32'
p4378
aNtp4379
tp4380
tp4381
sS'DAQmxExportSignal'
p4382
((lp4383
S'int32'
p4384
ag14
a((S'taskHandle'
p4385
(lp4386
S'TaskHandle'
p4387
aNtp4388
(S'signalID'
p4389
(lp4390
S'int32'
p4391
aNtp4392
(S'outputTerminal'
p4393
(lp4394
S'char'
p4395
a(lp4396
I-1
aaNtp4397
tp4398
tp4399
sS'DAQmxSetExportedAdvTrigPulseWidthUnits'
p4400
((lp4401
S'int32'
p4402
ag14
a((S'taskHandle'
p4403
(lp4404
S'TaskHandle'
p4405
aNtp4406
(S'data'
p4407
(lp4408
S'int32'
p4409
aNtp4410
tp4411
tp4412
sS'DAQmxSetExportedCtrOutEventPulsePolarity'
p4413
((lp4414
S'int32'
p4415
ag14
a((S'taskHandle'
p4416
(lp4417
S'TaskHandle'
p4418
aNtp4419
(S'data'
p4420
(lp4421
S'int32'
p4422
aNtp4423
tp4424
tp4425
sS'DAQmxSetExportedRdyForXferEventOutputTerm'
p4426
((lp4427
S'int32'
p4428
ag14
a((S'taskHandle'
p4429
(lp4430
S'TaskHandle'
p4431
aNtp4432
(S'data'
p4433
(lp4434
S'char'
p4435
ag22
aNtp4436
tp4437
tp4438
sS'DAQmxSetStartTrigType'
p4439
((lp4440
S'int32'
p4441
ag14
a((S'taskHandle'
p4442
(lp4443
S'TaskHandle'
p4444
aNtp4445
(S'data'
p4446
(lp4447
S'int32'
p4448
aNtp4449
tp4450
tp4451
sS'DAQmxSetAILowpassEnable'
p4452
((lp4453
S'int32'
p4454
ag14
a((S'taskHandle'
p4455
(lp4456
S'TaskHandle'
p4457
aNtp4458
(S'channel'
p4459
(lp4460
S'char'
p4461
a(lp4462
I-1
aaNtp4463
(S'data'
p4464
(lp4465
S'bool32'
p4466
aNtp4467
tp4468
tp4469
sS'DAQmxGetAIMemMapEnable'
p4470
((lp4471
S'int32'
p4472
ag14
a((S'taskHandle'
p4473
(lp4474
S'TaskHandle'
p4475
aNtp4476
(S'channel'
p4477
(lp4478
S'char'
p4479
a(lp4480
I-1
aaNtp4481
(S'data'
p4482
(lp4483
S'bool32'
p4484
ag22
aNtp4485
tp4486
tp4487
sS'DAQmxResetAIRTDB'
p4488
((lp4489
S'int32'
p4490
ag14
a((S'taskHandle'
p4491
(lp4492
S'TaskHandle'
p4493
aNtp4494
(S'channel'
p4495
(lp4496
S'char'
p4497
a(lp4498
I-1
aaNtp4499
tp4500
tp4501
sS'DAQmxResetAIRTDC'
p4502
((lp4503
S'int32'
p4504
ag14
a((S'taskHandle'
p4505
(lp4506
S'TaskHandle'
p4507
aNtp4508
(S'channel'
p4509
(lp4510
S'char'
p4511
a(lp4512
I-1
aaNtp4513
tp4514
tp4515
sS'DAQmxResetAIRTDA'
p4516
((lp4517
S'int32'
p4518
ag14
a((S'taskHandle'
p4519
(lp4520
S'TaskHandle'
p4521
aNtp4522
(S'channel'
p4523
(lp4524
S'char'
p4525
a(lp4526
I-1
aaNtp4527
tp4528
tp4529
sS'DAQmxReadRaw'
p4530
((lp4531
S'int32'
p4532
ag14
a((S'taskHandle'
p4533
(lp4534
S'TaskHandle'
p4535
aNtp4536
(S'numSampsPerChan'
p4537
(lp4538
S'int32'
p4539
aNtp4540
(S'timeout'
p4541
(lp4542
S'float64'
p4543
aNtp4544
(S'readArray'
p4545
(lp4546
S'void'
p4547
ag22
aNtp4548
(S'arraySizeInBytes'
p4549
(lp4550
S'uInt32'
p4551
aNtp4552
(S'sampsRead'
p4553
(lp4554
S'int32'
p4555
ag22
aNtp4556
(S'numBytesPerSamp'
p4557
(lp4558
S'int32'
p4559
ag22
aNtp4560
(S'reserved'
p4561
(lp4562
S'bool32'
p4563
ag22
aNtp4564
tp4565
tp4566
sS'DAQmxResetReadAutoStart'
p4567
((lp4568
S'int32'
p4569
ag14
a((S'taskHandle'
p4570
(lp4571
S'TaskHandle'
p4572
aNtp4573
tp4574
tp4575
sS'DAQmxResetAIMin'
p4576
((lp4577
S'int32'
p4578
ag14
a((S'taskHandle'
p4579
(lp4580
S'TaskHandle'
p4581
aNtp4582
(S'channel'
p4583
(lp4584
S'char'
p4585
a(lp4586
I-1
aaNtp4587
tp4588
tp4589
sS'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate'
p4590
((lp4591
S'int32'
p4592
ag14
a((S'taskHandle'
p4593
(lp4594
S'TaskHandle'
p4595
aNtp4596
(S'channel'
p4597
(lp4598
S'char'
p4599
a(lp4600
I-1
aaNtp4601
(S'data'
p4602
(lp4603
S'float64'
p4604
aNtp4605
tp4606
tp4607
sS'DAQmxResetCIEncoderAInputDigFltrTimebaseRate'
p4608
((lp4609
S'int32'
p4610
ag14
a((S'taskHandle'
p4611
(lp4612
S'TaskHandle'
p4613
aNtp4614
(S'channel'
p4615
(lp4616
S'char'
p4617
a(lp4618
I-1
aaNtp4619
tp4620
tp4621
sS'DAQmxGetExportedAdvTrigPulseWidthUnits'
p4622
((lp4623
S'int32'
p4624
ag14
a((S'taskHandle'
p4625
(lp4626
S'TaskHandle'
p4627
aNtp4628
(S'data'
p4629
(lp4630
S'int32'
p4631
ag22
aNtp4632
tp4633
tp4634
sS'DAQmxResetCICountEdgesDir'
p4635
((lp4636
S'int32'
p4637
ag14
a((S'taskHandle'
p4638
(lp4639
S'TaskHandle'
p4640
aNtp4641
(S'channel'
p4642
(lp4643
S'char'
p4644
a(lp4645
I-1
aaNtp4646
tp4647
tp4648
sS'DAQmxResetAOIdleOutputBehavior'
p4649
((lp4650
S'int32'
p4651
ag14
a((S'taskHandle'
p4652
(lp4653
S'TaskHandle'
p4654
aNtp4655
(S'channel'
p4656
(lp4657
S'char'
p4658
a(lp4659
I-1
aaNtp4660
tp4661
tp4662
sS'DAQmxCreateAITempBuiltInSensorChan'
p4663
((lp4664
S'int32'
p4665
ag14
a((S'taskHandle'
p4666
(lp4667
S'TaskHandle'
p4668
aNtp4669
(S'physicalChannel'
p4670
(lp4671
S'char'
p4672
a(lp4673
I-1
aaNtp4674
(S'nameToAssignToChannel'
p4675
(lp4676
S'char'
p4677
a(lp4678
I-1
aaNtp4679
(S'units'
p4680
(lp4681
S'int32'
p4682
aNtp4683
tp4684
tp4685
sS'DAQmxResetRefClkRate'
p4686
((lp4687
S'int32'
p4688
ag14
a((S'taskHandle'
p4689
(lp4690
S'TaskHandle'
p4691
aNtp4692
tp4693
tp4694
sS'DAQmxSelfCal'
p4695
((lp4696
S'int32'
p4697
ag14
a((S'deviceName'
p4698
(lp4699
S'char'
p4700
a(lp4701
I-1
aaNtp4702
tp4703
tp4704
sS'DAQmxStopTask'
p4705
((lp4706
S'int32'
p4707
ag14
a((S'taskHandle'
p4708
(lp4709
S'TaskHandle'
p4710
aNtp4711
tp4712
tp4713
sS'DAQmxGetPhysicalChanTEDSMfgID'
p4714
((lp4715
S'int32'
p4716
ag14
a((S'physicalChannel'
p4717
(lp4718
S'char'
p4719
a(lp4720
I-1
aaNtp4721
(S'data'
p4722
(lp4723
S'uInt32'
p4724
ag22
aNtp4725
tp4726
tp4727
sS'DAQmxCreateAIFreqVoltageChan'
p4728
((lp4729
S'int32'
p4730
ag14
a((S'taskHandle'
p4731
(lp4732
S'TaskHandle'
p4733
aNtp4734
(S'physicalChannel'
p4735
(lp4736
S'char'
p4737
a(lp4738
I-1
aaNtp4739
(S'nameToAssignToChannel'
p4740
(lp4741
S'char'
p4742
a(lp4743
I-1
aaNtp4744
(S'minVal'
p4745
(lp4746
S'float64'
p4747
aNtp4748
(S'maxVal'
p4749
(lp4750
S'float64'
p4751
aNtp4752
(S'units'
p4753
(lp4754
S'int32'
p4755
aNtp4756
(S'thresholdLevel'
p4757
(lp4758
S'float64'
p4759
aNtp4760
(S'hysteresis'
p4761
(lp4762
S'float64'
p4763
aNtp4764
(S'customScaleName'
p4765
(lp4766
S'char'
p4767
a(lp4768
I-1
aaNtp4769
tp4770
tp4771
sS'DAQmxSetAIRVDTSensitivity'
p4772
((lp4773
S'int32'
p4774
ag14
a((S'taskHandle'
p4775
(lp4776
S'TaskHandle'
p4777
aNtp4778
(S'channel'
p4779
(lp4780
S'char'
p4781
a(lp4782
I-1
aaNtp4783
(S'data'
p4784
(lp4785
S'float64'
p4786
aNtp4787
tp4788
tp4789
sS'DAQmxGetExportedAdvCmpltEventPulsePolarity'
p4790
((lp4791
S'int32'
p4792
ag14
a((S'taskHandle'
p4793
(lp4794
S'TaskHandle'
p4795
aNtp4796
(S'data'
p4797
(lp4798
S'int32'
p4799
ag22
aNtp4800
tp4801
tp4802
sS'DAQmxGetCOPulseTicksInitialDelay'
p4803
((lp4804
S'int32'
p4805
ag14
a((S'taskHandle'
p4806
(lp4807
S'TaskHandle'
p4808
aNtp4809
(S'channel'
p4810
(lp4811
S'char'
p4812
a(lp4813
I-1
aaNtp4814
(S'data'
p4815
(lp4816
S'uInt32'
p4817
ag22
aNtp4818
tp4819
tp4820
sS'DAQmxGetReadWaitMode'
p4821
((lp4822
S'int32'
p4823
ag14
a((S'taskHandle'
p4824
(lp4825
S'TaskHandle'
p4826
aNtp4827
(S'data'
p4828
(lp4829
S'int32'
p4830
ag22
aNtp4831
tp4832
tp4833
sS'DAQmxGetDevDILines'
p4834
((lp4835
S'int32'
p4836
ag14
a((S'device'
p4837
(lp4838
S'char'
p4839
a(lp4840
I-1
aaNtp4841
(S'data'
p4842
(lp4843
S'char'
p4844
ag22
aNtp4845
(S'bufferSize'
p4846
(lp4847
S'uInt32'
p4848
aNtp4849
tp4850
tp4851
sS'DAQmxResetCOCtrTimebaseSrc'
p4852
((lp4853
S'int32'
p4854
ag14
a((S'taskHandle'
p4855
(lp4856
S'TaskHandle'
p4857
aNtp4858
(S'channel'
p4859
(lp4860
S'char'
p4861
a(lp4862
I-1
aaNtp4863
tp4864
tp4865
sS'DAQmxSetDOOutputDriveType'
p4866
((lp4867
S'int32'
p4868
ag14
a((S'taskHandle'
p4869
(lp4870
S'TaskHandle'
p4871
aNtp4872
(S'channel'
p4873
(lp4874
S'char'
p4875
a(lp4876
I-1
aaNtp4877
(S'data'
p4878
(lp4879
S'int32'
p4880
aNtp4881
tp4882
tp4883
sS'DAQmxResetExportedAIHoldCmpltEventOutputTerm'
p4884
((lp4885
S'int32'
p4886
ag14
a((S'taskHandle'
p4887
(lp4888
S'TaskHandle'
p4889
aNtp4890
tp4891
tp4892
sS'DAQmxGetAIBridgeBalanceFinePot'
p4893
((lp4894
S'int32'
p4895
ag14
a((S'taskHandle'
p4896
(lp4897
S'TaskHandle'
p4898
aNtp4899
(S'channel'
p4900
(lp4901
S'char'
p4902
a(lp4903
I-1
aaNtp4904
(S'data'
p4905
(lp4906
S'int32'
p4907
ag22
aNtp4908
tp4909
tp4910
sS'DAQmxSetAnlgWinRefTrigCoupling'
p4911
((lp4912
S'int32'
p4913
ag14
a((S'taskHandle'
p4914
(lp4915
S'TaskHandle'
p4916
aNtp4917
(S'data'
p4918
(lp4919
S'int32'
p4920
aNtp4921
tp4922
tp4923
sS'DAQmxSetInterlockedHshkTrigSrc'
p4924
((lp4925
S'int32'
p4926
ag14
a((S'taskHandle'
p4927
(lp4928
S'TaskHandle'
p4929
aNtp4930
(S'data'
p4931
(lp4932
S'char'
p4933
ag22
aNtp4934
tp4935
tp4936
sS'DAQmxGetScaleMapPreScaledMin'
p4937
((lp4938
S'int32'
p4939
ag14
a((S'scaleName'
p4940
(lp4941
S'char'
p4942
a(lp4943
I-1
aaNtp4944
(S'data'
p4945
(lp4946
S'float64'
p4947
ag22
aNtp4948
tp4949
tp4950
sS'DAQmxSetCIEncoderZInputDigFltrEnable'
p4951
((lp4952
S'int32'
p4953
ag14
a((S'taskHandle'
p4954
(lp4955
S'TaskHandle'
p4956
aNtp4957
(S'channel'
p4958
(lp4959
S'char'
p4960
a(lp4961
I-1
aaNtp4962
(S'data'
p4963
(lp4964
S'bool32'
p4965
aNtp4966
tp4967
tp4968
sS'DAQmxWriteBinaryU32'
p4969
((lp4970
S'int32'
p4971
ag14
a((S'taskHandle'
p4972
(lp4973
S'TaskHandle'
p4974
aNtp4975
(S'numSampsPerChan'
p4976
(lp4977
S'int32'
p4978
aNtp4979
(S'autoStart'
p4980
(lp4981
S'bool32'
p4982
aNtp4983
(S'timeout'
p4984
(lp4985
S'float64'
p4986
aNtp4987
(S'dataLayout'
p4988
(lp4989
S'bool32'
p4990
aNtp4991
(S'writeArray'
p4992
(lp4993
S'uInt32'
p4994
a(lp4995
I-1
aaNtp4996
(S'sampsPerChanWritten'
p4997
(lp4998
S'int32'
p4999
ag22
aNtp5000
(S'reserved'
p5001
(lp5002
S'bool32'
p5003
ag22
aNtp5004
tp5005
tp5006
sS'DAQmxGetCIPulseWidthUnits'
p5007
((lp5008
S'int32'
p5009
ag14
a((S'taskHandle'
p5010
(lp5011
S'TaskHandle'
p5012
aNtp5013
(S'channel'
p5014
(lp5015
S'char'
p5016
a(lp5017
I-1
aaNtp5018
(S'data'
p5019
(lp5020
S'int32'
p5021
ag22
aNtp5022
tp5023
tp5024
sS'DAQmxGetAIStrainGagePoissonRatio'
p5025
((lp5026
S'int32'
p5027
ag14
a((S'taskHandle'
p5028
(lp5029
S'TaskHandle'
p5030
aNtp5031
(S'channel'
p5032
(lp5033
S'char'
p5034
a(lp5035
I-1
aaNtp5036
(S'data'
p5037
(lp5038
S'float64'
p5039
ag22
aNtp5040
tp5041
tp5042
sS'DAQmxSetAIForceReadFromChan'
p5043
((lp5044
S'int32'
p5045
ag14
a((S'taskHandle'
p5046
(lp5047
S'TaskHandle'
p5048
aNtp5049
(S'channel'
p5050
(lp5051
S'char'
p5052
a(lp5053
I-1
aaNtp5054
(S'data'
p5055
(lp5056
S'bool32'
p5057
aNtp5058
tp5059
tp5060
sS'DAQmxSetAILowpassSwitchCapExtClkDiv'
p5061
((lp5062
S'int32'
p5063
ag14
a((S'taskHandle'
p5064
(lp5065
S'TaskHandle'
p5066
aNtp5067
(S'channel'
p5068
(lp5069
S'char'
p5070
a(lp5071
I-1
aaNtp5072
(S'data'
p5073
(lp5074
S'uInt32'
p5075
aNtp5076
tp5077
tp5078
sS'DAQmxResetSampClkDigSyncEnable'
p5079
((lp5080
S'int32'
p5081
ag14
a((S'taskHandle'
p5082
(lp5083
S'TaskHandle'
p5084
aNtp5085
tp5086
tp5087
sS'DAQmxResetAnlgEdgeStartTrigHyst'
p5088
((lp5089
S'int32'
p5090
ag14
a((S'taskHandle'
p5091
(lp5092
S'TaskHandle'
p5093
aNtp5094
tp5095
tp5096
sS'DAQmxGetDigEdgeAdvTrigSrc'
p5097
((lp5098
S'int32'
p5099
ag14
a((S'taskHandle'
p5100
(lp5101
S'TaskHandle'
p5102
aNtp5103
(S'data'
p5104
(lp5105
S'char'
p5106
ag22
aNtp5107
(S'bufferSize'
p5108
(lp5109
S'uInt32'
p5110
aNtp5111
tp5112
tp5113
sS'DAQmxSetExportedHshkEventInterlockedAssertOnStart'
p5114
((lp5115
S'int32'
p5116
ag14
a((S'taskHandle'
p5117
(lp5118
S'TaskHandle'
p5119
aNtp5120
(S'data'
p5121
(lp5122
S'bool32'
p5123
aNtp5124
tp5125
tp5126
sS'DAQmxSetCITwoEdgeSepUnits'
p5127
((lp5128
S'int32'
p5129
ag14
a((S'taskHandle'
p5130
(lp5131
S'TaskHandle'
p5132
aNtp5133
(S'channel'
p5134
(lp5135
S'char'
p5136
a(lp5137
I-1
aaNtp5138
(S'data'
p5139
(lp5140
S'int32'
p5141
aNtp5142
tp5143
tp5144
sS'DAQmxSetReadAutoStart'
p5145
((lp5146
S'int32'
p5147
ag14
a((S'taskHandle'
p5148
(lp5149
S'TaskHandle'
p5150
aNtp5151
(S'data'
p5152
(lp5153
S'bool32'
p5154
aNtp5155
tp5156
tp5157
sS'DAQmxSetCISemiPeriodStartingEdge'
p5158
((lp5159
S'int32'
p5160
ag14
a((S'taskHandle'
p5161
(lp5162
S'TaskHandle'
p5163
aNtp5164
(S'channel'
p5165
(lp5166
S'char'
p5167
a(lp5168
I-1
aaNtp5169
(S'data'
p5170
(lp5171
S'int32'
p5172
aNtp5173
tp5174
tp5175
sS'DAQmxResetAIForceReadFromChan'
p5176
((lp5177
S'int32'
p5178
ag14
a((S'taskHandle'
p5179
(lp5180
S'TaskHandle'
p5181
aNtp5182
(S'channel'
p5183
(lp5184
S'char'
p5185
a(lp5186
I-1
aaNtp5187
tp5188
tp5189
sS'DAQmxGetArmStartTrigType'
p5190
((lp5191
S'int32'
p5192
ag14
a((S'taskHandle'
p5193
(lp5194
S'TaskHandle'
p5195
aNtp5196
(S'data'
p5197
(lp5198
S'int32'
p5199
ag22
aNtp5200
tp5201
tp5202
sS'DAQmxGetAIConvMaxRate'
p5203
((lp5204
S'int32'
p5205
ag14
a((S'taskHandle'
p5206
(lp5207
S'TaskHandle'
p5208
aNtp5209
(S'data'
p5210
(lp5211
S'float64'
p5212
ag22
aNtp5213
tp5214
tp5215
sS'DAQmxSetDigEdgeStartTrigDigSyncEnable'
p5216
((lp5217
S'int32'
p5218
ag14
a((S'taskHandle'
p5219
(lp5220
S'TaskHandle'
p5221
aNtp5222
(S'data'
p5223
(lp5224
S'bool32'
p5225
aNtp5226
tp5227
tp5228
sS'DAQmxGetTaskNumChans'
p5229
((lp5230
S'int32'
p5231
ag14
a((S'taskHandle'
p5232
(lp5233
S'TaskHandle'
p5234
aNtp5235
(S'data'
p5236
(lp5237
S'uInt32'
p5238
ag22
aNtp5239
tp5240
tp5241
sS'DAQmxResetAOTermCfg'
p5242
((lp5243
S'int32'
p5244
ag14
a((S'taskHandle'
p5245
(lp5246
S'TaskHandle'
p5247
aNtp5248
(S'channel'
p5249
(lp5250
S'char'
p5251
a(lp5252
I-1
aaNtp5253
tp5254
tp5255
sS'DAQmxSetCIPulseWidthDigSyncEnable'
p5256
((lp5257
S'int32'
p5258
ag14
a((S'taskHandle'
p5259
(lp5260
S'TaskHandle'
p5261
aNtp5262
(S'channel'
p5263
(lp5264
S'char'
p5265
a(lp5266
I-1
aaNtp5267
(S'data'
p5268
(lp5269
S'bool32'
p5270
aNtp5271
tp5272
tp5273
sS'DAQmxGetAIACExcitSyncEnable'
p5274
((lp5275
S'int32'
p5276
ag14
a((S'taskHandle'
p5277
(lp5278
S'TaskHandle'
p5279
aNtp5280
(S'channel'
p5281
(lp5282
S'char'
p5283
a(lp5284
I-1
aaNtp5285
(S'data'
p5286
(lp5287
S'bool32'
p5288
ag22
aNtp5289
tp5290
tp5291
sS'DAQmxSetAIExcitDCorAC'
p5292
((lp5293
S'int32'
p5294
ag14
a((S'taskHandle'
p5295
(lp5296
S'TaskHandle'
p5297
aNtp5298
(S'channel'
p5299
(lp5300
S'char'
p5301
a(lp5302
I-1
aaNtp5303
(S'data'
p5304
(lp5305
S'int32'
p5306
aNtp5307
tp5308
tp5309
sS'DAQmxSetScaleMapScaledMin'
p5310
((lp5311
S'int32'
p5312
ag14
a((S'scaleName'
p5313
(lp5314
S'char'
p5315
a(lp5316
I-1
aaNtp5317
(S'data'
p5318
(lp5319
S'float64'
p5320
aNtp5321
tp5322
tp5323
sS'DAQmxResetAnlgWinStartTrigTop'
p5324
((lp5325
S'int32'
p5326
ag14
a((S'taskHandle'
p5327
(lp5328
S'TaskHandle'
p5329
aNtp5330
tp5331
tp5332
sS'DAQmxResetAnlgEdgeRefTrigHyst'
p5333
((lp5334
S'int32'
p5335
ag14
a((S'taskHandle'
p5336
(lp5337
S'TaskHandle'
p5338
aNtp5339
tp5340
tp5341
sS'DAQmxCfgInputBuffer'
p5342
((lp5343
S'int32'
p5344
ag14
a((S'taskHandle'
p5345
(lp5346
S'TaskHandle'
p5347
aNtp5348
(S'numSampsPerChan'
p5349
(lp5350
S'uInt32'
p5351
aNtp5352
tp5353
tp5354
sS'DAQmxGetExtCalRecommendedInterval'
p5355
((lp5356
S'int32'
p5357
ag14
a((S'deviceName'
p5358
(lp5359
S'char'
p5360
a(lp5361
I-1
aaNtp5362
(S'data'
p5363
(lp5364
S'uInt32'
p5365
ag22
aNtp5366
tp5367
tp5368
sS'DAQmxResetCIMin'
p5369
((lp5370
S'int32'
p5371
ag14
a((S'taskHandle'
p5372
(lp5373
S'TaskHandle'
p5374
aNtp5375
(S'channel'
p5376
(lp5377
S'char'
p5378
a(lp5379
I-1
aaNtp5380
tp5381
tp5382
sS'DAQmxResetDIDigFltrEnable'
p5383
((lp5384
S'int32'
p5385
ag14
a((S'taskHandle'
p5386
(lp5387
S'TaskHandle'
p5388
aNtp5389
(S'channel'
p5390
(lp5391
S'char'
p5392
a(lp5393
I-1
aaNtp5394
tp5395
tp5396
sS'DAQmxResetCOCtrTimebaseActiveEdge'
p5397
((lp5398
S'int32'
p5399
ag14
a((S'taskHandle'
p5400
(lp5401
S'TaskHandle'
p5402
aNtp5403
(S'channel'
p5404
(lp5405
S'char'
p5406
a(lp5407
I-1
aaNtp5408
tp5409
tp5410
sS'DAQmxGetAIConvTimebaseDiv'
p5411
((lp5412
S'int32'
p5413
ag14
a((S'taskHandle'
p5414
(lp5415
S'TaskHandle'
p5416
aNtp5417
(S'data'
p5418
(lp5419
S'uInt32'
p5420
ag22
aNtp5421
tp5422
tp5423
sS'DAQmxGetExportedHshkEventInterlockedDeassertDelay'
p5424
((lp5425
S'int32'
p5426
ag14
a((S'taskHandle'
p5427
(lp5428
S'TaskHandle'
p5429
aNtp5430
(S'data'
p5431
(lp5432
S'float64'
p5433
ag22
aNtp5434
tp5435
tp5436
sS'DAQmxResetCIPulseWidthDigFltrMinPulseWidth'
p5437
((lp5438
S'int32'
p5439
ag14
a((S'taskHandle'
p5440
(lp5441
S'TaskHandle'
p5442
aNtp5443
(S'channel'
p5444
(lp5445
S'char'
p5446
a(lp5447
I-1
aaNtp5448
tp5449
tp5450
sS'DAQmxResetCIFreqDigFltrTimebaseRate'
p5451
((lp5452
S'int32'
p5453
ag14
a((S'taskHandle'
p5454
(lp5455
S'TaskHandle'
p5456
aNtp5457
(S'channel'
p5458
(lp5459
S'char'
p5460
a(lp5461
I-1
aaNtp5462
tp5463
tp5464
sS'DAQmxGetAOCurrentUnits'
p5465
((lp5466
S'int32'
p5467
ag14
a((S'taskHandle'
p5468
(lp5469
S'TaskHandle'
p5470
aNtp5471
(S'channel'
p5472
(lp5473
S'char'
p5474
a(lp5475
I-1
aaNtp5476
(S'data'
p5477
(lp5478
S'int32'
p5479
ag22
aNtp5480
tp5481
tp5482
sS'DAQmxSetAIBridgeNomResistance'
p5483
((lp5484
S'int32'
p5485
ag14
a((S'taskHandle'
p5486
(lp5487
S'TaskHandle'
p5488
aNtp5489
(S'channel'
p5490
(lp5491
S'char'
p5492
a(lp5493
I-1
aaNtp5494
(S'data'
p5495
(lp5496
S'float64'
p5497
aNtp5498
tp5499
tp5500
sS'DAQmxResetCISemiPeriodTerm'
p5501
((lp5502
S'int32'
p5503
ag14
a((S'taskHandle'
p5504
(lp5505
S'TaskHandle'
p5506
aNtp5507
(S'channel'
p5508
(lp5509
S'char'
p5510
a(lp5511
I-1
aaNtp5512
tp5513
tp5514
sS'DAQmxSetAIGain'
p5515
((lp5516
S'int32'
p5517
ag14
a((S'taskHandle'
p5518
(lp5519
S'TaskHandle'
p5520
aNtp5521
(S'channel'
p5522
(lp5523
S'char'
p5524
a(lp5525
I-1
aaNtp5526
(S'data'
p5527
(lp5528
S'float64'
p5529
aNtp5530
tp5531
tp5532
sS'DAQmxGetWriteSpaceAvail'
p5533
((lp5534
S'int32'
p5535
ag14
a((S'taskHandle'
p5536
(lp5537
S'TaskHandle'
p5538
aNtp5539
(S'data'
p5540
(lp5541
S'uInt32'
p5542
ag22
aNtp5543
tp5544
tp5545
sS'DAQmxGetCOPulseFreqUnits'
p5546
((lp5547
S'int32'
p5548
ag14
a((S'taskHandle'
p5549
(lp5550
S'TaskHandle'
p5551
aNtp5552
(S'channel'
p5553
(lp5554
S'char'
p5555
a(lp5556
I-1
aaNtp5557
(S'data'
p5558
(lp5559
S'int32'
p5560
ag22
aNtp5561
tp5562
tp5563
sS'DAQmxGetChanIsGlobal'
p5564
((lp5565
S'int32'
p5566
ag14
a((S'taskHandle'
p5567
(lp5568
S'TaskHandle'
p5569
aNtp5570
(S'channel'
p5571
(lp5572
S'char'
p5573
a(lp5574
I-1
aaNtp5575
(S'data'
p5576
(lp5577
S'bool32'
p5578
ag22
aNtp5579
tp5580
tp5581
sS'DAQmxResetDigPatternRefTrigSrc'
p5582
((lp5583
S'int32'
p5584
ag14
a((S'taskHandle'
p5585
(lp5586
S'TaskHandle'
p5587
aNtp5588
tp5589
tp5590
sS'DAQmxGetAIChanCalCalDate'
p5591
((lp5592
S'int32'
p5593
ag14
a((S'taskHandle'
p5594
(lp5595
S'TaskHandle'
p5596
aNtp5597
(S'channelName'
p5598
(lp5599
S'char'
p5600
a(lp5601
I-1
aaNtp5602
(S'year'
p5603
(lp5604
S'uInt32'
p5605
ag22
aNtp5606
(S'month'
p5607
(lp5608
S'uInt32'
p5609
ag22
aNtp5610
(S'day'
p5611
(lp5612
S'uInt32'
p5613
ag22
aNtp5614
(S'hour'
p5615
(lp5616
S'uInt32'
p5617
ag22
aNtp5618
(S'minute'
p5619
(lp5620
S'uInt32'
p5621
ag22
aNtp5622
tp5623
tp5624
sS'DAQmxGetAICustomScaleName'
p5625
((lp5626
S'int32'
p5627
ag14
a((S'taskHandle'
p5628
(lp5629
S'TaskHandle'
p5630
aNtp5631
(S'channel'
p5632
(lp5633
S'char'
p5634
a(lp5635
I-1
aaNtp5636
(S'data'
p5637
(lp5638
S'char'
p5639
ag22
aNtp5640
(S'bufferSize'
p5641
(lp5642
S'uInt32'
p5643
aNtp5644
tp5645
tp5646
sS'DAQmxResetAIRVDTSensitivityUnits'
p5647
((lp5648
S'int32'
p5649
ag14
a((S'taskHandle'
p5650
(lp5651
S'TaskHandle'
p5652
aNtp5653
(S'channel'
p5654
(lp5655
S'char'
p5656
a(lp5657
I-1
aaNtp5658
tp5659
tp5660
sS'DAQmxResetCIPulseWidthDigSyncEnable'
p5661
((lp5662
S'int32'
p5663
ag14
a((S'taskHandle'
p5664
(lp5665
S'TaskHandle'
p5666
aNtp5667
(S'channel'
p5668
(lp5669
S'char'
p5670
a(lp5671
I-1
aaNtp5672
tp5673
tp5674
sS'DAQmxSetSyncPulseSrc'
p5675
((lp5676
S'int32'
p5677
ag14
a((S'taskHandle'
p5678
(lp5679
S'TaskHandle'
p5680
aNtp5681
(S'data'
p5682
(lp5683
S'char'
p5684
ag22
aNtp5685
tp5686
tp5687
sS'DAQmxResetDigEdgeArmStartTrigSrc'
p5688
((lp5689
S'int32'
p5690
ag14
a((S'taskHandle'
p5691
(lp5692
S'TaskHandle'
p5693
aNtp5694
tp5695
tp5696
sS'DAQmxGetAnlgLvlPauseTrigCoupling'
p5697
((lp5698
S'int32'
p5699
ag14
a((S'taskHandle'
p5700
(lp5701
S'TaskHandle'
p5702
aNtp5703
(S'data'
p5704
(lp5705
S'int32'
p5706
ag22
aNtp5707
tp5708
tp5709
sS'DAQmxGetCINumPossiblyInvalidSamps'
p5710
((lp5711
S'int32'
p5712
ag14
a((S'taskHandle'
p5713
(lp5714
S'TaskHandle'
p5715
aNtp5716
(S'channel'
p5717
(lp5718
S'char'
p5719
a(lp5720
I-1
aaNtp5721
(S'data'
p5722
(lp5723
S'uInt32'
p5724
ag22
aNtp5725
tp5726
tp5727
sS'DAQmxResetStartTrigRetriggerable'
p5728
((lp5729
S'int32'
p5730
ag14
a((S'taskHandle'
p5731
(lp5732
S'TaskHandle'
p5733
aNtp5734
tp5735
tp5736
sS'DAQmxResetCIDupCountPrevent'
p5737
((lp5738
S'int32'
p5739
ag14
a((S'taskHandle'
p5740
(lp5741
S'TaskHandle'
p5742
aNtp5743
(S'channel'
p5744
(lp5745
S'char'
p5746
a(lp5747
I-1
aaNtp5748
tp5749
tp5750
sS'DAQmxResetExportedRdyForXferEventOutputTerm'
p5751
((lp5752
S'int32'
p5753
ag14
a((S'taskHandle'
p5754
(lp5755
S'TaskHandle'
p5756
aNtp5757
tp5758
tp5759
sS'DAQmxGetAIConvTimebaseSrc'
p5760
((lp5761
S'int32'
p5762
ag14
a((S'taskHandle'
p5763
(lp5764
S'TaskHandle'
p5765
aNtp5766
(S'data'
p5767
(lp5768
S'int32'
p5769
ag22
aNtp5770
tp5771
tp5772
sS'DAQmxGetDigEdgeWatchdogExpirTrigEdge'
p5773
((lp5774
S'int32'
p5775
ag14
a((S'taskHandle'
p5776
(lp5777
S'TaskHandle'
p5778
aNtp5779
(S'data'
p5780
(lp5781
S'int32'
p5782
ag22
aNtp5783
tp5784
tp5785
sS'DAQmxSetAnlgEdgeRefTrigCoupling'
p5786
((lp5787
S'int32'
p5788
ag14
a((S'taskHandle'
p5789
(lp5790
S'TaskHandle'
p5791
aNtp5792
(S'data'
p5793
(lp5794
S'int32'
p5795
aNtp5796
tp5797
tp5798
sS'DAQmxResetRealTimeWriteRecoveryMode'
p5799
((lp5800
S'int32'
p5801
ag14
a((S'taskHandle'
p5802
(lp5803
S'TaskHandle'
p5804
aNtp5805
tp5806
tp5807
sS'DAQmxSetAIEnhancedAliasRejectionEnable'
p5808
((lp5809
S'int32'
p5810
ag14
a((S'taskHandle'
p5811
(lp5812
S'TaskHandle'
p5813
aNtp5814
(S'channel'
p5815
(lp5816
S'char'
p5817
a(lp5818
I-1
aaNtp5819
(S'data'
p5820
(lp5821
S'bool32'
p5822
aNtp5823
tp5824
tp5825
sS'DAQmxGetDigPatternRefTrigWhen'
p5826
((lp5827
S'int32'
p5828
ag14
a((S'taskHandle'
p5829
(lp5830
S'TaskHandle'
p5831
aNtp5832
(S'data'
p5833
(lp5834
S'int32'
p5835
ag22
aNtp5836
tp5837
tp5838
sS'DAQmxGetCIPeriodDigFltrTimebaseSrc'
p5839
((lp5840
S'int32'
p5841
ag14
a((S'taskHandle'
p5842
(lp5843
S'TaskHandle'
p5844
aNtp5845
(S'channel'
p5846
(lp5847
S'char'
p5848
a(lp5849
I-1
aaNtp5850
(S'data'
p5851
(lp5852
S'char'
p5853
ag22
aNtp5854
(S'bufferSize'
p5855
(lp5856
S'uInt32'
p5857
aNtp5858
tp5859
tp5860
sS'DAQmxGetSwitchDevRelayList'
p5861
((lp5862
S'int32'
p5863
ag14
a((S'deviceName'
p5864
(lp5865
S'char'
p5866
a(lp5867
I-1
aaNtp5868
(S'data'
p5869
(lp5870
S'char'
p5871
ag22
aNtp5872
(S'bufferSize'
p5873
(lp5874
S'uInt32'
p5875
aNtp5876
tp5877
tp5878
sS'DAQmxResetAIBridgeBalanceFinePot'
p5879
((lp5880
S'int32'
p5881
ag14
a((S'taskHandle'
p5882
(lp5883
S'TaskHandle'
p5884
aNtp5885
(S'channel'
p5886
(lp5887
S'char'
p5888
a(lp5889
I-1
aaNtp5890
tp5891
tp5892
sS'DAQmxGetCICountEdgesDir'
p5893
((lp5894
S'int32'
p5895
ag14
a((S'taskHandle'
p5896
(lp5897
S'TaskHandle'
p5898
aNtp5899
(S'channel'
p5900
(lp5901
S'char'
p5902
a(lp5903
I-1
aaNtp5904
(S'data'
p5905
(lp5906
S'int32'
p5907
ag22
aNtp5908
tp5909
tp5910
sS'DAQmxGetScaleTableScaledVals'
p5911
((lp5912
S'int32'
p5913
ag14
a((S'scaleName'
p5914
(lp5915
S'char'
p5916
a(lp5917
I-1
aaNtp5918
(S'data'
p5919
(lp5920
S'float64'
p5921
ag22
aNtp5922
(S'arraySizeInSamples'
p5923
(lp5924
S'uInt32'
p5925
aNtp5926
tp5927
tp5928
sS'DAQmxGetStartTrigDelay'
p5929
((lp5930
S'int32'
p5931
ag14
a((S'taskHandle'
p5932
(lp5933
S'TaskHandle'
p5934
aNtp5935
(S'data'
p5936
(lp5937
S'float64'
p5938
ag22
aNtp5939
tp5940
tp5941
sS'DAQmxGetCITCReached'
p5942
((lp5943
S'int32'
p5944
ag14
a((S'taskHandle'
p5945
(lp5946
S'TaskHandle'
p5947
aNtp5948
(S'channel'
p5949
(lp5950
S'char'
p5951
a(lp5952
I-1
aaNtp5953
(S'data'
p5954
(lp5955
S'bool32'
p5956
ag22
aNtp5957
tp5958
tp5959
sS'DAQmxSetAISampAndHoldEnable'
p5960
((lp5961
S'int32'
p5962
ag14
a((S'taskHandle'
p5963
(lp5964
S'TaskHandle'
p5965
aNtp5966
(S'channel'
p5967
(lp5968
S'char'
p5969
a(lp5970
I-1
aaNtp5971
(S'data'
p5972
(lp5973
S'bool32'
p5974
aNtp5975
tp5976
tp5977
sS'DAQmxResetAIExcitUseForScaling'
p5978
((lp5979
S'int32'
p5980
ag14
a((S'taskHandle'
p5981
(lp5982
S'TaskHandle'
p5983
aNtp5984
(S'channel'
p5985
(lp5986
S'char'
p5987
a(lp5988
I-1
aaNtp5989
tp5990
tp5991
sS'DAQmxSaveGlobalChan'
p5992
((lp5993
S'int32'
p5994
ag14
a((S'taskHandle'
p5995
(lp5996
S'TaskHandle'
p5997
aNtp5998
(S'channelName'
p5999
(lp6000
S'char'
p6001
a(lp6002
I-1
aaNtp6003
(S'saveAs'
p6004
(lp6005
S'char'
p6006
a(lp6007
I-1
aaNtp6008
(S'author'
p6009
(lp6010
S'char'
p6011
a(lp6012
I-1
aaNtp6013
(S'options'
p6014
(lp6015
S'uInt32'
p6016
aNtp6017
tp6018
tp6019
sS'DAQmxSCBaseboardCalAdjust'
p6020
((lp6021
S'int32'
p6022
ag14
a((S'calHandle'
p6023
(lp6024
S'uInt32'
p6025
aNtp6026
(S'referenceVoltage'
p6027
(lp6028
S'float64'
p6029
aNtp6030
tp6031
tp6032
sS'DAQmxSetCISemiPeriodDigFltrTimebaseRate'
p6033
((lp6034
S'int32'
p6035
ag14
a((S'taskHandle'
p6036
(lp6037
S'TaskHandle'
p6038
aNtp6039
(S'channel'
p6040
(lp6041
S'char'
p6042
a(lp6043
I-1
aaNtp6044
(S'data'
p6045
(lp6046
S'float64'
p6047
aNtp6048
tp6049
tp6050
sS'DAQmxGetPersistedScaleAllowInteractiveDeletion'
p6051
((lp6052
S'int32'
p6053
ag14
a((S'scaleName'
p6054
(lp6055
S'char'
p6056
a(lp6057
I-1
aaNtp6058
(S'data'
p6059
(lp6060
S'bool32'
p6061
ag22
aNtp6062
tp6063
tp6064
sS'DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p6065
((lp6066
S'int32'
p6067
ag14
a((S'taskHandle'
p6068
(lp6069
S'TaskHandle'
p6070
aNtp6071
(S'data'
p6072
(lp6073
S'float64'
p6074
aNtp6075
tp6076
tp6077
sS'DAQmxGetExportedChangeDetectEventOutputTerm'
p6078
((lp6079
S'int32'
p6080
ag14
a((S'taskHandle'
p6081
(lp6082
S'TaskHandle'
p6083
aNtp6084
(S'data'
p6085
(lp6086
S'char'
p6087
ag22
aNtp6088
(S'bufferSize'
p6089
(lp6090
S'uInt32'
p6091
aNtp6092
tp6093
tp6094
sS'DAQmxSetAODACRefExtSrc'
p6095
((lp6096
S'int32'
p6097
ag14
a((S'taskHandle'
p6098
(lp6099
S'TaskHandle'
p6100
aNtp6101
(S'channel'
p6102
(lp6103
S'char'
p6104
a(lp6105
I-1
aaNtp6106
(S'data'
p6107
(lp6108
S'char'
p6109
ag22
aNtp6110
tp6111
tp6112
sS'DAQmxSetAIThrmcplCJCVal'
p6113
((lp6114
S'int32'
p6115
ag14
a((S'taskHandle'
p6116
(lp6117
S'TaskHandle'
p6118
aNtp6119
(S'channel'
p6120
(lp6121
S'char'
p6122
a(lp6123
I-1
aaNtp6124
(S'data'
p6125
(lp6126
S'float64'
p6127
aNtp6128
tp6129
tp6130
sS'DAQmxResetAIRVDTUnits'
p6131
((lp6132
S'int32'
p6133
ag14
a((S'taskHandle'
p6134
(lp6135
S'TaskHandle'
p6136
aNtp6137
(S'channel'
p6138
(lp6139
S'char'
p6140
a(lp6141
I-1
aaNtp6142
tp6143
tp6144
sS'DAQmxResetDigEdgeArmStartTrigDigFltrEnable'
p6145
((lp6146
S'int32'
p6147
ag14
a((S'taskHandle'
p6148
(lp6149
S'TaskHandle'
p6150
aNtp6151
tp6152
tp6153
sS'DAQmxSetCIEncoderAInputTerm'
p6154
((lp6155
S'int32'
p6156
ag14
a((S'taskHandle'
p6157
(lp6158
S'TaskHandle'
p6159
aNtp6160
(S'channel'
p6161
(lp6162
S'char'
p6163
a(lp6164
I-1
aaNtp6165
(S'data'
p6166
(lp6167
S'char'
p6168
ag22
aNtp6169
tp6170
tp6171
sS'DAQmxSetAIRawDataCompressionType'
p6172
((lp6173
S'int32'
p6174
ag14
a((S'taskHandle'
p6175
(lp6176
S'TaskHandle'
p6177
aNtp6178
(S'channel'
p6179
(lp6180
S'char'
p6181
a(lp6182
I-1
aaNtp6183
(S'data'
p6184
(lp6185
S'int32'
p6186
aNtp6187
tp6188
tp6189
sS'DAQmxResetArmStartTrigType'
p6190
((lp6191
S'int32'
p6192
ag14
a((S'taskHandle'
p6193
(lp6194
S'TaskHandle'
p6195
aNtp6196
tp6197
tp6198
sS'DAQmxResetTimingAttribute'
p6199
((lp6200
S'int32'
p6201
ag14
a((S'taskHandle'
p6202
(lp6203
S'TaskHandle'
p6204
aNtp6205
(S'attribute'
p6206
(lp6207
S'int32'
p6208
aNtp6209
tp6210
tp6211
sS'DAQmxCreateCIFreqChan'
p6212
((lp6213
S'int32'
p6214
ag14
a((S'taskHandle'
p6215
(lp6216
S'TaskHandle'
p6217
aNtp6218
(S'counter'
p6219
(lp6220
S'char'
p6221
a(lp6222
I-1
aaNtp6223
(S'nameToAssignToChannel'
p6224
(lp6225
S'char'
p6226
a(lp6227
I-1
aaNtp6228
(S'minVal'
p6229
(lp6230
S'float64'
p6231
aNtp6232
(S'maxVal'
p6233
(lp6234
S'float64'
p6235
aNtp6236
(S'units'
p6237
(lp6238
S'int32'
p6239
aNtp6240
(S'edge'
p6241
(lp6242
S'int32'
p6243
aNtp6244
(S'measMethod'
p6245
(lp6246
S'int32'
p6247
aNtp6248
(S'measTime'
p6249
(lp6250
S'float64'
p6251
aNtp6252
(S'divisor'
p6253
(lp6254
S'uInt32'
p6255
aNtp6256
(S'customScaleName'
p6257
(lp6258
S'char'
p6259
a(lp6260
I-1
aaNtp6261
tp6262
tp6263
sS'DAQmxGetCIEncoderAInputDigFltrMinPulseWidth'
p6264
((lp6265
S'int32'
p6266
ag14
a((S'taskHandle'
p6267
(lp6268
S'TaskHandle'
p6269
aNtp6270
(S'channel'
p6271
(lp6272
S'char'
p6273
a(lp6274
I-1
aaNtp6275
(S'data'
p6276
(lp6277
S'float64'
p6278
ag22
aNtp6279
tp6280
tp6281
sS'DAQmxGetSwitchChanMaxDCVoltage'
p6282
((lp6283
S'int32'
p6284
ag14
a((S'switchChannelName'
p6285
(lp6286
S'char'
p6287
a(lp6288
I-1
aaNtp6289
(S'data'
p6290
(lp6291
S'float64'
p6292
ag22
aNtp6293
tp6294
tp6295
sS'DAQmxGetAnlgEdgeRefTrigLvl'
p6296
((lp6297
S'int32'
p6298
ag14
a((S'taskHandle'
p6299
(lp6300
S'TaskHandle'
p6301
aNtp6302
(S'data'
p6303
(lp6304
S'float64'
p6305
ag22
aNtp6306
tp6307
tp6308
sS'DAQmxGetExportedChangeDetectEventPulsePolarity'
p6309
((lp6310
S'int32'
p6311
ag14
a((S'taskHandle'
p6312
(lp6313
S'TaskHandle'
p6314
aNtp6315
(S'data'
p6316
(lp6317
S'int32'
p6318
ag22
aNtp6319
tp6320
tp6321
sS'DAQmxGetAIResolution'
p6322
((lp6323
S'int32'
p6324
ag14
a((S'taskHandle'
p6325
(lp6326
S'TaskHandle'
p6327
aNtp6328
(S'channel'
p6329
(lp6330
S'char'
p6331
a(lp6332
I-1
aaNtp6333
(S'data'
p6334
(lp6335
S'float64'
p6336
ag22
aNtp6337
tp6338
tp6339
sS'DAQmxResetAODataXferReqCond'
p6340
((lp6341
S'int32'
p6342
ag14
a((S'taskHandle'
p6343
(lp6344
S'TaskHandle'
p6345
aNtp6346
(S'channel'
p6347
(lp6348
S'char'
p6349
a(lp6350
I-1
aaNtp6351
tp6352
tp6353
sS'DAQmxGetAOLoadImpedance'
p6354
((lp6355
S'int32'
p6356
ag14
a((S'taskHandle'
p6357
(lp6358
S'TaskHandle'
p6359
aNtp6360
(S'channel'
p6361
(lp6362
S'char'
p6363
a(lp6364
I-1
aaNtp6365
(S'data'
p6366
(lp6367
S'float64'
p6368
ag22
aNtp6369
tp6370
tp6371
sS'DAQmxResetAODACRefAllowConnToGnd'
p6372
((lp6373
S'int32'
p6374
ag14
a((S'taskHandle'
p6375
(lp6376
S'TaskHandle'
p6377
aNtp6378
(S'channel'
p6379
(lp6380
S'char'
p6381
a(lp6382
I-1
aaNtp6383
tp6384
tp6385
sS'DAQmxResetSwitchScanBreakMode'
p6386
((lp6387
S'int32'
p6388
ag14
a((S'taskHandle'
p6389
(lp6390
S'TaskHandle'
p6391
aNtp6392
tp6393
tp6394
sS'DAQmxResetExported10MHzRefClkOutputTerm'
p6395
((lp6396
S'int32'
p6397
ag14
a((S'taskHandle'
p6398
(lp6399
S'TaskHandle'
p6400
aNtp6401
tp6402
tp6403
sS'DAQmxSetSwitchChanUsage'
p6404
((lp6405
S'int32'
p6406
ag14
a((S'switchChannelName'
p6407
(lp6408
S'char'
p6409
a(lp6410
I-1
aaNtp6411
(S'data'
p6412
(lp6413
S'int32'
p6414
aNtp6415
tp6416
tp6417
sS'DAQmxSetCIPeriodTerm'
p6418
((lp6419
S'int32'
p6420
ag14
a((S'taskHandle'
p6421
(lp6422
S'TaskHandle'
p6423
aNtp6424
(S'channel'
p6425
(lp6426
S'char'
p6427
a(lp6428
I-1
aaNtp6429
(S'data'
p6430
(lp6431
S'char'
p6432
ag22
aNtp6433
tp6434
tp6435
sS'DAQmxGetCIPeriodDigFltrTimebaseRate'
p6436
((lp6437
S'int32'
p6438
ag14
a((S'taskHandle'
p6439
(lp6440
S'TaskHandle'
p6441
aNtp6442
(S'channel'
p6443
(lp6444
S'char'
p6445
a(lp6446
I-1
aaNtp6447
(S'data'
p6448
(lp6449
S'float64'
p6450
ag22
aNtp6451
tp6452
tp6453
sS'DAQmxSetExportedAIHoldCmpltEventOutputTerm'
p6454
((lp6455
S'int32'
p6456
ag14
a((S'taskHandle'
p6457
(lp6458
S'TaskHandle'
p6459
aNtp6460
(S'data'
p6461
(lp6462
S'char'
p6463
ag22
aNtp6464
tp6465
tp6466
sS'DAQmxGetAIExcitVal'
p6467
((lp6468
S'int32'
p6469
ag14
a((S'taskHandle'
p6470
(lp6471
S'TaskHandle'
p6472
aNtp6473
(S'channel'
p6474
(lp6475
S'char'
p6476
a(lp6477
I-1
aaNtp6478
(S'data'
p6479
(lp6480
S'float64'
p6481
ag22
aNtp6482
tp6483
tp6484
sS'DAQmxSetDigEdgeArmStartTrigEdge'
p6485
((lp6486
S'int32'
p6487
ag14
a((S'taskHandle'
p6488
(lp6489
S'TaskHandle'
p6490
aNtp6491
(S'data'
p6492
(lp6493
S'int32'
p6494
aNtp6495
tp6496
tp6497
sS'DAQmxSetSampClkTimebaseActiveEdge'
p6498
((lp6499
S'int32'
p6500
ag14
a((S'taskHandle'
p6501
(lp6502
S'TaskHandle'
p6503
aNtp6504
(S'data'
p6505
(lp6506
S'int32'
p6507
aNtp6508
tp6509
tp6510
sS'DAQmxCreateAIDeviceTempChan'
p6511
((lp6512
S'int32'
p6513
ag14
a((S'taskHandle'
p6514
(lp6515
S'TaskHandle'
p6516
aNtp6517
(S'physicalChannel'
p6518
(lp6519
S'char'
p6520
a(lp6521
I-1
aaNtp6522
(S'nameToAssignToChannel'
p6523
(lp6524
S'char'
p6525
a(lp6526
I-1
aaNtp6527
(S'units'
p6528
(lp6529
S'int32'
p6530
aNtp6531
tp6532
tp6533
sS'DAQmxCreateCOPulseChanFreq'
p6534
((lp6535
S'int32'
p6536
ag14
a((S'taskHandle'
p6537
(lp6538
S'TaskHandle'
p6539
aNtp6540
(S'counter'
p6541
(lp6542
S'char'
p6543
a(lp6544
I-1
aaNtp6545
(S'nameToAssignToChannel'
p6546
(lp6547
S'char'
p6548
a(lp6549
I-1
aaNtp6550
(S'units'
p6551
(lp6552
S'int32'
p6553
aNtp6554
(S'idleState'
p6555
(lp6556
S'int32'
p6557
aNtp6558
(S'initialDelay'
p6559
(lp6560
S'float64'
p6561
aNtp6562
(S'freq'
p6563
(lp6564
S'float64'
p6565
aNtp6566
(S'dutyCycle'
p6567
(lp6568
S'float64'
p6569
aNtp6570
tp6571
tp6572
sS'DAQmxGetAITempUnits'
p6573
((lp6574
S'int32'
p6575
ag14
a((S'taskHandle'
p6576
(lp6577
S'TaskHandle'
p6578
aNtp6579
(S'channel'
p6580
(lp6581
S'char'
p6582
a(lp6583
I-1
aaNtp6584
(S'data'
p6585
(lp6586
S'int32'
p6587
ag22
aNtp6588
tp6589
tp6590
sS'DAQmxGetAOUseOnlyOnBrdMem'
p6591
((lp6592
S'int32'
p6593
ag14
a((S'taskHandle'
p6594
(lp6595
S'TaskHandle'
p6596
aNtp6597
(S'channel'
p6598
(lp6599
S'char'
p6600
a(lp6601
I-1
aaNtp6602
(S'data'
p6603
(lp6604
S'bool32'
p6605
ag22
aNtp6606
tp6607
tp6608
sS'DAQmxGetAOOutputType'
p6609
((lp6610
S'int32'
p6611
ag14
a((S'taskHandle'
p6612
(lp6613
S'TaskHandle'
p6614
aNtp6615
(S'channel'
p6616
(lp6617
S'char'
p6618
a(lp6619
I-1
aaNtp6620
(S'data'
p6621
(lp6622
S'int32'
p6623
ag22
aNtp6624
tp6625
tp6626
sS'DAQmxResetCITwoEdgeSepSecondDigFltrEnable'
p6627
((lp6628
S'int32'
p6629
ag14
a((S'taskHandle'
p6630
(lp6631
S'TaskHandle'
p6632
aNtp6633
(S'channel'
p6634
(lp6635
S'char'
p6636
a(lp6637
I-1
aaNtp6638
tp6639
tp6640
sS'DAQmxGetRealTimeWaitForNextSampClkWaitMode'
p6641
((lp6642
S'int32'
p6643
ag14
a((S'taskHandle'
p6644
(lp6645
S'TaskHandle'
p6646
aNtp6647
(S'data'
p6648
(lp6649
S'int32'
p6650
ag22
aNtp6651
tp6652
tp6653
sS'DAQmxSetRealTimeConvLateErrorsToWarnings'
p6654
((lp6655
S'int32'
p6656
ag14
a((S'taskHandle'
p6657
(lp6658
S'TaskHandle'
p6659
aNtp6660
(S'data'
p6661
(lp6662
S'bool32'
p6663
aNtp6664
tp6665
tp6666
sS'DAQmxResetCOPulseTimeInitialDelay'
p6667
((lp6668
S'int32'
p6669
ag14
a((S'taskHandle'
p6670
(lp6671
S'TaskHandle'
p6672
aNtp6673
(S'channel'
p6674
(lp6675
S'char'
p6676
a(lp6677
I-1
aaNtp6678
tp6679
tp6680
sS'DAQmxSetCIEncoderZInputTerm'
p6681
((lp6682
S'int32'
p6683
ag14
a((S'taskHandle'
p6684
(lp6685
S'TaskHandle'
p6686
aNtp6687
(S'channel'
p6688
(lp6689
S'char'
p6690
a(lp6691
I-1
aaNtp6692
(S'data'
p6693
(lp6694
S'char'
p6695
ag22
aNtp6696
tp6697
tp6698
sS'DAQmxGetScaleScaledUnits'
p6699
((lp6700
S'int32'
p6701
ag14
a((S'scaleName'
p6702
(lp6703
S'char'
p6704
a(lp6705
I-1
aaNtp6706
(S'data'
p6707
(lp6708
S'char'
p6709
ag22
aNtp6710
(S'bufferSize'
p6711
(lp6712
S'uInt32'
p6713
aNtp6714
tp6715
tp6716
sS'DAQmxSetAITermCfg'
p6717
((lp6718
S'int32'
p6719
ag14
a((S'taskHandle'
p6720
(lp6721
S'TaskHandle'
p6722
aNtp6723
(S'channel'
p6724
(lp6725
S'char'
p6726
a(lp6727
I-1
aaNtp6728
(S'data'
p6729
(lp6730
S'int32'
p6731
aNtp6732
tp6733
tp6734
sS'DAQmxResetExportedStartTrigOutputTerm'
p6735
((lp6736
S'int32'
p6737
ag14
a((S'taskHandle'
p6738
(lp6739
S'TaskHandle'
p6740
aNtp6741
tp6742
tp6743
sS'DAQmxGetCIEncoderBInputDigFltrTimebaseRate'
p6744
((lp6745
S'int32'
p6746
ag14
a((S'taskHandle'
p6747
(lp6748
S'TaskHandle'
p6749
aNtp6750
(S'channel'
p6751
(lp6752
S'char'
p6753
a(lp6754
I-1
aaNtp6755
(S'data'
p6756
(lp6757
S'float64'
p6758
ag22
aNtp6759
tp6760
tp6761
sS'DAQmxReadCounterScalarU32'
p6762
((lp6763
S'int32'
p6764
ag14
a((S'taskHandle'
p6765
(lp6766
S'TaskHandle'
p6767
aNtp6768
(S'timeout'
p6769
(lp6770
S'float64'
p6771
aNtp6772
(S'value'
p6773
(lp6774
S'uInt32'
p6775
ag22
aNtp6776
(S'reserved'
p6777
(lp6778
S'bool32'
p6779
ag22
aNtp6780
tp6781
tp6782
sS'DAQmxResetAIAccelSensitivity'
p6783
((lp6784
S'int32'
p6785
ag14
a((S'taskHandle'
p6786
(lp6787
S'TaskHandle'
p6788
aNtp6789
(S'channel'
p6790
(lp6791
S'char'
p6792
a(lp6793
I-1
aaNtp6794
tp6795
tp6796
sS'DAQmxResetCOCtrTimebaseDigFltrEnable'
p6797
((lp6798
S'int32'
p6799
ag14
a((S'taskHandle'
p6800
(lp6801
S'TaskHandle'
p6802
aNtp6803
(S'channel'
p6804
(lp6805
S'char'
p6806
a(lp6807
I-1
aaNtp6808
tp6809
tp6810
sS'DAQmxSetCICtrTimebaseSrc'
p6811
((lp6812
S'int32'
p6813
ag14
a((S'taskHandle'
p6814
(lp6815
S'TaskHandle'
p6816
aNtp6817
(S'channel'
p6818
(lp6819
S'char'
p6820
a(lp6821
I-1
aaNtp6822
(S'data'
p6823
(lp6824
S'char'
p6825
ag22
aNtp6826
tp6827
tp6828
sS'DAQmxResetCICountEdgesDirTerm'
p6829
((lp6830
S'int32'
p6831
ag14
a((S'taskHandle'
p6832
(lp6833
S'TaskHandle'
p6834
aNtp6835
(S'channel'
p6836
(lp6837
S'char'
p6838
a(lp6839
I-1
aaNtp6840
tp6841
tp6842
sS'DAQmxResetAIBridgeInitialVoltage'
p6843
((lp6844
S'int32'
p6845
ag14
a((S'taskHandle'
p6846
(lp6847
S'TaskHandle'
p6848
aNtp6849
(S'channel'
p6850
(lp6851
S'char'
p6852
a(lp6853
I-1
aaNtp6854
tp6855
tp6856
sS'DAQmxGetExportedHshkEventOutputTerm'
p6857
((lp6858
S'int32'
p6859
ag14
a((S'taskHandle'
p6860
(lp6861
S'TaskHandle'
p6862
aNtp6863
(S'data'
p6864
(lp6865
S'char'
p6866
ag22
aNtp6867
(S'bufferSize'
p6868
(lp6869
S'uInt32'
p6870
aNtp6871
tp6872
tp6873
sS'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p6874
((lp6875
S'int32'
p6876
ag14
a((S'taskHandle'
p6877
(lp6878
S'TaskHandle'
p6879
aNtp6880
(S'channel'
p6881
(lp6882
S'char'
p6883
a(lp6884
I-1
aaNtp6885
(S'data'
p6886
(lp6887
S'char'
p6888
ag22
aNtp6889
(S'bufferSize'
p6890
(lp6891
S'uInt32'
p6892
aNtp6893
tp6894
tp6895
sS'DAQmxSetCIPulseWidthTerm'
p6896
((lp6897
S'int32'
p6898
ag14
a((S'taskHandle'
p6899
(lp6900
S'TaskHandle'
p6901
aNtp6902
(S'channel'
p6903
(lp6904
S'char'
p6905
a(lp6906
I-1
aaNtp6907
(S'data'
p6908
(lp6909
S'char'
p6910
ag22
aNtp6911
tp6912
tp6913
sS'DAQmxSetExportedHshkEventInterlockedDeassertDelay'
p6914
((lp6915
S'int32'
p6916
ag14
a((S'taskHandle'
p6917
(lp6918
S'TaskHandle'
p6919
aNtp6920
(S'data'
p6921
(lp6922
S'float64'
p6923
aNtp6924
tp6925
tp6926
sS'DAQmxResetAIConvSrc'
p6927
((lp6928
S'int32'
p6929
ag14
a((S'taskHandle'
p6930
(lp6931
S'TaskHandle'
p6932
aNtp6933
tp6934
tp6935
sS'DAQmxSetCIDataXferMech'
p6936
((lp6937
S'int32'
p6938
ag14
a((S'taskHandle'
p6939
(lp6940
S'TaskHandle'
p6941
aNtp6942
(S'channel'
p6943
(lp6944
S'char'
p6945
a(lp6946
I-1
aaNtp6947
(S'data'
p6948
(lp6949
S'int32'
p6950
aNtp6951
tp6952
tp6953
sS'DAQmxCreateAIAccelChan'
p6954
((lp6955
S'int32'
p6956
ag14
a((S'taskHandle'
p6957
(lp6958
S'TaskHandle'
p6959
aNtp6960
(S'physicalChannel'
p6961
(lp6962
S'char'
p6963
a(lp6964
I-1
aaNtp6965
(S'nameToAssignToChannel'
p6966
(lp6967
S'char'
p6968
a(lp6969
I-1
aaNtp6970
(S'terminalConfig'
p6971
(lp6972
S'int32'
p6973
aNtp6974
(S'minVal'
p6975
(lp6976
S'float64'
p6977
aNtp6978
(S'maxVal'
p6979
(lp6980
S'float64'
p6981
aNtp6982
(S'units'
p6983
(lp6984
S'int32'
p6985
aNtp6986
(S'sensitivity'
p6987
(lp6988
S'float64'
p6989
aNtp6990
(S'sensitivityUnits'
p6991
(lp6992
S'int32'
p6993
aNtp6994
(S'currentExcitSource'
p6995
(lp6996
S'int32'
p6997
aNtp6998
(S'currentExcitVal'
p6999
(lp7000
S'float64'
p7001
aNtp7002
(S'customScaleName'
p7003
(lp7004
S'char'
p7005
a(lp7006
I-1
aaNtp7007
tp7008
tp7009
sS'DAQmxSetDIDigFltrEnable'
p7010
((lp7011
S'int32'
p7012
ag14
a((S'taskHandle'
p7013
(lp7014
S'TaskHandle'
p7015
aNtp7016
(S'channel'
p7017
(lp7018
S'char'
p7019
a(lp7020
I-1
aaNtp7021
(S'data'
p7022
(lp7023
S'bool32'
p7024
aNtp7025
tp7026
tp7027
sS'DAQmxGetAILowpassCutoffFreq'
p7028
((lp7029
S'int32'
p7030
ag14
a((S'taskHandle'
p7031
(lp7032
S'TaskHandle'
p7033
aNtp7034
(S'channel'
p7035
(lp7036
S'char'
p7037
a(lp7038
I-1
aaNtp7039
(S'data'
p7040
(lp7041
S'float64'
p7042
ag22
aNtp7043
tp7044
tp7045
sS'DAQmxResetHshkDelayAfterXfer'
p7046
((lp7047
S'int32'
p7048
ag14
a((S'taskHandle'
p7049
(lp7050
S'TaskHandle'
p7051
aNtp7052
tp7053
tp7054
sS'DAQmxWriteAnalogScalarF64'
p7055
((lp7056
S'int32'
p7057
ag14
a((S'taskHandle'
p7058
(lp7059
S'TaskHandle'
p7060
aNtp7061
(S'autoStart'
p7062
(lp7063
S'bool32'
p7064
aNtp7065
(S'timeout'
p7066
(lp7067
S'float64'
p7068
aNtp7069
(S'value'
p7070
(lp7071
S'float64'
p7072
aNtp7073
(S'reserved'
p7074
(lp7075
S'bool32'
p7076
ag22
aNtp7077
tp7078
tp7079
sS'DAQmxResetCOCtrTimebaseDigFltrTimebaseRate'
p7080
((lp7081
S'int32'
p7082
ag14
a((S'taskHandle'
p7083
(lp7084
S'TaskHandle'
p7085
aNtp7086
(S'channel'
p7087
(lp7088
S'char'
p7089
a(lp7090
I-1
aaNtp7091
tp7092
tp7093
sS'DAQmxGetWriteTotalSampPerChanGenerated'
p7094
((lp7095
S'int32'
p7096
ag14
a((S'taskHandle'
p7097
(lp7098
S'TaskHandle'
p7099
aNtp7100
(S'data'
p7101
(lp7102
S'uInt64'
p7103
ag22
aNtp7104
tp7105
tp7106
sS'DAQmxSetCIFreqTerm'
p7107
((lp7108
S'int32'
p7109
ag14
a((S'taskHandle'
p7110
(lp7111
S'TaskHandle'
p7112
aNtp7113
(S'channel'
p7114
(lp7115
S'char'
p7116
a(lp7117
I-1
aaNtp7118
(S'data'
p7119
(lp7120
S'char'
p7121
ag22
aNtp7122
tp7123
tp7124
sS'DAQmxSetCIPulseWidthUnits'
p7125
((lp7126
S'int32'
p7127
ag14
a((S'taskHandle'
p7128
(lp7129
S'TaskHandle'
p7130
aNtp7131
(S'channel'
p7132
(lp7133
S'char'
p7134
a(lp7135
I-1
aaNtp7136
(S'data'
p7137
(lp7138
S'int32'
p7139
aNtp7140
tp7141
tp7142
sS'DAQmxSetCIPeriodDigSyncEnable'
p7143
((lp7144
S'int32'
p7145
ag14
a((S'taskHandle'
p7146
(lp7147
S'TaskHandle'
p7148
aNtp7149
(S'channel'
p7150
(lp7151
S'char'
p7152
a(lp7153
I-1
aaNtp7154
(S'data'
p7155
(lp7156
S'bool32'
p7157
aNtp7158
tp7159
tp7160
sS'DAQmxResetCICountEdgesDigFltrTimebaseSrc'
p7161
((lp7162
S'int32'
p7163
ag14
a((S'taskHandle'
p7164
(lp7165
S'TaskHandle'
p7166
aNtp7167
(S'channel'
p7168
(lp7169
S'char'
p7170
a(lp7171
I-1
aaNtp7172
tp7173
tp7174
sS'DAQmxResetCIPulseWidthDigFltrEnable'
p7175
((lp7176
S'int32'
p7177
ag14
a((S'taskHandle'
p7178
(lp7179
S'TaskHandle'
p7180
aNtp7181
(S'channel'
p7182
(lp7183
S'char'
p7184
a(lp7185
I-1
aaNtp7186
tp7187
tp7188
sS'DAQmxResetSampClkTimebaseDiv'
p7189
((lp7190
S'int32'
p7191
ag14
a((S'taskHandle'
p7192
(lp7193
S'TaskHandle'
p7194
aNtp7195
tp7196
tp7197
sS'DAQmxResetAIExcitSrc'
p7198
((lp7199
S'int32'
p7200
ag14
a((S'taskHandle'
p7201
(lp7202
S'TaskHandle'
p7203
aNtp7204
(S'channel'
p7205
(lp7206
S'char'
p7207
a(lp7208
I-1
aaNtp7209
tp7210
tp7211
sS'DAQmxResetAnlgWinRefTrigWhen'
p7212
((lp7213
S'int32'
p7214
ag14
a((S'taskHandle'
p7215
(lp7216
S'TaskHandle'
p7217
aNtp7218
tp7219
tp7220
sS'DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc'
p7221
((lp7222
S'int32'
p7223
ag14
a((S'taskHandle'
p7224
(lp7225
S'TaskHandle'
p7226
aNtp7227
(S'channel'
p7228
(lp7229
S'char'
p7230
a(lp7231
I-1
aaNtp7232
tp7233
tp7234
sS'DAQmxSetAIChanCalVerifAcqVals'
p7235
((lp7236
S'int32'
p7237
ag14
a((S'taskHandle'
p7238
(lp7239
S'TaskHandle'
p7240
aNtp7241
(S'channel'
p7242
(lp7243
S'char'
p7244
a(lp7245
I-1
aaNtp7246
(S'data'
p7247
(lp7248
S'float64'
p7249
ag22
aNtp7250
(S'arraySizeInSamples'
p7251
(lp7252
S'uInt32'
p7253
aNtp7254
tp7255
tp7256
sS'DAQmxGetDIDataXferReqCond'
p7257
((lp7258
S'int32'
p7259
ag14
a((S'taskHandle'
p7260
(lp7261
S'TaskHandle'
p7262
aNtp7263
(S'channel'
p7264
(lp7265
S'char'
p7266
a(lp7267
I-1
aaNtp7268
(S'data'
p7269
(lp7270
S'int32'
p7271
ag22
aNtp7272
tp7273
tp7274
sS'DAQmxSwitchSetTopologyAndReset'
p7275
((lp7276
S'int32'
p7277
ag14
a((S'deviceName'
p7278
(lp7279
S'char'
p7280
a(lp7281
I-1
aaNtp7282
(S'newTopology'
p7283
(lp7284
S'char'
p7285
a(lp7286
I-1
aaNtp7287
tp7288
tp7289
sS'DAQmxGetAOCustomScaleName'
p7290
((lp7291
S'int32'
p7292
ag14
a((S'taskHandle'
p7293
(lp7294
S'TaskHandle'
p7295
aNtp7296
(S'channel'
p7297
(lp7298
S'char'
p7299
a(lp7300
I-1
aaNtp7301
(S'data'
p7302
(lp7303
S'char'
p7304
ag22
aNtp7305
(S'bufferSize'
p7306
(lp7307
S'uInt32'
p7308
aNtp7309
tp7310
tp7311
sS'DAQmxGetSwitchDevSettlingTime'
p7312
((lp7313
S'int32'
p7314
ag14
a((S'deviceName'
p7315
(lp7316
S'char'
p7317
a(lp7318
I-1
aaNtp7319
(S'data'
p7320
(lp7321
S'float64'
p7322
ag22
aNtp7323
tp7324
tp7325
sS'DAQmxGetAIBridgeCfg'
p7326
((lp7327
S'int32'
p7328
ag14
a((S'taskHandle'
p7329
(lp7330
S'TaskHandle'
p7331
aNtp7332
(S'channel'
p7333
(lp7334
S'char'
p7335
a(lp7336
I-1
aaNtp7337
(S'data'
p7338
(lp7339
S'int32'
p7340
ag22
aNtp7341
tp7342
tp7343
sS'DAQmxGetCIPrescaler'
p7344
((lp7345
S'int32'
p7346
ag14
a((S'taskHandle'
p7347
(lp7348
S'TaskHandle'
p7349
aNtp7350
(S'channel'
p7351
(lp7352
S'char'
p7353
a(lp7354
I-1
aaNtp7355
(S'data'
p7356
(lp7357
S'uInt32'
p7358
ag22
aNtp7359
tp7360
tp7361
sS'DAQmxCreateDOChan'
p7362
((lp7363
S'int32'
p7364
ag14
a((S'taskHandle'
p7365
(lp7366
S'TaskHandle'
p7367
aNtp7368
(S'lines'
p7369
(lp7370
S'char'
p7371
a(lp7372
I-1
aaNtp7373
(S'nameToAssignToLines'
p7374
(lp7375
S'char'
p7376
a(lp7377
I-1
aaNtp7378
(S'lineGrouping'
p7379
(lp7380
S'int32'
p7381
aNtp7382
tp7383
tp7384
sS'DAQmxGetSwitchChanMaxDCSwitchCurrent'
p7385
((lp7386
S'int32'
p7387
ag14
a((S'switchChannelName'
p7388
(lp7389
S'char'
p7390
a(lp7391
I-1
aaNtp7392
(S'data'
p7393
(lp7394
S'float64'
p7395
ag22
aNtp7396
tp7397
tp7398
sS'DAQmxResetAILowpassSwitchCapOutClkDiv'
p7399
((lp7400
S'int32'
p7401
ag14
a((S'taskHandle'
p7402
(lp7403
S'TaskHandle'
p7404
aNtp7405
(S'channel'
p7406
(lp7407
S'char'
p7408
a(lp7409
I-1
aaNtp7410
tp7411
tp7412
sS'DAQmxSetCOPulseTicksInitialDelay'
p7413
((lp7414
S'int32'
p7415
ag14
a((S'taskHandle'
p7416
(lp7417
S'TaskHandle'
p7418
aNtp7419
(S'channel'
p7420
(lp7421
S'char'
p7422
a(lp7423
I-1
aaNtp7424
(S'data'
p7425
(lp7426
S'uInt32'
p7427
aNtp7428
tp7429
tp7430
sS'DAQmxGetDigEdgeArmStartTrigDigFltrEnable'
p7431
((lp7432
S'int32'
p7433
ag14
a((S'taskHandle'
p7434
(lp7435
S'TaskHandle'
p7436
aNtp7437
(S'data'
p7438
(lp7439
S'bool32'
p7440
ag22
aNtp7441
tp7442
tp7443
sS'DAQmxResetCOPulseLowTime'
p7444
((lp7445
S'int32'
p7446
ag14
a((S'taskHandle'
p7447
(lp7448
S'TaskHandle'
p7449
aNtp7450
(S'channel'
p7451
(lp7452
S'char'
p7453
a(lp7454
I-1
aaNtp7455
tp7456
tp7457
sS'DAQmxResetCOPulseHighTime'
p7458
((lp7459
S'int32'
p7460
ag14
a((S'taskHandle'
p7461
(lp7462
S'TaskHandle'
p7463
aNtp7464
(S'channel'
p7465
(lp7466
S'char'
p7467
a(lp7468
I-1
aaNtp7469
tp7470
tp7471
sS'DAQmxGetOnDemandSimultaneousAOEnable'
p7472
((lp7473
S'int32'
p7474
ag14
a((S'taskHandle'
p7475
(lp7476
S'TaskHandle'
p7477
aNtp7478
(S'data'
p7479
(lp7480
S'bool32'
p7481
ag22
aNtp7482
tp7483
tp7484
sS'DAQmxSetScalePreScaledUnits'
p7485
((lp7486
S'int32'
p7487
ag14
a((S'scaleName'
p7488
(lp7489
S'char'
p7490
a(lp7491
I-1
aaNtp7492
(S'data'
p7493
(lp7494
S'int32'
p7495
aNtp7496
tp7497
tp7498
sS'DAQmxSetAnlgWinPauseTrigTop'
p7499
((lp7500
S'int32'
p7501
ag14
a((S'taskHandle'
p7502
(lp7503
S'TaskHandle'
p7504
aNtp7505
(S'data'
p7506
(lp7507
S'float64'
p7508
aNtp7509
tp7510
tp7511
sS'DAQmxGetAOMax'
p7512
((lp7513
S'int32'
p7514
ag14
a((S'taskHandle'
p7515
(lp7516
S'TaskHandle'
p7517
aNtp7518
(S'channel'
p7519
(lp7520
S'char'
p7521
a(lp7522
I-1
aaNtp7523
(S'data'
p7524
(lp7525
S'float64'
p7526
ag22
aNtp7527
tp7528
tp7529
sS'DAQmxDisableAdvTrig'
p7530
((lp7531
S'int32'
p7532
ag14
a((S'taskHandle'
p7533
(lp7534
S'TaskHandle'
p7535
aNtp7536
tp7537
tp7538
sS'DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc'
p7539
((lp7540
S'int32'
p7541
ag14
a((S'taskHandle'
p7542
(lp7543
S'TaskHandle'
p7544
aNtp7545
(S'data'
p7546
(lp7547
S'char'
p7548
ag22
aNtp7549
tp7550
tp7551
sS'DAQmxSetCICountEdgesActiveEdge'
p7552
((lp7553
S'int32'
p7554
ag14
a((S'taskHandle'
p7555
(lp7556
S'TaskHandle'
p7557
aNtp7558
(S'channel'
p7559
(lp7560
S'char'
p7561
a(lp7562
I-1
aaNtp7563
(S'data'
p7564
(lp7565
S'int32'
p7566
aNtp7567
tp7568
tp7569
sS'DAQmxGetAIRawSampJustification'
p7570
((lp7571
S'int32'
p7572
ag14
a((S'taskHandle'
p7573
(lp7574
S'TaskHandle'
p7575
aNtp7576
(S'channel'
p7577
(lp7578
S'char'
p7579
a(lp7580
I-1
aaNtp7581
(S'data'
p7582
(lp7583
S'int32'
p7584
ag22
aNtp7585
tp7586
tp7587
sS'DAQmxGetAODACOffsetSrc'
p7588
((lp7589
S'int32'
p7590
ag14
a((S'taskHandle'
p7591
(lp7592
S'TaskHandle'
p7593
aNtp7594
(S'channel'
p7595
(lp7596
S'char'
p7597
a(lp7598
I-1
aaNtp7599
(S'data'
p7600
(lp7601
S'int32'
p7602
ag22
aNtp7603
tp7604
tp7605
sS'DAQmxSetAICoupling'
p7606
((lp7607
S'int32'
p7608
ag14
a((S'taskHandle'
p7609
(lp7610
S'TaskHandle'
p7611
aNtp7612
(S'channel'
p7613
(lp7614
S'char'
p7615
a(lp7616
I-1
aaNtp7617
(S'data'
p7618
(lp7619
S'int32'
p7620
aNtp7621
tp7622
tp7623
sS'DAQmxResetCIPulseWidthTerm'
p7624
((lp7625
S'int32'
p7626
ag14
a((S'taskHandle'
p7627
(lp7628
S'TaskHandle'
p7629
aNtp7630
(S'channel'
p7631
(lp7632
S'char'
p7633
a(lp7634
I-1
aaNtp7635
tp7636
tp7637
sS'DAQmxResetExportedAdvCmpltEventPulsePolarity'
p7638
((lp7639
S'int32'
p7640
ag14
a((S'taskHandle'
p7641
(lp7642
S'TaskHandle'
p7643
aNtp7644
tp7645
tp7646
sS'DAQmxResetAODACRefSrc'
p7647
((lp7648
S'int32'
p7649
ag14
a((S'taskHandle'
p7650
(lp7651
S'TaskHandle'
p7652
aNtp7653
(S'channel'
p7654
(lp7655
S'char'
p7656
a(lp7657
I-1
aaNtp7658
tp7659
tp7660
sS'DAQmxResetExportedSampClkPulsePolarity'
p7661
((lp7662
S'int32'
p7663
ag14
a((S'taskHandle'
p7664
(lp7665
S'TaskHandle'
p7666
aNtp7667
tp7668
tp7669
sS'DAQmxResetExportedSampClkTimebaseOutputTerm'
p7670
((lp7671
S'int32'
p7672
ag14
a((S'taskHandle'
p7673
(lp7674
S'TaskHandle'
p7675
aNtp7676
tp7677
tp7678
sS'DAQmxResetAIChanCalVerifRefVals'
p7679
((lp7680
S'int32'
p7681
ag14
a((S'taskHandle'
p7682
(lp7683
S'TaskHandle'
p7684
aNtp7685
(S'channel'
p7686
(lp7687
S'char'
p7688
a(lp7689
I-1
aaNtp7690
tp7691
tp7692
sS'DAQmxSetReadChannelsToRead'
p7693
((lp7694
S'int32'
p7695
ag14
a((S'taskHandle'
p7696
(lp7697
S'TaskHandle'
p7698
aNtp7699
(S'data'
p7700
(lp7701
S'char'
p7702
ag22
aNtp7703
tp7704
tp7705
sS'DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate'
p7706
((lp7707
S'int32'
p7708
ag14
a((S'taskHandle'
p7709
(lp7710
S'TaskHandle'
p7711
aNtp7712
tp7713
tp7714
sS'DAQmxSetAIExcitSrc'
p7715
((lp7716
S'int32'
p7717
ag14
a((S'taskHandle'
p7718
(lp7719
S'TaskHandle'
p7720
aNtp7721
(S'channel'
p7722
(lp7723
S'char'
p7724
a(lp7725
I-1
aaNtp7726
(S'data'
p7727
(lp7728
S'int32'
p7729
aNtp7730
tp7731
tp7732
sS'DAQmxWaitForNextSampleClock'
p7733
((lp7734
S'int32'
p7735
ag14
a((S'taskHandle'
p7736
(lp7737
S'TaskHandle'
p7738
aNtp7739
(S'timeout'
p7740
(lp7741
S'float64'
p7742
aNtp7743
(S'isLate'
p7744
(lp7745
S'bool32'
p7746
ag22
aNtp7747
tp7748
tp7749
sS'DAQmxGetSwitchChanImpedance'
p7750
((lp7751
S'int32'
p7752
ag14
a((S'switchChannelName'
p7753
(lp7754
S'char'
p7755
a(lp7756
I-1
aaNtp7757
(S'data'
p7758
(lp7759
S'float64'
p7760
ag22
aNtp7761
tp7762
tp7763
sS'DAQmxGetCIPeriodMeasMeth'
p7764
((lp7765
S'int32'
p7766
ag14
a((S'taskHandle'
p7767
(lp7768
S'TaskHandle'
p7769
aNtp7770
(S'channel'
p7771
(lp7772
S'char'
p7773
a(lp7774
I-1
aaNtp7775
(S'data'
p7776
(lp7777
S'int32'
p7778
ag22
aNtp7779
tp7780
tp7781
sS'DAQmxResetCICtrTimebaseActiveEdge'
p7782
((lp7783
S'int32'
p7784
ag14
a((S'taskHandle'
p7785
(lp7786
S'TaskHandle'
p7787
aNtp7788
(S'channel'
p7789
(lp7790
S'char'
p7791
a(lp7792
I-1
aaNtp7793
tp7794
tp7795
sS'DAQmxSetAnlgWinRefTrigBtm'
p7796
((lp7797
S'int32'
p7798
ag14
a((S'taskHandle'
p7799
(lp7800
S'TaskHandle'
p7801
aNtp7802
(S'data'
p7803
(lp7804
S'float64'
p7805
aNtp7806
tp7807
tp7808
sS'DAQmxSetDigEdgeAdvTrigEdge'
p7809
((lp7810
S'int32'
p7811
ag14
a((S'taskHandle'
p7812
(lp7813
S'TaskHandle'
p7814
aNtp7815
(S'data'
p7816
(lp7817
S'int32'
p7818
aNtp7819
tp7820
tp7821
sS'DAQmxCfgImplicitTiming'
p7822
((lp7823
S'int32'
p7824
ag14
a((S'taskHandle'
p7825
(lp7826
S'TaskHandle'
p7827
aNtp7828
(S'sampleMode'
p7829
(lp7830
S'int32'
p7831
aNtp7832
(S'sampsPerChan'
p7833
(lp7834
S'uInt64'
p7835
aNtp7836
tp7837
tp7838
sS'DAQmxGetExportedHshkEventInterlockedAssertOnStart'
p7839
((lp7840
S'int32'
p7841
ag14
a((S'taskHandle'
p7842
(lp7843
S'TaskHandle'
p7844
aNtp7845
(S'data'
p7846
(lp7847
S'bool32'
p7848
ag22
aNtp7849
tp7850
tp7851
sS'DAQmxSetCOCtrTimebaseDigFltrTimebaseRate'
p7852
((lp7853
S'int32'
p7854
ag14
a((S'taskHandle'
p7855
(lp7856
S'TaskHandle'
p7857
aNtp7858
(S'channel'
p7859
(lp7860
S'char'
p7861
a(lp7862
I-1
aaNtp7863
(S'data'
p7864
(lp7865
S'float64'
p7866
aNtp7867
tp7868
tp7869
sS'DAQmxSetCIPeriodMeasTime'
p7870
((lp7871
S'int32'
p7872
ag14
a((S'taskHandle'
p7873
(lp7874
S'TaskHandle'
p7875
aNtp7876
(S'channel'
p7877
(lp7878
S'char'
p7879
a(lp7880
I-1
aaNtp7881
(S'data'
p7882
(lp7883
S'float64'
p7884
aNtp7885
tp7886
tp7887
sS'DAQmxSetAIRngLow'
p7888
((lp7889
S'int32'
p7890
ag14
a((S'taskHandle'
p7891
(lp7892
S'TaskHandle'
p7893
aNtp7894
(S'channel'
p7895
(lp7896
S'char'
p7897
a(lp7898
I-1
aaNtp7899
(S'data'
p7900
(lp7901
S'float64'
p7902
aNtp7903
tp7904
tp7905
sS'DAQmxResetRefClkSrc'
p7906
((lp7907
S'int32'
p7908
ag14
a((S'taskHandle'
p7909
(lp7910
S'TaskHandle'
p7911
aNtp7912
tp7913
tp7914
sS'DAQmxGetAODACRefSrc'
p7915
((lp7916
S'int32'
p7917
ag14
a((S'taskHandle'
p7918
(lp7919
S'TaskHandle'
p7920
aNtp7921
(S'channel'
p7922
(lp7923
S'char'
p7924
a(lp7925
I-1
aaNtp7926
(S'data'
p7927
(lp7928
S'int32'
p7929
ag22
aNtp7930
tp7931
tp7932
sS'DAQmxSetAnlgEdgeRefTrigLvl'
p7933
((lp7934
S'int32'
p7935
ag14
a((S'taskHandle'
p7936
(lp7937
S'TaskHandle'
p7938
aNtp7939
(S'data'
p7940
(lp7941
S'float64'
p7942
aNtp7943
tp7944
tp7945
sS'DAQmxCreateAIVoltageChan'
p7946
((lp7947
S'int32'
p7948
ag14
a((S'taskHandle'
p7949
(lp7950
S'TaskHandle'
p7951
aNtp7952
(S'physicalChannel'
p7953
(lp7954
S'char'
p7955
a(lp7956
I-1
aaNtp7957
(S'nameToAssignToChannel'
p7958
(lp7959
S'char'
p7960
a(lp7961
I-1
aaNtp7962
(S'terminalConfig'
p7963
(lp7964
S'int32'
p7965
aNtp7966
(S'minVal'
p7967
(lp7968
S'float64'
p7969
aNtp7970
(S'maxVal'
p7971
(lp7972
S'float64'
p7973
aNtp7974
(S'units'
p7975
(lp7976
S'int32'
p7977
aNtp7978
(S'customScaleName'
p7979
(lp7980
S'char'
p7981
a(lp7982
I-1
aaNtp7983
tp7984
tp7985
sS'DAQmxGetCITimestampUnits'
p7986
((lp7987
S'int32'
p7988
ag14
a((S'taskHandle'
p7989
(lp7990
S'TaskHandle'
p7991
aNtp7992
(S'channel'
p7993
(lp7994
S'char'
p7995
a(lp7996
I-1
aaNtp7997
(S'data'
p7998
(lp7999
S'int32'
p8000
ag22
aNtp8001
tp8002
tp8003
sS'DAQmxGetAILowpassSwitchCapExtClkFreq'
p8004
((lp8005
S'int32'
p8006
ag14
a((S'taskHandle'
p8007
(lp8008
S'TaskHandle'
p8009
aNtp8010
(S'channel'
p8011
(lp8012
S'char'
p8013
a(lp8014
I-1
aaNtp8015
(S'data'
p8016
(lp8017
S'float64'
p8018
ag22
aNtp8019
tp8020
tp8021
sS'DAQmxGetChangeDetectDIFallingEdgePhysicalChans'
p8022
((lp8023
S'int32'
p8024
ag14
a((S'taskHandle'
p8025
(lp8026
S'TaskHandle'
p8027
aNtp8028
(S'data'
p8029
(lp8030
S'char'
p8031
ag22
aNtp8032
(S'bufferSize'
p8033
(lp8034
S'uInt32'
p8035
aNtp8036
tp8037
tp8038
sS'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate'
p8039
((lp8040
S'int32'
p8041
ag14
a((S'taskHandle'
p8042
(lp8043
S'TaskHandle'
p8044
aNtp8045
(S'data'
p8046
(lp8047
S'float64'
p8048
ag22
aNtp8049
tp8050
tp8051
sS'DAQmxGetDevPCIBusNum'
p8052
((lp8053
S'int32'
p8054
ag14
a((S'device'
p8055
(lp8056
S'char'
p8057
a(lp8058
I-1
aaNtp8059
(S'data'
p8060
(lp8061
S'uInt32'
p8062
ag22
aNtp8063
tp8064
tp8065
sS'DAQmxSetCIPeriodStartingEdge'
p8066
((lp8067
S'int32'
p8068
ag14
a((S'taskHandle'
p8069
(lp8070
S'TaskHandle'
p8071
aNtp8072
(S'channel'
p8073
(lp8074
S'char'
p8075
a(lp8076
I-1
aaNtp8077
(S'data'
p8078
(lp8079
S'int32'
p8080
aNtp8081
tp8082
tp8083
sS'DAQmxSetExportedChangeDetectEventPulsePolarity'
p8084
((lp8085
S'int32'
p8086
ag14
a((S'taskHandle'
p8087
(lp8088
S'TaskHandle'
p8089
aNtp8090
(S'data'
p8091
(lp8092
S'int32'
p8093
aNtp8094
tp8095
tp8096
sS'DAQmxGetDevProductNum'
p8097
((lp8098
S'int32'
p8099
ag14
a((S'device'
p8100
(lp8101
S'char'
p8102
a(lp8103
I-1
aaNtp8104
(S'data'
p8105
(lp8106
S'uInt32'
p8107
ag22
aNtp8108
tp8109
tp8110
sS'DAQmxResetCITimestampUnits'
p8111
((lp8112
S'int32'
p8113
ag14
a((S'taskHandle'
p8114
(lp8115
S'TaskHandle'
p8116
aNtp8117
(S'channel'
p8118
(lp8119
S'char'
p8120
a(lp8121
I-1
aaNtp8122
tp8123
tp8124
sS'DAQmxGetDevCIPhysicalChans'
p8125
((lp8126
S'int32'
p8127
ag14
a((S'device'
p8128
(lp8129
S'char'
p8130
a(lp8131
I-1
aaNtp8132
(S'data'
p8133
(lp8134
S'char'
p8135
ag22
aNtp8136
(S'bufferSize'
p8137
(lp8138
S'uInt32'
p8139
aNtp8140
tp8141
tp8142
sS'DAQmxGetCICountEdgesDigFltrTimebaseSrc'
p8143
((lp8144
S'int32'
p8145
ag14
a((S'taskHandle'
p8146
(lp8147
S'TaskHandle'
p8148
aNtp8149
(S'channel'
p8150
(lp8151
S'char'
p8152
a(lp8153
I-1
aaNtp8154
(S'data'
p8155
(lp8156
S'char'
p8157
ag22
aNtp8158
(S'bufferSize'
p8159
(lp8160
S'uInt32'
p8161
aNtp8162
tp8163
tp8164
sS'DAQmxGetExportedAdvCmpltEventPulseWidth'
p8165
((lp8166
S'int32'
p8167
ag14
a((S'taskHandle'
p8168
(lp8169
S'TaskHandle'
p8170
aNtp8171
(S'data'
p8172
(lp8173
S'float64'
p8174
ag22
aNtp8175
tp8176
tp8177
sS'DAQmxGetAIDitherEnable'
p8178
((lp8179
S'int32'
p8180
ag14
a((S'taskHandle'
p8181
(lp8182
S'TaskHandle'
p8183
aNtp8184
(S'channel'
p8185
(lp8186
S'char'
p8187
a(lp8188
I-1
aaNtp8189
(S'data'
p8190
(lp8191
S'bool32'
p8192
ag22
aNtp8193
tp8194
tp8195
sS'DAQmxResetCIPeriodDigSyncEnable'
p8196
((lp8197
S'int32'
p8198
ag14
a((S'taskHandle'
p8199
(lp8200
S'TaskHandle'
p8201
aNtp8202
(S'channel'
p8203
(lp8204
S'char'
p8205
a(lp8206
I-1
aaNtp8207
tp8208
tp8209
sS'DAQmxSetCOCtrTimebaseDigFltrEnable'
p8210
((lp8211
S'int32'
p8212
ag14
a((S'taskHandle'
p8213
(lp8214
S'TaskHandle'
p8215
aNtp8216
(S'channel'
p8217
(lp8218
S'char'
p8219
a(lp8220
I-1
aaNtp8221
(S'data'
p8222
(lp8223
S'bool32'
p8224
aNtp8225
tp8226
tp8227
sS'DAQmxSetAIFreqUnits'
p8228
((lp8229
S'int32'
p8230
ag14
a((S'taskHandle'
p8231
(lp8232
S'TaskHandle'
p8233
aNtp8234
(S'channel'
p8235
(lp8236
S'char'
p8237
a(lp8238
I-1
aaNtp8239
(S'data'
p8240
(lp8241
S'int32'
p8242
aNtp8243
tp8244
tp8245
sS'DAQmxSetAIStrainGageCfg'
p8246
((lp8247
S'int32'
p8248
ag14
a((S'taskHandle'
p8249
(lp8250
S'TaskHandle'
p8251
aNtp8252
(S'channel'
p8253
(lp8254
S'char'
p8255
a(lp8256
I-1
aaNtp8257
(S'data'
p8258
(lp8259
S'int32'
p8260
aNtp8261
tp8262
tp8263
sS'DAQmxResetWatchdogTimeout'
p8264
((lp8265
S'int32'
p8266
ag14
a((S'taskHandle'
p8267
(lp8268
S'TaskHandle'
p8269
aNtp8270
tp8271
tp8272
sS'DAQmxResetAIDitherEnable'
p8273
((lp8274
S'int32'
p8275
ag14
a((S'taskHandle'
p8276
(lp8277
S'TaskHandle'
p8278
aNtp8279
(S'channel'
p8280
(lp8281
S'char'
p8282
a(lp8283
I-1
aaNtp8284
tp8285
tp8286
sS'DAQmxGetAISampAndHoldEnable'
p8287
((lp8288
S'int32'
p8289
ag14
a((S'taskHandle'
p8290
(lp8291
S'TaskHandle'
p8292
aNtp8293
(S'channel'
p8294
(lp8295
S'char'
p8296
a(lp8297
I-1
aaNtp8298
(S'data'
p8299
(lp8300
S'bool32'
p8301
ag22
aNtp8302
tp8303
tp8304
sS'DAQmxGetDigEdgeStartTrigSrc'
p8305
((lp8306
S'int32'
p8307
ag14
a((S'taskHandle'
p8308
(lp8309
S'TaskHandle'
p8310
aNtp8311
(S'data'
p8312
(lp8313
S'char'
p8314
ag22
aNtp8315
(S'bufferSize'
p8316
(lp8317
S'uInt32'
p8318
aNtp8319
tp8320
tp8321
sS'DAQmxSetCOPulseHighTicks'
p8322
((lp8323
S'int32'
p8324
ag14
a((S'taskHandle'
p8325
(lp8326
S'TaskHandle'
p8327
aNtp8328
(S'channel'
p8329
(lp8330
S'char'
p8331
a(lp8332
I-1
aaNtp8333
(S'data'
p8334
(lp8335
S'uInt32'
p8336
aNtp8337
tp8338
tp8339
sS'DAQmxWriteBinaryU16'
p8340
((lp8341
S'int32'
p8342
ag14
a((S'taskHandle'
p8343
(lp8344
S'TaskHandle'
p8345
aNtp8346
(S'numSampsPerChan'
p8347
(lp8348
S'int32'
p8349
aNtp8350
(S'autoStart'
p8351
(lp8352
S'bool32'
p8353
aNtp8354
(S'timeout'
p8355
(lp8356
S'float64'
p8357
aNtp8358
(S'dataLayout'
p8359
(lp8360
S'bool32'
p8361
aNtp8362
(S'writeArray'
p8363
(lp8364
S'uInt16'
p8365
a(lp8366
I-1
aaNtp8367
(S'sampsPerChanWritten'
p8368
(lp8369
S'int32'
p8370
ag22
aNtp8371
(S'reserved'
p8372
(lp8373
S'bool32'
p8374
ag22
aNtp8375
tp8376
tp8377
sS'DAQmxSetAIChanCalPolyForwardCoeff'
p8378
((lp8379
S'int32'
p8380
ag14
a((S'taskHandle'
p8381
(lp8382
S'TaskHandle'
p8383
aNtp8384
(S'channel'
p8385
(lp8386
S'char'
p8387
a(lp8388
I-1
aaNtp8389
(S'data'
p8390
(lp8391
S'float64'
p8392
ag22
aNtp8393
(S'arraySizeInSamples'
p8394
(lp8395
S'uInt32'
p8396
aNtp8397
tp8398
tp8399
sS'DAQmxGetAIConvActiveEdge'
p8400
((lp8401
S'int32'
p8402
ag14
a((S'taskHandle'
p8403
(lp8404
S'TaskHandle'
p8405
aNtp8406
(S'data'
p8407
(lp8408
S'int32'
p8409
ag22
aNtp8410
tp8411
tp8412
sS'DAQmxSetCICountEdgesDigSyncEnable'
p8413
((lp8414
S'int32'
p8415
ag14
a((S'taskHandle'
p8416
(lp8417
S'TaskHandle'
p8418
aNtp8419
(S'channel'
p8420
(lp8421
S'char'
p8422
a(lp8423
I-1
aaNtp8424
(S'data'
p8425
(lp8426
S'bool32'
p8427
aNtp8428
tp8429
tp8430
sS'DAQmxCfgAnlgEdgeStartTrig'
p8431
((lp8432
S'int32'
p8433
ag14
a((S'taskHandle'
p8434
(lp8435
S'TaskHandle'
p8436
aNtp8437
(S'triggerSource'
p8438
(lp8439
S'char'
p8440
a(lp8441
I-1
aaNtp8442
(S'triggerSlope'
p8443
(lp8444
S'int32'
p8445
aNtp8446
(S'triggerLevel'
p8447
(lp8448
S'float64'
p8449
aNtp8450
tp8451
tp8452
sS'DAQmxSetCalUserDefinedInfo'
p8453
((lp8454
S'int32'
p8455
ag14
a((S'deviceName'
p8456
(lp8457
S'char'
p8458
a(lp8459
I-1
aaNtp8460
(S'data'
p8461
(lp8462
S'char'
p8463
ag22
aNtp8464
tp8465
tp8466
sS'DAQmxGetReadDigitalLinesBytesPerChan'
p8467
((lp8468
S'int32'
p8469
ag14
a((S'taskHandle'
p8470
(lp8471
S'TaskHandle'
p8472
aNtp8473
(S'data'
p8474
(lp8475
S'uInt32'
p8476
ag22
aNtp8477
tp8478
tp8479
sS'DAQmxResetAIConvTimebaseDiv'
p8480
((lp8481
S'int32'
p8482
ag14
a((S'taskHandle'
p8483
(lp8484
S'TaskHandle'
p8485
aNtp8486
tp8487
tp8488
sS'DAQmxGetPhysicalChanTEDSModelNum'
p8489
((lp8490
S'int32'
p8491
ag14
a((S'physicalChannel'
p8492
(lp8493
S'char'
p8494
a(lp8495
I-1
aaNtp8496
(S'data'
p8497
(lp8498
S'uInt32'
p8499
ag22
aNtp8500
tp8501
tp8502
sS'DAQmxGetSampClkDigSyncEnable'
p8503
((lp8504
S'int32'
p8505
ag14
a((S'taskHandle'
p8506
(lp8507
S'TaskHandle'
p8508
aNtp8509
(S'data'
p8510
(lp8511
S'bool32'
p8512
ag22
aNtp8513
tp8514
tp8515
sS'DAQmxGetSwitchChanMaxACSwitchPwr'
p8516
((lp8517
S'int32'
p8518
ag14
a((S'switchChannelName'
p8519
(lp8520
S'char'
p8521
a(lp8522
I-1
aaNtp8523
(S'data'
p8524
(lp8525
S'float64'
p8526
ag22
aNtp8527
tp8528
tp8529
sS'DAQmxSetAIAccelSensitivityUnits'
p8530
((lp8531
S'int32'
p8532
ag14
a((S'taskHandle'
p8533
(lp8534
S'TaskHandle'
p8535
aNtp8536
(S'channel'
p8537
(lp8538
S'char'
p8539
a(lp8540
I-1
aaNtp8541
(S'data'
p8542
(lp8543
S'int32'
p8544
aNtp8545
tp8546
tp8547
sS'DAQmxResetAnlgWinPauseTrigBtm'
p8548
((lp8549
S'int32'
p8550
ag14
a((S'taskHandle'
p8551
(lp8552
S'TaskHandle'
p8553
aNtp8554
tp8555
tp8556
sS'DAQmxResetWriteRelativeTo'
p8557
((lp8558
S'int32'
p8559
ag14
a((S'taskHandle'
p8560
(lp8561
S'TaskHandle'
p8562
aNtp8563
tp8564
tp8565
sS'DAQmxResetAIExcitActualVal'
p8566
((lp8567
S'int32'
p8568
ag14
a((S'taskHandle'
p8569
(lp8570
S'TaskHandle'
p8571
aNtp8572
(S'channel'
p8573
(lp8574
S'char'
p8575
a(lp8576
I-1
aaNtp8577
tp8578
tp8579
sS'DAQmxSetSampClkTimebaseSrc'
p8580
((lp8581
S'int32'
p8582
ag14
a((S'taskHandle'
p8583
(lp8584
S'TaskHandle'
p8585
aNtp8586
(S'data'
p8587
(lp8588
S'char'
p8589
ag22
aNtp8590
tp8591
tp8592
sS'DAQmxResetChangeDetectDIRisingEdgePhysicalChans'
p8593
((lp8594
S'int32'
p8595
ag14
a((S'taskHandle'
p8596
(lp8597
S'TaskHandle'
p8598
aNtp8599
tp8600
tp8601
sS'DAQmxGetExportedSampClkPulsePolarity'
p8602
((lp8603
S'int32'
p8604
ag14
a((S'taskHandle'
p8605
(lp8606
S'TaskHandle'
p8607
aNtp8608
(S'data'
p8609
(lp8610
S'int32'
p8611
ag22
aNtp8612
tp8613
tp8614
sS'DAQmxGetSwitchChanMaxDCSwitchPwr'
p8615
((lp8616
S'int32'
p8617
ag14
a((S'switchChannelName'
p8618
(lp8619
S'char'
p8620
a(lp8621
I-1
aaNtp8622
(S'data'
p8623
(lp8624
S'float64'
p8625
ag22
aNtp8626
tp8627
tp8628
sS'DAQmxGetDigEdgeStartTrigEdge'
p8629
((lp8630
S'int32'
p8631
ag14
a((S'taskHandle'
p8632
(lp8633
S'TaskHandle'
p8634
aNtp8635
(S'data'
p8636
(lp8637
S'int32'
p8638
ag22
aNtp8639
tp8640
tp8641
sS'DAQmxIsReadOrWriteLate'
p8642
((lp8643
S'bool32'
p8644
ag14
a((S'errorCode'
p8645
(lp8646
S'int32'
p8647
aNtp8648
tp8649
tp8650
sS'DAQmxGetDigEdgeArmStartTrigDigSyncEnable'
p8651
((lp8652
S'int32'
p8653
ag14
a((S'taskHandle'
p8654
(lp8655
S'TaskHandle'
p8656
aNtp8657
(S'data'
p8658
(lp8659
S'bool32'
p8660
ag22
aNtp8661
tp8662
tp8663
sS'DAQmxSetAnlgWinRefTrigSrc'
p8664
((lp8665
S'int32'
p8666
ag14
a((S'taskHandle'
p8667
(lp8668
S'TaskHandle'
p8669
aNtp8670
(S'data'
p8671
(lp8672
S'char'
p8673
ag22
aNtp8674
tp8675
tp8676
sS'DAQmxGetExportedCtrOutEventPulsePolarity'
p8677
((lp8678
S'int32'
p8679
ag14
a((S'taskHandle'
p8680
(lp8681
S'TaskHandle'
p8682
aNtp8683
(S'data'
p8684
(lp8685
S'int32'
p8686
ag22
aNtp8687
tp8688
tp8689
sS'DAQmxSetCIFreqMeasMeth'
p8690
((lp8691
S'int32'
p8692
ag14
a((S'taskHandle'
p8693
(lp8694
S'TaskHandle'
p8695
aNtp8696
(S'channel'
p8697
(lp8698
S'char'
p8699
a(lp8700
I-1
aaNtp8701
(S'data'
p8702
(lp8703
S'int32'
p8704
aNtp8705
tp8706
tp8707
sS'DAQmxResetAIChanCalTablePreScaledVals'
p8708
((lp8709
S'int32'
p8710
ag14
a((S'taskHandle'
p8711
(lp8712
S'TaskHandle'
p8713
aNtp8714
(S'channel'
p8715
(lp8716
S'char'
p8717
a(lp8718
I-1
aaNtp8719
tp8720
tp8721
sS'DAQmxResetAIConvActiveEdge'
p8722
((lp8723
S'int32'
p8724
ag14
a((S'taskHandle'
p8725
(lp8726
S'TaskHandle'
p8727
aNtp8728
tp8729
tp8730
sS'DAQmxGetScaleLinYIntercept'
p8731
((lp8732
S'int32'
p8733
ag14
a((S'scaleName'
p8734
(lp8735
S'char'
p8736
a(lp8737
I-1
aaNtp8738
(S'data'
p8739
(lp8740
S'float64'
p8741
ag22
aNtp8742
tp8743
tp8744
sS'DAQmxAdjust1102Cal'
p8745
((lp8746
S'int32'
p8747
ag14
a((S'calHandle'
p8748
(lp8749
S'uInt32'
p8750
aNtp8751
(S'refVoltage'
p8752
(lp8753
S'float64'
p8754
aNtp8755
(S'measOutput'
p8756
(lp8757
S'float64'
p8758
aNtp8759
tp8760
tp8761
sS'DAQmxGetCICtrTimebaseActiveEdge'
p8762
((lp8763
S'int32'
p8764
ag14
a((S'taskHandle'
p8765
(lp8766
S'TaskHandle'
p8767
aNtp8768
(S'channel'
p8769
(lp8770
S'char'
p8771
a(lp8772
I-1
aaNtp8773
(S'data'
p8774
(lp8775
S'int32'
p8776
ag22
aNtp8777
tp8778
tp8779
sS'DAQmxResetCICtrTimebaseSrc'
p8780
((lp8781
S'int32'
p8782
ag14
a((S'taskHandle'
p8783
(lp8784
S'TaskHandle'
p8785
aNtp8786
(S'channel'
p8787
(lp8788
S'char'
p8789
a(lp8790
I-1
aaNtp8791
tp8792
tp8793
sS'DAQmxResetBufOutputOnbrdBufSize'
p8794
((lp8795
S'int32'
p8796
ag14
a((S'taskHandle'
p8797
(lp8798
S'TaskHandle'
p8799
aNtp8800
tp8801
tp8802
sS'DAQmxSetDelayFromSampClkDelayUnits'
p8803
((lp8804
S'int32'
p8805
ag14
a((S'taskHandle'
p8806
(lp8807
S'TaskHandle'
p8808
aNtp8809
(S'data'
p8810
(lp8811
S'int32'
p8812
aNtp8813
tp8814
tp8815
sS'DAQmxSetAIChanCalCalDate'
p8816
((lp8817
S'int32'
p8818
ag14
a((S'taskHandle'
p8819
(lp8820
S'TaskHandle'
p8821
aNtp8822
(S'channelName'
p8823
(lp8824
S'char'
p8825
a(lp8826
I-1
aaNtp8827
(S'year'
p8828
(lp8829
S'uInt32'
p8830
aNtp8831
(S'month'
p8832
(lp8833
S'uInt32'
p8834
aNtp8835
(S'day'
p8836
(lp8837
S'uInt32'
p8838
aNtp8839
(S'hour'
p8840
(lp8841
S'uInt32'
p8842
aNtp8843
(S'minute'
p8844
(lp8845
S'uInt32'
p8846
aNtp8847
tp8848
tp8849
sS'DAQmxSetScaleMapPreScaledMax'
p8850
((lp8851
S'int32'
p8852
ag14
a((S'scaleName'
p8853
(lp8854
S'char'
p8855
a(lp8856
I-1
aaNtp8857
(S'data'
p8858
(lp8859
S'float64'
p8860
aNtp8861
tp8862
tp8863
sS'DAQmxGetBufOutputOnbrdBufSize'
p8864
((lp8865
S'int32'
p8866
ag14
a((S'taskHandle'
p8867
(lp8868
S'TaskHandle'
p8869
aNtp8870
(S'data'
p8871
(lp8872
S'uInt32'
p8873
ag22
aNtp8874
tp8875
tp8876
sS'DAQmxSetDITristate'
p8877
((lp8878
S'int32'
p8879
ag14
a((S'taskHandle'
p8880
(lp8881
S'TaskHandle'
p8882
aNtp8883
(S'channel'
p8884
(lp8885
S'char'
p8886
a(lp8887
I-1
aaNtp8888
(S'data'
p8889
(lp8890
S'bool32'
p8891
aNtp8892
tp8893
tp8894
sS'DAQmxSetCIAngEncoderInitialAngle'
p8895
((lp8896
S'int32'
p8897
ag14
a((S'taskHandle'
p8898
(lp8899
S'TaskHandle'
p8900
aNtp8901
(S'channel'
p8902
(lp8903
S'char'
p8904
a(lp8905
I-1
aaNtp8906
(S'data'
p8907
(lp8908
S'float64'
p8909
aNtp8910
tp8911
tp8912
sS'DAQmxSetWriteRelativeTo'
p8913
((lp8914
S'int32'
p8915
ag14
a((S'taskHandle'
p8916
(lp8917
S'TaskHandle'
p8918
aNtp8919
(S'data'
p8920
(lp8921
S'int32'
p8922
aNtp8923
tp8924
tp8925
sS'DAQmxSetReadRelativeTo'
p8926
((lp8927
S'int32'
p8928
ag14
a((S'taskHandle'
p8929
(lp8930
S'TaskHandle'
p8931
aNtp8932
(S'data'
p8933
(lp8934
S'int32'
p8935
aNtp8936
tp8937
tp8938
sS'DAQmxGetAIRVDTSensitivity'
p8939
((lp8940
S'int32'
p8941
ag14
a((S'taskHandle'
p8942
(lp8943
S'TaskHandle'
p8944
aNtp8945
(S'channel'
p8946
(lp8947
S'char'
p8948
a(lp8949
I-1
aaNtp8950
(S'data'
p8951
(lp8952
S'float64'
p8953
ag22
aNtp8954
tp8955
tp8956
sS'DAQmxResetDigEdgeStartTrigDigSyncEnable'
p8957
((lp8958
S'int32'
p8959
ag14
a((S'taskHandle'
p8960
(lp8961
S'TaskHandle'
p8962
aNtp8963
tp8964
tp8965
sS'DAQmxGetDODataXferMech'
p8966
((lp8967
S'int32'
p8968
ag14
a((S'taskHandle'
p8969
(lp8970
S'TaskHandle'
p8971
aNtp8972
(S'channel'
p8973
(lp8974
S'char'
p8975
a(lp8976
I-1
aaNtp8977
(S'data'
p8978
(lp8979
S'int32'
p8980
ag22
aNtp8981
tp8982
tp8983
sS'DAQmxSetAIRTDR0'
p8984
((lp8985
S'int32'
p8986
ag14
a((S'taskHandle'
p8987
(lp8988
S'TaskHandle'
p8989
aNtp8990
(S'channel'
p8991
(lp8992
S'char'
p8993
a(lp8994
I-1
aaNtp8995
(S'data'
p8996
(lp8997
S'float64'
p8998
aNtp8999
tp9000
tp9001
sS'DAQmxResetAOUseOnlyOnBrdMem'
p9002
((lp9003
S'int32'
p9004
ag14
a((S'taskHandle'
p9005
(lp9006
S'TaskHandle'
p9007
aNtp9008
(S'channel'
p9009
(lp9010
S'char'
p9011
a(lp9012
I-1
aaNtp9013
tp9014
tp9015
sS'DAQmxGetCIEncoderAInputDigFltrTimebaseSrc'
p9016
((lp9017
S'int32'
p9018
ag14
a((S'taskHandle'
p9019
(lp9020
S'TaskHandle'
p9021
aNtp9022
(S'channel'
p9023
(lp9024
S'char'
p9025
a(lp9026
I-1
aaNtp9027
(S'data'
p9028
(lp9029
S'char'
p9030
ag22
aNtp9031
(S'bufferSize'
p9032
(lp9033
S'uInt32'
p9034
aNtp9035
tp9036
tp9037
sS'DAQmxGetDevDOPorts'
p9038
((lp9039
S'int32'
p9040
ag14
a((S'device'
p9041
(lp9042
S'char'
p9043
a(lp9044
I-1
aaNtp9045
(S'data'
p9046
(lp9047
S'char'
p9048
ag22
aNtp9049
(S'bufferSize'
p9050
(lp9051
S'uInt32'
p9052
aNtp9053
tp9054
tp9055
sS'DAQmxGetCIEncoderAInputDigSyncEnable'
p9056
((lp9057
S'int32'
p9058
ag14
a((S'taskHandle'
p9059
(lp9060
S'TaskHandle'
p9061
aNtp9062
(S'channel'
p9063
(lp9064
S'char'
p9065
a(lp9066
I-1
aaNtp9067
(S'data'
p9068
(lp9069
S'bool32'
p9070
ag22
aNtp9071
tp9072
tp9073
sS'DAQmxGetAICoupling'
p9074
((lp9075
S'int32'
p9076
ag14
a((S'taskHandle'
p9077
(lp9078
S'TaskHandle'
p9079
aNtp9080
(S'channel'
p9081
(lp9082
S'char'
p9083
a(lp9084
I-1
aaNtp9085
(S'data'
p9086
(lp9087
S'int32'
p9088
ag22
aNtp9089
tp9090
tp9091
sS'DAQmxSetExportedCtrOutEventOutputTerm'
p9092
((lp9093
S'int32'
p9094
ag14
a((S'taskHandle'
p9095
(lp9096
S'TaskHandle'
p9097
aNtp9098
(S'data'
p9099
(lp9100
S'char'
p9101
ag22
aNtp9102
tp9103
tp9104
sS'DAQmxSetScaleTablePreScaledVals'
p9105
((lp9106
S'int32'
p9107
ag14
a((S'scaleName'
p9108
(lp9109
S'char'
p9110
a(lp9111
I-1
aaNtp9112
(S'data'
p9113
(lp9114
S'float64'
p9115
ag22
aNtp9116
(S'arraySizeInSamples'
p9117
(lp9118
S'uInt32'
p9119
aNtp9120
tp9121
tp9122
sS'DAQmxResetAIDataXferMech'
p9123
((lp9124
S'int32'
p9125
ag14
a((S'taskHandle'
p9126
(lp9127
S'TaskHandle'
p9128
aNtp9129
(S'channel'
p9130
(lp9131
S'char'
p9132
a(lp9133
I-1
aaNtp9134
tp9135
tp9136
sS'DAQmxSetReadWaitMode'
p9137
((lp9138
S'int32'
p9139
ag14
a((S'taskHandle'
p9140
(lp9141
S'TaskHandle'
p9142
aNtp9143
(S'data'
p9144
(lp9145
S'int32'
p9146
aNtp9147
tp9148
tp9149
sS'DAQmxSetExportedSampClkPulsePolarity'
p9150
((lp9151
S'int32'
p9152
ag14
a((S'taskHandle'
p9153
(lp9154
S'TaskHandle'
p9155
aNtp9156
(S'data'
p9157
(lp9158
S'int32'
p9159
aNtp9160
tp9161
tp9162
sS'DAQmxGetCITwoEdgeSepSecondDigSyncEnable'
p9163
((lp9164
S'int32'
p9165
ag14
a((S'taskHandle'
p9166
(lp9167
S'TaskHandle'
p9168
aNtp9169
(S'channel'
p9170
(lp9171
S'char'
p9172
a(lp9173
I-1
aaNtp9174
(S'data'
p9175
(lp9176
S'bool32'
p9177
ag22
aNtp9178
tp9179
tp9180
sS'DAQmxResetCIAngEncoderInitialAngle'
p9181
((lp9182
S'int32'
p9183
ag14
a((S'taskHandle'
p9184
(lp9185
S'TaskHandle'
p9186
aNtp9187
(S'channel'
p9188
(lp9189
S'char'
p9190
a(lp9191
I-1
aaNtp9192
tp9193
tp9194
sS'DAQmxSetCIPulseWidthDigFltrTimebaseSrc'
p9195
((lp9196
S'int32'
p9197
ag14
a((S'taskHandle'
p9198
(lp9199
S'TaskHandle'
p9200
aNtp9201
(S'channel'
p9202
(lp9203
S'char'
p9204
a(lp9205
I-1
aaNtp9206
(S'data'
p9207
(lp9208
S'char'
p9209
ag22
aNtp9210
tp9211
tp9212
sS'DAQmxResetStartTrigType'
p9213
((lp9214
S'int32'
p9215
ag14
a((S'taskHandle'
p9216
(lp9217
S'TaskHandle'
p9218
aNtp9219
tp9220
tp9221
sS'DAQmxResetAODACRefConnToGnd'
p9222
((lp9223
S'int32'
p9224
ag14
a((S'taskHandle'
p9225
(lp9226
S'TaskHandle'
p9227
aNtp9228
(S'channel'
p9229
(lp9230
S'char'
p9231
a(lp9232
I-1
aaNtp9233
tp9234
tp9235
sS'DAQmxSetAIThrmstrC'
p9236
((lp9237
S'int32'
p9238
ag14
a((S'taskHandle'
p9239
(lp9240
S'TaskHandle'
p9241
aNtp9242
(S'channel'
p9243
(lp9244
S'char'
p9245
a(lp9246
I-1
aaNtp9247
(S'data'
p9248
(lp9249
S'float64'
p9250
aNtp9251
tp9252
tp9253
sS'DAQmxSetAIThrmstrB'
p9254
((lp9255
S'int32'
p9256
ag14
a((S'taskHandle'
p9257
(lp9258
S'TaskHandle'
p9259
aNtp9260
(S'channel'
p9261
(lp9262
S'char'
p9263
a(lp9264
I-1
aaNtp9265
(S'data'
p9266
(lp9267
S'float64'
p9268
aNtp9269
tp9270
tp9271
sS'DAQmxSetAIThrmstrA'
p9272
((lp9273
S'int32'
p9274
ag14
a((S'taskHandle'
p9275
(lp9276
S'TaskHandle'
p9277
aNtp9278
(S'channel'
p9279
(lp9280
S'char'
p9281
a(lp9282
I-1
aaNtp9283
(S'data'
p9284
(lp9285
S'float64'
p9286
aNtp9287
tp9288
tp9289
sS'DAQmxReadBinaryI16'
p9290
((lp9291
S'int32'
p9292
ag14
a((S'taskHandle'
p9293
(lp9294
S'TaskHandle'
p9295
aNtp9296
(S'numSampsPerChan'
p9297
(lp9298
S'int32'
p9299
aNtp9300
(S'timeout'
p9301
(lp9302
S'float64'
p9303
aNtp9304
(S'fillMode'
p9305
(lp9306
S'bool32'
p9307
aNtp9308
(S'readArray'
p9309
(lp9310
S'int16'
p9311
a(lp9312
I-1
aaNtp9313
(S'arraySizeInSamps'
p9314
(lp9315
S'uInt32'
p9316
aNtp9317
(S'sampsPerChanRead'
p9318
(lp9319
S'int32'
p9320
ag22
aNtp9321
(S'reserved'
p9322
(lp9323
S'bool32'
p9324
ag22
aNtp9325
tp9326
tp9327
sS'DAQmxGetAIChanCalTablePreScaledVals'
p9328
((lp9329
S'int32'
p9330
ag14
a((S'taskHandle'
p9331
(lp9332
S'TaskHandle'
p9333
aNtp9334
(S'channel'
p9335
(lp9336
S'char'
p9337
a(lp9338
I-1
aaNtp9339
(S'data'
p9340
(lp9341
S'float64'
p9342
ag22
aNtp9343
(S'arraySizeInSamples'
p9344
(lp9345
S'uInt32'
p9346
aNtp9347
tp9348
tp9349
sS'DAQmxGetSampClkTimebaseMasterTimebaseDiv'
p9350
((lp9351
S'int32'
p9352
ag14
a((S'taskHandle'
p9353
(lp9354
S'TaskHandle'
p9355
aNtp9356
(S'data'
p9357
(lp9358
S'uInt32'
p9359
ag22
aNtp9360
tp9361
tp9362
sS'DAQmxDeleteSavedGlobalChan'
p9363
((lp9364
S'int32'
p9365
ag14
a((S'channelName'
p9366
(lp9367
S'char'
p9368
a(lp9369
I-1
aaNtp9370
tp9371
tp9372
sS'DAQmxGetExportedAdvTrigOutputTerm'
p9373
((lp9374
S'int32'
p9375
ag14
a((S'taskHandle'
p9376
(lp9377
S'TaskHandle'
p9378
aNtp9379
(S'data'
p9380
(lp9381
S'char'
p9382
ag22
aNtp9383
(S'bufferSize'
p9384
(lp9385
S'uInt32'
p9386
aNtp9387
tp9388
tp9389
sS'DAQmxGetAIInputSrc'
p9390
((lp9391
S'int32'
p9392
ag14
a((S'taskHandle'
p9393
(lp9394
S'TaskHandle'
p9395
aNtp9396
(S'channel'
p9397
(lp9398
S'char'
p9399
a(lp9400
I-1
aaNtp9401
(S'data'
p9402
(lp9403
S'char'
p9404
ag22
aNtp9405
(S'bufferSize'
p9406
(lp9407
S'uInt32'
p9408
aNtp9409
tp9410
tp9411
sS'DAQmxSwitchGetSingleRelayCount'
p9412
((lp9413
S'int32'
p9414
ag14
a((S'relayName'
p9415
(lp9416
S'char'
p9417
a(lp9418
I-1
aaNtp9419
(S'count'
p9420
(lp9421
S'uInt32'
p9422
ag22
aNtp9423
tp9424
tp9425
sS'DAQmxGetCICountEdgesDigFltrEnable'
p9426
((lp9427
S'int32'
p9428
ag14
a((S'taskHandle'
p9429
(lp9430
S'TaskHandle'
p9431
aNtp9432
(S'channel'
p9433
(lp9434
S'char'
p9435
a(lp9436
I-1
aaNtp9437
(S'data'
p9438
(lp9439
S'bool32'
p9440
ag22
aNtp9441
tp9442
tp9443
sS'DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc'
p9444
((lp9445
S'int32'
p9446
ag14
a((S'taskHandle'
p9447
(lp9448
S'TaskHandle'
p9449
aNtp9450
(S'data'
p9451
(lp9452
S'char'
p9453
ag22
aNtp9454
(S'bufferSize'
p9455
(lp9456
S'uInt32'
p9457
aNtp9458
tp9459
tp9460
sS'DAQmxGetCIEncoderDecodingType'
p9461
((lp9462
S'int32'
p9463
ag14
a((S'taskHandle'
p9464
(lp9465
S'TaskHandle'
p9466
aNtp9467
(S'channel'
p9468
(lp9469
S'char'
p9470
a(lp9471
I-1
aaNtp9472
(S'data'
p9473
(lp9474
S'int32'
p9475
ag22
aNtp9476
tp9477
tp9478
sS'DAQmxResetCICountEdgesDigFltrTimebaseRate'
p9479
((lp9480
S'int32'
p9481
ag14
a((S'taskHandle'
p9482
(lp9483
S'TaskHandle'
p9484
aNtp9485
(S'channel'
p9486
(lp9487
S'char'
p9488
a(lp9489
I-1
aaNtp9490
tp9491
tp9492
sS'DAQmxAdjustDSAAOCal'
p9493
((lp9494
S'int32'
p9495
ag14
a((S'calHandle'
p9496
(lp9497
S'uInt32'
p9498
aNtp9499
(S'channel'
p9500
(lp9501
S'uInt32'
p9502
aNtp9503
(S'requestedLowVoltage'
p9504
(lp9505
S'float64'
p9506
aNtp9507
(S'actualLowVoltage'
p9508
(lp9509
S'float64'
p9510
aNtp9511
(S'requestedHighVoltage'
p9512
(lp9513
S'float64'
p9514
aNtp9515
(S'actualHighVoltage'
p9516
(lp9517
S'float64'
p9518
aNtp9519
(S'gainSetting'
p9520
(lp9521
S'float64'
p9522
aNtp9523
tp9524
tp9525
sS'DAQmxSetAODACOffsetSrc'
p9526
((lp9527
S'int32'
p9528
ag14
a((S'taskHandle'
p9529
(lp9530
S'TaskHandle'
p9531
aNtp9532
(S'channel'
p9533
(lp9534
S'char'
p9535
a(lp9536
I-1
aaNtp9537
(S'data'
p9538
(lp9539
S'int32'
p9540
aNtp9541
tp9542
tp9543
sS'DAQmxGetCIPeriodMeasTime'
p9544
((lp9545
S'int32'
p9546
ag14
a((S'taskHandle'
p9547
(lp9548
S'TaskHandle'
p9549
aNtp9550
(S'channel'
p9551
(lp9552
S'char'
p9553
a(lp9554
I-1
aaNtp9555
(S'data'
p9556
(lp9557
S'float64'
p9558
ag22
aNtp9559
tp9560
tp9561
sS'DAQmxSetDigEdgeArmStartTrigDigSyncEnable'
p9562
((lp9563
S'int32'
p9564
ag14
a((S'taskHandle'
p9565
(lp9566
S'TaskHandle'
p9567
aNtp9568
(S'data'
p9569
(lp9570
S'bool32'
p9571
aNtp9572
tp9573
tp9574
sS'DAQmxResetAIBridgeNomResistance'
p9575
((lp9576
S'int32'
p9577
ag14
a((S'taskHandle'
p9578
(lp9579
S'TaskHandle'
p9580
aNtp9581
(S'channel'
p9582
(lp9583
S'char'
p9584
a(lp9585
I-1
aaNtp9586
tp9587
tp9588
sS'DAQmxGetCIEncoderBInputDigFltrEnable'
p9589
((lp9590
S'int32'
p9591
ag14
a((S'taskHandle'
p9592
(lp9593
S'TaskHandle'
p9594
aNtp9595
(S'channel'
p9596
(lp9597
S'char'
p9598
a(lp9599
I-1
aaNtp9600
(S'data'
p9601
(lp9602
S'bool32'
p9603
ag22
aNtp9604
tp9605
tp9606
sS'DAQmxResetAIChanCalOperatorName'
p9607
((lp9608
S'int32'
p9609
ag14
a((S'taskHandle'
p9610
(lp9611
S'TaskHandle'
p9612
aNtp9613
(S'channel'
p9614
(lp9615
S'char'
p9616
a(lp9617
I-1
aaNtp9618
tp9619
tp9620
sS'DAQmxGetCIMax'
p9621
((lp9622
S'int32'
p9623
ag14
a((S'taskHandle'
p9624
(lp9625
S'TaskHandle'
p9626
aNtp9627
(S'channel'
p9628
(lp9629
S'char'
p9630
a(lp9631
I-1
aaNtp9632
(S'data'
p9633
(lp9634
S'float64'
p9635
ag22
aNtp9636
tp9637
tp9638
sS'DAQmxResetCIEncoderZIndexPhase'
p9639
((lp9640
S'int32'
p9641
ag14
a((S'taskHandle'
p9642
(lp9643
S'TaskHandle'
p9644
aNtp9645
(S'channel'
p9646
(lp9647
S'char'
p9648
a(lp9649
I-1
aaNtp9650
tp9651
tp9652
sS'DAQmxResetCOAutoIncrCnt'
p9653
((lp9654
S'int32'
p9655
ag14
a((S'taskHandle'
p9656
(lp9657
S'TaskHandle'
p9658
aNtp9659
(S'channel'
p9660
(lp9661
S'char'
p9662
a(lp9663
I-1
aaNtp9664
tp9665
tp9666
sS'DAQmxSetSyncPulseMinDelayToStart'
p9667
((lp9668
S'int32'
p9669
ag14
a((S'taskHandle'
p9670
(lp9671
S'TaskHandle'
p9672
aNtp9673
(S'data'
p9674
(lp9675
S'float64'
p9676
aNtp9677
tp9678
tp9679
sS'DAQmxResetAODACOffsetSrc'
p9680
((lp9681
S'int32'
p9682
ag14
a((S'taskHandle'
p9683
(lp9684
S'TaskHandle'
p9685
aNtp9686
(S'channel'
p9687
(lp9688
S'char'
p9689
a(lp9690
I-1
aaNtp9691
tp9692
tp9693
sS'DAQmxGetPhysicalChanTEDSVersionNum'
p9694
((lp9695
S'int32'
p9696
ag14
a((S'physicalChannel'
p9697
(lp9698
S'char'
p9699
a(lp9700
I-1
aaNtp9701
(S'data'
p9702
(lp9703
S'uInt32'
p9704
ag22
aNtp9705
tp9706
tp9707
sS'DAQmxResetExportedAdvTrigPulseWidthUnits'
p9708
((lp9709
S'int32'
p9710
ag14
a((S'taskHandle'
p9711
(lp9712
S'TaskHandle'
p9713
aNtp9714
tp9715
tp9716
sS'DAQmxResetCIPeriodTerm'
p9717
((lp9718
S'int32'
p9719
ag14
a((S'taskHandle'
p9720
(lp9721
S'TaskHandle'
p9722
aNtp9723
(S'channel'
p9724
(lp9725
S'char'
p9726
a(lp9727
I-1
aaNtp9728
tp9729
tp9730
sS'DAQmxResetDigEdgeWatchdogExpirTrigSrc'
p9731
((lp9732
S'int32'
p9733
ag14
a((S'taskHandle'
p9734
(lp9735
S'TaskHandle'
p9736
aNtp9737
tp9738
tp9739
sS'DAQmxResetExportedSampClkOutputBehavior'
p9740
((lp9741
S'int32'
p9742
ag14
a((S'taskHandle'
p9743
(lp9744
S'TaskHandle'
p9745
aNtp9746
tp9747
tp9748
sS'DAQmxResetCIEncoderAInputDigFltrEnable'
p9749
((lp9750
S'int32'
p9751
ag14
a((S'taskHandle'
p9752
(lp9753
S'TaskHandle'
p9754
aNtp9755
(S'channel'
p9756
(lp9757
S'char'
p9758
a(lp9759
I-1
aaNtp9760
tp9761
tp9762
sS'DAQmxGetAnlgLvlPauseTrigWhen'
p9763
((lp9764
S'int32'
p9765
ag14
a((S'taskHandle'
p9766
(lp9767
S'TaskHandle'
p9768
aNtp9769
(S'data'
p9770
(lp9771
S'int32'
p9772
ag22
aNtp9773
tp9774
tp9775
sS'DAQmxSetCIPeriodMeasMeth'
p9776
((lp9777
S'int32'
p9778
ag14
a((S'taskHandle'
p9779
(lp9780
S'TaskHandle'
p9781
aNtp9782
(S'channel'
p9783
(lp9784
S'char'
p9785
a(lp9786
I-1
aaNtp9787
(S'data'
p9788
(lp9789
S'int32'
p9790
aNtp9791
tp9792
tp9793
sS'DAQmxSetCIPulseWidthDigFltrEnable'
p9794
((lp9795
S'int32'
p9796
ag14
a((S'taskHandle'
p9797
(lp9798
S'TaskHandle'
p9799
aNtp9800
(S'channel'
p9801
(lp9802
S'char'
p9803
a(lp9804
I-1
aaNtp9805
(S'data'
p9806
(lp9807
S'bool32'
p9808
aNtp9809
tp9810
tp9811
sS'DAQmxGetCOCtrTimebaseMasterTimebaseDiv'
p9812
((lp9813
S'int32'
p9814
ag14
a((S'taskHandle'
p9815
(lp9816
S'TaskHandle'
p9817
aNtp9818
(S'channel'
p9819
(lp9820
S'char'
p9821
a(lp9822
I-1
aaNtp9823
(S'data'
p9824
(lp9825
S'uInt32'
p9826
ag22
aNtp9827
tp9828
tp9829
sS'DAQmxGetCIEncoderBInputTerm'
p9830
((lp9831
S'int32'
p9832
ag14
a((S'taskHandle'
p9833
(lp9834
S'TaskHandle'
p9835
aNtp9836
(S'channel'
p9837
(lp9838
S'char'
p9839
a(lp9840
I-1
aaNtp9841
(S'data'
p9842
(lp9843
S'char'
p9844
ag22
aNtp9845
(S'bufferSize'
p9846
(lp9847
S'uInt32'
p9848
aNtp9849
tp9850
tp9851
sS'DAQmxCreateCIPeriodChan'
p9852
((lp9853
S'int32'
p9854
ag14
a((S'taskHandle'
p9855
(lp9856
S'TaskHandle'
p9857
aNtp9858
(S'counter'
p9859
(lp9860
S'char'
p9861
a(lp9862
I-1
aaNtp9863
(S'nameToAssignToChannel'
p9864
(lp9865
S'char'
p9866
a(lp9867
I-1
aaNtp9868
(S'minVal'
p9869
(lp9870
S'float64'
p9871
aNtp9872
(S'maxVal'
p9873
(lp9874
S'float64'
p9875
aNtp9876
(S'units'
p9877
(lp9878
S'int32'
p9879
aNtp9880
(S'edge'
p9881
(lp9882
S'int32'
p9883
aNtp9884
(S'measMethod'
p9885
(lp9886
S'int32'
p9887
aNtp9888
(S'measTime'
p9889
(lp9890
S'float64'
p9891
aNtp9892
(S'divisor'
p9893
(lp9894
S'uInt32'
p9895
aNtp9896
(S'customScaleName'
p9897
(lp9898
S'char'
p9899
a(lp9900
I-1
aaNtp9901
tp9902
tp9903
sS'DAQmxResetSampClkDigFltrTimebaseSrc'
p9904
((lp9905
S'int32'
p9906
ag14
a((S'taskHandle'
p9907
(lp9908
S'TaskHandle'
p9909
aNtp9910
tp9911
tp9912
sS'DAQmxResetAIConvRate'
p9913
((lp9914
S'int32'
p9915
ag14
a((S'taskHandle'
p9916
(lp9917
S'TaskHandle'
p9918
aNtp9919
tp9920
tp9921
sS'DAQmxSetSampQuantSampMode'
p9922
((lp9923
S'int32'
p9924
ag14
a((S'taskHandle'
p9925
(lp9926
S'TaskHandle'
p9927
aNtp9928
(S'data'
p9929
(lp9930
S'int32'
p9931
aNtp9932
tp9933
tp9934
sS'DAQmxResetCIPeriodMeasMeth'
p9935
((lp9936
S'int32'
p9937
ag14
a((S'taskHandle'
p9938
(lp9939
S'TaskHandle'
p9940
aNtp9941
(S'channel'
p9942
(lp9943
S'char'
p9944
a(lp9945
I-1
aaNtp9946
tp9947
tp9948
sS'DAQmxSetAILowpassSwitchCapClkSrc'
p9949
((lp9950
S'int32'
p9951
ag14
a((S'taskHandle'
p9952
(lp9953
S'TaskHandle'
p9954
aNtp9955
(S'channel'
p9956
(lp9957
S'char'
p9958
a(lp9959
I-1
aaNtp9960
(S'data'
p9961
(lp9962
S'int32'
p9963
aNtp9964
tp9965
tp9966
sS'DAQmxResetCOPulseHighTicks'
p9967
((lp9968
S'int32'
p9969
ag14
a((S'taskHandle'
p9970
(lp9971
S'TaskHandle'
p9972
aNtp9973
(S'channel'
p9974
(lp9975
S'char'
p9976
a(lp9977
I-1
aaNtp9978
tp9979
tp9980
sS'DAQmxGetChanType'
p9981
((lp9982
S'int32'
p9983
ag14
a((S'taskHandle'
p9984
(lp9985
S'TaskHandle'
p9986
aNtp9987
(S'channel'
p9988
(lp9989
S'char'
p9990
a(lp9991
I-1
aaNtp9992
(S'data'
p9993
(lp9994
S'int32'
p9995
ag22
aNtp9996
tp9997
tp9998
sS'DAQmxGetAODACRngLow'
p9999
((lp10000
S'int32'
p10001
ag14
a((S'taskHandle'
p10002
(lp10003
S'TaskHandle'
p10004
aNtp10005
(S'channel'
p10006
(lp10007
S'char'
p10008
a(lp10009
I-1
aaNtp10010
(S'data'
p10011
(lp10012
S'float64'
p10013
ag22
aNtp10014
tp10015
tp10016
sS'DAQmxResetRealTimeReportMissedSamp'
p10017
((lp10018
S'int32'
p10019
ag14
a((S'taskHandle'
p10020
(lp10021
S'TaskHandle'
p10022
aNtp10023
tp10024
tp10025
sS'DAQmxResetCICountEdgesInitialCnt'
p10026
((lp10027
S'int32'
p10028
ag14
a((S'taskHandle'
p10029
(lp10030
S'TaskHandle'
p10031
aNtp10032
(S'channel'
p10033
(lp10034
S'char'
p10035
a(lp10036
I-1
aaNtp10037
tp10038
tp10039
sS'DAQmxGetCITwoEdgeSepFirstDigSyncEnable'
p10040
((lp10041
S'int32'
p10042
ag14
a((S'taskHandle'
p10043
(lp10044
S'TaskHandle'
p10045
aNtp10046
(S'channel'
p10047
(lp10048
S'char'
p10049
a(lp10050
I-1
aaNtp10051
(S'data'
p10052
(lp10053
S'bool32'
p10054
ag22
aNtp10055
tp10056
tp10057
sS'DAQmxCreateCOPulseChanTicks'
p10058
((lp10059
S'int32'
p10060
ag14
a((S'taskHandle'
p10061
(lp10062
S'TaskHandle'
p10063
aNtp10064
(S'counter'
p10065
(lp10066
S'char'
p10067
a(lp10068
I-1
aaNtp10069
(S'nameToAssignToChannel'
p10070
(lp10071
S'char'
p10072
a(lp10073
I-1
aaNtp10074
(S'sourceTerminal'
p10075
(lp10076
S'char'
p10077
a(lp10078
I-1
aaNtp10079
(S'idleState'
p10080
(lp10081
S'int32'
p10082
aNtp10083
(S'initialDelay'
p10084
(lp10085
S'int32'
p10086
aNtp10087
(S'lowTicks'
p10088
(lp10089
S'int32'
p10090
aNtp10091
(S'highTicks'
p10092
(lp10093
S'int32'
p10094
aNtp10095
tp10096
tp10097
sS'DAQmxResetCIPeriodStartingEdge'
p10098
((lp10099
S'int32'
p10100
ag14
a((S'taskHandle'
p10101
(lp10102
S'TaskHandle'
p10103
aNtp10104
(S'channel'
p10105
(lp10106
S'char'
p10107
a(lp10108
I-1
aaNtp10109
tp10110
tp10111
sS'DAQmxResetCOCtrTimebaseDigSyncEnable'
p10112
((lp10113
S'int32'
p10114
ag14
a((S'taskHandle'
p10115
(lp10116
S'TaskHandle'
p10117
aNtp10118
(S'channel'
p10119
(lp10120
S'char'
p10121
a(lp10122
I-1
aaNtp10123
tp10124
tp10125
sS'DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate'
p10126
((lp10127
S'int32'
p10128
ag14
a((S'taskHandle'
p10129
(lp10130
S'TaskHandle'
p10131
aNtp10132
(S'data'
p10133
(lp10134
S'float64'
p10135
ag22
aNtp10136
tp10137
tp10138
sS'DAQmxGetExportedAIConvClkOutputTerm'
p10139
((lp10140
S'int32'
p10141
ag14
a((S'taskHandle'
p10142
(lp10143
S'TaskHandle'
p10144
aNtp10145
(S'data'
p10146
(lp10147
S'char'
p10148
ag22
aNtp10149
(S'bufferSize'
p10150
(lp10151
S'uInt32'
p10152
aNtp10153
tp10154
tp10155
sS'DAQmxResetCISemiPeriodDigSyncEnable'
p10156
((lp10157
S'int32'
p10158
ag14
a((S'taskHandle'
p10159
(lp10160
S'TaskHandle'
p10161
aNtp10162
(S'channel'
p10163
(lp10164
S'char'
p10165
a(lp10166
I-1
aaNtp10167
tp10168
tp10169
sS'DAQmxResetRefTrigPretrigSamples'
p10170
((lp10171
S'int32'
p10172
ag14
a((S'taskHandle'
p10173
(lp10174
S'TaskHandle'
p10175
aNtp10176
tp10177
tp10178
sS'DAQmxSetAICurrentShuntResistance'
p10179
((lp10180
S'int32'
p10181
ag14
a((S'taskHandle'
p10182
(lp10183
S'TaskHandle'
p10184
aNtp10185
(S'channel'
p10186
(lp10187
S'char'
p10188
a(lp10189
I-1
aaNtp10190
(S'data'
p10191
(lp10192
S'float64'
p10193
aNtp10194
tp10195
tp10196
sS'DAQmxResetAIRngHigh'
p10197
((lp10198
S'int32'
p10199
ag14
a((S'taskHandle'
p10200
(lp10201
S'TaskHandle'
p10202
aNtp10203
(S'channel'
p10204
(lp10205
S'char'
p10206
a(lp10207
I-1
aaNtp10208
tp10209
tp10210
sS'DAQmxResetAILowpassSwitchCapExtClkDiv'
p10211
((lp10212
S'int32'
p10213
ag14
a((S'taskHandle'
p10214
(lp10215
S'TaskHandle'
p10216
aNtp10217
(S'channel'
p10218
(lp10219
S'char'
p10220
a(lp10221
I-1
aaNtp10222
tp10223
tp10224
sS'DAQmxSetCICountEdgesDigFltrEnable'
p10225
((lp10226
S'int32'
p10227
ag14
a((S'taskHandle'
p10228
(lp10229
S'TaskHandle'
p10230
aNtp10231
(S'channel'
p10232
(lp10233
S'char'
p10234
a(lp10235
I-1
aaNtp10236
(S'data'
p10237
(lp10238
S'bool32'
p10239
aNtp10240
tp10241
tp10242
sS'DAQmxResetExportedChangeDetectEventPulsePolarity'
p10243
((lp10244
S'int32'
p10245
ag14
a((S'taskHandle'
p10246
(lp10247
S'TaskHandle'
p10248
aNtp10249
tp10250
tp10251
sS'DAQmxGetExportedRefTrigOutputTerm'
p10252
((lp10253
S'int32'
p10254
ag14
a((S'taskHandle'
p10255
(lp10256
S'TaskHandle'
p10257
aNtp10258
(S'data'
p10259
(lp10260
S'char'
p10261
ag22
aNtp10262
(S'bufferSize'
p10263
(lp10264
S'uInt32'
p10265
aNtp10266
tp10267
tp10268
sS'DAQmxSetExportedCtrOutEventOutputBehavior'
p10269
((lp10270
S'int32'
p10271
ag14
a((S'taskHandle'
p10272
(lp10273
S'TaskHandle'
p10274
aNtp10275
(S'data'
p10276
(lp10277
S'int32'
p10278
aNtp10279
tp10280
tp10281
sS'DAQmxGetDevAIPhysicalChans'
p10282
((lp10283
S'int32'
p10284
ag14
a((S'device'
p10285
(lp10286
S'char'
p10287
a(lp10288
I-1
aaNtp10289
(S'data'
p10290
(lp10291
S'char'
p10292
ag22
aNtp10293
(S'bufferSize'
p10294
(lp10295
S'uInt32'
p10296
aNtp10297
tp10298
tp10299
sS'DAQmxGetAIStrainGageGageFactor'
p10300
((lp10301
S'int32'
p10302
ag14
a((S'taskHandle'
p10303
(lp10304
S'TaskHandle'
p10305
aNtp10306
(S'channel'
p10307
(lp10308
S'char'
p10309
a(lp10310
I-1
aaNtp10311
(S'data'
p10312
(lp10313
S'float64'
p10314
ag22
aNtp10315
tp10316
tp10317
sS'DAQmxGetPersistedTaskAuthor'
p10318
((lp10319
S'int32'
p10320
ag14
a((S'taskName'
p10321
(lp10322
S'char'
p10323
a(lp10324
I-1
aaNtp10325
(S'data'
p10326
(lp10327
S'char'
p10328
ag22
aNtp10329
(S'bufferSize'
p10330
(lp10331
S'uInt32'
p10332
aNtp10333
tp10334
tp10335
sS'DAQmxResetAIRawDataCompressionType'
p10336
((lp10337
S'int32'
p10338
ag14
a((S'taskHandle'
p10339
(lp10340
S'TaskHandle'
p10341
aNtp10342
(S'channel'
p10343
(lp10344
S'char'
p10345
a(lp10346
I-1
aaNtp10347
tp10348
tp10349
sS'DAQmxResetReadReadAllAvailSamp'
p10350
((lp10351
S'int32'
p10352
ag14
a((S'taskHandle'
p10353
(lp10354
S'TaskHandle'
p10355
aNtp10356
tp10357
tp10358
sS'DAQmxSetAIConvTimebaseSrc'
p10359
((lp10360
S'int32'
p10361
ag14
a((S'taskHandle'
p10362
(lp10363
S'TaskHandle'
p10364
aNtp10365
(S'data'
p10366
(lp10367
S'int32'
p10368
aNtp10369
tp10370
tp10371
sS'DAQmxCreateTEDSAIThrmcplChan'
p10372
((lp10373
S'int32'
p10374
ag14
a((S'taskHandle'
p10375
(lp10376
S'TaskHandle'
p10377
aNtp10378
(S'physicalChannel'
p10379
(lp10380
S'char'
p10381
a(lp10382
I-1
aaNtp10383
(S'nameToAssignToChannel'
p10384
(lp10385
S'char'
p10386
a(lp10387
I-1
aaNtp10388
(S'minVal'
p10389
(lp10390
S'float64'
p10391
aNtp10392
(S'maxVal'
p10393
(lp10394
S'float64'
p10395
aNtp10396
(S'units'
p10397
(lp10398
S'int32'
p10399
aNtp10400
(S'cjcSource'
p10401
(lp10402
S'int32'
p10403
aNtp10404
(S'cjcVal'
p10405
(lp10406
S'float64'
p10407
aNtp10408
(S'cjcChannel'
p10409
(lp10410
S'char'
p10411
a(lp10412
I-1
aaNtp10413
tp10414
tp10415
sS'DAQmxGetAIBridgeBalanceCoarsePot'
p10416
((lp10417
S'int32'
p10418
ag14
a((S'taskHandle'
p10419
(lp10420
S'TaskHandle'
p10421
aNtp10422
(S'channel'
p10423
(lp10424
S'char'
p10425
a(lp10426
I-1
aaNtp10427
(S'data'
p10428
(lp10429
S'int32'
p10430
ag22
aNtp10431
tp10432
tp10433
sS'DAQmxSetScaleTableScaledVals'
p10434
((lp10435
S'int32'
p10436
ag14
a((S'scaleName'
p10437
(lp10438
S'char'
p10439
a(lp10440
I-1
aaNtp10441
(S'data'
p10442
(lp10443
S'float64'
p10444
ag22
aNtp10445
(S'arraySizeInSamples'
p10446
(lp10447
S'uInt32'
p10448
aNtp10449
tp10450
tp10451
sS'DAQmxGetDigEdgeRefTrigSrc'
p10452
((lp10453
S'int32'
p10454
ag14
a((S'taskHandle'
p10455
(lp10456
S'TaskHandle'
p10457
aNtp10458
(S'data'
p10459
(lp10460
S'char'
p10461
ag22
aNtp10462
(S'bufferSize'
p10463
(lp10464
S'uInt32'
p10465
aNtp10466
tp10467
tp10468
sS'DAQmxGetCOCtrTimebaseActiveEdge'
p10469
((lp10470
S'int32'
p10471
ag14
a((S'taskHandle'
p10472
(lp10473
S'TaskHandle'
p10474
aNtp10475
(S'channel'
p10476
(lp10477
S'char'
p10478
a(lp10479
I-1
aaNtp10480
(S'data'
p10481
(lp10482
S'int32'
p10483
ag22
aNtp10484
tp10485
tp10486
sS'DAQmxGetCIEncoderBInputDigFltrMinPulseWidth'
p10487
((lp10488
S'int32'
p10489
ag14
a((S'taskHandle'
p10490
(lp10491
S'TaskHandle'
p10492
aNtp10493
(S'channel'
p10494
(lp10495
S'char'
p10496
a(lp10497
I-1
aaNtp10498
(S'data'
p10499
(lp10500
S'float64'
p10501
ag22
aNtp10502
tp10503
tp10504
sS'DAQmxGetExportedSampClkOutputTerm'
p10505
((lp10506
S'int32'
p10507
ag14
a((S'taskHandle'
p10508
(lp10509
S'TaskHandle'
p10510
aNtp10511
(S'data'
p10512
(lp10513
S'char'
p10514
ag22
aNtp10515
(S'bufferSize'
p10516
(lp10517
S'uInt32'
p10518
aNtp10519
tp10520
tp10521
sS'DAQmxSetAOReglitchEnable'
p10522
((lp10523
S'int32'
p10524
ag14
a((S'taskHandle'
p10525
(lp10526
S'TaskHandle'
p10527
aNtp10528
(S'channel'
p10529
(lp10530
S'char'
p10531
a(lp10532
I-1
aaNtp10533
(S'data'
p10534
(lp10535
S'bool32'
p10536
aNtp10537
tp10538
tp10539
sS'DAQmxGetCIPulseWidthTerm'
p10540
((lp10541
S'int32'
p10542
ag14
a((S'taskHandle'
p10543
(lp10544
S'TaskHandle'
p10545
aNtp10546
(S'channel'
p10547
(lp10548
S'char'
p10549
a(lp10550
I-1
aaNtp10551
(S'data'
p10552
(lp10553
S'char'
p10554
ag22
aNtp10555
(S'bufferSize'
p10556
(lp10557
S'uInt32'
p10558
aNtp10559
tp10560
tp10561
sS'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate'
p10562
((lp10563
S'int32'
p10564
ag14
a((S'taskHandle'
p10565
(lp10566
S'TaskHandle'
p10567
aNtp10568
(S'channel'
p10569
(lp10570
S'char'
p10571
a(lp10572
I-1
aaNtp10573
(S'data'
p10574
(lp10575
S'float64'
p10576
aNtp10577
tp10578
tp10579
sS'DAQmxGetWriteDigitalLinesBytesPerChan'
p10580
((lp10581
S'int32'
p10582
ag14
a((S'taskHandle'
p10583
(lp10584
S'TaskHandle'
p10585
aNtp10586
(S'data'
p10587
(lp10588
S'uInt32'
p10589
ag22
aNtp10590
tp10591
tp10592
sS'DAQmxSetExportedHshkEventPulsePolarity'
p10593
((lp10594
S'int32'
p10595
ag14
a((S'taskHandle'
p10596
(lp10597
S'TaskHandle'
p10598
aNtp10599
(S'data'
p10600
(lp10601
S'int32'
p10602
aNtp10603
tp10604
tp10605
sS'DAQmxSetAIFreqHyst'
p10606
((lp10607
S'int32'
p10608
ag14
a((S'taskHandle'
p10609
(lp10610
S'TaskHandle'
p10611
aNtp10612
(S'channel'
p10613
(lp10614
S'char'
p10615
a(lp10616
I-1
aaNtp10617
(S'data'
p10618
(lp10619
S'float64'
p10620
aNtp10621
tp10622
tp10623
sS'DAQmxGetSwitchScanBreakMode'
p10624
((lp10625
S'int32'
p10626
ag14
a((S'taskHandle'
p10627
(lp10628
S'TaskHandle'
p10629
aNtp10630
(S'data'
p10631
(lp10632
S'int32'
p10633
ag22
aNtp10634
tp10635
tp10636
sS'DAQmxSetReadReadAllAvailSamp'
p10637
((lp10638
S'int32'
p10639
ag14
a((S'taskHandle'
p10640
(lp10641
S'TaskHandle'
p10642
aNtp10643
(S'data'
p10644
(lp10645
S'bool32'
p10646
aNtp10647
tp10648
tp10649
sS'DAQmxResetCISemiPeriodDigFltrMinPulseWidth'
p10650
((lp10651
S'int32'
p10652
ag14
a((S'taskHandle'
p10653
(lp10654
S'TaskHandle'
p10655
aNtp10656
(S'channel'
p10657
(lp10658
S'char'
p10659
a(lp10660
I-1
aaNtp10661
tp10662
tp10663
sS'DAQmxGetAIRVDTSensitivityUnits'
p10664
((lp10665
S'int32'
p10666
ag14
a((S'taskHandle'
p10667
(lp10668
S'TaskHandle'
p10669
aNtp10670
(S'channel'
p10671
(lp10672
S'char'
p10673
a(lp10674
I-1
aaNtp10675
(S'data'
p10676
(lp10677
S'int32'
p10678
ag22
aNtp10679
tp10680
tp10681
sS'DAQmxSendSoftwareTrigger'
p10682
((lp10683
S'int32'
p10684
ag14
a((S'taskHandle'
p10685
(lp10686
S'TaskHandle'
p10687
aNtp10688
(S'triggerID'
p10689
(lp10690
S'int32'
p10691
aNtp10692
tp10693
tp10694
sS'DAQmxSetAIMin'
p10695
((lp10696
S'int32'
p10697
ag14
a((S'taskHandle'
p10698
(lp10699
S'TaskHandle'
p10700
aNtp10701
(S'channel'
p10702
(lp10703
S'char'
p10704
a(lp10705
I-1
aaNtp10706
(S'data'
p10707
(lp10708
S'float64'
p10709
aNtp10710
tp10711
tp10712
sS'DAQmxGetSampQuantSampMode'
p10713
((lp10714
S'int32'
p10715
ag14
a((S'taskHandle'
p10716
(lp10717
S'TaskHandle'
p10718
aNtp10719
(S'data'
p10720
(lp10721
S'int32'
p10722
ag22
aNtp10723
tp10724
tp10725
sS'DAQmxGetCICountEdgesDigFltrMinPulseWidth'
p10726
((lp10727
S'int32'
p10728
ag14
a((S'taskHandle'
p10729
(lp10730
S'TaskHandle'
p10731
aNtp10732
(S'channel'
p10733
(lp10734
S'char'
p10735
a(lp10736
I-1
aaNtp10737
(S'data'
p10738
(lp10739
S'float64'
p10740
ag22
aNtp10741
tp10742
tp10743
sS'DAQmxGetAOVoltageUnits'
p10744
((lp10745
S'int32'
p10746
ag14
a((S'taskHandle'
p10747
(lp10748
S'TaskHandle'
p10749
aNtp10750
(S'channel'
p10751
(lp10752
S'char'
p10753
a(lp10754
I-1
aaNtp10755
(S'data'
p10756
(lp10757
S'int32'
p10758
ag22
aNtp10759
tp10760
tp10761
sS'DAQmxResetSampQuantSampPerChan'
p10762
((lp10763
S'int32'
p10764
ag14
a((S'taskHandle'
p10765
(lp10766
S'TaskHandle'
p10767
aNtp10768
tp10769
tp10770
sS'DAQmxResetCITimestampInitialSeconds'
p10771
((lp10772
S'int32'
p10773
ag14
a((S'taskHandle'
p10774
(lp10775
S'TaskHandle'
p10776
aNtp10777
(S'channel'
p10778
(lp10779
S'char'
p10780
a(lp10781
I-1
aaNtp10782
tp10783
tp10784
sS'DAQmxGetAIBridgeShuntCalEnable'
p10785
((lp10786
S'int32'
p10787
ag14
a((S'taskHandle'
p10788
(lp10789
S'TaskHandle'
p10790
aNtp10791
(S'channel'
p10792
(lp10793
S'char'
p10794
a(lp10795
I-1
aaNtp10796
(S'data'
p10797
(lp10798
S'bool32'
p10799
ag22
aNtp10800
tp10801
tp10802
sS'DAQmxResetAIStrainGageGageFactor'
p10803
((lp10804
S'int32'
p10805
ag14
a((S'taskHandle'
p10806
(lp10807
S'TaskHandle'
p10808
aNtp10809
(S'channel'
p10810
(lp10811
S'char'
p10812
a(lp10813
I-1
aaNtp10814
tp10815
tp10816
sS'DAQmxSetDigEdgeRefTrigSrc'
p10817
((lp10818
S'int32'
p10819
ag14
a((S'taskHandle'
p10820
(lp10821
S'TaskHandle'
p10822
aNtp10823
(S'data'
p10824
(lp10825
S'char'
p10826
ag22
aNtp10827
tp10828
tp10829
sS'DAQmxResetAOReglitchEnable'
p10830
((lp10831
S'int32'
p10832
ag14
a((S'taskHandle'
p10833
(lp10834
S'TaskHandle'
p10835
aNtp10836
(S'channel'
p10837
(lp10838
S'char'
p10839
a(lp10840
I-1
aaNtp10841
tp10842
tp10843
sS'DAQmxSetAIVoltageUnits'
p10844
((lp10845
S'int32'
p10846
ag14
a((S'taskHandle'
p10847
(lp10848
S'TaskHandle'
p10849
aNtp10850
(S'channel'
p10851
(lp10852
S'char'
p10853
a(lp10854
I-1
aaNtp10855
(S'data'
p10856
(lp10857
S'int32'
p10858
aNtp10859
tp10860
tp10861
sS'DAQmxGetAIThrmcplCJCChan'
p10862
((lp10863
S'int32'
p10864
ag14
a((S'taskHandle'
p10865
(lp10866
S'TaskHandle'
p10867
aNtp10868
(S'channel'
p10869
(lp10870
S'char'
p10871
a(lp10872
I-1
aaNtp10873
(S'data'
p10874
(lp10875
S'char'
p10876
ag22
aNtp10877
(S'bufferSize'
p10878
(lp10879
S'uInt32'
p10880
aNtp10881
tp10882
tp10883
sS'DAQmxResetCIEncoderBInputDigSyncEnable'
p10884
((lp10885
S'int32'
p10886
ag14
a((S'taskHandle'
p10887
(lp10888
S'TaskHandle'
p10889
aNtp10890
(S'channel'
p10891
(lp10892
S'char'
p10893
a(lp10894
I-1
aaNtp10895
tp10896
tp10897
sS'DAQmxGetSwitchChanMaxACCarryCurrent'
p10898
((lp10899
S'int32'
p10900
ag14
a((S'switchChannelName'
p10901
(lp10902
S'char'
p10903
a(lp10904
I-1
aaNtp10905
(S'data'
p10906
(lp10907
S'float64'
p10908
ag22
aNtp10909
tp10910
tp10911
sS'DAQmxResetAODACRngHigh'
p10912
((lp10913
S'int32'
p10914
ag14
a((S'taskHandle'
p10915
(lp10916
S'TaskHandle'
p10917
aNtp10918
(S'channel'
p10919
(lp10920
S'char'
p10921
a(lp10922
I-1
aaNtp10923
tp10924
tp10925
sS'DAQmxSetExportedAIHoldCmpltEventPulsePolarity'
p10926
((lp10927
S'int32'
p10928
ag14
a((S'taskHandle'
p10929
(lp10930
S'TaskHandle'
p10931
aNtp10932
(S'data'
p10933
(lp10934
S'int32'
p10935
aNtp10936
tp10937
tp10938
sS'DAQmxGetDigPatternStartTrigWhen'
p10939
((lp10940
S'int32'
p10941
ag14
a((S'taskHandle'
p10942
(lp10943
S'TaskHandle'
p10944
aNtp10945
(S'data'
p10946
(lp10947
S'int32'
p10948
ag22
aNtp10949
tp10950
tp10951
sS'DAQmxGetDevPCIDevNum'
p10952
((lp10953
S'int32'
p10954
ag14
a((S'device'
p10955
(lp10956
S'char'
p10957
a(lp10958
I-1
aaNtp10959
(S'data'
p10960
(lp10961
S'uInt32'
p10962
ag22
aNtp10963
tp10964
tp10965
sS'DAQmxGetMasterTimebaseRate'
p10966
((lp10967
S'int32'
p10968
ag14
a((S'taskHandle'
p10969
(lp10970
S'TaskHandle'
p10971
aNtp10972
(S'data'
p10973
(lp10974
S'float64'
p10975
ag22
aNtp10976
tp10977
tp10978
sS'DAQmxResetCICtrTimebaseMasterTimebaseDiv'
p10979
((lp10980
S'int32'
p10981
ag14
a((S'taskHandle'
p10982
(lp10983
S'TaskHandle'
p10984
aNtp10985
(S'channel'
p10986
(lp10987
S'char'
p10988
a(lp10989
I-1
aaNtp10990
tp10991
tp10992
sS'DAQmxGetCICountEdgesInitialCnt'
p10993
((lp10994
S'int32'
p10995
ag14
a((S'taskHandle'
p10996
(lp10997
S'TaskHandle'
p10998
aNtp10999
(S'channel'
p11000
(lp11001
S'char'
p11002
a(lp11003
I-1
aaNtp11004
(S'data'
p11005
(lp11006
S'uInt32'
p11007
ag22
aNtp11008
tp11009
tp11010
sS'DAQmxResetCICountEdgesDigFltrEnable'
p11011
((lp11012
S'int32'
p11013
ag14
a((S'taskHandle'
p11014
(lp11015
S'TaskHandle'
p11016
aNtp11017
(S'channel'
p11018
(lp11019
S'char'
p11020
a(lp11021
I-1
aaNtp11022
tp11023
tp11024
sS'DAQmxResetReadChannelsToRead'
p11025
((lp11026
S'int32'
p11027
ag14
a((S'taskHandle'
p11028
(lp11029
S'TaskHandle'
p11030
aNtp11031
tp11032
tp11033
sS'DAQmxResetAOMemMapEnable'
p11034
((lp11035
S'int32'
p11036
ag14
a((S'taskHandle'
p11037
(lp11038
S'TaskHandle'
p11039
aNtp11040
(S'channel'
p11041
(lp11042
S'char'
p11043
a(lp11044
I-1
aaNtp11045
tp11046
tp11047
sS'DAQmxSetCITwoEdgeSepSecondTerm'
p11048
((lp11049
S'int32'
p11050
ag14
a((S'taskHandle'
p11051
(lp11052
S'TaskHandle'
p11053
aNtp11054
(S'channel'
p11055
(lp11056
S'char'
p11057
a(lp11058
I-1
aaNtp11059
(S'data'
p11060
(lp11061
S'char'
p11062
ag22
aNtp11063
tp11064
tp11065
sS'DAQmxGetDigPatternRefTrigPattern'
p11066
((lp11067
S'int32'
p11068
ag14
a((S'taskHandle'
p11069
(lp11070
S'TaskHandle'
p11071
aNtp11072
(S'data'
p11073
(lp11074
S'char'
p11075
ag22
aNtp11076
(S'bufferSize'
p11077
(lp11078
S'uInt32'
p11079
aNtp11080
tp11081
tp11082
sS'DAQmxResetAIACExcitSyncEnable'
p11083
((lp11084
S'int32'
p11085
ag14
a((S'taskHandle'
p11086
(lp11087
S'TaskHandle'
p11088
aNtp11089
(S'channel'
p11090
(lp11091
S'char'
p11092
a(lp11093
I-1
aaNtp11094
tp11095
tp11096
sS'DAQmxSetAOMax'
p11097
((lp11098
S'int32'
p11099
ag14
a((S'taskHandle'
p11100
(lp11101
S'TaskHandle'
p11102
aNtp11103
(S'channel'
p11104
(lp11105
S'char'
p11106
a(lp11107
I-1
aaNtp11108
(S'data'
p11109
(lp11110
S'float64'
p11111
aNtp11112
tp11113
tp11114
sS'DAQmxResetCIFreqUnits'
p11115
((lp11116
S'int32'
p11117
ag14
a((S'taskHandle'
p11118
(lp11119
S'TaskHandle'
p11120
aNtp11121
(S'channel'
p11122
(lp11123
S'char'
p11124
a(lp11125
I-1
aaNtp11126
tp11127
tp11128
sS'DAQmxSetAILVDTSensitivity'
p11129
((lp11130
S'int32'
p11131
ag14
a((S'taskHandle'
p11132
(lp11133
S'TaskHandle'
p11134
aNtp11135
(S'channel'
p11136
(lp11137
S'char'
p11138
a(lp11139
I-1
aaNtp11140
(S'data'
p11141
(lp11142
S'float64'
p11143
aNtp11144
tp11145
tp11146
sS'DAQmxResetAIAtten'
p11147
((lp11148
S'int32'
p11149
ag14
a((S'taskHandle'
p11150
(lp11151
S'TaskHandle'
p11152
aNtp11153
(S'channel'
p11154
(lp11155
S'char'
p11156
a(lp11157
I-1
aaNtp11158
tp11159
tp11160
sS'DAQmxSetCIFreqDigSyncEnable'
p11161
((lp11162
S'int32'
p11163
ag14
a((S'taskHandle'
p11164
(lp11165
S'TaskHandle'
p11166
aNtp11167
(S'channel'
p11168
(lp11169
S'char'
p11170
a(lp11171
I-1
aaNtp11172
(S'data'
p11173
(lp11174
S'bool32'
p11175
aNtp11176
tp11177
tp11178
sS'DAQmxResetCICountEdgesDigSyncEnable'
p11179
((lp11180
S'int32'
p11181
ag14
a((S'taskHandle'
p11182
(lp11183
S'TaskHandle'
p11184
aNtp11185
(S'channel'
p11186
(lp11187
S'char'
p11188
a(lp11189
I-1
aaNtp11190
tp11191
tp11192
sS'DAQmxGetReadAutoStart'
p11193
((lp11194
S'int32'
p11195
ag14
a((S'taskHandle'
p11196
(lp11197
S'TaskHandle'
p11198
aNtp11199
(S'data'
p11200
(lp11201
S'bool32'
p11202
ag22
aNtp11203
tp11204
tp11205
sS'DAQmxGetChanDescr'
p11206
((lp11207
S'int32'
p11208
ag14
a((S'taskHandle'
p11209
(lp11210
S'TaskHandle'
p11211
aNtp11212
(S'channel'
p11213
(lp11214
S'char'
p11215
a(lp11216
I-1
aaNtp11217
(S'data'
p11218
(lp11219
S'char'
p11220
ag22
aNtp11221
(S'bufferSize'
p11222
(lp11223
S'uInt32'
p11224
aNtp11225
tp11226
tp11227
sS'DAQmxResetCOPulseTimeUnits'
p11228
((lp11229
S'int32'
p11230
ag14
a((S'taskHandle'
p11231
(lp11232
S'TaskHandle'
p11233
aNtp11234
(S'channel'
p11235
(lp11236
S'char'
p11237
a(lp11238
I-1
aaNtp11239
tp11240
tp11241
sS'DAQmxSetCIEncoderZInputDigSyncEnable'
p11242
((lp11243
S'int32'
p11244
ag14
a((S'taskHandle'
p11245
(lp11246
S'TaskHandle'
p11247
aNtp11248
(S'channel'
p11249
(lp11250
S'char'
p11251
a(lp11252
I-1
aaNtp11253
(S'data'
p11254
(lp11255
S'bool32'
p11256
aNtp11257
tp11258
tp11259
sS'DAQmxSetAnlgWinRefTrigTop'
p11260
((lp11261
S'int32'
p11262
ag14
a((S'taskHandle'
p11263
(lp11264
S'TaskHandle'
p11265
aNtp11266
(S'data'
p11267
(lp11268
S'float64'
p11269
aNtp11270
tp11271
tp11272
sS'DAQmxGetAIStrainGageCfg'
p11273
((lp11274
S'int32'
p11275
ag14
a((S'taskHandle'
p11276
(lp11277
S'TaskHandle'
p11278
aNtp11279
(S'channel'
p11280
(lp11281
S'char'
p11282
a(lp11283
I-1
aaNtp11284
(S'data'
p11285
(lp11286
S'int32'
p11287
ag22
aNtp11288
tp11289
tp11290
sS'DAQmxSetAIChanCalDesc'
p11291
((lp11292
S'int32'
p11293
ag14
a((S'taskHandle'
p11294
(lp11295
S'TaskHandle'
p11296
aNtp11297
(S'channel'
p11298
(lp11299
S'char'
p11300
a(lp11301
I-1
aaNtp11302
(S'data'
p11303
(lp11304
S'char'
p11305
ag22
aNtp11306
tp11307
tp11308
sS'DAQmxSetAOVoltageUnits'
p11309
((lp11310
S'int32'
p11311
ag14
a((S'taskHandle'
p11312
(lp11313
S'TaskHandle'
p11314
aNtp11315
(S'channel'
p11316
(lp11317
S'char'
p11318
a(lp11319
I-1
aaNtp11320
(S'data'
p11321
(lp11322
S'int32'
p11323
aNtp11324
tp11325
tp11326
sS'DAQmxResetExportedRdyForXferEventLvlActiveLvl'
p11327
((lp11328
S'int32'
p11329
ag14
a((S'taskHandle'
p11330
(lp11331
S'TaskHandle'
p11332
aNtp11333
tp11334
tp11335
sS'DAQmxResetCITwoEdgeSepSecondDigSyncEnable'
p11336
((lp11337
S'int32'
p11338
ag14
a((S'taskHandle'
p11339
(lp11340
S'TaskHandle'
p11341
aNtp11342
(S'channel'
p11343
(lp11344
S'char'
p11345
a(lp11346
I-1
aaNtp11347
tp11348
tp11349
sS'DAQmxGetScalePolyReverseCoeff'
p11350
((lp11351
S'int32'
p11352
ag14
a((S'scaleName'
p11353
(lp11354
S'char'
p11355
a(lp11356
I-1
aaNtp11357
(S'data'
p11358
(lp11359
S'float64'
p11360
ag22
aNtp11361
(S'arraySizeInSamples'
p11362
(lp11363
S'uInt32'
p11364
aNtp11365
tp11366
tp11367
sS'DAQmxGetPhysicalChanTEDSBitStream'
p11368
((lp11369
S'int32'
p11370
ag14
a((S'physicalChannel'
p11371
(lp11372
S'char'
p11373
a(lp11374
I-1
aaNtp11375
(S'data'
p11376
(lp11377
S'uInt8'
p11378
ag22
aNtp11379
(S'arraySizeInSamples'
p11380
(lp11381
S'uInt32'
p11382
aNtp11383
tp11384
tp11385
sS'DAQmxSetAILowpassSwitchCapExtClkFreq'
p11386
((lp11387
S'int32'
p11388
ag14
a((S'taskHandle'
p11389
(lp11390
S'TaskHandle'
p11391
aNtp11392
(S'channel'
p11393
(lp11394
S'char'
p11395
a(lp11396
I-1
aaNtp11397
(S'data'
p11398
(lp11399
S'float64'
p11400
aNtp11401
tp11402
tp11403
sS'DAQmxGetChangeDetectDIRisingEdgePhysicalChans'
p11404
((lp11405
S'int32'
p11406
ag14
a((S'taskHandle'
p11407
(lp11408
S'TaskHandle'
p11409
aNtp11410
(S'data'
p11411
(lp11412
S'char'
p11413
ag22
aNtp11414
(S'bufferSize'
p11415
(lp11416
S'uInt32'
p11417
aNtp11418
tp11419
tp11420
sS'DAQmxResetAIStrainGageCfg'
p11421
((lp11422
S'int32'
p11423
ag14
a((S'taskHandle'
p11424
(lp11425
S'TaskHandle'
p11426
aNtp11427
(S'channel'
p11428
(lp11429
S'char'
p11430
a(lp11431
I-1
aaNtp11432
tp11433
tp11434
sS'DAQmxSetCIEncoderAInputDigFltrMinPulseWidth'
p11435
((lp11436
S'int32'
p11437
ag14
a((S'taskHandle'
p11438
(lp11439
S'TaskHandle'
p11440
aNtp11441
(S'channel'
p11442
(lp11443
S'char'
p11444
a(lp11445
I-1
aaNtp11446
(S'data'
p11447
(lp11448
S'float64'
p11449
aNtp11450
tp11451
tp11452
sS'DAQmxResetReadAttribute'
p11453
((lp11454
S'int32'
p11455
ag14
a((S'taskHandle'
p11456
(lp11457
S'TaskHandle'
p11458
aNtp11459
(S'attribute'
p11460
(lp11461
S'int32'
p11462
aNtp11463
tp11464
tp11465
sS'DAQmxSetAILowpassSwitchCapOutClkDiv'
p11466
((lp11467
S'int32'
p11468
ag14
a((S'taskHandle'
p11469
(lp11470
S'TaskHandle'
p11471
aNtp11472
(S'channel'
p11473
(lp11474
S'char'
p11475
a(lp11476
I-1
aaNtp11477
(S'data'
p11478
(lp11479
S'uInt32'
p11480
aNtp11481
tp11482
tp11483
sS'DAQmxGetDONumLines'
p11484
((lp11485
S'int32'
p11486
ag14
a((S'taskHandle'
p11487
(lp11488
S'TaskHandle'
p11489
aNtp11490
(S'channel'
p11491
(lp11492
S'char'
p11493
a(lp11494
I-1
aaNtp11495
(S'data'
p11496
(lp11497
S'uInt32'
p11498
ag22
aNtp11499
tp11500
tp11501
sS'DAQmxSetAILossyLSBRemovalCompressedSampSize'
p11502
((lp11503
S'int32'
p11504
ag14
a((S'taskHandle'
p11505
(lp11506
S'TaskHandle'
p11507
aNtp11508
(S'channel'
p11509
(lp11510
S'char'
p11511
a(lp11512
I-1
aaNtp11513
(S'data'
p11514
(lp11515
S'uInt32'
p11516
aNtp11517
tp11518
tp11519
sS'DAQmxSetCITimestampInitialSeconds'
p11520
((lp11521
S'int32'
p11522
ag14
a((S'taskHandle'
p11523
(lp11524
S'TaskHandle'
p11525
aNtp11526
(S'channel'
p11527
(lp11528
S'char'
p11529
a(lp11530
I-1
aaNtp11531
(S'data'
p11532
(lp11533
S'uInt32'
p11534
aNtp11535
tp11536
tp11537
sS'DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate'
p11538
((lp11539
S'int32'
p11540
ag14
a((S'taskHandle'
p11541
(lp11542
S'TaskHandle'
p11543
aNtp11544
(S'data'
p11545
(lp11546
S'float64'
p11547
ag22
aNtp11548
tp11549
tp11550
sS'DAQmxGetCOAutoIncrCnt'
p11551
((lp11552
S'int32'
p11553
ag14
a((S'taskHandle'
p11554
(lp11555
S'TaskHandle'
p11556
aNtp11557
(S'channel'
p11558
(lp11559
S'char'
p11560
a(lp11561
I-1
aaNtp11562
(S'data'
p11563
(lp11564
S'uInt32'
p11565
ag22
aNtp11566
tp11567
tp11568
sS'DAQmxSetDODataXferReqCond'
p11569
((lp11570
S'int32'
p11571
ag14
a((S'taskHandle'
p11572
(lp11573
S'TaskHandle'
p11574
aNtp11575
(S'channel'
p11576
(lp11577
S'char'
p11578
a(lp11579
I-1
aaNtp11580
(S'data'
p11581
(lp11582
S'int32'
p11583
aNtp11584
tp11585
tp11586
sS'DAQmxCfgAnlgWindowRefTrig'
p11587
((lp11588
S'int32'
p11589
ag14
a((S'taskHandle'
p11590
(lp11591
S'TaskHandle'
p11592
aNtp11593
(S'triggerSource'
p11594
(lp11595
S'char'
p11596
a(lp11597
I-1
aaNtp11598
(S'triggerWhen'
p11599
(lp11600
S'int32'
p11601
aNtp11602
(S'windowTop'
p11603
(lp11604
S'float64'
p11605
aNtp11606
(S'windowBottom'
p11607
(lp11608
S'float64'
p11609
aNtp11610
(S'pretriggerSamples'
p11611
(lp11612
S'uInt32'
p11613
aNtp11614
tp11615
tp11616
sS'DAQmxSetDigPatternRefTrigPattern'
p11617
((lp11618
S'int32'
p11619
ag14
a((S'taskHandle'
p11620
(lp11621
S'TaskHandle'
p11622
aNtp11623
(S'data'
p11624
(lp11625
S'char'
p11626
ag22
aNtp11627
tp11628
tp11629
sS'DAQmxResetExportedSyncPulseEventOutputTerm'
p11630
((lp11631
S'int32'
p11632
ag14
a((S'taskHandle'
p11633
(lp11634
S'TaskHandle'
p11635
aNtp11636
tp11637
tp11638
sS'DAQmxGetCIPulseWidthDigFltrEnable'
p11639
((lp11640
S'int32'
p11641
ag14
a((S'taskHandle'
p11642
(lp11643
S'TaskHandle'
p11644
aNtp11645
(S'channel'
p11646
(lp11647
S'char'
p11648
a(lp11649
I-1
aaNtp11650
(S'data'
p11651
(lp11652
S'bool32'
p11653
ag22
aNtp11654
tp11655
tp11656
sS'DAQmxGetDevPXIChassisNum'
p11657
((lp11658
S'int32'
p11659
ag14
a((S'device'
p11660
(lp11661
S'char'
p11662
a(lp11663
I-1
aaNtp11664
(S'data'
p11665
(lp11666
S'uInt32'
p11667
ag22
aNtp11668
tp11669
tp11670
sS'DAQmxGetSwitchChanMaxACCarryPwr'
p11671
((lp11672
S'int32'
p11673
ag14
a((S'switchChannelName'
p11674
(lp11675
S'char'
p11676
a(lp11677
I-1
aaNtp11678
(S'data'
p11679
(lp11680
S'float64'
p11681
ag22
aNtp11682
tp11683
tp11684
sS'DAQmxGetAIBridgeInitialVoltage'
p11685
((lp11686
S'int32'
p11687
ag14
a((S'taskHandle'
p11688
(lp11689
S'TaskHandle'
p11690
aNtp11691
(S'channel'
p11692
(lp11693
S'char'
p11694
a(lp11695
I-1
aaNtp11696
(S'data'
p11697
(lp11698
S'float64'
p11699
ag22
aNtp11700
tp11701
tp11702
sS'DAQmxSetAnlgLvlPauseTrigCoupling'
p11703
((lp11704
S'int32'
p11705
ag14
a((S'taskHandle'
p11706
(lp11707
S'TaskHandle'
p11708
aNtp11709
(S'data'
p11710
(lp11711
S'int32'
p11712
aNtp11713
tp11714
tp11715
sS'DAQmxResetCICountEdgesCountDirDigSyncEnable'
p11716
((lp11717
S'int32'
p11718
ag14
a((S'taskHandle'
p11719
(lp11720
S'TaskHandle'
p11721
aNtp11722
(S'channel'
p11723
(lp11724
S'char'
p11725
a(lp11726
I-1
aaNtp11727
tp11728
tp11729
sS'DAQmxResetSampClkRate'
p11730
((lp11731
S'int32'
p11732
ag14
a((S'taskHandle'
p11733
(lp11734
S'TaskHandle'
p11735
aNtp11736
tp11737
tp11738
sS'DAQmxGetAIRngLow'
p11739
((lp11740
S'int32'
p11741
ag14
a((S'taskHandle'
p11742
(lp11743
S'TaskHandle'
p11744
aNtp11745
(S'channel'
p11746
(lp11747
S'char'
p11748
a(lp11749
I-1
aaNtp11750
(S'data'
p11751
(lp11752
S'float64'
p11753
ag22
aNtp11754
tp11755
tp11756
sS'DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth'
p11757
((lp11758
S'int32'
p11759
ag14
a((S'taskHandle'
p11760
(lp11761
S'TaskHandle'
p11762
aNtp11763
tp11764
tp11765
sS'DAQmxResetWatchdogDOExpirState'
p11766
((lp11767
S'int32'
p11768
ag14
a((S'taskHandle'
p11769
(lp11770
S'TaskHandle'
p11771
aNtp11772
(S'channel'
p11773
(lp11774
S'char'
p11775
a(lp11776
I-1
aaNtp11777
tp11778
tp11779
sS'DAQmxGetAODACRefConnToGnd'
p11780
((lp11781
S'int32'
p11782
ag14
a((S'taskHandle'
p11783
(lp11784
S'TaskHandle'
p11785
aNtp11786
(S'channel'
p11787
(lp11788
S'char'
p11789
a(lp11790
I-1
aaNtp11791
(S'data'
p11792
(lp11793
S'bool32'
p11794
ag22
aNtp11795
tp11796
tp11797
sS'DAQmxSetAIChanCalScaleType'
p11798
((lp11799
S'int32'
p11800
ag14
a((S'taskHandle'
p11801
(lp11802
S'TaskHandle'
p11803
aNtp11804
(S'channel'
p11805
(lp11806
S'char'
p11807
a(lp11808
I-1
aaNtp11809
(S'data'
p11810
(lp11811
S'int32'
p11812
aNtp11813
tp11814
tp11815
sS'DAQmxGetSelfCalSupported'
p11816
((lp11817
S'int32'
p11818
ag14
a((S'deviceName'
p11819
(lp11820
S'char'
p11821
a(lp11822
I-1
aaNtp11823
(S'data'
p11824
(lp11825
S'bool32'
p11826
ag22
aNtp11827
tp11828
tp11829
sS'DAQmxGetPersistedTaskAllowInteractiveDeletion'
p11830
((lp11831
S'int32'
p11832
ag14
a((S'taskName'
p11833
(lp11834
S'char'
p11835
a(lp11836
I-1
aaNtp11837
(S'data'
p11838
(lp11839
S'bool32'
p11840
ag22
aNtp11841
tp11842
tp11843
sS'DAQmxGetCOCtrTimebaseDigFltrTimebaseRate'
p11844
((lp11845
S'int32'
p11846
ag14
a((S'taskHandle'
p11847
(lp11848
S'TaskHandle'
p11849
aNtp11850
(S'channel'
p11851
(lp11852
S'char'
p11853
a(lp11854
I-1
aaNtp11855
(S'data'
p11856
(lp11857
S'float64'
p11858
ag22
aNtp11859
tp11860
tp11861
sS'DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth'
p11862
((lp11863
S'int32'
p11864
ag14
a((S'taskHandle'
p11865
(lp11866
S'TaskHandle'
p11867
aNtp11868
(S'channel'
p11869
(lp11870
S'char'
p11871
a(lp11872
I-1
aaNtp11873
tp11874
tp11875
sS'DAQmxGetAODACOffsetExtSrc'
p11876
((lp11877
S'int32'
p11878
ag14
a((S'taskHandle'
p11879
(lp11880
S'TaskHandle'
p11881
aNtp11882
(S'channel'
p11883
(lp11884
S'char'
p11885
a(lp11886
I-1
aaNtp11887
(S'data'
p11888
(lp11889
S'char'
p11890
ag22
aNtp11891
(S'bufferSize'
p11892
(lp11893
S'uInt32'
p11894
aNtp11895
tp11896
tp11897
sS'DAQmxResetAIExcitDCorAC'
p11898
((lp11899
S'int32'
p11900
ag14
a((S'taskHandle'
p11901
(lp11902
S'TaskHandle'
p11903
aNtp11904
(S'channel'
p11905
(lp11906
S'char'
p11907
a(lp11908
I-1
aaNtp11909
tp11910
tp11911
sS'DAQmxGetCOCtrTimebaseRate'
p11912
((lp11913
S'int32'
p11914
ag14
a((S'taskHandle'
p11915
(lp11916
S'TaskHandle'
p11917
aNtp11918
(S'channel'
p11919
(lp11920
S'char'
p11921
a(lp11922
I-1
aaNtp11923
(S'data'
p11924
(lp11925
S'float64'
p11926
ag22
aNtp11927
tp11928
tp11929
sS'DAQmxSetCOPulseIdleState'
p11930
((lp11931
S'int32'
p11932
ag14
a((S'taskHandle'
p11933
(lp11934
S'TaskHandle'
p11935
aNtp11936
(S'channel'
p11937
(lp11938
S'char'
p11939
a(lp11940
I-1
aaNtp11941
(S'data'
p11942
(lp11943
S'int32'
p11944
aNtp11945
tp11946
tp11947
sS'DAQmxGetSwitchChanBandwidth'
p11948
((lp11949
S'int32'
p11950
ag14
a((S'switchChannelName'
p11951
(lp11952
S'char'
p11953
a(lp11954
I-1
aaNtp11955
(S'data'
p11956
(lp11957
S'float64'
p11958
ag22
aNtp11959
tp11960
tp11961
sS'DAQmxSetAIRTDType'
p11962
((lp11963
S'int32'
p11964
ag14
a((S'taskHandle'
p11965
(lp11966
S'TaskHandle'
p11967
aNtp11968
(S'channel'
p11969
(lp11970
S'char'
p11971
a(lp11972
I-1
aaNtp11973
(S'data'
p11974
(lp11975
S'int32'
p11976
aNtp11977
tp11978
tp11979
sS'DAQmxSetAIChanCalEnableCal'
p11980
((lp11981
S'int32'
p11982
ag14
a((S'taskHandle'
p11983
(lp11984
S'TaskHandle'
p11985
aNtp11986
(S'channel'
p11987
(lp11988
S'char'
p11989
a(lp11990
I-1
aaNtp11991
(S'data'
p11992
(lp11993
S'bool32'
p11994
aNtp11995
tp11996
tp11997
sS'DAQmxGetAIBridgeShuntCalSelect'
p11998
((lp11999
S'int32'
p12000
ag14
a((S'taskHandle'
p12001
(lp12002
S'TaskHandle'
p12003
aNtp12004
(S'channel'
p12005
(lp12006
S'char'
p12007
a(lp12008
I-1
aaNtp12009
(S'data'
p12010
(lp12011
S'int32'
p12012
ag22
aNtp12013
tp12014
tp12015
sS'DAQmxGetDigEdgeWatchdogExpirTrigSrc'
p12016
((lp12017
S'int32'
p12018
ag14
a((S'taskHandle'
p12019
(lp12020
S'TaskHandle'
p12021
aNtp12022
(S'data'
p12023
(lp12024
S'char'
p12025
ag22
aNtp12026
(S'bufferSize'
p12027
(lp12028
S'uInt32'
p12029
aNtp12030
tp12031
tp12032
sS'DAQmxGetHshkSampleInputDataWhen'
p12033
((lp12034
S'int32'
p12035
ag14
a((S'taskHandle'
p12036
(lp12037
S'TaskHandle'
p12038
aNtp12039
(S'data'
p12040
(lp12041
S'int32'
p12042
ag22
aNtp12043
tp12044
tp12045
sS'DAQmxGetInterlockedHshkTrigAssertedLvl'
p12046
((lp12047
S'int32'
p12048
ag14
a((S'taskHandle'
p12049
(lp12050
S'TaskHandle'
p12051
aNtp12052
(S'data'
p12053
(lp12054
S'int32'
p12055
ag22
aNtp12056
tp12057
tp12058
sS'DAQmxGetCIEncoderZInputDigSyncEnable'
p12059
((lp12060
S'int32'
p12061
ag14
a((S'taskHandle'
p12062
(lp12063
S'TaskHandle'
p12064
aNtp12065
(S'channel'
p12066
(lp12067
S'char'
p12068
a(lp12069
I-1
aaNtp12070
(S'data'
p12071
(lp12072
S'bool32'
p12073
ag22
aNtp12074
tp12075
tp12076
sS'DAQmxResetAnlgWinRefTrigTop'
p12077
((lp12078
S'int32'
p12079
ag14
a((S'taskHandle'
p12080
(lp12081
S'TaskHandle'
p12082
aNtp12083
tp12084
tp12085
sS'DAQmxGetAIExcitSrc'
p12086
((lp12087
S'int32'
p12088
ag14
a((S'taskHandle'
p12089
(lp12090
S'TaskHandle'
p12091
aNtp12092
(S'channel'
p12093
(lp12094
S'char'
p12095
a(lp12096
I-1
aaNtp12097
(S'data'
p12098
(lp12099
S'int32'
p12100
ag22
aNtp12101
tp12102
tp12103
sS'DAQmxSetAdvTrigType'
p12104
((lp12105
S'int32'
p12106
ag14
a((S'taskHandle'
p12107
(lp12108
S'TaskHandle'
p12109
aNtp12110
(S'data'
p12111
(lp12112
S'int32'
p12113
aNtp12114
tp12115
tp12116
sS'DAQmxResetAILeadWireResistance'
p12117
((lp12118
S'int32'
p12119
ag14
a((S'taskHandle'
p12120
(lp12121
S'TaskHandle'
p12122
aNtp12123
(S'channel'
p12124
(lp12125
S'char'
p12126
a(lp12127
I-1
aaNtp12128
tp12129
tp12130
sS'DAQmxResetDITristate'
p12131
((lp12132
S'int32'
p12133
ag14
a((S'taskHandle'
p12134
(lp12135
S'TaskHandle'
p12136
aNtp12137
(S'channel'
p12138
(lp12139
S'char'
p12140
a(lp12141
I-1
aaNtp12142
tp12143
tp12144
sS'DAQmxSetAODACRefConnToGnd'
p12145
((lp12146
S'int32'
p12147
ag14
a((S'taskHandle'
p12148
(lp12149
S'TaskHandle'
p12150
aNtp12151
(S'channel'
p12152
(lp12153
S'char'
p12154
a(lp12155
I-1
aaNtp12156
(S'data'
p12157
(lp12158
S'bool32'
p12159
aNtp12160
tp12161
tp12162
sS'DAQmxResetCIEncoderZIndexEnable'
p12163
((lp12164
S'int32'
p12165
ag14
a((S'taskHandle'
p12166
(lp12167
S'TaskHandle'
p12168
aNtp12169
(S'channel'
p12170
(lp12171
S'char'
p12172
a(lp12173
I-1
aaNtp12174
tp12175
tp12176
sS'DAQmxCfgDigPatternRefTrig'
p12177
((lp12178
S'int32'
p12179
ag14
a((S'taskHandle'
p12180
(lp12181
S'TaskHandle'
p12182
aNtp12183
(S'triggerSource'
p12184
(lp12185
S'char'
p12186
a(lp12187
I-1
aaNtp12188
(S'triggerPattern'
p12189
(lp12190
S'char'
p12191
a(lp12192
I-1
aaNtp12193
(S'triggerWhen'
p12194
(lp12195
S'int32'
p12196
aNtp12197
(S'pretriggerSamples'
p12198
(lp12199
S'uInt32'
p12200
aNtp12201
tp12202
tp12203
sS'DAQmxResetWriteSleepTime'
p12204
((lp12205
S'int32'
p12206
ag14
a((S'taskHandle'
p12207
(lp12208
S'TaskHandle'
p12209
aNtp12210
tp12211
tp12212
sS'DAQmxResetSampClkTimebaseRate'
p12213
((lp12214
S'int32'
p12215
ag14
a((S'taskHandle'
p12216
(lp12217
S'TaskHandle'
p12218
aNtp12219
tp12220
tp12221
sS'DAQmxResetAnlgEdgeStartTrigSlope'
p12222
((lp12223
S'int32'
p12224
ag14
a((S'taskHandle'
p12225
(lp12226
S'TaskHandle'
p12227
aNtp12228
tp12229
tp12230
sS'DAQmxSetAIResistanceUnits'
p12231
((lp12232
S'int32'
p12233
ag14
a((S'taskHandle'
p12234
(lp12235
S'TaskHandle'
p12236
aNtp12237
(S'channel'
p12238
(lp12239
S'char'
p12240
a(lp12241
I-1
aaNtp12242
(S'data'
p12243
(lp12244
S'int32'
p12245
aNtp12246
tp12247
tp12248
sS'DAQmxGetAIDataXferMech'
p12249
((lp12250
S'int32'
p12251
ag14
a((S'taskHandle'
p12252
(lp12253
S'TaskHandle'
p12254
aNtp12255
(S'channel'
p12256
(lp12257
S'char'
p12258
a(lp12259
I-1
aaNtp12260
(S'data'
p12261
(lp12262
S'int32'
p12263
ag22
aNtp12264
tp12265
tp12266
sS'DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc'
p12267
((lp12268
S'int32'
p12269
ag14
a((S'taskHandle'
p12270
(lp12271
S'TaskHandle'
p12272
aNtp12273
tp12274
tp12275
sS'DAQmxGetAICurrentShuntLoc'
p12276
((lp12277
S'int32'
p12278
ag14
a((S'taskHandle'
p12279
(lp12280
S'TaskHandle'
p12281
aNtp12282
(S'channel'
p12283
(lp12284
S'char'
p12285
a(lp12286
I-1
aaNtp12287
(S'data'
p12288
(lp12289
S'int32'
p12290
ag22
aNtp12291
tp12292
tp12293
sS'DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p12294
((lp12295
S'int32'
p12296
ag14
a((S'taskHandle'
p12297
(lp12298
S'TaskHandle'
p12299
aNtp12300
(S'channel'
p12301
(lp12302
S'char'
p12303
a(lp12304
I-1
aaNtp12305
(S'data'
p12306
(lp12307
S'float64'
p12308
ag22
aNtp12309
tp12310
tp12311
sS'DAQmxGetAIThrmstrC'
p12312
((lp12313
S'int32'
p12314
ag14
a((S'taskHandle'
p12315
(lp12316
S'TaskHandle'
p12317
aNtp12318
(S'channel'
p12319
(lp12320
S'char'
p12321
a(lp12322
I-1
aaNtp12323
(S'data'
p12324
(lp12325
S'float64'
p12326
ag22
aNtp12327
tp12328
tp12329
sS'DAQmxGetDevBusType'
p12330
((lp12331
S'int32'
p12332
ag14
a((S'device'
p12333
(lp12334
S'char'
p12335
a(lp12336
I-1
aaNtp12337
(S'data'
p12338
(lp12339
S'int32'
p12340
ag22
aNtp12341
tp12342
tp12343
sS'DAQmxSetReadSleepTime'
p12344
((lp12345
S'int32'
p12346
ag14
a((S'taskHandle'
p12347
(lp12348
S'TaskHandle'
p12349
aNtp12350
(S'data'
p12351
(lp12352
S'float64'
p12353
aNtp12354
tp12355
tp12356
sS'DAQmxGetCIAngEncoderUnits'
p12357
((lp12358
S'int32'
p12359
ag14
a((S'taskHandle'
p12360
(lp12361
S'TaskHandle'
p12362
aNtp12363
(S'channel'
p12364
(lp12365
S'char'
p12366
a(lp12367
I-1
aaNtp12368
(S'data'
p12369
(lp12370
S'int32'
p12371
ag22
aNtp12372
tp12373
tp12374
sS'DAQmxGetRefTrigType'
p12375
((lp12376
S'int32'
p12377
ag14
a((S'taskHandle'
p12378
(lp12379
S'TaskHandle'
p12380
aNtp12381
(S'data'
p12382
(lp12383
S'int32'
p12384
ag22
aNtp12385
tp12386
tp12387
sS'DAQmxGetSwitchDevSettled'
p12388
((lp12389
S'int32'
p12390
ag14
a((S'deviceName'
p12391
(lp12392
S'char'
p12393
a(lp12394
I-1
aaNtp12395
(S'data'
p12396
(lp12397
S'bool32'
p12398
ag22
aNtp12399
tp12400
tp12401
sS'DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate'
p12402
((lp12403
S'int32'
p12404
ag14
a((S'taskHandle'
p12405
(lp12406
S'TaskHandle'
p12407
aNtp12408
(S'channel'
p12409
(lp12410
S'char'
p12411
a(lp12412
I-1
aaNtp12413
tp12414
tp12415
sS'DAQmxResetAISoundPressureUnits'
p12416
((lp12417
S'int32'
p12418
ag14
a((S'taskHandle'
p12419
(lp12420
S'TaskHandle'
p12421
aNtp12422
(S'channel'
p12423
(lp12424
S'char'
p12425
a(lp12426
I-1
aaNtp12427
tp12428
tp12429
sS'DAQmxSetAILowpassCutoffFreq'
p12430
((lp12431
S'int32'
p12432
ag14
a((S'taskHandle'
p12433
(lp12434
S'TaskHandle'
p12435
aNtp12436
(S'channel'
p12437
(lp12438
S'char'
p12439
a(lp12440
I-1
aaNtp12441
(S'data'
p12442
(lp12443
S'float64'
p12444
aNtp12445
tp12446
tp12447
sS'DAQmxResetAIDataXferReqCond'
p12448
((lp12449
S'int32'
p12450
ag14
a((S'taskHandle'
p12451
(lp12452
S'TaskHandle'
p12453
aNtp12454
(S'channel'
p12455
(lp12456
S'char'
p12457
a(lp12458
I-1
aaNtp12459
tp12460
tp12461
sS'DAQmxGetInterlockedHshkTrigSrc'
p12462
((lp12463
S'int32'
p12464
ag14
a((S'taskHandle'
p12465
(lp12466
S'TaskHandle'
p12467
aNtp12468
(S'data'
p12469
(lp12470
S'char'
p12471
ag22
aNtp12472
(S'bufferSize'
p12473
(lp12474
S'uInt32'
p12475
aNtp12476
tp12477
tp12478
sS'DAQmxGetExportedSampClkTimebaseOutputTerm'
p12479
((lp12480
S'int32'
p12481
ag14
a((S'taskHandle'
p12482
(lp12483
S'TaskHandle'
p12484
aNtp12485
(S'data'
p12486
(lp12487
S'char'
p12488
ag22
aNtp12489
(S'bufferSize'
p12490
(lp12491
S'uInt32'
p12492
aNtp12493
tp12494
tp12495
sS'DAQmxSetPauseTrigType'
p12496
((lp12497
S'int32'
p12498
ag14
a((S'taskHandle'
p12499
(lp12500
S'TaskHandle'
p12501
aNtp12502
(S'data'
p12503
(lp12504
S'int32'
p12505
aNtp12506
tp12507
tp12508
sS'DAQmxGetCIGPSSyncSrc'
p12509
((lp12510
S'int32'
p12511
ag14
a((S'taskHandle'
p12512
(lp12513
S'TaskHandle'
p12514
aNtp12515
(S'channel'
p12516
(lp12517
S'char'
p12518
a(lp12519
I-1
aaNtp12520
(S'data'
p12521
(lp12522
S'char'
p12523
ag22
aNtp12524
(S'bufferSize'
p12525
(lp12526
S'uInt32'
p12527
aNtp12528
tp12529
tp12530
sS'DAQmxSetBufOutputBufSize'
p12531
((lp12532
S'int32'
p12533
ag14
a((S'taskHandle'
p12534
(lp12535
S'TaskHandle'
p12536
aNtp12537
(S'data'
p12538
(lp12539
S'uInt32'
p12540
aNtp12541
tp12542
tp12543
sS'DAQmxAdjust1520Cal'
p12544
((lp12545
S'int32'
p12546
ag14
a((S'calHandle'
p12547
(lp12548
S'uInt32'
p12549
aNtp12550
(S'refVoltage'
p12551
(lp12552
S'float64'
p12553
aNtp12554
(S'measOutput'
p12555
(lp12556
S'float64'
p12557
aNtp12558
tp12559
tp12560
sS'DAQmxResetExportedWatchdogExpiredEventOutputTerm'
p12561
((lp12562
S'int32'
p12563
ag14
a((S'taskHandle'
p12564
(lp12565
S'TaskHandle'
p12566
aNtp12567
tp12568
tp12569
sS'DAQmxResetWatchdogAttribute'
p12570
((lp12571
S'int32'
p12572
ag14
a((S'taskHandle'
p12573
(lp12574
S'TaskHandle'
p12575
aNtp12576
(S'lines'
p12577
(lp12578
S'char'
p12579
a(lp12580
I-1
aaNtp12581
(S'attribute'
p12582
(lp12583
S'int32'
p12584
aNtp12585
tp12586
tp12587
sS'DAQmxSetAIDitherEnable'
p12588
((lp12589
S'int32'
p12590
ag14
a((S'taskHandle'
p12591
(lp12592
S'TaskHandle'
p12593
aNtp12594
(S'channel'
p12595
(lp12596
S'char'
p12597
a(lp12598
I-1
aaNtp12599
(S'data'
p12600
(lp12601
S'bool32'
p12602
aNtp12603
tp12604
tp12605
sS'DAQmxCreateMapScale'
p12606
((lp12607
S'int32'
p12608
ag14
a((S'name'
p12609
(lp12610
S'char'
p12611
a(lp12612
I-1
aaNtp12613
(S'prescaledMin'
p12614
(lp12615
S'float64'
p12616
aNtp12617
(S'prescaledMax'
p12618
(lp12619
S'float64'
p12620
aNtp12621
(S'scaledMin'
p12622
(lp12623
S'float64'
p12624
aNtp12625
(S'scaledMax'
p12626
(lp12627
S'float64'
p12628
aNtp12629
(S'preScaledUnits'
p12630
(lp12631
S'int32'
p12632
aNtp12633
(S'scaledUnits'
p12634
(lp12635
S'char'
p12636
a(lp12637
I-1
aaNtp12638
tp12639
tp12640
sS'DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc'
p12641
((lp12642
S'int32'
p12643
ag14
a((S'taskHandle'
p12644
(lp12645
S'TaskHandle'
p12646
aNtp12647
(S'channel'
p12648
(lp12649
S'char'
p12650
a(lp12651
I-1
aaNtp12652
(S'data'
p12653
(lp12654
S'char'
p12655
ag22
aNtp12656
(S'bufferSize'
p12657
(lp12658
S'uInt32'
p12659
aNtp12660
tp12661
tp12662
sS'DAQmxGetSampClkActiveEdge'
p12663
((lp12664
S'int32'
p12665
ag14
a((S'taskHandle'
p12666
(lp12667
S'TaskHandle'
p12668
aNtp12669
(S'data'
p12670
(lp12671
S'int32'
p12672
ag22
aNtp12673
tp12674
tp12675
sS'DAQmxResetCIPeriodUnits'
p12676
((lp12677
S'int32'
p12678
ag14
a((S'taskHandle'
p12679
(lp12680
S'TaskHandle'
p12681
aNtp12682
(S'channel'
p12683
(lp12684
S'char'
p12685
a(lp12686
I-1
aaNtp12687
tp12688
tp12689
sS'DAQmxGetAIMin'
p12690
((lp12691
S'int32'
p12692
ag14
a((S'taskHandle'
p12693
(lp12694
S'TaskHandle'
p12695
aNtp12696
(S'channel'
p12697
(lp12698
S'char'
p12699
a(lp12700
I-1
aaNtp12701
(S'data'
p12702
(lp12703
S'float64'
p12704
ag22
aNtp12705
tp12706
tp12707
sS'DAQmxSetAnlgEdgeRefTrigHyst'
p12708
((lp12709
S'int32'
p12710
ag14
a((S'taskHandle'
p12711
(lp12712
S'TaskHandle'
p12713
aNtp12714
(S'data'
p12715
(lp12716
S'float64'
p12717
aNtp12718
tp12719
tp12720
sS'DAQmxResetCIPeriodDiv'
p12721
((lp12722
S'int32'
p12723
ag14
a((S'taskHandle'
p12724
(lp12725
S'TaskHandle'
p12726
aNtp12727
(S'channel'
p12728
(lp12729
S'char'
p12730
a(lp12731
I-1
aaNtp12732
tp12733
tp12734
sS'DAQmxResetSwitchScanRepeatMode'
p12735
((lp12736
S'int32'
p12737
ag14
a((S'taskHandle'
p12738
(lp12739
S'TaskHandle'
p12740
aNtp12741
tp12742
tp12743
sS'DAQmxSetCITwoEdgeSepSecondDigFltrEnable'
p12744
((lp12745
S'int32'
p12746
ag14
a((S'taskHandle'
p12747
(lp12748
S'TaskHandle'
p12749
aNtp12750
(S'channel'
p12751
(lp12752
S'char'
p12753
a(lp12754
I-1
aaNtp12755
(S'data'
p12756
(lp12757
S'bool32'
p12758
aNtp12759
tp12760
tp12761
sS'DAQmxSetExportedSampClkTimebaseOutputTerm'
p12762
((lp12763
S'int32'
p12764
ag14
a((S'taskHandle'
p12765
(lp12766
S'TaskHandle'
p12767
aNtp12768
(S'data'
p12769
(lp12770
S'char'
p12771
ag22
aNtp12772
tp12773
tp12774
sS'DAQmxGetAIConvSrc'
p12775
((lp12776
S'int32'
p12777
ag14
a((S'taskHandle'
p12778
(lp12779
S'TaskHandle'
p12780
aNtp12781
(S'data'
p12782
(lp12783
S'char'
p12784
ag22
aNtp12785
(S'bufferSize'
p12786
(lp12787
S'uInt32'
p12788
aNtp12789
tp12790
tp12791
sS'DAQmxSetCIMax'
p12792
((lp12793
S'int32'
p12794
ag14
a((S'taskHandle'
p12795
(lp12796
S'TaskHandle'
p12797
aNtp12798
(S'channel'
p12799
(lp12800
S'char'
p12801
a(lp12802
I-1
aaNtp12803
(S'data'
p12804
(lp12805
S'float64'
p12806
aNtp12807
tp12808
tp12809
sS'DAQmxResetAIMemMapEnable'
p12810
((lp12811
S'int32'
p12812
ag14
a((S'taskHandle'
p12813
(lp12814
S'TaskHandle'
p12815
aNtp12816
(S'channel'
p12817
(lp12818
S'char'
p12819
a(lp12820
I-1
aaNtp12821
tp12822
tp12823
sS'DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p12824
((lp12825
S'int32'
p12826
ag14
a((S'taskHandle'
p12827
(lp12828
S'TaskHandle'
p12829
aNtp12830
(S'channel'
p12831
(lp12832
S'char'
p12833
a(lp12834
I-1
aaNtp12835
(S'data'
p12836
(lp12837
S'float64'
p12838
aNtp12839
tp12840
tp12841
sS'DAQmxResetDigEdgeArmStartTrigEdge'
p12842
((lp12843
S'int32'
p12844
ag14
a((S'taskHandle'
p12845
(lp12846
S'TaskHandle'
p12847
aNtp12848
tp12849
tp12850
sS'DAQmxSetCIPulseWidthDigFltrMinPulseWidth'
p12851
((lp12852
S'int32'
p12853
ag14
a((S'taskHandle'
p12854
(lp12855
S'TaskHandle'
p12856
aNtp12857
(S'channel'
p12858
(lp12859
S'char'
p12860
a(lp12861
I-1
aaNtp12862
(S'data'
p12863
(lp12864
S'float64'
p12865
aNtp12866
tp12867
tp12868
sS'DAQmxSetCISemiPeriodUnits'
p12869
((lp12870
S'int32'
p12871
ag14
a((S'taskHandle'
p12872
(lp12873
S'TaskHandle'
p12874
aNtp12875
(S'channel'
p12876
(lp12877
S'char'
p12878
a(lp12879
I-1
aaNtp12880
(S'data'
p12881
(lp12882
S'int32'
p12883
aNtp12884
tp12885
tp12886
sS'DAQmxResetAISoundPressureMaxSoundPressureLvl'
p12887
((lp12888
S'int32'
p12889
ag14
a((S'taskHandle'
p12890
(lp12891
S'TaskHandle'
p12892
aNtp12893
(S'channel'
p12894
(lp12895
S'char'
p12896
a(lp12897
I-1
aaNtp12898
tp12899
tp12900
sS'DAQmxGetSwitchDevSwitchChanList'
p12901
((lp12902
S'int32'
p12903
ag14
a((S'deviceName'
p12904
(lp12905
S'char'
p12906
a(lp12907
I-1
aaNtp12908
(S'data'
p12909
(lp12910
S'char'
p12911
ag22
aNtp12912
(S'bufferSize'
p12913
(lp12914
S'uInt32'
p12915
aNtp12916
tp12917
tp12918
sS'DAQmxGetCIEncoderAInputTerm'
p12919
((lp12920
S'int32'
p12921
ag14
a((S'taskHandle'
p12922
(lp12923
S'TaskHandle'
p12924
aNtp12925
(S'channel'
p12926
(lp12927
S'char'
p12928
a(lp12929
I-1
aaNtp12930
(S'data'
p12931
(lp12932
S'char'
p12933
ag22
aNtp12934
(S'bufferSize'
p12935
(lp12936
S'uInt32'
p12937
aNtp12938
tp12939
tp12940
sS'DAQmxGetAnlgEdgeRefTrigCoupling'
p12941
((lp12942
S'int32'
p12943
ag14
a((S'taskHandle'
p12944
(lp12945
S'TaskHandle'
p12946
aNtp12947
(S'data'
p12948
(lp12949
S'int32'
p12950
ag22
aNtp12951
tp12952
tp12953
sS'DAQmxResetAILVDTUnits'
p12954
((lp12955
S'int32'
p12956
ag14
a((S'taskHandle'
p12957
(lp12958
S'TaskHandle'
p12959
aNtp12960
(S'channel'
p12961
(lp12962
S'char'
p12963
a(lp12964
I-1
aaNtp12965
tp12966
tp12967
sS'DAQmxResetCIEncoderBInputDigFltrEnable'
p12968
((lp12969
S'int32'
p12970
ag14
a((S'taskHandle'
p12971
(lp12972
S'TaskHandle'
p12973
aNtp12974
(S'channel'
p12975
(lp12976
S'char'
p12977
a(lp12978
I-1
aaNtp12979
tp12980
tp12981
sS'DAQmxGetScaleMapScaledMin'
p12982
((lp12983
S'int32'
p12984
ag14
a((S'scaleName'
p12985
(lp12986
S'char'
p12987
a(lp12988
I-1
aaNtp12989
(S'data'
p12990
(lp12991
S'float64'
p12992
ag22
aNtp12993
tp12994
tp12995
sS'DAQmxGetReadTotalSampPerChanAcquired'
p12996
((lp12997
S'int32'
p12998
ag14
a((S'taskHandle'
p12999
(lp13000
S'TaskHandle'
p13001
aNtp13002
(S'data'
p13003
(lp13004
S'uInt64'
p13005
ag22
aNtp13006
tp13007
tp13008
sS'DAQmxSetWriteSleepTime'
p13009
((lp13010
S'int32'
p13011
ag14
a((S'taskHandle'
p13012
(lp13013
S'TaskHandle'
p13014
aNtp13015
(S'data'
p13016
(lp13017
S'float64'
p13018
aNtp13019
tp13020
tp13021
sS'DAQmxCreateTEDSAIStrainGageChan'
p13022
((lp13023
S'int32'
p13024
ag14
a((S'taskHandle'
p13025
(lp13026
S'TaskHandle'
p13027
aNtp13028
(S'physicalChannel'
p13029
(lp13030
S'char'
p13031
a(lp13032
I-1
aaNtp13033
(S'nameToAssignToChannel'
p13034
(lp13035
S'char'
p13036
a(lp13037
I-1
aaNtp13038
(S'minVal'
p13039
(lp13040
S'float64'
p13041
aNtp13042
(S'maxVal'
p13043
(lp13044
S'float64'
p13045
aNtp13046
(S'units'
p13047
(lp13048
S'int32'
p13049
aNtp13050
(S'voltageExcitSource'
p13051
(lp13052
S'int32'
p13053
aNtp13054
(S'voltageExcitVal'
p13055
(lp13056
S'float64'
p13057
aNtp13058
(S'initialBridgeVoltage'
p13059
(lp13060
S'float64'
p13061
aNtp13062
(S'leadWireResistance'
p13063
(lp13064
S'float64'
p13065
aNtp13066
(S'customScaleName'
p13067
(lp13068
S'char'
p13069
a(lp13070
I-1
aaNtp13071
tp13072
tp13073
sS'DAQmxGetAOIdleOutputBehavior'
p13074
((lp13075
S'int32'
p13076
ag14
a((S'taskHandle'
p13077
(lp13078
S'TaskHandle'
p13079
aNtp13080
(S'channel'
p13081
(lp13082
S'char'
p13083
a(lp13084
I-1
aaNtp13085
(S'data'
p13086
(lp13087
S'int32'
p13088
ag22
aNtp13089
tp13090
tp13091
sS'DAQmxSetAOResolutionUnits'
p13092
((lp13093
S'int32'
p13094
ag14
a((S'taskHandle'
p13095
(lp13096
S'TaskHandle'
p13097
aNtp13098
(S'channel'
p13099
(lp13100
S'char'
p13101
a(lp13102
I-1
aaNtp13103
(S'data'
p13104
(lp13105
S'int32'
p13106
aNtp13107
tp13108
tp13109
sS'DAQmxGetAIRVDTUnits'
p13110
((lp13111
S'int32'
p13112
ag14
a((S'taskHandle'
p13113
(lp13114
S'TaskHandle'
p13115
aNtp13116
(S'channel'
p13117
(lp13118
S'char'
p13119
a(lp13120
I-1
aaNtp13121
(S'data'
p13122
(lp13123
S'int32'
p13124
ag22
aNtp13125
tp13126
tp13127
sS'DAQmxGetAIExcitVoltageOrCurrent'
p13128
((lp13129
S'int32'
p13130
ag14
a((S'taskHandle'
p13131
(lp13132
S'TaskHandle'
p13133
aNtp13134
(S'channel'
p13135
(lp13136
S'char'
p13137
a(lp13138
I-1
aaNtp13139
(S'data'
p13140
(lp13141
S'int32'
p13142
ag22
aNtp13143
tp13144
tp13145
sS'DAQmxResetAIResistanceUnits'
p13146
((lp13147
S'int32'
p13148
ag14
a((S'taskHandle'
p13149
(lp13150
S'TaskHandle'
p13151
aNtp13152
(S'channel'
p13153
(lp13154
S'char'
p13155
a(lp13156
I-1
aaNtp13157
tp13158
tp13159
sS'DAQmxSetCICountEdgesDir'
p13160
((lp13161
S'int32'
p13162
ag14
a((S'taskHandle'
p13163
(lp13164
S'TaskHandle'
p13165
aNtp13166
(S'channel'
p13167
(lp13168
S'char'
p13169
a(lp13170
I-1
aaNtp13171
(S'data'
p13172
(lp13173
S'int32'
p13174
aNtp13175
tp13176
tp13177
sS'DAQmxResetAIBridgeCfg'
p13178
((lp13179
S'int32'
p13180
ag14
a((S'taskHandle'
p13181
(lp13182
S'TaskHandle'
p13183
aNtp13184
(S'channel'
p13185
(lp13186
S'char'
p13187
a(lp13188
I-1
aaNtp13189
tp13190
tp13191
sS'DAQmxGetAILeadWireResistance'
p13192
((lp13193
S'int32'
p13194
ag14
a((S'taskHandle'
p13195
(lp13196
S'TaskHandle'
p13197
aNtp13198
(S'channel'
p13199
(lp13200
S'char'
p13201
a(lp13202
I-1
aaNtp13203
(S'data'
p13204
(lp13205
S'float64'
p13206
ag22
aNtp13207
tp13208
tp13209
sS'DAQmxResetExportedHshkEventInterlockedAssertOnStart'
p13210
((lp13211
S'int32'
p13212
ag14
a((S'taskHandle'
p13213
(lp13214
S'TaskHandle'
p13215
aNtp13216
tp13217
tp13218
sS'DAQmxAdjustDSAAICal'
p13219
((lp13220
S'int32'
p13221
ag14
a((S'calHandle'
p13222
(lp13223
S'uInt32'
p13224
aNtp13225
(S'referenceVoltage'
p13226
(lp13227
S'float64'
p13228
aNtp13229
tp13230
tp13231
sS'DAQmxResetCOPulseFreq'
p13232
((lp13233
S'int32'
p13234
ag14
a((S'taskHandle'
p13235
(lp13236
S'TaskHandle'
p13237
aNtp13238
(S'channel'
p13239
(lp13240
S'char'
p13241
a(lp13242
I-1
aaNtp13243
tp13244
tp13245
sS'DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p13246
((lp13247
S'int32'
p13248
ag14
a((S'taskHandle'
p13249
(lp13250
S'TaskHandle'
p13251
aNtp13252
(S'data'
p13253
(lp13254
S'float64'
p13255
ag22
aNtp13256
tp13257
tp13258
sS'DAQmxGetExported20MHzTimebaseOutputTerm'
p13259
((lp13260
S'int32'
p13261
ag14
a((S'taskHandle'
p13262
(lp13263
S'TaskHandle'
p13264
aNtp13265
(S'data'
p13266
(lp13267
S'char'
p13268
ag22
aNtp13269
(S'bufferSize'
p13270
(lp13271
S'uInt32'
p13272
aNtp13273
tp13274
tp13275
sS'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p13276
((lp13277
S'int32'
p13278
ag14
a((S'taskHandle'
p13279
(lp13280
S'TaskHandle'
p13281
aNtp13282
(S'data'
p13283
(lp13284
S'char'
p13285
ag22
aNtp13286
(S'bufferSize'
p13287
(lp13288
S'uInt32'
p13289
aNtp13290
tp13291
tp13292
sS'DAQmxResetCIPulseWidthDigFltrTimebaseRate'
p13293
((lp13294
S'int32'
p13295
ag14
a((S'taskHandle'
p13296
(lp13297
S'TaskHandle'
p13298
aNtp13299
(S'channel'
p13300
(lp13301
S'char'
p13302
a(lp13303
I-1
aaNtp13304
tp13305
tp13306
sS'DAQmxResetCIPulseWidthDigFltrTimebaseSrc'
p13307
((lp13308
S'int32'
p13309
ag14
a((S'taskHandle'
p13310
(lp13311
S'TaskHandle'
p13312
aNtp13313
(S'channel'
p13314
(lp13315
S'char'
p13316
a(lp13317
I-1
aaNtp13318
tp13319
tp13320
sS'DAQmxSetCIEncoderZInputDigFltrTimebaseSrc'
p13321
((lp13322
S'int32'
p13323
ag14
a((S'taskHandle'
p13324
(lp13325
S'TaskHandle'
p13326
aNtp13327
(S'channel'
p13328
(lp13329
S'char'
p13330
a(lp13331
I-1
aaNtp13332
(S'data'
p13333
(lp13334
S'char'
p13335
ag22
aNtp13336
tp13337
tp13338
sS'DAQmxGetPersistedChanAllowInteractiveEditing'
p13339
((lp13340
S'int32'
p13341
ag14
a((S'channel'
p13342
(lp13343
S'char'
p13344
a(lp13345
I-1
aaNtp13346
(S'data'
p13347
(lp13348
S'bool32'
p13349
ag22
aNtp13350
tp13351
tp13352
sS'DAQmxResetAIThrmstrR1'
p13353
((lp13354
S'int32'
p13355
ag14
a((S'taskHandle'
p13356
(lp13357
S'TaskHandle'
p13358
aNtp13359
(S'channel'
p13360
(lp13361
S'char'
p13362
a(lp13363
I-1
aaNtp13364
tp13365
tp13366
sS'DAQmxGetAODataXferReqCond'
p13367
((lp13368
S'int32'
p13369
ag14
a((S'taskHandle'
p13370
(lp13371
S'TaskHandle'
p13372
aNtp13373
(S'channel'
p13374
(lp13375
S'char'
p13376
a(lp13377
I-1
aaNtp13378
(S'data'
p13379
(lp13380
S'int32'
p13381
ag22
aNtp13382
tp13383
tp13384
sS'DAQmxResetDODataXferReqCond'
p13385
((lp13386
S'int32'
p13387
ag14
a((S'taskHandle'
p13388
(lp13389
S'TaskHandle'
p13390
aNtp13391
(S'channel'
p13392
(lp13393
S'char'
p13394
a(lp13395
I-1
aaNtp13396
tp13397
tp13398
sS'DAQmxResetAIEnhancedAliasRejectionEnable'
p13399
((lp13400
S'int32'
p13401
ag14
a((S'taskHandle'
p13402
(lp13403
S'TaskHandle'
p13404
aNtp13405
(S'channel'
p13406
(lp13407
S'char'
p13408
a(lp13409
I-1
aaNtp13410
tp13411
tp13412
sS'DAQmxResetCITwoEdgeSepSecondTerm'
p13413
((lp13414
S'int32'
p13415
ag14
a((S'taskHandle'
p13416
(lp13417
S'TaskHandle'
p13418
aNtp13419
(S'channel'
p13420
(lp13421
S'char'
p13422
a(lp13423
I-1
aaNtp13424
tp13425
tp13426
sS'DAQmxSetScaleLinSlope'
p13427
((lp13428
S'int32'
p13429
ag14
a((S'scaleName'
p13430
(lp13431
S'char'
p13432
a(lp13433
I-1
aaNtp13434
(S'data'
p13435
(lp13436
S'float64'
p13437
aNtp13438
tp13439
tp13440
sS'DAQmxResetExportedAdvCmpltEventPulseWidth'
p13441
((lp13442
S'int32'
p13443
ag14
a((S'taskHandle'
p13444
(lp13445
S'TaskHandle'
p13446
aNtp13447
tp13448
tp13449
sS'DAQmxGetSampClkTimebaseSrc'
p13450
((lp13451
S'int32'
p13452
ag14
a((S'taskHandle'
p13453
(lp13454
S'TaskHandle'
p13455
aNtp13456
(S'data'
p13457
(lp13458
S'char'
p13459
ag22
aNtp13460
(S'bufferSize'
p13461
(lp13462
S'uInt32'
p13463
aNtp13464
tp13465
tp13466
sS'DAQmxGetBufInputOnbrdBufSize'
p13467
((lp13468
S'int32'
p13469
ag14
a((S'taskHandle'
p13470
(lp13471
S'TaskHandle'
p13472
aNtp13473
(S'data'
p13474
(lp13475
S'uInt32'
p13476
ag22
aNtp13477
tp13478
tp13479
sS'DAQmxReadBinaryI32'
p13480
((lp13481
S'int32'
p13482
ag14
a((S'taskHandle'
p13483
(lp13484
S'TaskHandle'
p13485
aNtp13486
(S'numSampsPerChan'
p13487
(lp13488
S'int32'
p13489
aNtp13490
(S'timeout'
p13491
(lp13492
S'float64'
p13493
aNtp13494
(S'fillMode'
p13495
(lp13496
S'bool32'
p13497
aNtp13498
(S'readArray'
p13499
(lp13500
S'int32'
p13501
a(lp13502
I-1
aaNtp13503
(S'arraySizeInSamps'
p13504
(lp13505
S'uInt32'
p13506
aNtp13507
(S'sampsPerChanRead'
p13508
(lp13509
S'int32'
p13510
ag22
aNtp13511
(S'reserved'
p13512
(lp13513
S'bool32'
p13514
ag22
aNtp13515
tp13516
tp13517
sS'DAQmxSetOnDemandSimultaneousAOEnable'
p13518
((lp13519
S'int32'
p13520
ag14
a((S'taskHandle'
p13521
(lp13522
S'TaskHandle'
p13523
aNtp13524
(S'data'
p13525
(lp13526
S'bool32'
p13527
aNtp13528
tp13529
tp13530
sS'DAQmxResetAnlgWinStartTrigWhen'
p13531
((lp13532
S'int32'
p13533
ag14
a((S'taskHandle'
p13534
(lp13535
S'TaskHandle'
p13536
aNtp13537
tp13538
tp13539
sS'DAQmxCreateAIRTDChan'
p13540
((lp13541
S'int32'
p13542
ag14
a((S'taskHandle'
p13543
(lp13544
S'TaskHandle'
p13545
aNtp13546
(S'physicalChannel'
p13547
(lp13548
S'char'
p13549
a(lp13550
I-1
aaNtp13551
(S'nameToAssignToChannel'
p13552
(lp13553
S'char'
p13554
a(lp13555
I-1
aaNtp13556
(S'minVal'
p13557
(lp13558
S'float64'
p13559
aNtp13560
(S'maxVal'
p13561
(lp13562
S'float64'
p13563
aNtp13564
(S'units'
p13565
(lp13566
S'int32'
p13567
aNtp13568
(S'rtdType'
p13569
(lp13570
S'int32'
p13571
aNtp13572
(S'resistanceConfig'
p13573
(lp13574
S'int32'
p13575
aNtp13576
(S'currentExcitSource'
p13577
(lp13578
S'int32'
p13579
aNtp13580
(S'currentExcitVal'
p13581
(lp13582
S'float64'
p13583
aNtp13584
(S'r0'
p13585
(lp13586
S'float64'
p13587
aNtp13588
tp13589
tp13590
sS'DAQmxGetWatchdogTimeout'
p13591
((lp13592
S'int32'
p13593
ag14
a((S'taskHandle'
p13594
(lp13595
S'TaskHandle'
p13596
aNtp13597
(S'data'
p13598
(lp13599
S'float64'
p13600
ag22
aNtp13601
tp13602
tp13603
sS'DAQmxResetDOInvertLines'
p13604
((lp13605
S'int32'
p13606
ag14
a((S'taskHandle'
p13607
(lp13608
S'TaskHandle'
p13609
aNtp13610
(S'channel'
p13611
(lp13612
S'char'
p13613
a(lp13614
I-1
aaNtp13615
tp13616
tp13617
sS'DAQmxSetCIFreqStartingEdge'
p13618
((lp13619
S'int32'
p13620
ag14
a((S'taskHandle'
p13621
(lp13622
S'TaskHandle'
p13623
aNtp13624
(S'channel'
p13625
(lp13626
S'char'
p13627
a(lp13628
I-1
aaNtp13629
(S'data'
p13630
(lp13631
S'int32'
p13632
aNtp13633
tp13634
tp13635
sS'DAQmxResetCIEncoderAInputDigSyncEnable'
p13636
((lp13637
S'int32'
p13638
ag14
a((S'taskHandle'
p13639
(lp13640
S'TaskHandle'
p13641
aNtp13642
(S'channel'
p13643
(lp13644
S'char'
p13645
a(lp13646
I-1
aaNtp13647
tp13648
tp13649
sS'DAQmxSetAIChanCalTablePreScaledVals'
p13650
((lp13651
S'int32'
p13652
ag14
a((S'taskHandle'
p13653
(lp13654
S'TaskHandle'
p13655
aNtp13656
(S'channel'
p13657
(lp13658
S'char'
p13659
a(lp13660
I-1
aaNtp13661
(S'data'
p13662
(lp13663
S'float64'
p13664
ag22
aNtp13665
(S'arraySizeInSamples'
p13666
(lp13667
S'uInt32'
p13668
aNtp13669
tp13670
tp13671
sS'DAQmxResetAIInputSrc'
p13672
((lp13673
S'int32'
p13674
ag14
a((S'taskHandle'
p13675
(lp13676
S'TaskHandle'
p13677
aNtp13678
(S'channel'
p13679
(lp13680
S'char'
p13681
a(lp13682
I-1
aaNtp13683
tp13684
tp13685
sS'DAQmxResetCIEncoderZInputDigSyncEnable'
p13686
((lp13687
S'int32'
p13688
ag14
a((S'taskHandle'
p13689
(lp13690
S'TaskHandle'
p13691
aNtp13692
(S'channel'
p13693
(lp13694
S'char'
p13695
a(lp13696
I-1
aaNtp13697
tp13698
tp13699
sS'DAQmxResetCIEncoderZInputDigFltrEnable'
p13700
((lp13701
S'int32'
p13702
ag14
a((S'taskHandle'
p13703
(lp13704
S'TaskHandle'
p13705
aNtp13706
(S'channel'
p13707
(lp13708
S'char'
p13709
a(lp13710
I-1
aaNtp13711
tp13712
tp13713
sS'DAQmxResetDOOutputDriveType'
p13714
((lp13715
S'int32'
p13716
ag14
a((S'taskHandle'
p13717
(lp13718
S'TaskHandle'
p13719
aNtp13720
(S'channel'
p13721
(lp13722
S'char'
p13723
a(lp13724
I-1
aaNtp13725
tp13726
tp13727
sS'DAQmxSetAnlgWinStartTrigBtm'
p13728
((lp13729
S'int32'
p13730
ag14
a((S'taskHandle'
p13731
(lp13732
S'TaskHandle'
p13733
aNtp13734
(S'data'
p13735
(lp13736
S'float64'
p13737
aNtp13738
tp13739
tp13740
sS'DAQmxGetDevIsSimulated'
p13741
((lp13742
S'int32'
p13743
ag14
a((S'device'
p13744
(lp13745
S'char'
p13746
a(lp13747
I-1
aaNtp13748
(S'data'
p13749
(lp13750
S'bool32'
p13751
ag22
aNtp13752
tp13753
tp13754
sS'DAQmxResetAOCurrentUnits'
p13755
((lp13756
S'int32'
p13757
ag14
a((S'taskHandle'
p13758
(lp13759
S'TaskHandle'
p13760
aNtp13761
(S'channel'
p13762
(lp13763
S'char'
p13764
a(lp13765
I-1
aaNtp13766
tp13767
tp13768
sS'DAQmxWriteDigitalU16'
p13769
((lp13770
S'int32'
p13771
ag14
a((S'taskHandle'
p13772
(lp13773
S'TaskHandle'
p13774
aNtp13775
(S'numSampsPerChan'
p13776
(lp13777
S'int32'
p13778
aNtp13779
(S'autoStart'
p13780
(lp13781
S'bool32'
p13782
aNtp13783
(S'timeout'
p13784
(lp13785
S'float64'
p13786
aNtp13787
(S'dataLayout'
p13788
(lp13789
S'bool32'
p13790
aNtp13791
(S'writeArray'
p13792
(lp13793
S'uInt16'
p13794
a(lp13795
I-1
aaNtp13796
(S'sampsPerChanWritten'
p13797
(lp13798
S'int32'
p13799
ag22
aNtp13800
(S'reserved'
p13801
(lp13802
S'bool32'
p13803
ag22
aNtp13804
tp13805
tp13806
sS'DAQmxSetMasterTimebaseSrc'
p13807
((lp13808
S'int32'
p13809
ag14
a((S'taskHandle'
p13810
(lp13811
S'TaskHandle'
p13812
aNtp13813
(S'data'
p13814
(lp13815
S'char'
p13816
ag22
aNtp13817
tp13818
tp13819
sS'DAQmxResetExportedCtrOutEventOutputBehavior'
p13820
((lp13821
S'int32'
p13822
ag14
a((S'taskHandle'
p13823
(lp13824
S'TaskHandle'
p13825
aNtp13826
tp13827
tp13828
sS'DAQmxResetAIExcitVal'
p13829
((lp13830
S'int32'
p13831
ag14
a((S'taskHandle'
p13832
(lp13833
S'TaskHandle'
p13834
aNtp13835
(S'channel'
p13836
(lp13837
S'char'
p13838
a(lp13839
I-1
aaNtp13840
tp13841
tp13842
sS'DAQmxGetSampClkSrc'
p13843
((lp13844
S'int32'
p13845
ag14
a((S'taskHandle'
p13846
(lp13847
S'TaskHandle'
p13848
aNtp13849
(S'data'
p13850
(lp13851
S'char'
p13852
ag22
aNtp13853
(S'bufferSize'
p13854
(lp13855
S'uInt32'
p13856
aNtp13857
tp13858
tp13859
sS'DAQmxSetScaleLinYIntercept'
p13860
((lp13861
S'int32'
p13862
ag14
a((S'scaleName'
p13863
(lp13864
S'char'
p13865
a(lp13866
I-1
aaNtp13867
(S'data'
p13868
(lp13869
S'float64'
p13870
aNtp13871
tp13872
tp13873
sS'DAQmxCreateTEDSAIVoltageChan'
p13874
((lp13875
S'int32'
p13876
ag14
a((S'taskHandle'
p13877
(lp13878
S'TaskHandle'
p13879
aNtp13880
(S'physicalChannel'
p13881
(lp13882
S'char'
p13883
a(lp13884
I-1
aaNtp13885
(S'nameToAssignToChannel'
p13886
(lp13887
S'char'
p13888
a(lp13889
I-1
aaNtp13890
(S'terminalConfig'
p13891
(lp13892
S'int32'
p13893
aNtp13894
(S'minVal'
p13895
(lp13896
S'float64'
p13897
aNtp13898
(S'maxVal'
p13899
(lp13900
S'float64'
p13901
aNtp13902
(S'units'
p13903
(lp13904
S'int32'
p13905
aNtp13906
(S'customScaleName'
p13907
(lp13908
S'char'
p13909
a(lp13910
I-1
aaNtp13911
tp13912
tp13913
sS'DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc'
p13914
((lp13915
S'int32'
p13916
ag14
a((S'taskHandle'
p13917
(lp13918
S'TaskHandle'
p13919
aNtp13920
tp13921
tp13922
sS'DAQmxSetAOLoadImpedance'
p13923
((lp13924
S'int32'
p13925
ag14
a((S'taskHandle'
p13926
(lp13927
S'TaskHandle'
p13928
aNtp13929
(S'channel'
p13930
(lp13931
S'char'
p13932
a(lp13933
I-1
aaNtp13934
(S'data'
p13935
(lp13936
S'float64'
p13937
aNtp13938
tp13939
tp13940
sS'DAQmxResetExportedAdvCmpltEventOutputTerm'
p13941
((lp13942
S'int32'
p13943
ag14
a((S'taskHandle'
p13944
(lp13945
S'TaskHandle'
p13946
aNtp13947
tp13948
tp13949
sS'DAQmxCreateTEDSAIPosRVDTChan'
p13950
((lp13951
S'int32'
p13952
ag14
a((S'taskHandle'
p13953
(lp13954
S'TaskHandle'
p13955
aNtp13956
(S'physicalChannel'
p13957
(lp13958
S'char'
p13959
a(lp13960
I-1
aaNtp13961
(S'nameToAssignToChannel'
p13962
(lp13963
S'char'
p13964
a(lp13965
I-1
aaNtp13966
(S'minVal'
p13967
(lp13968
S'float64'
p13969
aNtp13970
(S'maxVal'
p13971
(lp13972
S'float64'
p13973
aNtp13974
(S'units'
p13975
(lp13976
S'int32'
p13977
aNtp13978
(S'voltageExcitSource'
p13979
(lp13980
S'int32'
p13981
aNtp13982
(S'voltageExcitVal'
p13983
(lp13984
S'float64'
p13985
aNtp13986
(S'voltageExcitFreq'
p13987
(lp13988
S'float64'
p13989
aNtp13990
(S'ACExcitWireMode'
p13991
(lp13992
S'int32'
p13993
aNtp13994
(S'customScaleName'
p13995
(lp13996
S'char'
p13997
a(lp13998
I-1
aaNtp13999
tp14000
tp14001
sS'DAQmxGetCIPulseWidthDigSyncEnable'
p14002
((lp14003
S'int32'
p14004
ag14
a((S'taskHandle'
p14005
(lp14006
S'TaskHandle'
p14007
aNtp14008
(S'channel'
p14009
(lp14010
S'char'
p14011
a(lp14012
I-1
aaNtp14013
(S'data'
p14014
(lp14015
S'bool32'
p14016
ag22
aNtp14017
tp14018
tp14019
sS'DAQmxGetCOOutputState'
p14020
((lp14021
S'int32'
p14022
ag14
a((S'taskHandle'
p14023
(lp14024
S'TaskHandle'
p14025
aNtp14026
(S'channel'
p14027
(lp14028
S'char'
p14029
a(lp14030
I-1
aaNtp14031
(S'data'
p14032
(lp14033
S'int32'
p14034
ag22
aNtp14035
tp14036
tp14037
sS'DAQmxGetAILowpassSwitchCapClkSrc'
p14038
((lp14039
S'int32'
p14040
ag14
a((S'taskHandle'
p14041
(lp14042
S'TaskHandle'
p14043
aNtp14044
(S'channel'
p14045
(lp14046
S'char'
p14047
a(lp14048
I-1
aaNtp14049
(S'data'
p14050
(lp14051
S'int32'
p14052
ag22
aNtp14053
tp14054
tp14055
sS'DAQmxSetExportedAdvTrigOutputTerm'
p14056
((lp14057
S'int32'
p14058
ag14
a((S'taskHandle'
p14059
(lp14060
S'TaskHandle'
p14061
aNtp14062
(S'data'
p14063
(lp14064
S'char'
p14065
ag22
aNtp14066
tp14067
tp14068
sS'DAQmxSetAnlgWinStartTrigCoupling'
p14069
((lp14070
S'int32'
p14071
ag14
a((S'taskHandle'
p14072
(lp14073
S'TaskHandle'
p14074
aNtp14075
(S'data'
p14076
(lp14077
S'int32'
p14078
aNtp14079
tp14080
tp14081
sS'DAQmxGetDINumLines'
p14082
((lp14083
S'int32'
p14084
ag14
a((S'taskHandle'
p14085
(lp14086
S'TaskHandle'
p14087
aNtp14088
(S'channel'
p14089
(lp14090
S'char'
p14091
a(lp14092
I-1
aaNtp14093
(S'data'
p14094
(lp14095
S'uInt32'
p14096
ag22
aNtp14097
tp14098
tp14099
sS'DAQmxResetDIDigFltrMinPulseWidth'
p14100
((lp14101
S'int32'
p14102
ag14
a((S'taskHandle'
p14103
(lp14104
S'TaskHandle'
p14105
aNtp14106
(S'channel'
p14107
(lp14108
S'char'
p14109
a(lp14110
I-1
aaNtp14111
tp14112
tp14113
sS'DAQmxGetAIExcitDCorAC'
p14114
((lp14115
S'int32'
p14116
ag14
a((S'taskHandle'
p14117
(lp14118
S'TaskHandle'
p14119
aNtp14120
(S'channel'
p14121
(lp14122
S'char'
p14123
a(lp14124
I-1
aaNtp14125
(S'data'
p14126
(lp14127
S'int32'
p14128
ag22
aNtp14129
tp14130
tp14131
sS'DAQmxGetExportedAdvCmpltEventOutputTerm'
p14132
((lp14133
S'int32'
p14134
ag14
a((S'taskHandle'
p14135
(lp14136
S'TaskHandle'
p14137
aNtp14138
(S'data'
p14139
(lp14140
S'char'
p14141
ag22
aNtp14142
(S'bufferSize'
p14143
(lp14144
S'uInt32'
p14145
aNtp14146
tp14147
tp14148
sS'DAQmxResetStartTrigDelayUnits'
p14149
((lp14150
S'int32'
p14151
ag14
a((S'taskHandle'
p14152
(lp14153
S'TaskHandle'
p14154
aNtp14155
tp14156
tp14157
sS'DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth'
p14158
((lp14159
S'int32'
p14160
ag14
a((S'taskHandle'
p14161
(lp14162
S'TaskHandle'
p14163
aNtp14164
tp14165
tp14166
sS'DAQmxConnectTerms'
p14167
((lp14168
S'int32'
p14169
ag14
a((S'sourceTerminal'
p14170
(lp14171
S'char'
p14172
a(lp14173
I-1
aaNtp14174
(S'destinationTerminal'
p14175
(lp14176
S'char'
p14177
a(lp14178
I-1
aaNtp14179
(S'signalModifiers'
p14180
(lp14181
S'int32'
p14182
aNtp14183
tp14184
tp14185
sS'DAQmxGetExportedAdvTrigPulsePolarity'
p14186
((lp14187
S'int32'
p14188
ag14
a((S'taskHandle'
p14189
(lp14190
S'TaskHandle'
p14191
aNtp14192
(S'data'
p14193
(lp14194
S'int32'
p14195
ag22
aNtp14196
tp14197
tp14198
sS'DAQmxSetDigEdgeArmStartTrigSrc'
p14199
((lp14200
S'int32'
p14201
ag14
a((S'taskHandle'
p14202
(lp14203
S'TaskHandle'
p14204
aNtp14205
(S'data'
p14206
(lp14207
S'char'
p14208
ag22
aNtp14209
tp14210
tp14211
sS'DAQmxGetCILinEncoderDistPerPulse'
p14212
((lp14213
S'int32'
p14214
ag14
a((S'taskHandle'
p14215
(lp14216
S'TaskHandle'
p14217
aNtp14218
(S'channel'
p14219
(lp14220
S'char'
p14221
a(lp14222
I-1
aaNtp14223
(S'data'
p14224
(lp14225
S'float64'
p14226
ag22
aNtp14227
tp14228
tp14229
sS'DAQmxGetAIChanCalVerifAcqVals'
p14230
((lp14231
S'int32'
p14232
ag14
a((S'taskHandle'
p14233
(lp14234
S'TaskHandle'
p14235
aNtp14236
(S'channel'
p14237
(lp14238
S'char'
p14239
a(lp14240
I-1
aaNtp14241
(S'data'
p14242
(lp14243
S'float64'
p14244
ag22
aNtp14245
(S'arraySizeInSamples'
p14246
(lp14247
S'uInt32'
p14248
aNtp14249
tp14250
tp14251
sS'DAQmxSetAnlgLvlPauseTrigHyst'
p14252
((lp14253
S'int32'
p14254
ag14
a((S'taskHandle'
p14255
(lp14256
S'TaskHandle'
p14257
aNtp14258
(S'data'
p14259
(lp14260
S'float64'
p14261
aNtp14262
tp14263
tp14264
sS'DAQmxGetSwitchDevNumColumns'
p14265
((lp14266
S'int32'
p14267
ag14
a((S'deviceName'
p14268
(lp14269
S'char'
p14270
a(lp14271
I-1
aaNtp14272
(S'data'
p14273
(lp14274
S'uInt32'
p14275
ag22
aNtp14276
tp14277
tp14278
sS'DAQmxSetCITwoEdgeSepFirstDigSyncEnable'
p14279
((lp14280
S'int32'
p14281
ag14
a((S'taskHandle'
p14282
(lp14283
S'TaskHandle'
p14284
aNtp14285
(S'channel'
p14286
(lp14287
S'char'
p14288
a(lp14289
I-1
aaNtp14290
(S'data'
p14291
(lp14292
S'bool32'
p14293
aNtp14294
tp14295
tp14296
sS'DAQmxSetAIAutoZeroMode'
p14297
((lp14298
S'int32'
p14299
ag14
a((S'taskHandle'
p14300
(lp14301
S'TaskHandle'
p14302
aNtp14303
(S'channel'
p14304
(lp14305
S'char'
p14306
a(lp14307
I-1
aaNtp14308
(S'data'
p14309
(lp14310
S'int32'
p14311
aNtp14312
tp14313
tp14314
sS'DAQmxSetAIFreqThreshVoltage'
p14315
((lp14316
S'int32'
p14317
ag14
a((S'taskHandle'
p14318
(lp14319
S'TaskHandle'
p14320
aNtp14321
(S'channel'
p14322
(lp14323
S'char'
p14324
a(lp14325
I-1
aaNtp14326
(S'data'
p14327
(lp14328
S'float64'
p14329
aNtp14330
tp14331
tp14332
sS'DAQmxGetAnlgWinPauseTrigBtm'
p14333
((lp14334
S'int32'
p14335
ag14
a((S'taskHandle'
p14336
(lp14337
S'TaskHandle'
p14338
aNtp14339
(S'data'
p14340
(lp14341
S'float64'
p14342
ag22
aNtp14343
tp14344
tp14345
sS'DAQmxResetDigEdgeAdvTrigDigFltrEnable'
p14346
((lp14347
S'int32'
p14348
ag14
a((S'taskHandle'
p14349
(lp14350
S'TaskHandle'
p14351
aNtp14352
tp14353
tp14354
sS'DAQmxSetExportedAdvCmpltEventPulsePolarity'
p14355
((lp14356
S'int32'
p14357
ag14
a((S'taskHandle'
p14358
(lp14359
S'TaskHandle'
p14360
aNtp14361
(S'data'
p14362
(lp14363
S'int32'
p14364
aNtp14365
tp14366
tp14367
sS'DAQmxGetSelfCalLastDateAndTime'
p14368
((lp14369
S'int32'
p14370
ag14
a((S'deviceName'
p14371
(lp14372
S'char'
p14373
a(lp14374
I-1
aaNtp14375
(S'year'
p14376
(lp14377
S'uInt32'
p14378
ag22
aNtp14379
(S'month'
p14380
(lp14381
S'uInt32'
p14382
ag22
aNtp14383
(S'day'
p14384
(lp14385
S'uInt32'
p14386
ag22
aNtp14387
(S'hour'
p14388
(lp14389
S'uInt32'
p14390
ag22
aNtp14391
(S'minute'
p14392
(lp14393
S'uInt32'
p14394
ag22
aNtp14395
tp14396
tp14397
sS'DAQmxGetCIFreqMeasMeth'
p14398
((lp14399
S'int32'
p14400
ag14
a((S'taskHandle'
p14401
(lp14402
S'TaskHandle'
p14403
aNtp14404
(S'channel'
p14405
(lp14406
S'char'
p14407
a(lp14408
I-1
aaNtp14409
(S'data'
p14410
(lp14411
S'int32'
p14412
ag22
aNtp14413
tp14414
tp14415
sS'DAQmxSetAIACExcitSyncEnable'
p14416
((lp14417
S'int32'
p14418
ag14
a((S'taskHandle'
p14419
(lp14420
S'TaskHandle'
p14421
aNtp14422
(S'channel'
p14423
(lp14424
S'char'
p14425
a(lp14426
I-1
aaNtp14427
(S'data'
p14428
(lp14429
S'bool32'
p14430
aNtp14431
tp14432
tp14433
sS'DAQmxGetCIOutputState'
p14434
((lp14435
S'int32'
p14436
ag14
a((S'taskHandle'
p14437
(lp14438
S'TaskHandle'
p14439
aNtp14440
(S'channel'
p14441
(lp14442
S'char'
p14443
a(lp14444
I-1
aaNtp14445
(S'data'
p14446
(lp14447
S'int32'
p14448
ag22
aNtp14449
tp14450
tp14451
sS'DAQmxSetSwitchScanBreakMode'
p14452
((lp14453
S'int32'
p14454
ag14
a((S'taskHandle'
p14455
(lp14456
S'TaskHandle'
p14457
aNtp14458
(S'data'
p14459
(lp14460
S'int32'
p14461
aNtp14462
tp14463
tp14464
sS'DAQmxSetAIAccelUnits'
p14465
((lp14466
S'int32'
p14467
ag14
a((S'taskHandle'
p14468
(lp14469
S'TaskHandle'
p14470
aNtp14471
(S'channel'
p14472
(lp14473
S'char'
p14474
a(lp14475
I-1
aaNtp14476
(S'data'
p14477
(lp14478
S'int32'
p14479
aNtp14480
tp14481
tp14482
sS'DAQmxSetAIChanCalOperatorName'
p14483
((lp14484
S'int32'
p14485
ag14
a((S'taskHandle'
p14486
(lp14487
S'TaskHandle'
p14488
aNtp14489
(S'channel'
p14490
(lp14491
S'char'
p14492
a(lp14493
I-1
aaNtp14494
(S'data'
p14495
(lp14496
S'char'
p14497
ag22
aNtp14498
tp14499
tp14500
sS'DAQmxSetArmStartTrigType'
p14501
((lp14502
S'int32'
p14503
ag14
a((S'taskHandle'
p14504
(lp14505
S'TaskHandle'
p14506
aNtp14507
(S'data'
p14508
(lp14509
S'int32'
p14510
aNtp14511
tp14512
tp14513
sS'DAQmxSetAISoundPressureMaxSoundPressureLvl'
p14514
((lp14515
S'int32'
p14516
ag14
a((S'taskHandle'
p14517
(lp14518
S'TaskHandle'
p14519
aNtp14520
(S'channel'
p14521
(lp14522
S'char'
p14523
a(lp14524
I-1
aaNtp14525
(S'data'
p14526
(lp14527
S'float64'
p14528
aNtp14529
tp14530
tp14531
sS'DAQmxSetDigEdgeWatchdogExpirTrigEdge'
p14532
((lp14533
S'int32'
p14534
ag14
a((S'taskHandle'
p14535
(lp14536
S'TaskHandle'
p14537
aNtp14538
(S'data'
p14539
(lp14540
S'int32'
p14541
aNtp14542
tp14543
tp14544
sS'DAQmxGetAIResolutionUnits'
p14545
((lp14546
S'int32'
p14547
ag14
a((S'taskHandle'
p14548
(lp14549
S'TaskHandle'
p14550
aNtp14551
(S'channel'
p14552
(lp14553
S'char'
p14554
a(lp14555
I-1
aaNtp14556
(S'data'
p14557
(lp14558
S'int32'
p14559
ag22
aNtp14560
tp14561
tp14562
sS'DAQmxSetRealTimeNumOfWarmupIters'
p14563
((lp14564
S'int32'
p14565
ag14
a((S'taskHandle'
p14566
(lp14567
S'TaskHandle'
p14568
aNtp14569
(S'data'
p14570
(lp14571
S'uInt32'
p14572
aNtp14573
tp14574
tp14575
sS'DAQmxGetExportedHshkEventDelay'
p14576
((lp14577
S'int32'
p14578
ag14
a((S'taskHandle'
p14579
(lp14580
S'TaskHandle'
p14581
aNtp14582
(S'data'
p14583
(lp14584
S'float64'
p14585
ag22
aNtp14586
tp14587
tp14588
sS'DAQmxCreateAIThrmcplChan'
p14589
((lp14590
S'int32'
p14591
ag14
a((S'taskHandle'
p14592
(lp14593
S'TaskHandle'
p14594
aNtp14595
(S'physicalChannel'
p14596
(lp14597
S'char'
p14598
a(lp14599
I-1
aaNtp14600
(S'nameToAssignToChannel'
p14601
(lp14602
S'char'
p14603
a(lp14604
I-1
aaNtp14605
(S'minVal'
p14606
(lp14607
S'float64'
p14608
aNtp14609
(S'maxVal'
p14610
(lp14611
S'float64'
p14612
aNtp14613
(S'units'
p14614
(lp14615
S'int32'
p14616
aNtp14617
(S'thermocoupleType'
p14618
(lp14619
S'int32'
p14620
aNtp14621
(S'cjcSource'
p14622
(lp14623
S'int32'
p14624
aNtp14625
(S'cjcVal'
p14626
(lp14627
S'float64'
p14628
aNtp14629
(S'cjcChannel'
p14630
(lp14631
S'char'
p14632
a(lp14633
I-1
aaNtp14634
tp14635
tp14636
sS'DAQmxResetAOGain'
p14637
((lp14638
S'int32'
p14639
ag14
a((S'taskHandle'
p14640
(lp14641
S'TaskHandle'
p14642
aNtp14643
(S'channel'
p14644
(lp14645
S'char'
p14646
a(lp14647
I-1
aaNtp14648
tp14649
tp14650
sS'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc'
p14651
((lp14652
S'int32'
p14653
ag14
a((S'taskHandle'
p14654
(lp14655
S'TaskHandle'
p14656
aNtp14657
tp14658
tp14659
sS'DAQmxSetCICtrTimebaseRate'
p14660
((lp14661
S'int32'
p14662
ag14
a((S'taskHandle'
p14663
(lp14664
S'TaskHandle'
p14665
aNtp14666
(S'channel'
p14667
(lp14668
S'char'
p14669
a(lp14670
I-1
aaNtp14671
(S'data'
p14672
(lp14673
S'float64'
p14674
aNtp14675
tp14676
tp14677
sS'DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p14678
((lp14679
S'int32'
p14680
ag14
a((S'taskHandle'
p14681
(lp14682
S'TaskHandle'
p14683
aNtp14684
(S'channel'
p14685
(lp14686
S'char'
p14687
a(lp14688
I-1
aaNtp14689
tp14690
tp14691
sS'DAQmxGetSwitchChanWireMode'
p14692
((lp14693
S'int32'
p14694
ag14
a((S'switchChannelName'
p14695
(lp14696
S'char'
p14697
a(lp14698
I-1
aaNtp14699
(S'data'
p14700
(lp14701
S'uInt32'
p14702
ag22
aNtp14703
tp14704
tp14705
sS'DAQmxSetAnlgEdgeStartTrigCoupling'
p14706
((lp14707
S'int32'
p14708
ag14
a((S'taskHandle'
p14709
(lp14710
S'TaskHandle'
p14711
aNtp14712
(S'data'
p14713
(lp14714
S'int32'
p14715
aNtp14716
tp14717
tp14718
sS'DAQmxCreateTask'
p14719
((lp14720
S'int32'
p14721
ag14
a((S'taskName'
p14722
(lp14723
S'char'
p14724
a(lp14725
I-1
aaNtp14726
(S'taskHandle'
p14727
(lp14728
S'TaskHandle'
p14729
ag22
aNtp14730
tp14731
tp14732
sS'DAQmxCreateCIPulseWidthChan'
p14733
((lp14734
S'int32'
p14735
ag14
a((S'taskHandle'
p14736
(lp14737
S'TaskHandle'
p14738
aNtp14739
(S'counter'
p14740
(lp14741
S'char'
p14742
a(lp14743
I-1
aaNtp14744
(S'nameToAssignToChannel'
p14745
(lp14746
S'char'
p14747
a(lp14748
I-1
aaNtp14749
(S'minVal'
p14750
(lp14751
S'float64'
p14752
aNtp14753
(S'maxVal'
p14754
(lp14755
S'float64'
p14756
aNtp14757
(S'units'
p14758
(lp14759
S'int32'
p14760
aNtp14761
(S'startingEdge'
p14762
(lp14763
S'int32'
p14764
aNtp14765
(S'customScaleName'
p14766
(lp14767
S'char'
p14768
a(lp14769
I-1
aaNtp14770
tp14771
tp14772
sS'DAQmxGetAOReglitchEnable'
p14773
((lp14774
S'int32'
p14775
ag14
a((S'taskHandle'
p14776
(lp14777
S'TaskHandle'
p14778
aNtp14779
(S'channel'
p14780
(lp14781
S'char'
p14782
a(lp14783
I-1
aaNtp14784
(S'data'
p14785
(lp14786
S'bool32'
p14787
ag22
aNtp14788
tp14789
tp14790
sS'DAQmxReadDigitalScalarU32'
p14791
((lp14792
S'int32'
p14793
ag14
a((S'taskHandle'
p14794
(lp14795
S'TaskHandle'
p14796
aNtp14797
(S'timeout'
p14798
(lp14799
S'float64'
p14800
aNtp14801
(S'value'
p14802
(lp14803
S'uInt32'
p14804
ag22
aNtp14805
(S'reserved'
p14806
(lp14807
S'bool32'
p14808
ag22
aNtp14809
tp14810
tp14811
sS'DAQmxGetSwitchChanMaxDCCarryCurrent'
p14812
((lp14813
S'int32'
p14814
ag14
a((S'switchChannelName'
p14815
(lp14816
S'char'
p14817
a(lp14818
I-1
aaNtp14819
(S'data'
p14820
(lp14821
S'float64'
p14822
ag22
aNtp14823
tp14824
tp14825
sS'DAQmxGetDigEdgeArmStartTrigEdge'
p14826
((lp14827
S'int32'
p14828
ag14
a((S'taskHandle'
p14829
(lp14830
S'TaskHandle'
p14831
aNtp14832
(S'data'
p14833
(lp14834
S'int32'
p14835
ag22
aNtp14836
tp14837
tp14838
sS'DAQmxGetAnlgWinPauseTrigWhen'
p14839
((lp14840
S'int32'
p14841
ag14
a((S'taskHandle'
p14842
(lp14843
S'TaskHandle'
p14844
aNtp14845
(S'data'
p14846
(lp14847
S'int32'
p14848
ag22
aNtp14849
tp14850
tp14851
sS'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p14852
((lp14853
S'int32'
p14854
ag14
a((S'taskHandle'
p14855
(lp14856
S'TaskHandle'
p14857
aNtp14858
(S'channel'
p14859
(lp14860
S'char'
p14861
a(lp14862
I-1
aaNtp14863
tp14864
tp14865
sS'DAQmxGetSwitchScanAttribute'
p14866
((lp14867
S'int32'
p14868
ag2545
a((S'taskHandle'
p14869
(lp14870
S'TaskHandle'
p14871
aNtp14872
(S'attribute'
p14873
(lp14874
S'int32'
p14875
aNtp14876
(S'value'
p14877
(lp14878
S'void'
p14879
ag22
aNtp14880
tp14881
tp14882
sS'DAQmxSetAIBridgeInitialVoltage'
p14883
((lp14884
S'int32'
p14885
ag14
a((S'taskHandle'
p14886
(lp14887
S'TaskHandle'
p14888
aNtp14889
(S'channel'
p14890
(lp14891
S'char'
p14892
a(lp14893
I-1
aaNtp14894
(S'data'
p14895
(lp14896
S'float64'
p14897
aNtp14898
tp14899
tp14900
sS'DAQmxResetCOPulseFreqUnits'
p14901
((lp14902
S'int32'
p14903
ag14
a((S'taskHandle'
p14904
(lp14905
S'TaskHandle'
p14906
aNtp14907
(S'channel'
p14908
(lp14909
S'char'
p14910
a(lp14911
I-1
aaNtp14912
tp14913
tp14914
sS'DAQmxResetCIEncoderAInputDigFltrTimebaseSrc'
p14915
((lp14916
S'int32'
p14917
ag14
a((S'taskHandle'
p14918
(lp14919
S'TaskHandle'
p14920
aNtp14921
(S'channel'
p14922
(lp14923
S'char'
p14924
a(lp14925
I-1
aaNtp14926
tp14927
tp14928
sS'DAQmxSetCIGPSSyncSrc'
p14929
((lp14930
S'int32'
p14931
ag14
a((S'taskHandle'
p14932
(lp14933
S'TaskHandle'
p14934
aNtp14935
(S'channel'
p14936
(lp14937
S'char'
p14938
a(lp14939
I-1
aaNtp14940
(S'data'
p14941
(lp14942
S'char'
p14943
ag22
aNtp14944
tp14945
tp14946
sS'DAQmxResetDigEdgeStartTrigSrc'
p14947
((lp14948
S'int32'
p14949
ag14
a((S'taskHandle'
p14950
(lp14951
S'TaskHandle'
p14952
aNtp14953
tp14954
tp14955
sS'DAQmxCreateAIPosLVDTChan'
p14956
((lp14957
S'int32'
p14958
ag14
a((S'taskHandle'
p14959
(lp14960
S'TaskHandle'
p14961
aNtp14962
(S'physicalChannel'
p14963
(lp14964
S'char'
p14965
a(lp14966
I-1
aaNtp14967
(S'nameToAssignToChannel'
p14968
(lp14969
S'char'
p14970
a(lp14971
I-1
aaNtp14972
(S'minVal'
p14973
(lp14974
S'float64'
p14975
aNtp14976
(S'maxVal'
p14977
(lp14978
S'float64'
p14979
aNtp14980
(S'units'
p14981
(lp14982
S'int32'
p14983
aNtp14984
(S'sensitivity'
p14985
(lp14986
S'float64'
p14987
aNtp14988
(S'sensitivityUnits'
p14989
(lp14990
S'int32'
p14991
aNtp14992
(S'voltageExcitSource'
p14993
(lp14994
S'int32'
p14995
aNtp14996
(S'voltageExcitVal'
p14997
(lp14998
S'float64'
p14999
aNtp15000
(S'voltageExcitFreq'
p15001
(lp15002
S'float64'
p15003
aNtp15004
(S'ACExcitWireMode'
p15005
(lp15006
S'int32'
p15007
aNtp15008
(S'customScaleName'
p15009
(lp15010
S'char'
p15011
a(lp15012
I-1
aaNtp15013
tp15014
tp15015
sS'DAQmxCreateAICurrentChan'
p15016
((lp15017
S'int32'
p15018
ag14
a((S'taskHandle'
p15019
(lp15020
S'TaskHandle'
p15021
aNtp15022
(S'physicalChannel'
p15023
(lp15024
S'char'
p15025
a(lp15026
I-1
aaNtp15027
(S'nameToAssignToChannel'
p15028
(lp15029
S'char'
p15030
a(lp15031
I-1
aaNtp15032
(S'terminalConfig'
p15033
(lp15034
S'int32'
p15035
aNtp15036
(S'minVal'
p15037
(lp15038
S'float64'
p15039
aNtp15040
(S'maxVal'
p15041
(lp15042
S'float64'
p15043
aNtp15044
(S'units'
p15045
(lp15046
S'int32'
p15047
aNtp15048
(S'shuntResistorLoc'
p15049
(lp15050
S'int32'
p15051
aNtp15052
(S'extShuntResistorVal'
p15053
(lp15054
S'float64'
p15055
aNtp15056
(S'customScaleName'
p15057
(lp15058
S'char'
p15059
a(lp15060
I-1
aaNtp15061
tp15062
tp15063
sS'DAQmxGetCISemiPeriodUnits'
p15064
((lp15065
S'int32'
p15066
ag14
a((S'taskHandle'
p15067
(lp15068
S'TaskHandle'
p15069
aNtp15070
(S'channel'
p15071
(lp15072
S'char'
p15073
a(lp15074
I-1
aaNtp15075
(S'data'
p15076
(lp15077
S'int32'
p15078
ag22
aNtp15079
tp15080
tp15081
sS'DAQmxGetCICtrTimebaseDigFltrMinPulseWidth'
p15082
((lp15083
S'int32'
p15084
ag14
a((S'taskHandle'
p15085
(lp15086
S'TaskHandle'
p15087
aNtp15088
(S'channel'
p15089
(lp15090
S'char'
p15091
a(lp15092
I-1
aaNtp15093
(S'data'
p15094
(lp15095
S'float64'
p15096
ag22
aNtp15097
tp15098
tp15099
sS'DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate'
p15100
((lp15101
S'int32'
p15102
ag14
a((S'taskHandle'
p15103
(lp15104
S'TaskHandle'
p15105
aNtp15106
(S'channel'
p15107
(lp15108
S'char'
p15109
a(lp15110
I-1
aaNtp15111
(S'data'
p15112
(lp15113
S'float64'
p15114
aNtp15115
tp15116
tp15117
sS'DAQmxSetup1102Cal'
p15118
((lp15119
S'int32'
p15120
ag14
a((S'calHandle'
p15121
(lp15122
S'uInt32'
p15123
aNtp15124
(S'channelNames'
p15125
(lp15126
S'char'
p15127
a(lp15128
I-1
aaNtp15129
(S'gain'
p15130
(lp15131
S'float64'
p15132
aNtp15133
tp15134
tp15135
sS'DAQmxSetAnlgWinPauseTrigBtm'
p15136
((lp15137
S'int32'
p15138
ag14
a((S'taskHandle'
p15139
(lp15140
S'TaskHandle'
p15141
aNtp15142
(S'data'
p15143
(lp15144
S'float64'
p15145
aNtp15146
tp15147
tp15148
sS'DAQmxGetAISoundPressureMaxSoundPressureLvl'
p15149
((lp15150
S'int32'
p15151
ag14
a((S'taskHandle'
p15152
(lp15153
S'TaskHandle'
p15154
aNtp15155
(S'channel'
p15156
(lp15157
S'char'
p15158
a(lp15159
I-1
aaNtp15160
(S'data'
p15161
(lp15162
S'float64'
p15163
ag22
aNtp15164
tp15165
tp15166
sS'DAQmxSetCIEncoderBInputDigFltrEnable'
p15167
((lp15168
S'int32'
p15169
ag14
a((S'taskHandle'
p15170
(lp15171
S'TaskHandle'
p15172
aNtp15173
(S'channel'
p15174
(lp15175
S'char'
p15176
a(lp15177
I-1
aaNtp15178
(S'data'
p15179
(lp15180
S'bool32'
p15181
aNtp15182
tp15183
tp15184
sS'DAQmxGetCOCtrTimebaseSrc'
p15185
((lp15186
S'int32'
p15187
ag14
a((S'taskHandle'
p15188
(lp15189
S'TaskHandle'
p15190
aNtp15191
(S'channel'
p15192
(lp15193
S'char'
p15194
a(lp15195
I-1
aaNtp15196
(S'data'
p15197
(lp15198
S'char'
p15199
ag22
aNtp15200
(S'bufferSize'
p15201
(lp15202
S'uInt32'
p15203
aNtp15204
tp15205
tp15206
sS'DAQmxSetAICustomScaleName'
p15207
((lp15208
S'int32'
p15209
ag14
a((S'taskHandle'
p15210
(lp15211
S'TaskHandle'
p15212
aNtp15213
(S'channel'
p15214
(lp15215
S'char'
p15216
a(lp15217
I-1
aaNtp15218
(S'data'
p15219
(lp15220
S'char'
p15221
ag22
aNtp15222
tp15223
tp15224
sS'DAQmxSetExportedWatchdogExpiredEventOutputTerm'
p15225
((lp15226
S'int32'
p15227
ag14
a((S'taskHandle'
p15228
(lp15229
S'TaskHandle'
p15230
aNtp15231
(S'data'
p15232
(lp15233
S'char'
p15234
ag22
aNtp15235
tp15236
tp15237
sS'DAQmxResetAODataXferMech'
p15238
((lp15239
S'int32'
p15240
ag14
a((S'taskHandle'
p15241
(lp15242
S'TaskHandle'
p15243
aNtp15244
(S'channel'
p15245
(lp15246
S'char'
p15247
a(lp15248
I-1
aaNtp15249
tp15250
tp15251
sS'DAQmxResetCISemiPeriodUnits'
p15252
((lp15253
S'int32'
p15254
ag14
a((S'taskHandle'
p15255
(lp15256
S'TaskHandle'
p15257
aNtp15258
(S'channel'
p15259
(lp15260
S'char'
p15261
a(lp15262
I-1
aaNtp15263
tp15264
tp15265
sS'DAQmxGetDOInvertLines'
p15266
((lp15267
S'int32'
p15268
ag14
a((S'taskHandle'
p15269
(lp15270
S'TaskHandle'
p15271
aNtp15272
(S'channel'
p15273
(lp15274
S'char'
p15275
a(lp15276
I-1
aaNtp15277
(S'data'
p15278
(lp15279
S'bool32'
p15280
ag22
aNtp15281
tp15282
tp15283
sS'DAQmxGetCOCount'
p15284
((lp15285
S'int32'
p15286
ag14
a((S'taskHandle'
p15287
(lp15288
S'TaskHandle'
p15289
aNtp15290
(S'channel'
p15291
(lp15292
S'char'
p15293
a(lp15294
I-1
aaNtp15295
(S'data'
p15296
(lp15297
S'uInt32'
p15298
ag22
aNtp15299
tp15300
tp15301
sS'DAQmxSetCOPulseLowTime'
p15302
((lp15303
S'int32'
p15304
ag14
a((S'taskHandle'
p15305
(lp15306
S'TaskHandle'
p15307
aNtp15308
(S'channel'
p15309
(lp15310
S'char'
p15311
a(lp15312
I-1
aaNtp15313
(S'data'
p15314
(lp15315
S'float64'
p15316
aNtp15317
tp15318
tp15319
sS'DAQmxGetAIThrmcplCJCVal'
p15320
((lp15321
S'int32'
p15322
ag14
a((S'taskHandle'
p15323
(lp15324
S'TaskHandle'
p15325
aNtp15326
(S'channel'
p15327
(lp15328
S'char'
p15329
a(lp15330
I-1
aaNtp15331
(S'data'
p15332
(lp15333
S'float64'
p15334
ag22
aNtp15335
tp15336
tp15337
sS'DAQmxResetSwitchScanAttribute'
p15338
((lp15339
S'int32'
p15340
ag14
a((S'taskHandle'
p15341
(lp15342
S'TaskHandle'
p15343
aNtp15344
(S'attribute'
p15345
(lp15346
S'int32'
p15347
aNtp15348
tp15349
tp15350
sS'DAQmxResetCIAngEncoderPulsesPerRev'
p15351
((lp15352
S'int32'
p15353
ag14
a((S'taskHandle'
p15354
(lp15355
S'TaskHandle'
p15356
aNtp15357
(S'channel'
p15358
(lp15359
S'char'
p15360
a(lp15361
I-1
aaNtp15362
tp15363
tp15364
sS'DAQmxResetDigEdgeRefTrigSrc'
p15365
((lp15366
S'int32'
p15367
ag14
a((S'taskHandle'
p15368
(lp15369
S'TaskHandle'
p15370
aNtp15371
tp15372
tp15373
sS'DAQmxWriteToTEDSFromFile'
p15374
((lp15375
S'int32'
p15376
ag14
a((S'physicalChannel'
p15377
(lp15378
S'char'
p15379
a(lp15380
I-1
aaNtp15381
(S'filePath'
p15382
(lp15383
S'char'
p15384
a(lp15385
I-1
aaNtp15386
(S'basicTEDSOptions'
p15387
(lp15388
S'int32'
p15389
aNtp15390
tp15391
tp15392
sS'DAQmxResetDigLvlPauseTrigSrc'
p15393
((lp15394
S'int32'
p15395
ag14
a((S'taskHandle'
p15396
(lp15397
S'TaskHandle'
p15398
aNtp15399
tp15400
tp15401
sS'DAQmxResetAnlgLvlPauseTrigLvl'
p15402
((lp15403
S'int32'
p15404
ag14
a((S'taskHandle'
p15405
(lp15406
S'TaskHandle'
p15407
aNtp15408
tp15409
tp15410
sS'DAQmxSetStartTrigDelayUnits'
p15411
((lp15412
S'int32'
p15413
ag14
a((S'taskHandle'
p15414
(lp15415
S'TaskHandle'
p15416
aNtp15417
(S'data'
p15418
(lp15419
S'int32'
p15420
aNtp15421
tp15422
tp15423
sS'DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc'
p15424
((lp15425
S'int32'
p15426
ag14
a((S'taskHandle'
p15427
(lp15428
S'TaskHandle'
p15429
aNtp15430
(S'channel'
p15431
(lp15432
S'char'
p15433
a(lp15434
I-1
aaNtp15435
tp15436
tp15437
sS'DAQmxWriteDigitalLines'
p15438
((lp15439
S'int32'
p15440
ag14
a((S'taskHandle'
p15441
(lp15442
S'TaskHandle'
p15443
aNtp15444
(S'numSampsPerChan'
p15445
(lp15446
S'int32'
p15447
aNtp15448
(S'autoStart'
p15449
(lp15450
S'bool32'
p15451
aNtp15452
(S'timeout'
p15453
(lp15454
S'float64'
p15455
aNtp15456
(S'dataLayout'
p15457
(lp15458
S'bool32'
p15459
aNtp15460
(S'writeArray'
p15461
(lp15462
S'uInt8'
p15463
a(lp15464
I-1
aaNtp15465
(S'sampsPerChanWritten'
p15466
(lp15467
S'int32'
p15468
ag22
aNtp15469
(S'reserved'
p15470
(lp15471
S'bool32'
p15472
ag22
aNtp15473
tp15474
tp15475
sS'DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth'
p15476
((lp15477
S'int32'
p15478
ag14
a((S'taskHandle'
p15479
(lp15480
S'TaskHandle'
p15481
aNtp15482
(S'data'
p15483
(lp15484
S'float64'
p15485
aNtp15486
tp15487
tp15488
sS'DAQmxGetSelfCalLastTemp'
p15489
((lp15490
S'int32'
p15491
ag14
a((S'deviceName'
p15492
(lp15493
S'char'
p15494
a(lp15495
I-1
aaNtp15496
(S'data'
p15497
(lp15498
S'float64'
p15499
ag22
aNtp15500
tp15501
tp15502
sS'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc'
p15503
((lp15504
S'int32'
p15505
ag14
a((S'taskHandle'
p15506
(lp15507
S'TaskHandle'
p15508
aNtp15509
(S'channel'
p15510
(lp15511
S'char'
p15512
a(lp15513
I-1
aaNtp15514
(S'data'
p15515
(lp15516
S'char'
p15517
ag22
aNtp15518
(S'bufferSize'
p15519
(lp15520
S'uInt32'
p15521
aNtp15522
tp15523
tp15524
sS'DAQmxResetBufferAttribute'
p15525
((lp15526
S'int32'
p15527
ag14
a((S'taskHandle'
p15528
(lp15529
S'TaskHandle'
p15530
aNtp15531
(S'attribute'
p15532
(lp15533
S'int32'
p15534
aNtp15535
tp15536
tp15537
sS'DAQmxSetAODACRefAllowConnToGnd'
p15538
((lp15539
S'int32'
p15540
ag14
a((S'taskHandle'
p15541
(lp15542
S'TaskHandle'
p15543
aNtp15544
(S'channel'
p15545
(lp15546
S'char'
p15547
a(lp15548
I-1
aaNtp15549
(S'data'
p15550
(lp15551
S'bool32'
p15552
aNtp15553
tp15554
tp15555
sS'DAQmxGetScaleLinSlope'
p15556
((lp15557
S'int32'
p15558
ag14
a((S'scaleName'
p15559
(lp15560
S'char'
p15561
a(lp15562
I-1
aaNtp15563
(S'data'
p15564
(lp15565
S'float64'
p15566
ag22
aNtp15567
tp15568
tp15569
sS'DAQmxSetAnlgEdgeRefTrigSrc'
p15570
((lp15571
S'int32'
p15572
ag14
a((S'taskHandle'
p15573
(lp15574
S'TaskHandle'
p15575
aNtp15576
(S'data'
p15577
(lp15578
S'char'
p15579
ag22
aNtp15580
tp15581
tp15582
sS'DAQmxResetExportedAIConvClkOutputTerm'
p15583
((lp15584
S'int32'
p15585
ag14
a((S'taskHandle'
p15586
(lp15587
S'TaskHandle'
p15588
aNtp15589
tp15590
tp15591
sS'DAQmxResetAICurrentUnits'
p15592
((lp15593
S'int32'
p15594
ag14
a((S'taskHandle'
p15595
(lp15596
S'TaskHandle'
p15597
aNtp15598
(S'channel'
p15599
(lp15600
S'char'
p15601
a(lp15602
I-1
aaNtp15603
tp15604
tp15605
sS'DAQmxGetBufInputBufSize'
p15606
((lp15607
S'int32'
p15608
ag14
a((S'taskHandle'
p15609
(lp15610
S'TaskHandle'
p15611
aNtp15612
(S'data'
p15613
(lp15614
S'uInt32'
p15615
ag22
aNtp15616
tp15617
tp15618
sS'DAQmxSetDelayFromSampClkDelay'
p15619
((lp15620
S'int32'
p15621
ag14
a((S'taskHandle'
p15622
(lp15623
S'TaskHandle'
p15624
aNtp15625
(S'data'
p15626
(lp15627
S'float64'
p15628
aNtp15629
tp15630
tp15631
sS'DAQmxResetDevice'
p15632
((lp15633
S'int32'
p15634
ag14
a((S'deviceName'
p15635
(lp15636
S'char'
p15637
a(lp15638
I-1
aaNtp15639
tp15640
tp15641
sS'DAQmxSwitchCloseRelays'
p15642
((lp15643
S'int32'
p15644
ag14
a((S'relayList'
p15645
(lp15646
S'char'
p15647
a(lp15648
I-1
aaNtp15649
(S'waitForSettling'
p15650
(lp15651
S'bool32'
p15652
aNtp15653
tp15654
tp15655
sS'DAQmxResetChanAttribute'
p15656
((lp15657
S'int32'
p15658
ag14
a((S'taskHandle'
p15659
(lp15660
S'TaskHandle'
p15661
aNtp15662
(S'channel'
p15663
(lp15664
S'char'
p15665
a(lp15666
I-1
aaNtp15667
(S'attribute'
p15668
(lp15669
S'int32'
p15670
aNtp15671
tp15672
tp15673
sS'DAQmxResetAIAutoZeroMode'
p15674
((lp15675
S'int32'
p15676
ag14
a((S'taskHandle'
p15677
(lp15678
S'TaskHandle'
p15679
aNtp15680
(S'channel'
p15681
(lp15682
S'char'
p15683
a(lp15684
I-1
aaNtp15685
tp15686
tp15687
sS'DAQmxSetCIPeriodDigFltrTimebaseSrc'
p15688
((lp15689
S'int32'
p15690
ag14
a((S'taskHandle'
p15691
(lp15692
S'TaskHandle'
p15693
aNtp15694
(S'channel'
p15695
(lp15696
S'char'
p15697
a(lp15698
I-1
aaNtp15699
(S'data'
p15700
(lp15701
S'char'
p15702
ag22
aNtp15703
tp15704
tp15705
sS'DAQmxResetAIRngLow'
p15706
((lp15707
S'int32'
p15708
ag14
a((S'taskHandle'
p15709
(lp15710
S'TaskHandle'
p15711
aNtp15712
(S'channel'
p15713
(lp15714
S'char'
p15715
a(lp15716
I-1
aaNtp15717
tp15718
tp15719
sS'DAQmxSetCIPeriodUnits'
p15720
((lp15721
S'int32'
p15722
ag14
a((S'taskHandle'
p15723
(lp15724
S'TaskHandle'
p15725
aNtp15726
(S'channel'
p15727
(lp15728
S'char'
p15729
a(lp15730
I-1
aaNtp15731
(S'data'
p15732
(lp15733
S'int32'
p15734
aNtp15735
tp15736
tp15737
sS'DAQmxSwitchDisconnectAll'
p15738
((lp15739
S'int32'
p15740
ag14
a((S'deviceName'
p15741
(lp15742
S'char'
p15743
a(lp15744
I-1
aaNtp15745
(S'waitForSettling'
p15746
(lp15747
S'bool32'
p15748
aNtp15749
tp15750
tp15751
sS'DAQmxAdjustDSATimebaseCal'
p15752
((lp15753
S'int32'
p15754
ag14
a((S'calHandle'
p15755
(lp15756
S'uInt32'
p15757
aNtp15758
(S'referenceFrequency'
p15759
(lp15760
S'float64'
p15761
aNtp15762
tp15763
tp15764
sS'DAQmxGetCIEncoderZIndexEnable'
p15765
((lp15766
S'int32'
p15767
ag14
a((S'taskHandle'
p15768
(lp15769
S'TaskHandle'
p15770
aNtp15771
(S'channel'
p15772
(lp15773
S'char'
p15774
a(lp15775
I-1
aaNtp15776
(S'data'
p15777
(lp15778
S'bool32'
p15779
ag22
aNtp15780
tp15781
tp15782
sS'DAQmxResetInterlockedHshkTrigAssertedLvl'
p15783
((lp15784
S'int32'
p15785
ag14
a((S'taskHandle'
p15786
(lp15787
S'TaskHandle'
p15788
aNtp15789
tp15790
tp15791
sS'DAQmxResetCISemiPeriodDigFltrTimebaseRate'
p15792
((lp15793
S'int32'
p15794
ag14
a((S'taskHandle'
p15795
(lp15796
S'TaskHandle'
p15797
aNtp15798
(S'channel'
p15799
(lp15800
S'char'
p15801
a(lp15802
I-1
aaNtp15803
tp15804
tp15805
sS'DAQmxResetSampClkDigFltrTimebaseRate'
p15806
((lp15807
S'int32'
p15808
ag14
a((S'taskHandle'
p15809
(lp15810
S'TaskHandle'
p15811
aNtp15812
tp15813
tp15814
sS'DAQmxCreateTEDSAIRTDChan'
p15815
((lp15816
S'int32'
p15817
ag14
a((S'taskHandle'
p15818
(lp15819
S'TaskHandle'
p15820
aNtp15821
(S'physicalChannel'
p15822
(lp15823
S'char'
p15824
a(lp15825
I-1
aaNtp15826
(S'nameToAssignToChannel'
p15827
(lp15828
S'char'
p15829
a(lp15830
I-1
aaNtp15831
(S'minVal'
p15832
(lp15833
S'float64'
p15834
aNtp15835
(S'maxVal'
p15836
(lp15837
S'float64'
p15838
aNtp15839
(S'units'
p15840
(lp15841
S'int32'
p15842
aNtp15843
(S'resistanceConfig'
p15844
(lp15845
S'int32'
p15846
aNtp15847
(S'currentExcitSource'
p15848
(lp15849
S'int32'
p15850
aNtp15851
(S'currentExcitVal'
p15852
(lp15853
S'float64'
p15854
aNtp15855
tp15856
tp15857
sS'DAQmxGetCORdyForNewVal'
p15858
((lp15859
S'int32'
p15860
ag14
a((S'taskHandle'
p15861
(lp15862
S'TaskHandle'
p15863
aNtp15864
(S'channel'
p15865
(lp15866
S'char'
p15867
a(lp15868
I-1
aaNtp15869
(S'data'
p15870
(lp15871
S'bool32'
p15872
ag22
aNtp15873
tp15874
tp15875
sS'DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p15876
((lp15877
S'int32'
p15878
ag14
a((S'taskHandle'
p15879
(lp15880
S'TaskHandle'
p15881
aNtp15882
(S'channel'
p15883
(lp15884
S'char'
p15885
a(lp15886
I-1
aaNtp15887
(S'data'
p15888
(lp15889
S'float64'
p15890
aNtp15891
tp15892
tp15893
sS'DAQmxResetAIChanCalEnableCal'
p15894
((lp15895
S'int32'
p15896
ag14
a((S'taskHandle'
p15897
(lp15898
S'TaskHandle'
p15899
aNtp15900
(S'channel'
p15901
(lp15902
S'char'
p15903
a(lp15904
I-1
aaNtp15905
tp15906
tp15907
sS'DAQmxResetAILVDTSensitivity'
p15908
((lp15909
S'int32'
p15910
ag14
a((S'taskHandle'
p15911
(lp15912
S'TaskHandle'
p15913
aNtp15914
(S'channel'
p15915
(lp15916
S'char'
p15917
a(lp15918
I-1
aaNtp15919
tp15920
tp15921
sS'DAQmxGetAIThrmstrB'
p15922
((lp15923
S'int32'
p15924
ag14
a((S'taskHandle'
p15925
(lp15926
S'TaskHandle'
p15927
aNtp15928
(S'channel'
p15929
(lp15930
S'char'
p15931
a(lp15932
I-1
aaNtp15933
(S'data'
p15934
(lp15935
S'float64'
p15936
ag22
aNtp15937
tp15938
tp15939
sS'DAQmxGetAIThrmstrA'
p15940
((lp15941
S'int32'
p15942
ag14
a((S'taskHandle'
p15943
(lp15944
S'TaskHandle'
p15945
aNtp15946
(S'channel'
p15947
(lp15948
S'char'
p15949
a(lp15950
I-1
aaNtp15951
(S'data'
p15952
(lp15953
S'float64'
p15954
ag22
aNtp15955
tp15956
tp15957
sS'DAQmxGetSyncPulseSrc'
p15958
((lp15959
S'int32'
p15960
ag14
a((S'taskHandle'
p15961
(lp15962
S'TaskHandle'
p15963
aNtp15964
(S'data'
p15965
(lp15966
S'char'
p15967
ag22
aNtp15968
(S'bufferSize'
p15969
(lp15970
S'uInt32'
p15971
aNtp15972
tp15973
tp15974
sS'DAQmxGetDelayFromSampClkDelay'
p15975
((lp15976
S'int32'
p15977
ag14
a((S'taskHandle'
p15978
(lp15979
S'TaskHandle'
p15980
aNtp15981
(S'data'
p15982
(lp15983
S'float64'
p15984
ag22
aNtp15985
tp15986
tp15987
sS'DAQmxSetAIRVDTSensitivityUnits'
p15988
((lp15989
S'int32'
p15990
ag14
a((S'taskHandle'
p15991
(lp15992
S'TaskHandle'
p15993
aNtp15994
(S'channel'
p15995
(lp15996
S'char'
p15997
a(lp15998
I-1
aaNtp15999
(S'data'
p16000
(lp16001
S'int32'
p16002
aNtp16003
tp16004
tp16005
sS'DAQmxSetAnlgWinPauseTrigWhen'
p16006
((lp16007
S'int32'
p16008
ag14
a((S'taskHandle'
p16009
(lp16010
S'TaskHandle'
p16011
aNtp16012
(S'data'
p16013
(lp16014
S'int32'
p16015
aNtp16016
tp16017
tp16018
sS'DAQmxSetDigLvlPauseTrigDigSyncEnable'
p16019
((lp16020
S'int32'
p16021
ag14
a((S'taskHandle'
p16022
(lp16023
S'TaskHandle'
p16024
aNtp16025
(S'data'
p16026
(lp16027
S'bool32'
p16028
aNtp16029
tp16030
tp16031
sS'DAQmxSetWatchdogExpirTrigType'
p16032
((lp16033
S'int32'
p16034
ag14
a((S'taskHandle'
p16035
(lp16036
S'TaskHandle'
p16037
aNtp16038
(S'data'
p16039
(lp16040
S'int32'
p16041
aNtp16042
tp16043
tp16044
sS'DAQmxResetCIEncoderZInputDigFltrTimebaseSrc'
p16045
((lp16046
S'int32'
p16047
ag14
a((S'taskHandle'
p16048
(lp16049
S'TaskHandle'
p16050
aNtp16051
(S'channel'
p16052
(lp16053
S'char'
p16054
a(lp16055
I-1
aaNtp16056
tp16057
tp16058
sS'DAQmxResetAODACRefVal'
p16059
((lp16060
S'int32'
p16061
ag14
a((S'taskHandle'
p16062
(lp16063
S'TaskHandle'
p16064
aNtp16065
(S'channel'
p16066
(lp16067
S'char'
p16068
a(lp16069
I-1
aaNtp16070
tp16071
tp16072
sS'DAQmxResetAIACExcitFreq'
p16073
((lp16074
S'int32'
p16075
ag14
a((S'taskHandle'
p16076
(lp16077
S'TaskHandle'
p16078
aNtp16079
(S'channel'
p16080
(lp16081
S'char'
p16082
a(lp16083
I-1
aaNtp16084
tp16085
tp16086
sS'DAQmxGetAIAccelSensitivity'
p16087
((lp16088
S'int32'
p16089
ag14
a((S'taskHandle'
p16090
(lp16091
S'TaskHandle'
p16092
aNtp16093
(S'channel'
p16094
(lp16095
S'char'
p16096
a(lp16097
I-1
aaNtp16098
(S'data'
p16099
(lp16100
S'float64'
p16101
ag22
aNtp16102
tp16103
tp16104
sS'DAQmxSetCIDupCountPrevent'
p16105
((lp16106
S'int32'
p16107
ag14
a((S'taskHandle'
p16108
(lp16109
S'TaskHandle'
p16110
aNtp16111
(S'channel'
p16112
(lp16113
S'char'
p16114
a(lp16115
I-1
aaNtp16116
(S'data'
p16117
(lp16118
S'bool32'
p16119
aNtp16120
tp16121
tp16122
sS'DAQmxResetAOMin'
p16123
((lp16124
S'int32'
p16125
ag14
a((S'taskHandle'
p16126
(lp16127
S'TaskHandle'
p16128
aNtp16129
(S'channel'
p16130
(lp16131
S'char'
p16132
a(lp16133
I-1
aaNtp16134
tp16135
tp16136
sS'DAQmxSwitchOpenRelays'
p16137
((lp16138
S'int32'
p16139
ag14
a((S'relayList'
p16140
(lp16141
S'char'
p16142
a(lp16143
I-1
aaNtp16144
(S'waitForSettling'
p16145
(lp16146
S'bool32'
p16147
aNtp16148
tp16149
tp16150
sS'DAQmxGetRefTrigPretrigSamples'
p16151
((lp16152
S'int32'
p16153
ag14
a((S'taskHandle'
p16154
(lp16155
S'TaskHandle'
p16156
aNtp16157
(S'data'
p16158
(lp16159
S'uInt32'
p16160
ag22
aNtp16161
tp16162
tp16163
sS'DAQmxWriteRaw'
p16164
((lp16165
S'int32'
p16166
ag14
a((S'taskHandle'
p16167
(lp16168
S'TaskHandle'
p16169
aNtp16170
(S'numSamps'
p16171
(lp16172
S'int32'
p16173
aNtp16174
(S'autoStart'
p16175
(lp16176
S'bool32'
p16177
aNtp16178
(S'timeout'
p16179
(lp16180
S'float64'
p16181
aNtp16182
(S'writeArray'
p16183
(lp16184
S'void'
p16185
ag22
aNtp16186
(S'sampsPerChanWritten'
p16187
(lp16188
S'int32'
p16189
ag22
aNtp16190
(S'reserved'
p16191
(lp16192
S'bool32'
p16193
ag22
aNtp16194
tp16195
tp16196
sS'DAQmxResetAIMax'
p16197
((lp16198
S'int32'
p16199
ag14
a((S'taskHandle'
p16200
(lp16201
S'TaskHandle'
p16202
aNtp16203
(S'channel'
p16204
(lp16205
S'char'
p16206
a(lp16207
I-1
aaNtp16208
tp16209
tp16210
sS'DAQmxResetAOOutputImpedance'
p16211
((lp16212
S'int32'
p16213
ag14
a((S'taskHandle'
p16214
(lp16215
S'TaskHandle'
p16216
aNtp16217
(S'channel'
p16218
(lp16219
S'char'
p16220
a(lp16221
I-1
aaNtp16222
tp16223
tp16224
sS'DAQmxSetExportedHshkEventDelay'
p16225
((lp16226
S'int32'
p16227
ag14
a((S'taskHandle'
p16228
(lp16229
S'TaskHandle'
p16230
aNtp16231
(S'data'
p16232
(lp16233
S'float64'
p16234
aNtp16235
tp16236
tp16237
sS'DAQmxGetMasterTimebaseSrc'
p16238
((lp16239
S'int32'
p16240
ag14
a((S'taskHandle'
p16241
(lp16242
S'TaskHandle'
p16243
aNtp16244
(S'data'
p16245
(lp16246
S'char'
p16247
ag22
aNtp16248
(S'bufferSize'
p16249
(lp16250
S'uInt32'
p16251
aNtp16252
tp16253
tp16254
sS'DAQmxGetCICtrTimebaseSrc'
p16255
((lp16256
S'int32'
p16257
ag14
a((S'taskHandle'
p16258
(lp16259
S'TaskHandle'
p16260
aNtp16261
(S'channel'
p16262
(lp16263
S'char'
p16264
a(lp16265
I-1
aaNtp16266
(S'data'
p16267
(lp16268
S'char'
p16269
ag22
aNtp16270
(S'bufferSize'
p16271
(lp16272
S'uInt32'
p16273
aNtp16274
tp16275
tp16276
sS'DAQmxResetAILossyLSBRemovalCompressedSampSize'
p16277
((lp16278
S'int32'
p16279
ag14
a((S'taskHandle'
p16280
(lp16281
S'TaskHandle'
p16282
aNtp16283
(S'channel'
p16284
(lp16285
S'char'
p16286
a(lp16287
I-1
aaNtp16288
tp16289
tp16290
sS'DAQmxResetMasterTimebaseRate'
p16291
((lp16292
S'int32'
p16293
ag14
a((S'taskHandle'
p16294
(lp16295
S'TaskHandle'
p16296
aNtp16297
tp16298
tp16299
sS'DAQmxGetCIFreqDigFltrTimebaseSrc'
p16300
((lp16301
S'int32'
p16302
ag14
a((S'taskHandle'
p16303
(lp16304
S'TaskHandle'
p16305
aNtp16306
(S'channel'
p16307
(lp16308
S'char'
p16309
a(lp16310
I-1
aaNtp16311
(S'data'
p16312
(lp16313
S'char'
p16314
ag22
aNtp16315
(S'bufferSize'
p16316
(lp16317
S'uInt32'
p16318
aNtp16319
tp16320
tp16321
sS'DAQmxResetWriteRegenMode'
p16322
((lp16323
S'int32'
p16324
ag14
a((S'taskHandle'
p16325
(lp16326
S'TaskHandle'
p16327
aNtp16328
tp16329
tp16330
sS'DAQmxGetExportedDividedSampClkTimebaseOutputTerm'
p16331
((lp16332
S'int32'
p16333
ag14
a((S'taskHandle'
p16334
(lp16335
S'TaskHandle'
p16336
aNtp16337
(S'data'
p16338
(lp16339
S'char'
p16340
ag22
aNtp16341
(S'bufferSize'
p16342
(lp16343
S'uInt32'
p16344
aNtp16345
tp16346
tp16347
sS'DAQmxGetAnlgLvlPauseTrigSrc'
p16348
((lp16349
S'int32'
p16350
ag14
a((S'taskHandle'
p16351
(lp16352
S'TaskHandle'
p16353
aNtp16354
(S'data'
p16355
(lp16356
S'char'
p16357
ag22
aNtp16358
(S'bufferSize'
p16359
(lp16360
S'uInt32'
p16361
aNtp16362
tp16363
tp16364
sS'DAQmxGetAIChanCalScaleType'
p16365
((lp16366
S'int32'
p16367
ag14
a((S'taskHandle'
p16368
(lp16369
S'TaskHandle'
p16370
aNtp16371
(S'channel'
p16372
(lp16373
S'char'
p16374
a(lp16375
I-1
aaNtp16376
(S'data'
p16377
(lp16378
S'int32'
p16379
ag22
aNtp16380
tp16381
tp16382
sS'DAQmxSetDOInvertLines'
p16383
((lp16384
S'int32'
p16385
ag14
a((S'taskHandle'
p16386
(lp16387
S'TaskHandle'
p16388
aNtp16389
(S'channel'
p16390
(lp16391
S'char'
p16392
a(lp16393
I-1
aaNtp16394
(S'data'
p16395
(lp16396
S'bool32'
p16397
aNtp16398
tp16399
tp16400
sS'DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth'
p16401
((lp16402
S'int32'
p16403
ag14
a((S'taskHandle'
p16404
(lp16405
S'TaskHandle'
p16406
aNtp16407
(S'channel'
p16408
(lp16409
S'char'
p16410
a(lp16411
I-1
aaNtp16412
(S'data'
p16413
(lp16414
S'float64'
p16415
ag22
aNtp16416
tp16417
tp16418
sS'DAQmxSetExportedSyncPulseEventOutputTerm'
p16419
((lp16420
S'int32'
p16421
ag14
a((S'taskHandle'
p16422
(lp16423
S'TaskHandle'
p16424
aNtp16425
(S'data'
p16426
(lp16427
S'char'
p16428
ag22
aNtp16429
tp16430
tp16431
sS'DAQmxResetSyncPulseMinDelayToStart'
p16432
((lp16433
S'int32'
p16434
ag14
a((S'taskHandle'
p16435
(lp16436
S'TaskHandle'
p16437
aNtp16438
tp16439
tp16440
sS'DAQmxGetCIFreqDigFltrEnable'
p16441
((lp16442
S'int32'
p16443
ag14
a((S'taskHandle'
p16444
(lp16445
S'TaskHandle'
p16446
aNtp16447
(S'channel'
p16448
(lp16449
S'char'
p16450
a(lp16451
I-1
aaNtp16452
(S'data'
p16453
(lp16454
S'bool32'
p16455
ag22
aNtp16456
tp16457
tp16458
sS'DAQmxSetCIPulseWidthStartingEdge'
p16459
((lp16460
S'int32'
p16461
ag14
a((S'taskHandle'
p16462
(lp16463
S'TaskHandle'
p16464
aNtp16465
(S'channel'
p16466
(lp16467
S'char'
p16468
a(lp16469
I-1
aaNtp16470
(S'data'
p16471
(lp16472
S'int32'
p16473
aNtp16474
tp16475
tp16476
sS'DAQmxSetAIExcitUseForScaling'
p16477
((lp16478
S'int32'
p16479
ag14
a((S'taskHandle'
p16480
(lp16481
S'TaskHandle'
p16482
aNtp16483
(S'channel'
p16484
(lp16485
S'char'
p16486
a(lp16487
I-1
aaNtp16488
(S'data'
p16489
(lp16490
S'bool32'
p16491
aNtp16492
tp16493
tp16494
sS'DAQmxGetDOUseOnlyOnBrdMem'
p16495
((lp16496
S'int32'
p16497
ag14
a((S'taskHandle'
p16498
(lp16499
S'TaskHandle'
p16500
aNtp16501
(S'channel'
p16502
(lp16503
S'char'
p16504
a(lp16505
I-1
aaNtp16506
(S'data'
p16507
(lp16508
S'bool32'
p16509
ag22
aNtp16510
tp16511
tp16512
sS'DAQmxSetScaleDescr'
p16513
((lp16514
S'int32'
p16515
ag14
a((S'scaleName'
p16516
(lp16517
S'char'
p16518
a(lp16519
I-1
aaNtp16520
(S'data'
p16521
(lp16522
S'char'
p16523
ag22
aNtp16524
tp16525
tp16526
sS'DAQmxGetPhysicalChanTEDSTemplateIDs'
p16527
((lp16528
S'int32'
p16529
ag14
a((S'physicalChannel'
p16530
(lp16531
S'char'
p16532
a(lp16533
I-1
aaNtp16534
(S'data'
p16535
(lp16536
S'uInt32'
p16537
ag22
aNtp16538
(S'arraySizeInSamples'
p16539
(lp16540
S'uInt32'
p16541
aNtp16542
tp16543
tp16544
sS'DAQmxResetAIAccelSensitivityUnits'
p16545
((lp16546
S'int32'
p16547
ag14
a((S'taskHandle'
p16548
(lp16549
S'TaskHandle'
p16550
aNtp16551
(S'channel'
p16552
(lp16553
S'char'
p16554
a(lp16555
I-1
aaNtp16556
tp16557
tp16558
sS'DAQmxSaveTask'
p16559
((lp16560
S'int32'
p16561
ag14
a((S'taskHandle'
p16562
(lp16563
S'TaskHandle'
p16564
aNtp16565
(S'saveAs'
p16566
(lp16567
S'char'
p16568
a(lp16569
I-1
aaNtp16570
(S'author'
p16571
(lp16572
S'char'
p16573
a(lp16574
I-1
aaNtp16575
(S'options'
p16576
(lp16577
S'uInt32'
p16578
aNtp16579
tp16580
tp16581
sS'DAQmxGetScaleMapPreScaledMax'
p16582
((lp16583
S'int32'
p16584
ag14
a((S'scaleName'
p16585
(lp16586
S'char'
p16587
a(lp16588
I-1
aaNtp16589
(S'data'
p16590
(lp16591
S'float64'
p16592
ag22
aNtp16593
tp16594
tp16595
sS'DAQmxAdjust1125Cal'
p16596
((lp16597
S'int32'
p16598
ag14
a((S'calHandle'
p16599
(lp16600
S'uInt32'
p16601
aNtp16602
(S'refVoltage'
p16603
(lp16604
S'float64'
p16605
aNtp16606
(S'measOutput'
p16607
(lp16608
S'float64'
p16609
aNtp16610
tp16611
tp16612
sS'DAQmxSetCICtrTimebaseDigFltrEnable'
p16613
((lp16614
S'int32'
p16615
ag14
a((S'taskHandle'
p16616
(lp16617
S'TaskHandle'
p16618
aNtp16619
(S'channel'
p16620
(lp16621
S'char'
p16622
a(lp16623
I-1
aaNtp16624
(S'data'
p16625
(lp16626
S'bool32'
p16627
aNtp16628
tp16629
tp16630
sS'DAQmxGetPersistedTaskAllowInteractiveEditing'
p16631
((lp16632
S'int32'
p16633
ag14
a((S'taskName'
p16634
(lp16635
S'char'
p16636
a(lp16637
I-1
aaNtp16638
(S'data'
p16639
(lp16640
S'bool32'
p16641
ag22
aNtp16642
tp16643
tp16644
sS'DAQmxResetAOResolutionUnits'
p16645
((lp16646
S'int32'
p16647
ag14
a((S'taskHandle'
p16648
(lp16649
S'TaskHandle'
p16650
aNtp16651
(S'channel'
p16652
(lp16653
S'char'
p16654
a(lp16655
I-1
aaNtp16656
tp16657
tp16658
sS'DAQmxSetExportedAIConvClkOutputTerm'
p16659
((lp16660
S'int32'
p16661
ag14
a((S'taskHandle'
p16662
(lp16663
S'TaskHandle'
p16664
aNtp16665
(S'data'
p16666
(lp16667
S'char'
p16668
ag22
aNtp16669
tp16670
tp16671
sS'DAQmxSetAIChanCalApplyCalIfExp'
p16672
((lp16673
S'int32'
p16674
ag14
a((S'taskHandle'
p16675
(lp16676
S'TaskHandle'
p16677
aNtp16678
(S'channel'
p16679
(lp16680
S'char'
p16681
a(lp16682
I-1
aaNtp16683
(S'data'
p16684
(lp16685
S'bool32'
p16686
aNtp16687
tp16688
tp16689
sS'DAQmxSetCITwoEdgeSepFirstDigFltrEnable'
p16690
((lp16691
S'int32'
p16692
ag14
a((S'taskHandle'
p16693
(lp16694
S'TaskHandle'
p16695
aNtp16696
(S'channel'
p16697
(lp16698
S'char'
p16699
a(lp16700
I-1
aaNtp16701
(S'data'
p16702
(lp16703
S'bool32'
p16704
aNtp16705
tp16706
tp16707
sS'DAQmxGetCIPeriodDigSyncEnable'
p16708
((lp16709
S'int32'
p16710
ag14
a((S'taskHandle'
p16711
(lp16712
S'TaskHandle'
p16713
aNtp16714
(S'channel'
p16715
(lp16716
S'char'
p16717
a(lp16718
I-1
aaNtp16719
(S'data'
p16720
(lp16721
S'bool32'
p16722
ag22
aNtp16723
tp16724
tp16725
sS'DAQmxSetAOCustomScaleName'
p16726
((lp16727
S'int32'
p16728
ag14
a((S'taskHandle'
p16729
(lp16730
S'TaskHandle'
p16731
aNtp16732
(S'channel'
p16733
(lp16734
S'char'
p16735
a(lp16736
I-1
aaNtp16737
(S'data'
p16738
(lp16739
S'char'
p16740
ag22
aNtp16741
tp16742
tp16743
sS'DAQmxGetSampClkTimebaseDiv'
p16744
((lp16745
S'int32'
p16746
ag14
a((S'taskHandle'
p16747
(lp16748
S'TaskHandle'
p16749
aNtp16750
(S'data'
p16751
(lp16752
S'uInt32'
p16753
ag22
aNtp16754
tp16755
tp16756
sS'DAQmxSetAIBridgeShuntCalGainAdjust'
p16757
((lp16758
S'int32'
p16759
ag14
a((S'taskHandle'
p16760
(lp16761
S'TaskHandle'
p16762
aNtp16763
(S'channel'
p16764
(lp16765
S'char'
p16766
a(lp16767
I-1
aaNtp16768
(S'data'
p16769
(lp16770
S'float64'
p16771
aNtp16772
tp16773
tp16774
sS'DAQmxGetAILowpassSwitchCapOutClkDiv'
p16775
((lp16776
S'int32'
p16777
ag14
a((S'taskHandle'
p16778
(lp16779
S'TaskHandle'
p16780
aNtp16781
(S'channel'
p16782
(lp16783
S'char'
p16784
a(lp16785
I-1
aaNtp16786
(S'data'
p16787
(lp16788
S'uInt32'
p16789
ag22
aNtp16790
tp16791
tp16792
sS'DAQmxGetAIResistanceCfg'
p16793
((lp16794
S'int32'
p16795
ag14
a((S'taskHandle'
p16796
(lp16797
S'TaskHandle'
p16798
aNtp16799
(S'channel'
p16800
(lp16801
S'char'
p16802
a(lp16803
I-1
aaNtp16804
(S'data'
p16805
(lp16806
S'int32'
p16807
ag22
aNtp16808
tp16809
tp16810
sS'DAQmxGetAnlgWinRefTrigSrc'
p16811
((lp16812
S'int32'
p16813
ag14
a((S'taskHandle'
p16814
(lp16815
S'TaskHandle'
p16816
aNtp16817
(S'data'
p16818
(lp16819
S'char'
p16820
ag22
aNtp16821
(S'bufferSize'
p16822
(lp16823
S'uInt32'
p16824
aNtp16825
tp16826
tp16827
sS'DAQmxGetSampClkDigFltrTimebaseRate'
p16828
((lp16829
S'int32'
p16830
ag14
a((S'taskHandle'
p16831
(lp16832
S'TaskHandle'
p16833
aNtp16834
(S'data'
p16835
(lp16836
S'float64'
p16837
ag22
aNtp16838
tp16839
tp16840
sS'DAQmxResetCITwoEdgeSepFirstEdge'
p16841
((lp16842
S'int32'
p16843
ag14
a((S'taskHandle'
p16844
(lp16845
S'TaskHandle'
p16846
aNtp16847
(S'channel'
p16848
(lp16849
S'char'
p16850
a(lp16851
I-1
aaNtp16852
tp16853
tp16854
sS'DAQmxSetCITwoEdgeSepFirstEdge'
p16855
((lp16856
S'int32'
p16857
ag14
a((S'taskHandle'
p16858
(lp16859
S'TaskHandle'
p16860
aNtp16861
(S'channel'
p16862
(lp16863
S'char'
p16864
a(lp16865
I-1
aaNtp16866
(S'data'
p16867
(lp16868
S'int32'
p16869
aNtp16870
tp16871
tp16872
sS'DAQmxSetCIEncoderAInputDigFltrTimebaseRate'
p16873
((lp16874
S'int32'
p16875
ag14
a((S'taskHandle'
p16876
(lp16877
S'TaskHandle'
p16878
aNtp16879
(S'channel'
p16880
(lp16881
S'char'
p16882
a(lp16883
I-1
aaNtp16884
(S'data'
p16885
(lp16886
S'float64'
p16887
aNtp16888
tp16889
tp16890
sS'DAQmxGetDevSerialNum'
p16891
((lp16892
S'int32'
p16893
ag14
a((S'device'
p16894
(lp16895
S'char'
p16896
a(lp16897
I-1
aaNtp16898
(S'data'
p16899
(lp16900
S'uInt32'
p16901
ag22
aNtp16902
tp16903
tp16904
sS'DAQmxGetAODACRngHigh'
p16905
((lp16906
S'int32'
p16907
ag14
a((S'taskHandle'
p16908
(lp16909
S'TaskHandle'
p16910
aNtp16911
(S'channel'
p16912
(lp16913
S'char'
p16914
a(lp16915
I-1
aaNtp16916
(S'data'
p16917
(lp16918
S'float64'
p16919
ag22
aNtp16920
tp16921
tp16922
sS'DAQmxGetCIPulseWidthStartingEdge'
p16923
((lp16924
S'int32'
p16925
ag14
a((S'taskHandle'
p16926
(lp16927
S'TaskHandle'
p16928
aNtp16929
(S'channel'
p16930
(lp16931
S'char'
p16932
a(lp16933
I-1
aaNtp16934
(S'data'
p16935
(lp16936
S'int32'
p16937
ag22
aNtp16938
tp16939
tp16940
sS'DAQmxGetReadRelativeTo'
p16941
((lp16942
S'int32'
p16943
ag14
a((S'taskHandle'
p16944
(lp16945
S'TaskHandle'
p16946
aNtp16947
(S'data'
p16948
(lp16949
S'int32'
p16950
ag22
aNtp16951
tp16952
tp16953
sS'DAQmxCreateTEDSAIAccelChan'
p16954
((lp16955
S'int32'
p16956
ag14
a((S'taskHandle'
p16957
(lp16958
S'TaskHandle'
p16959
aNtp16960
(S'physicalChannel'
p16961
(lp16962
S'char'
p16963
a(lp16964
I-1
aaNtp16965
(S'nameToAssignToChannel'
p16966
(lp16967
S'char'
p16968
a(lp16969
I-1
aaNtp16970
(S'terminalConfig'
p16971
(lp16972
S'int32'
p16973
aNtp16974
(S'minVal'
p16975
(lp16976
S'float64'
p16977
aNtp16978
(S'maxVal'
p16979
(lp16980
S'float64'
p16981
aNtp16982
(S'units'
p16983
(lp16984
S'int32'
p16985
aNtp16986
(S'currentExcitSource'
p16987
(lp16988
S'int32'
p16989
aNtp16990
(S'currentExcitVal'
p16991
(lp16992
S'float64'
p16993
aNtp16994
(S'customScaleName'
p16995
(lp16996
S'char'
p16997
a(lp16998
I-1
aaNtp16999
tp17000
tp17001
sS'DAQmxGetCIEncoderBInputDigFltrTimebaseSrc'
p17002
((lp17003
S'int32'
p17004
ag14
a((S'taskHandle'
p17005
(lp17006
S'TaskHandle'
p17007
aNtp17008
(S'channel'
p17009
(lp17010
S'char'
p17011
a(lp17012
I-1
aaNtp17013
(S'data'
p17014
(lp17015
S'char'
p17016
ag22
aNtp17017
(S'bufferSize'
p17018
(lp17019
S'uInt32'
p17020
aNtp17021
tp17022
tp17023
sS'DAQmxResetAIThrmcplType'
p17024
((lp17025
S'int32'
p17026
ag14
a((S'taskHandle'
p17027
(lp17028
S'TaskHandle'
p17029
aNtp17030
(S'channel'
p17031
(lp17032
S'char'
p17033
a(lp17034
I-1
aaNtp17035
tp17036
tp17037
sS'DAQmxGetWatchdogDOExpirState'
p17038
((lp17039
S'int32'
p17040
ag14
a((S'taskHandle'
p17041
(lp17042
S'TaskHandle'
p17043
aNtp17044
(S'channel'
p17045
(lp17046
S'char'
p17047
a(lp17048
I-1
aaNtp17049
(S'data'
p17050
(lp17051
S'int32'
p17052
ag22
aNtp17053
tp17054
tp17055
sS'DAQmxGetDigLvlPauseTrigWhen'
p17056
((lp17057
S'int32'
p17058
ag14
a((S'taskHandle'
p17059
(lp17060
S'TaskHandle'
p17061
aNtp17062
(S'data'
p17063
(lp17064
S'int32'
p17065
ag22
aNtp17066
tp17067
tp17068
sS'DAQmxSetExportedAdvTrigPulseWidth'
p17069
((lp17070
S'int32'
p17071
ag14
a((S'taskHandle'
p17072
(lp17073
S'TaskHandle'
p17074
aNtp17075
(S'data'
p17076
(lp17077
S'float64'
p17078
aNtp17079
tp17080
tp17081
sS'DAQmxGetDelayFromSampClkDelayUnits'
p17082
((lp17083
S'int32'
p17084
ag14
a((S'taskHandle'
p17085
(lp17086
S'TaskHandle'
p17087
aNtp17088
(S'data'
p17089
(lp17090
S'int32'
p17091
ag22
aNtp17092
tp17093
tp17094
sS'DAQmxSetCIFreqUnits'
p17095
((lp17096
S'int32'
p17097
ag14
a((S'taskHandle'
p17098
(lp17099
S'TaskHandle'
p17100
aNtp17101
(S'channel'
p17102
(lp17103
S'char'
p17104
a(lp17105
I-1
aaNtp17106
(S'data'
p17107
(lp17108
S'int32'
p17109
aNtp17110
tp17111
tp17112
sS'DAQmxResetExportedAdvTrigOutputTerm'
p17113
((lp17114
S'int32'
p17115
ag14
a((S'taskHandle'
p17116
(lp17117
S'TaskHandle'
p17118
aNtp17119
tp17120
tp17121
sS'DAQmxSetSampClkDigFltrMinPulseWidth'
p17122
((lp17123
S'int32'
p17124
ag14
a((S'taskHandle'
p17125
(lp17126
S'TaskHandle'
p17127
aNtp17128
(S'data'
p17129
(lp17130
S'float64'
p17131
aNtp17132
tp17133
tp17134
sS'DAQmxGetAdvTrigType'
p17135
((lp17136
S'int32'
p17137
ag14
a((S'taskHandle'
p17138
(lp17139
S'TaskHandle'
p17140
aNtp17141
(S'data'
p17142
(lp17143
S'int32'
p17144
ag22
aNtp17145
tp17146
tp17147
sS'DAQmxGetAnlgWinStartTrigSrc'
p17148
((lp17149
S'int32'
p17150
ag14
a((S'taskHandle'
p17151
(lp17152
S'TaskHandle'
p17153
aNtp17154
(S'data'
p17155
(lp17156
S'char'
p17157
ag22
aNtp17158
(S'bufferSize'
p17159
(lp17160
S'uInt32'
p17161
aNtp17162
tp17163
tp17164
sS'DAQmxGetDOTristate'
p17165
((lp17166
S'int32'
p17167
ag14
a((S'taskHandle'
p17168
(lp17169
S'TaskHandle'
p17170
aNtp17171
(S'channel'
p17172
(lp17173
S'char'
p17174
a(lp17175
I-1
aaNtp17176
(S'data'
p17177
(lp17178
S'bool32'
p17179
ag22
aNtp17180
tp17181
tp17182
sS'DAQmxGetAILVDTSensitivityUnits'
p17183
((lp17184
S'int32'
p17185
ag14
a((S'taskHandle'
p17186
(lp17187
S'TaskHandle'
p17188
aNtp17189
(S'channel'
p17190
(lp17191
S'char'
p17192
a(lp17193
I-1
aaNtp17194
(S'data'
p17195
(lp17196
S'int32'
p17197
ag22
aNtp17198
tp17199
tp17200
sS'DAQmxSetAIThrmstrR1'
p17201
((lp17202
S'int32'
p17203
ag14
a((S'taskHandle'
p17204
(lp17205
S'TaskHandle'
p17206
aNtp17207
(S'channel'
p17208
(lp17209
S'char'
p17210
a(lp17211
I-1
aaNtp17212
(S'data'
p17213
(lp17214
S'float64'
p17215
aNtp17216
tp17217
tp17218
sS'DAQmxSetCOPulseHighTime'
p17219
((lp17220
S'int32'
p17221
ag14
a((S'taskHandle'
p17222
(lp17223
S'TaskHandle'
p17224
aNtp17225
(S'channel'
p17226
(lp17227
S'char'
p17228
a(lp17229
I-1
aaNtp17230
(S'data'
p17231
(lp17232
S'float64'
p17233
aNtp17234
tp17235
tp17236
sS'DAQmxSetChangeDetectDIFallingEdgePhysicalChans'
p17237
((lp17238
S'int32'
p17239
ag14
a((S'taskHandle'
p17240
(lp17241
S'TaskHandle'
p17242
aNtp17243
(S'data'
p17244
(lp17245
S'char'
p17246
ag22
aNtp17247
tp17248
tp17249
sS'DAQmxGetCOCtrTimebaseDigFltrEnable'
p17250
((lp17251
S'int32'
p17252
ag14
a((S'taskHandle'
p17253
(lp17254
S'TaskHandle'
p17255
aNtp17256
(S'channel'
p17257
(lp17258
S'char'
p17259
a(lp17260
I-1
aaNtp17261
(S'data'
p17262
(lp17263
S'bool32'
p17264
ag22
aNtp17265
tp17266
tp17267
sS'DAQmxSetAIStrainUnits'
p17268
((lp17269
S'int32'
p17270
ag14
a((S'taskHandle'
p17271
(lp17272
S'TaskHandle'
p17273
aNtp17274
(S'channel'
p17275
(lp17276
S'char'
p17277
a(lp17278
I-1
aaNtp17279
(S'data'
p17280
(lp17281
S'int32'
p17282
aNtp17283
tp17284
tp17285
sS'DAQmxResetHshkSampleInputDataWhen'
p17286
((lp17287
S'int32'
p17288
ag14
a((S'taskHandle'
p17289
(lp17290
S'TaskHandle'
p17291
aNtp17292
tp17293
tp17294
sS'DAQmxSetScaleScaledUnits'
p17295
((lp17296
S'int32'
p17297
ag14
a((S'scaleName'
p17298
(lp17299
S'char'
p17300
a(lp17301
I-1
aaNtp17302
(S'data'
p17303
(lp17304
S'char'
p17305
ag22
aNtp17306
tp17307
tp17308
sS'DAQmxGetSwitchChanUsage'
p17309
((lp17310
S'int32'
p17311
ag14
a((S'switchChannelName'
p17312
(lp17313
S'char'
p17314
a(lp17315
I-1
aaNtp17316
(S'data'
p17317
(lp17318
S'int32'
p17319
ag22
aNtp17320
tp17321
tp17322
sS'DAQmxResetExportedAIHoldCmpltEventPulsePolarity'
p17323
((lp17324
S'int32'
p17325
ag14
a((S'taskHandle'
p17326
(lp17327
S'TaskHandle'
p17328
aNtp17329
tp17330
tp17331
sS'DAQmxSetCIEncoderZIndexPhase'
p17332
((lp17333
S'int32'
p17334
ag14
a((S'taskHandle'
p17335
(lp17336
S'TaskHandle'
p17337
aNtp17338
(S'channel'
p17339
(lp17340
S'char'
p17341
a(lp17342
I-1
aaNtp17343
(S'data'
p17344
(lp17345
S'int32'
p17346
aNtp17347
tp17348
tp17349
sS'DAQmxGetExportedCtrOutEventToggleIdleState'
p17350
((lp17351
S'int32'
p17352
ag14
a((S'taskHandle'
p17353
(lp17354
S'TaskHandle'
p17355
aNtp17356
(S'data'
p17357
(lp17358
S'int32'
p17359
ag22
aNtp17360
tp17361
tp17362
sS'DAQmxGetAILowpassSwitchCapExtClkDiv'
p17363
((lp17364
S'int32'
p17365
ag14
a((S'taskHandle'
p17366
(lp17367
S'TaskHandle'
p17368
aNtp17369
(S'channel'
p17370
(lp17371
S'char'
p17372
a(lp17373
I-1
aaNtp17374
(S'data'
p17375
(lp17376
S'uInt32'
p17377
ag22
aNtp17378
tp17379
tp17380
sS'DAQmxResetCIMax'
p17381
((lp17382
S'int32'
p17383
ag14
a((S'taskHandle'
p17384
(lp17385
S'TaskHandle'
p17386
aNtp17387
(S'channel'
p17388
(lp17389
S'char'
p17390
a(lp17391
I-1
aaNtp17392
tp17393
tp17394
sS'DAQmxSetExported10MHzRefClkOutputTerm'
p17395
((lp17396
S'int32'
p17397
ag14
a((S'taskHandle'
p17398
(lp17399
S'TaskHandle'
p17400
aNtp17401
(S'data'
p17402
(lp17403
S'char'
p17404
ag22
aNtp17405
tp17406
tp17407
sS'DAQmxSetCIFreqDigFltrEnable'
p17408
((lp17409
S'int32'
p17410
ag14
a((S'taskHandle'
p17411
(lp17412
S'TaskHandle'
p17413
aNtp17414
(S'channel'
p17415
(lp17416
S'char'
p17417
a(lp17418
I-1
aaNtp17419
(S'data'
p17420
(lp17421
S'bool32'
p17422
aNtp17423
tp17424
tp17425
sS'DAQmxGetCIPulseWidthDigFltrTimebaseRate'
p17426
((lp17427
S'int32'
p17428
ag14
a((S'taskHandle'
p17429
(lp17430
S'TaskHandle'
p17431
aNtp17432
(S'channel'
p17433
(lp17434
S'char'
p17435
a(lp17436
I-1
aaNtp17437
(S'data'
p17438
(lp17439
S'float64'
p17440
ag22
aNtp17441
tp17442
tp17443
sS'DAQmxResetAIThrmstrA'
p17444
((lp17445
S'int32'
p17446
ag14
a((S'taskHandle'
p17447
(lp17448
S'TaskHandle'
p17449
aNtp17450
(S'channel'
p17451
(lp17452
S'char'
p17453
a(lp17454
I-1
aaNtp17455
tp17456
tp17457
sS'DAQmxResetAIThrmstrB'
p17458
((lp17459
S'int32'
p17460
ag14
a((S'taskHandle'
p17461
(lp17462
S'TaskHandle'
p17463
aNtp17464
(S'channel'
p17465
(lp17466
S'char'
p17467
a(lp17468
I-1
aaNtp17469
tp17470
tp17471
sS'DAQmxResetAIThrmstrC'
p17472
((lp17473
S'int32'
p17474
ag14
a((S'taskHandle'
p17475
(lp17476
S'TaskHandle'
p17477
aNtp17478
(S'channel'
p17479
(lp17480
S'char'
p17481
a(lp17482
I-1
aaNtp17483
tp17484
tp17485
sS'DAQmxGetCIEncoderZIndexPhase'
p17486
((lp17487
S'int32'
p17488
ag14
a((S'taskHandle'
p17489
(lp17490
S'TaskHandle'
p17491
aNtp17492
(S'channel'
p17493
(lp17494
S'char'
p17495
a(lp17496
I-1
aaNtp17497
(S'data'
p17498
(lp17499
S'int32'
p17500
ag22
aNtp17501
tp17502
tp17503
sS'DAQmxSetAIACExcitFreq'
p17504
((lp17505
S'int32'
p17506
ag14
a((S'taskHandle'
p17507
(lp17508
S'TaskHandle'
p17509
aNtp17510
(S'channel'
p17511
(lp17512
S'char'
p17513
a(lp17514
I-1
aaNtp17515
(S'data'
p17516
(lp17517
S'float64'
p17518
aNtp17519
tp17520
tp17521
sS'DAQmxGetDIDigFltrEnable'
p17522
((lp17523
S'int32'
p17524
ag14
a((S'taskHandle'
p17525
(lp17526
S'TaskHandle'
p17527
aNtp17528
(S'channel'
p17529
(lp17530
S'char'
p17531
a(lp17532
I-1
aaNtp17533
(S'data'
p17534
(lp17535
S'bool32'
p17536
ag22
aNtp17537
tp17538
tp17539
sS'DAQmxSetAIChanCalExpDate'
p17540
((lp17541
S'int32'
p17542
ag14
a((S'taskHandle'
p17543
(lp17544
S'TaskHandle'
p17545
aNtp17546
(S'channelName'
p17547
(lp17548
S'char'
p17549
a(lp17550
I-1
aaNtp17551
(S'year'
p17552
(lp17553
S'uInt32'
p17554
aNtp17555
(S'month'
p17556
(lp17557
S'uInt32'
p17558
aNtp17559
(S'day'
p17560
(lp17561
S'uInt32'
p17562
aNtp17563
(S'hour'
p17564
(lp17565
S'uInt32'
p17566
aNtp17567
(S'minute'
p17568
(lp17569
S'uInt32'
p17570
aNtp17571
tp17572
tp17573
sS'DAQmxGetPersistedChanAuthor'
p17574
((lp17575
S'int32'
p17576
ag14
a((S'channel'
p17577
(lp17578
S'char'
p17579
a(lp17580
I-1
aaNtp17581
(S'data'
p17582
(lp17583
S'char'
p17584
ag22
aNtp17585
(S'bufferSize'
p17586
(lp17587
S'uInt32'
p17588
aNtp17589
tp17590
tp17591
sS'DAQmxSwitchGetSingleRelayPos'
p17592
((lp17593
S'int32'
p17594
ag14
a((S'relayName'
p17595
(lp17596
S'char'
p17597
a(lp17598
I-1
aaNtp17599
(S'relayPos'
p17600
(lp17601
S'uInt32'
p17602
ag22
aNtp17603
tp17604
tp17605
sS'DAQmxResetDigPatternStartTrigSrc'
p17606
((lp17607
S'int32'
p17608
ag14
a((S'taskHandle'
p17609
(lp17610
S'TaskHandle'
p17611
aNtp17612
tp17613
tp17614
sS'DAQmxSetCIPeriodDiv'
p17615
((lp17616
S'int32'
p17617
ag14
a((S'taskHandle'
p17618
(lp17619
S'TaskHandle'
p17620
aNtp17621
(S'channel'
p17622
(lp17623
S'char'
p17624
a(lp17625
I-1
aaNtp17626
(S'data'
p17627
(lp17628
S'uInt32'
p17629
aNtp17630
tp17631
tp17632
sS'DAQmxWriteDigitalU32'
p17633
((lp17634
S'int32'
p17635
ag14
a((S'taskHandle'
p17636
(lp17637
S'TaskHandle'
p17638
aNtp17639
(S'numSampsPerChan'
p17640
(lp17641
S'int32'
p17642
aNtp17643
(S'autoStart'
p17644
(lp17645
S'bool32'
p17646
aNtp17647
(S'timeout'
p17648
(lp17649
S'float64'
p17650
aNtp17651
(S'dataLayout'
p17652
(lp17653
S'bool32'
p17654
aNtp17655
(S'writeArray'
p17656
(lp17657
S'uInt32'
p17658
a(lp17659
I-1
aaNtp17660
(S'sampsPerChanWritten'
p17661
(lp17662
S'int32'
p17663
ag22
aNtp17664
(S'reserved'
p17665
(lp17666
S'bool32'
p17667
ag22
aNtp17668
tp17669
tp17670
sS'DAQmxGetSwitchScanRepeatMode'
p17671
((lp17672
S'int32'
p17673
ag14
a((S'taskHandle'
p17674
(lp17675
S'TaskHandle'
p17676
aNtp17677
(S'data'
p17678
(lp17679
S'int32'
p17680
ag22
aNtp17681
tp17682
tp17683
sS'DAQmxResetCILinEncoderUnits'
p17684
((lp17685
S'int32'
p17686
ag14
a((S'taskHandle'
p17687
(lp17688
S'TaskHandle'
p17689
aNtp17690
(S'channel'
p17691
(lp17692
S'char'
p17693
a(lp17694
I-1
aaNtp17695
tp17696
tp17697
sS'DAQmxSetCIPulseWidthDigFltrTimebaseRate'
p17698
((lp17699
S'int32'
p17700
ag14
a((S'taskHandle'
p17701
(lp17702
S'TaskHandle'
p17703
aNtp17704
(S'channel'
p17705
(lp17706
S'char'
p17707
a(lp17708
I-1
aaNtp17709
(S'data'
p17710
(lp17711
S'float64'
p17712
aNtp17713
tp17714
tp17715
sS'DAQmxSetChanDescr'
p17716
((lp17717
S'int32'
p17718
ag14
a((S'taskHandle'
p17719
(lp17720
S'TaskHandle'
p17721
aNtp17722
(S'channel'
p17723
(lp17724
S'char'
p17725
a(lp17726
I-1
aaNtp17727
(S'data'
p17728
(lp17729
S'char'
p17730
ag22
aNtp17731
tp17732
tp17733
sS'DAQmxGetRefClkSrc'
p17734
((lp17735
S'int32'
p17736
ag14
a((S'taskHandle'
p17737
(lp17738
S'TaskHandle'
p17739
aNtp17740
(S'data'
p17741
(lp17742
S'char'
p17743
ag22
aNtp17744
(S'bufferSize'
p17745
(lp17746
S'uInt32'
p17747
aNtp17748
tp17749
tp17750
sS'DAQmxResetDigEdgeAdvTrigEdge'
p17751
((lp17752
S'int32'
p17753
ag14
a((S'taskHandle'
p17754
(lp17755
S'TaskHandle'
p17756
aNtp17757
tp17758
tp17759
sS'DAQmxResetAIExcitVoltageOrCurrent'
p17760
((lp17761
S'int32'
p17762
ag14
a((S'taskHandle'
p17763
(lp17764
S'TaskHandle'
p17765
aNtp17766
(S'channel'
p17767
(lp17768
S'char'
p17769
a(lp17770
I-1
aaNtp17771
tp17772
tp17773
sS'DAQmxSetDigPatternRefTrigWhen'
p17774
((lp17775
S'int32'
p17776
ag14
a((S'taskHandle'
p17777
(lp17778
S'TaskHandle'
p17779
aNtp17780
(S'data'
p17781
(lp17782
S'int32'
p17783
aNtp17784
tp17785
tp17786
sS'DAQmxGetAnlgWinRefTrigCoupling'
p17787
((lp17788
S'int32'
p17789
ag14
a((S'taskHandle'
p17790
(lp17791
S'TaskHandle'
p17792
aNtp17793
(S'data'
p17794
(lp17795
S'int32'
p17796
ag22
aNtp17797
tp17798
tp17799
sS'DAQmxGetBufOutputBufSize'
p17800
((lp17801
S'int32'
p17802
ag14
a((S'taskHandle'
p17803
(lp17804
S'TaskHandle'
p17805
aNtp17806
(S'data'
p17807
(lp17808
S'uInt32'
p17809
ag22
aNtp17810
tp17811
tp17812
sS'DAQmxSetCIEncoderZIndexVal'
p17813
((lp17814
S'int32'
p17815
ag14
a((S'taskHandle'
p17816
(lp17817
S'TaskHandle'
p17818
aNtp17819
(S'channel'
p17820
(lp17821
S'char'
p17822
a(lp17823
I-1
aaNtp17824
(S'data'
p17825
(lp17826
S'float64'
p17827
aNtp17828
tp17829
tp17830
sS'DAQmxResetAIAccelUnits'
p17831
((lp17832
S'int32'
p17833
ag14
a((S'taskHandle'
p17834
(lp17835
S'TaskHandle'
p17836
aNtp17837
(S'channel'
p17838
(lp17839
S'char'
p17840
a(lp17841
I-1
aaNtp17842
tp17843
tp17844
sS'DAQmxGetExportedAIHoldCmpltEventOutputTerm'
p17845
((lp17846
S'int32'
p17847
ag14
a((S'taskHandle'
p17848
(lp17849
S'TaskHandle'
p17850
aNtp17851
(S'data'
p17852
(lp17853
S'char'
p17854
ag22
aNtp17855
(S'bufferSize'
p17856
(lp17857
S'uInt32'
p17858
aNtp17859
tp17860
tp17861
sS'DAQmxResetInterlockedHshkTrigSrc'
p17862
((lp17863
S'int32'
p17864
ag14
a((S'taskHandle'
p17865
(lp17866
S'TaskHandle'
p17867
aNtp17868
tp17869
tp17870
sS'DAQmxCreateAIPosRVDTChan'
p17871
((lp17872
S'int32'
p17873
ag14
a((S'taskHandle'
p17874
(lp17875
S'TaskHandle'
p17876
aNtp17877
(S'physicalChannel'
p17878
(lp17879
S'char'
p17880
a(lp17881
I-1
aaNtp17882
(S'nameToAssignToChannel'
p17883
(lp17884
S'char'
p17885
a(lp17886
I-1
aaNtp17887
(S'minVal'
p17888
(lp17889
S'float64'
p17890
aNtp17891
(S'maxVal'
p17892
(lp17893
S'float64'
p17894
aNtp17895
(S'units'
p17896
(lp17897
S'int32'
p17898
aNtp17899
(S'sensitivity'
p17900
(lp17901
S'float64'
p17902
aNtp17903
(S'sensitivityUnits'
p17904
(lp17905
S'int32'
p17906
aNtp17907
(S'voltageExcitSource'
p17908
(lp17909
S'int32'
p17910
aNtp17911
(S'voltageExcitVal'
p17912
(lp17913
S'float64'
p17914
aNtp17915
(S'voltageExcitFreq'
p17916
(lp17917
S'float64'
p17918
aNtp17919
(S'ACExcitWireMode'
p17920
(lp17921
S'int32'
p17922
aNtp17923
(S'customScaleName'
p17924
(lp17925
S'char'
p17926
a(lp17927
I-1
aaNtp17928
tp17929
tp17930
sS'DAQmxResetCICtrTimebaseDigFltrTimebaseSrc'
p17931
((lp17932
S'int32'
p17933
ag14
a((S'taskHandle'
p17934
(lp17935
S'TaskHandle'
p17936
aNtp17937
(S'channel'
p17938
(lp17939
S'char'
p17940
a(lp17941
I-1
aaNtp17942
tp17943
tp17944
sS'DAQmxResetCIFreqDigFltrMinPulseWidth'
p17945
((lp17946
S'int32'
p17947
ag14
a((S'taskHandle'
p17948
(lp17949
S'TaskHandle'
p17950
aNtp17951
(S'channel'
p17952
(lp17953
S'char'
p17954
a(lp17955
I-1
aaNtp17956
tp17957
tp17958
sS'DAQmxGetAIChanCalPolyForwardCoeff'
p17959
((lp17960
S'int32'
p17961
ag14
a((S'taskHandle'
p17962
(lp17963
S'TaskHandle'
p17964
aNtp17965
(S'channel'
p17966
(lp17967
S'char'
p17968
a(lp17969
I-1
aaNtp17970
(S'data'
p17971
(lp17972
S'float64'
p17973
ag22
aNtp17974
(S'arraySizeInSamples'
p17975
(lp17976
S'uInt32'
p17977
aNtp17978
tp17979
tp17980
sS'DAQmxCreateCOPulseChanTime'
p17981
((lp17982
S'int32'
p17983
ag14
a((S'taskHandle'
p17984
(lp17985
S'TaskHandle'
p17986
aNtp17987
(S'counter'
p17988
(lp17989
S'char'
p17990
a(lp17991
I-1
aaNtp17992
(S'nameToAssignToChannel'
p17993
(lp17994
S'char'
p17995
a(lp17996
I-1
aaNtp17997
(S'units'
p17998
(lp17999
S'int32'
p18000
aNtp18001
(S'idleState'
p18002
(lp18003
S'int32'
p18004
aNtp18005
(S'initialDelay'
p18006
(lp18007
S'float64'
p18008
aNtp18009
(S'lowTime'
p18010
(lp18011
S'float64'
p18012
aNtp18013
(S'highTime'
p18014
(lp18015
S'float64'
p18016
aNtp18017
tp18018
tp18019
sS'DAQmxSetExported20MHzTimebaseOutputTerm'
p18020
((lp18021
S'int32'
p18022
ag14
a((S'taskHandle'
p18023
(lp18024
S'TaskHandle'
p18025
aNtp18026
(S'data'
p18027
(lp18028
S'char'
p18029
ag22
aNtp18030
tp18031
tp18032
sS'DAQmxSetCITwoEdgeSepSecondEdge'
p18033
((lp18034
S'int32'
p18035
ag14
a((S'taskHandle'
p18036
(lp18037
S'TaskHandle'
p18038
aNtp18039
(S'channel'
p18040
(lp18041
S'char'
p18042
a(lp18043
I-1
aaNtp18044
(S'data'
p18045
(lp18046
S'int32'
p18047
aNtp18048
tp18049
tp18050
sS'DAQmxResetAIRTDR0'
p18051
((lp18052
S'int32'
p18053
ag14
a((S'taskHandle'
p18054
(lp18055
S'TaskHandle'
p18056
aNtp18057
(S'channel'
p18058
(lp18059
S'char'
p18060
a(lp18061
I-1
aaNtp18062
tp18063
tp18064
sS'DAQmxResetCIPulseWidthUnits'
p18065
((lp18066
S'int32'
p18067
ag14
a((S'taskHandle'
p18068
(lp18069
S'TaskHandle'
p18070
aNtp18071
(S'channel'
p18072
(lp18073
S'char'
p18074
a(lp18075
I-1
aaNtp18076
tp18077
tp18078
sS'DAQmxSetAIBridgeShuntCalSelect'
p18079
((lp18080
S'int32'
p18081
ag14
a((S'taskHandle'
p18082
(lp18083
S'TaskHandle'
p18084
aNtp18085
(S'channel'
p18086
(lp18087
S'char'
p18088
a(lp18089
I-1
aaNtp18090
(S'data'
p18091
(lp18092
S'int32'
p18093
aNtp18094
tp18095
tp18096
sS'DAQmxGetHshkTrigType'
p18097
((lp18098
S'int32'
p18099
ag14
a((S'taskHandle'
p18100
(lp18101
S'TaskHandle'
p18102
aNtp18103
(S'data'
p18104
(lp18105
S'int32'
p18106
ag22
aNtp18107
tp18108
tp18109
sS'DAQmxGetAIGain'
p18110
((lp18111
S'int32'
p18112
ag14
a((S'taskHandle'
p18113
(lp18114
S'TaskHandle'
p18115
aNtp18116
(S'channel'
p18117
(lp18118
S'char'
p18119
a(lp18120
I-1
aaNtp18121
(S'data'
p18122
(lp18123
S'float64'
p18124
ag22
aNtp18125
tp18126
tp18127
sS'DAQmxSetAnlgWinPauseTrigSrc'
p18128
((lp18129
S'int32'
p18130
ag14
a((S'taskHandle'
p18131
(lp18132
S'TaskHandle'
p18133
aNtp18134
(S'data'
p18135
(lp18136
S'char'
p18137
ag22
aNtp18138
tp18139
tp18140
sS'DAQmxGetCICountEdgesCountDirDigFltrEnable'
p18141
((lp18142
S'int32'
p18143
ag14
a((S'taskHandle'
p18144
(lp18145
S'TaskHandle'
p18146
aNtp18147
(S'channel'
p18148
(lp18149
S'char'
p18150
a(lp18151
I-1
aaNtp18152
(S'data'
p18153
(lp18154
S'bool32'
p18155
ag22
aNtp18156
tp18157
tp18158
sS'DAQmxResetAIStrainGagePoissonRatio'
p18159
((lp18160
S'int32'
p18161
ag14
a((S'taskHandle'
p18162
(lp18163
S'TaskHandle'
p18164
aNtp18165
(S'channel'
p18166
(lp18167
S'char'
p18168
a(lp18169
I-1
aaNtp18170
tp18171
tp18172
sS'DAQmxGetAOTermCfg'
p18173
((lp18174
S'int32'
p18175
ag14
a((S'taskHandle'
p18176
(lp18177
S'TaskHandle'
p18178
aNtp18179
(S'channel'
p18180
(lp18181
S'char'
p18182
a(lp18183
I-1
aaNtp18184
(S'data'
p18185
(lp18186
S'int32'
p18187
ag22
aNtp18188
tp18189
tp18190
sS'DAQmxGetAODACRefVal'
p18191
((lp18192
S'int32'
p18193
ag14
a((S'taskHandle'
p18194
(lp18195
S'TaskHandle'
p18196
aNtp18197
(S'channel'
p18198
(lp18199
S'char'
p18200
a(lp18201
I-1
aaNtp18202
(S'data'
p18203
(lp18204
S'float64'
p18205
ag22
aNtp18206
tp18207
tp18208
sS'DAQmxSetExportedHshkEventPulseWidth'
p18209
((lp18210
S'int32'
p18211
ag14
a((S'taskHandle'
p18212
(lp18213
S'TaskHandle'
p18214
aNtp18215
(S'data'
p18216
(lp18217
S'float64'
p18218
aNtp18219
tp18220
tp18221
sS'DAQmxGetCISemiPeriodDigFltrTimebaseSrc'
p18222
((lp18223
S'int32'
p18224
ag14
a((S'taskHandle'
p18225
(lp18226
S'TaskHandle'
p18227
aNtp18228
(S'channel'
p18229
(lp18230
S'char'
p18231
a(lp18232
I-1
aaNtp18233
(S'data'
p18234
(lp18235
S'char'
p18236
ag22
aNtp18237
(S'bufferSize'
p18238
(lp18239
S'uInt32'
p18240
aNtp18241
tp18242
tp18243
sS'DAQmxWriteDigitalU8'
p18244
((lp18245
S'int32'
p18246
ag14
a((S'taskHandle'
p18247
(lp18248
S'TaskHandle'
p18249
aNtp18250
(S'numSampsPerChan'
p18251
(lp18252
S'int32'
p18253
aNtp18254
(S'autoStart'
p18255
(lp18256
S'bool32'
p18257
aNtp18258
(S'timeout'
p18259
(lp18260
S'float64'
p18261
aNtp18262
(S'dataLayout'
p18263
(lp18264
S'bool32'
p18265
aNtp18266
(S'writeArray'
p18267
(lp18268
S'uInt8'
p18269
a(lp18270
I-1
aaNtp18271
(S'sampsPerChanWritten'
p18272
(lp18273
S'int32'
p18274
ag22
aNtp18275
(S'reserved'
p18276
(lp18277
S'bool32'
p18278
ag22
aNtp18279
tp18280
tp18281
sS'DAQmxSetDigPatternRefTrigSrc'
p18282
((lp18283
S'int32'
p18284
ag14
a((S'taskHandle'
p18285
(lp18286
S'TaskHandle'
p18287
aNtp18288
(S'data'
p18289
(lp18290
S'char'
p18291
ag22
aNtp18292
tp18293
tp18294
sS'DAQmxWriteDigitalScalarU32'
p18295
((lp18296
S'int32'
p18297
ag14
a((S'taskHandle'
p18298
(lp18299
S'TaskHandle'
p18300
aNtp18301
(S'autoStart'
p18302
(lp18303
S'bool32'
p18304
aNtp18305
(S'timeout'
p18306
(lp18307
S'float64'
p18308
aNtp18309
(S'value'
p18310
(lp18311
S'uInt32'
p18312
aNtp18313
(S'reserved'
p18314
(lp18315
S'bool32'
p18316
ag22
aNtp18317
tp18318
tp18319
sS'DAQmxGetExportedAdvCmpltEventDelay'
p18320
((lp18321
S'int32'
p18322
ag14
a((S'taskHandle'
p18323
(lp18324
S'TaskHandle'
p18325
aNtp18326
(S'data'
p18327
(lp18328
S'float64'
p18329
ag22
aNtp18330
tp18331
tp18332
sS'DAQmxGetAIAutoZeroMode'
p18333
((lp18334
S'int32'
p18335
ag14
a((S'taskHandle'
p18336
(lp18337
S'TaskHandle'
p18338
aNtp18339
(S'channel'
p18340
(lp18341
S'char'
p18342
a(lp18343
I-1
aaNtp18344
(S'data'
p18345
(lp18346
S'int32'
p18347
ag22
aNtp18348
tp18349
tp18350
sS'DAQmxCreateAIThrmstrChanVex'
p18351
((lp18352
S'int32'
p18353
ag14
a((S'taskHandle'
p18354
(lp18355
S'TaskHandle'
p18356
aNtp18357
(S'physicalChannel'
p18358
(lp18359
S'char'
p18360
a(lp18361
I-1
aaNtp18362
(S'nameToAssignToChannel'
p18363
(lp18364
S'char'
p18365
a(lp18366
I-1
aaNtp18367
(S'minVal'
p18368
(lp18369
S'float64'
p18370
aNtp18371
(S'maxVal'
p18372
(lp18373
S'float64'
p18374
aNtp18375
(S'units'
p18376
(lp18377
S'int32'
p18378
aNtp18379
(S'resistanceConfig'
p18380
(lp18381
S'int32'
p18382
aNtp18383
(S'voltageExcitSource'
p18384
(lp18385
S'int32'
p18386
aNtp18387
(S'voltageExcitVal'
p18388
(lp18389
S'float64'
p18390
aNtp18391
(S'a'
p18392
(lp18393
S'float64'
p18394
aNtp18395
(S'b'
p18396
(lp18397
S'float64'
p18398
aNtp18399
(S'c'
p18400
(lp18401
S'float64'
p18402
aNtp18403
(S'r1'
p18404
(lp18405
S'float64'
p18406
aNtp18407
tp18408
tp18409
sS'DAQmxResetSampTimingType'
p18410
((lp18411
S'int32'
p18412
ag14
a((S'taskHandle'
p18413
(lp18414
S'TaskHandle'
p18415
aNtp18416
tp18417
tp18418
sS'DAQmxSetCILinEncoderDistPerPulse'
p18419
((lp18420
S'int32'
p18421
ag14
a((S'taskHandle'
p18422
(lp18423
S'TaskHandle'
p18424
aNtp18425
(S'channel'
p18426
(lp18427
S'char'
p18428
a(lp18429
I-1
aaNtp18430
(S'data'
p18431
(lp18432
S'float64'
p18433
aNtp18434
tp18435
tp18436
sS'DAQmxGetCIMin'
p18437
((lp18438
S'int32'
p18439
ag14
a((S'taskHandle'
p18440
(lp18441
S'TaskHandle'
p18442
aNtp18443
(S'channel'
p18444
(lp18445
S'char'
p18446
a(lp18447
I-1
aaNtp18448
(S'data'
p18449
(lp18450
S'float64'
p18451
ag22
aNtp18452
tp18453
tp18454
sS'DAQmxSetCIPeriodDigFltrMinPulseWidth'
p18455
((lp18456
S'int32'
p18457
ag14
a((S'taskHandle'
p18458
(lp18459
S'TaskHandle'
p18460
aNtp18461
(S'channel'
p18462
(lp18463
S'char'
p18464
a(lp18465
I-1
aaNtp18466
(S'data'
p18467
(lp18468
S'float64'
p18469
aNtp18470
tp18471
tp18472
sS'DAQmxGetAIVoltageUnits'
p18473
((lp18474
S'int32'
p18475
ag14
a((S'taskHandle'
p18476
(lp18477
S'TaskHandle'
p18478
aNtp18479
(S'channel'
p18480
(lp18481
S'char'
p18482
a(lp18483
I-1
aaNtp18484
(S'data'
p18485
(lp18486
S'int32'
p18487
ag22
aNtp18488
tp18489
tp18490
sS'DAQmxReadAnalogF64'
p18491
((lp18492
S'int32'
p18493
ag14
a((S'taskHandle'
p18494
(lp18495
S'TaskHandle'
p18496
aNtp18497
(S'numSampsPerChan'
p18498
(lp18499
S'int32'
p18500
aNtp18501
(S'timeout'
p18502
(lp18503
S'float64'
p18504
aNtp18505
(S'fillMode'
p18506
(lp18507
S'bool32'
p18508
aNtp18509
(S'readArray'
p18510
(lp18511
S'float64'
p18512
a(lp18513
I-1
aaNtp18514
(S'arraySizeInSamps'
p18515
(lp18516
S'uInt32'
p18517
aNtp18518
(S'sampsPerChanRead'
p18519
(lp18520
S'int32'
p18521
ag22
aNtp18522
(S'reserved'
p18523
(lp18524
S'bool32'
p18525
ag22
aNtp18526
tp18527
tp18528
sS'DAQmxGetCIEncoderZInputDigFltrMinPulseWidth'
p18529
((lp18530
S'int32'
p18531
ag14
a((S'taskHandle'
p18532
(lp18533
S'TaskHandle'
p18534
aNtp18535
(S'channel'
p18536
(lp18537
S'char'
p18538
a(lp18539
I-1
aaNtp18540
(S'data'
p18541
(lp18542
S'float64'
p18543
ag22
aNtp18544
tp18545
tp18546
sS'DAQmxSetCICountEdgesDigFltrTimebaseRate'
p18547
((lp18548
S'int32'
p18549
ag14
a((S'taskHandle'
p18550
(lp18551
S'TaskHandle'
p18552
aNtp18553
(S'channel'
p18554
(lp18555
S'char'
p18556
a(lp18557
I-1
aaNtp18558
(S'data'
p18559
(lp18560
S'float64'
p18561
aNtp18562
tp18563
tp18564
sS'DAQmxSetCICtrTimebaseDigFltrMinPulseWidth'
p18565
((lp18566
S'int32'
p18567
ag14
a((S'taskHandle'
p18568
(lp18569
S'TaskHandle'
p18570
aNtp18571
(S'channel'
p18572
(lp18573
S'char'
p18574
a(lp18575
I-1
aaNtp18576
(S'data'
p18577
(lp18578
S'float64'
p18579
aNtp18580
tp18581
tp18582
sS'DAQmxGetDigLvlPauseTrigDigSyncEnable'
p18583
((lp18584
S'int32'
p18585
ag14
a((S'taskHandle'
p18586
(lp18587
S'TaskHandle'
p18588
aNtp18589
(S'data'
p18590
(lp18591
S'bool32'
p18592
ag22
aNtp18593
tp18594
tp18595
sS'DAQmxGetAnlgWinStartTrigBtm'
p18596
((lp18597
S'int32'
p18598
ag14
a((S'taskHandle'
p18599
(lp18600
S'TaskHandle'
p18601
aNtp18602
(S'data'
p18603
(lp18604
S'float64'
p18605
ag22
aNtp18606
tp18607
tp18608
sS'DAQmxSetCILinEncoderUnits'
p18609
((lp18610
S'int32'
p18611
ag14
a((S'taskHandle'
p18612
(lp18613
S'TaskHandle'
p18614
aNtp18615
(S'channel'
p18616
(lp18617
S'char'
p18618
a(lp18619
I-1
aaNtp18620
(S'data'
p18621
(lp18622
S'int32'
p18623
aNtp18624
tp18625
tp18626
sS'DAQmxGetCIPeriodStartingEdge'
p18627
((lp18628
S'int32'
p18629
ag14
a((S'taskHandle'
p18630
(lp18631
S'TaskHandle'
p18632
aNtp18633
(S'channel'
p18634
(lp18635
S'char'
p18636
a(lp18637
I-1
aaNtp18638
(S'data'
p18639
(lp18640
S'int32'
p18641
ag22
aNtp18642
tp18643
tp18644
sS'DAQmxGetCICtrTimebaseDigFltrEnable'
p18645
((lp18646
S'int32'
p18647
ag14
a((S'taskHandle'
p18648
(lp18649
S'TaskHandle'
p18650
aNtp18651
(S'channel'
p18652
(lp18653
S'char'
p18654
a(lp18655
I-1
aaNtp18656
(S'data'
p18657
(lp18658
S'bool32'
p18659
ag22
aNtp18660
tp18661
tp18662
sS'DAQmxSetCOPulseTerm'
p18663
((lp18664
S'int32'
p18665
ag14
a((S'taskHandle'
p18666
(lp18667
S'TaskHandle'
p18668
aNtp18669
(S'channel'
p18670
(lp18671
S'char'
p18672
a(lp18673
I-1
aaNtp18674
(S'data'
p18675
(lp18676
S'char'
p18677
ag22
aNtp18678
tp18679
tp18680
sS'DAQmxGetAIThrmcplType'
p18681
((lp18682
S'int32'
p18683
ag14
a((S'taskHandle'
p18684
(lp18685
S'TaskHandle'
p18686
aNtp18687
(S'channel'
p18688
(lp18689
S'char'
p18690
a(lp18691
I-1
aaNtp18692
(S'data'
p18693
(lp18694
S'int32'
p18695
ag22
aNtp18696
tp18697
tp18698
sS'DAQmxGetSwitchDevAutoConnAnlgBus'
p18699
((lp18700
S'int32'
p18701
ag14
a((S'deviceName'
p18702
(lp18703
S'char'
p18704
a(lp18705
I-1
aaNtp18706
(S'data'
p18707
(lp18708
S'bool32'
p18709
ag22
aNtp18710
tp18711
tp18712
sS'DAQmxGetAISoundPressureUnits'
p18713
((lp18714
S'int32'
p18715
ag14
a((S'taskHandle'
p18716
(lp18717
S'TaskHandle'
p18718
aNtp18719
(S'channel'
p18720
(lp18721
S'char'
p18722
a(lp18723
I-1
aaNtp18724
(S'data'
p18725
(lp18726
S'int32'
p18727
ag22
aNtp18728
tp18729
tp18730
sS'DAQmxGetAIExcitUseForScaling'
p18731
((lp18732
S'int32'
p18733
ag14
a((S'taskHandle'
p18734
(lp18735
S'TaskHandle'
p18736
aNtp18737
(S'channel'
p18738
(lp18739
S'char'
p18740
a(lp18741
I-1
aaNtp18742
(S'data'
p18743
(lp18744
S'bool32'
p18745
ag22
aNtp18746
tp18747
tp18748
sS'DAQmxReadCounterU32'
p18749
((lp18750
S'int32'
p18751
ag14
a((S'taskHandle'
p18752
(lp18753
S'TaskHandle'
p18754
aNtp18755
(S'numSampsPerChan'
p18756
(lp18757
S'int32'
p18758
aNtp18759
(S'timeout'
p18760
(lp18761
S'float64'
p18762
aNtp18763
(S'readArray'
p18764
(lp18765
S'uInt32'
p18766
a(lp18767
I-1
aaNtp18768
(S'arraySizeInSamps'
p18769
(lp18770
S'uInt32'
p18771
aNtp18772
(S'sampsPerChanRead'
p18773
(lp18774
S'int32'
p18775
ag22
aNtp18776
(S'reserved'
p18777
(lp18778
S'bool32'
p18779
ag22
aNtp18780
tp18781
tp18782
sS'DAQmxSetHshkDelayAfterXfer'
p18783
((lp18784
S'int32'
p18785
ag14
a((S'taskHandle'
p18786
(lp18787
S'TaskHandle'
p18788
aNtp18789
(S'data'
p18790
(lp18791
S'float64'
p18792
aNtp18793
tp18794
tp18795
sS'DAQmxGetDigPatternRefTrigSrc'
p18796
((lp18797
S'int32'
p18798
ag14
a((S'taskHandle'
p18799
(lp18800
S'TaskHandle'
p18801
aNtp18802
(S'data'
p18803
(lp18804
S'char'
p18805
ag22
aNtp18806
(S'bufferSize'
p18807
(lp18808
S'uInt32'
p18809
aNtp18810
tp18811
tp18812
sS'DAQmxResetExportedHshkEventOutputTerm'
p18813
((lp18814
S'int32'
p18815
ag14
a((S'taskHandle'
p18816
(lp18817
S'TaskHandle'
p18818
aNtp18819
tp18820
tp18821
sS'DAQmxGetCISemiPeriodDigFltrTimebaseRate'
p18822
((lp18823
S'int32'
p18824
ag14
a((S'taskHandle'
p18825
(lp18826
S'TaskHandle'
p18827
aNtp18828
(S'channel'
p18829
(lp18830
S'char'
p18831
a(lp18832
I-1
aaNtp18833
(S'data'
p18834
(lp18835
S'float64'
p18836
ag22
aNtp18837
tp18838
tp18839
sS'DAQmxCfgSampClkTiming'
p18840
((lp18841
S'int32'
p18842
ag14
a((S'taskHandle'
p18843
(lp18844
S'TaskHandle'
p18845
aNtp18846
(S'source'
p18847
(lp18848
S'char'
p18849
a(lp18850
I-1
aaNtp18851
(S'rate'
p18852
(lp18853
S'float64'
p18854
aNtp18855
(S'activeEdge'
p18856
(lp18857
S'int32'
p18858
aNtp18859
(S'sampleMode'
p18860
(lp18861
S'int32'
p18862
aNtp18863
(S'sampsPerChan'
p18864
(lp18865
S'uInt64'
p18866
aNtp18867
tp18868
tp18869
sS'DAQmxReadDigitalU8'
p18870
((lp18871
S'int32'
p18872
ag14
a((S'taskHandle'
p18873
(lp18874
S'TaskHandle'
p18875
aNtp18876
(S'numSampsPerChan'
p18877
(lp18878
S'int32'
p18879
aNtp18880
(S'timeout'
p18881
(lp18882
S'float64'
p18883
aNtp18884
(S'fillMode'
p18885
(lp18886
S'bool32'
p18887
aNtp18888
(S'readArray'
p18889
(lp18890
S'uInt8'
p18891
a(lp18892
I-1
aaNtp18893
(S'arraySizeInSamps'
p18894
(lp18895
S'uInt32'
p18896
aNtp18897
(S'sampsPerChanRead'
p18898
(lp18899
S'int32'
p18900
ag22
aNtp18901
(S'reserved'
p18902
(lp18903
S'bool32'
p18904
ag22
aNtp18905
tp18906
tp18907
sS'DAQmxGetAIConvRate'
p18908
((lp18909
S'int32'
p18910
ag14
a((S'taskHandle'
p18911
(lp18912
S'TaskHandle'
p18913
aNtp18914
(S'data'
p18915
(lp18916
S'float64'
p18917
ag22
aNtp18918
tp18919
tp18920
sS'DAQmxSetDIDataXferMech'
p18921
((lp18922
S'int32'
p18923
ag14
a((S'taskHandle'
p18924
(lp18925
S'TaskHandle'
p18926
aNtp18927
(S'channel'
p18928
(lp18929
S'char'
p18930
a(lp18931
I-1
aaNtp18932
(S'data'
p18933
(lp18934
S'int32'
p18935
aNtp18936
tp18937
tp18938
sS'DAQmxGetSampClkTimebaseRate'
p18939
((lp18940
S'int32'
p18941
ag14
a((S'taskHandle'
p18942
(lp18943
S'TaskHandle'
p18944
aNtp18945
(S'data'
p18946
(lp18947
S'float64'
p18948
ag22
aNtp18949
tp18950
tp18951
sS'DAQmxResetCIFreqMeasMeth'
p18952
((lp18953
S'int32'
p18954
ag14
a((S'taskHandle'
p18955
(lp18956
S'TaskHandle'
p18957
aNtp18958
(S'channel'
p18959
(lp18960
S'char'
p18961
a(lp18962
I-1
aaNtp18963
tp18964
tp18965
sS'DAQmxDisableStartTrig'
p18966
((lp18967
S'int32'
p18968
ag14
a((S'taskHandle'
p18969
(lp18970
S'TaskHandle'
p18971
aNtp18972
tp18973
tp18974
sS'DAQmxSetExportedSampClkOutputBehavior'
p18975
((lp18976
S'int32'
p18977
ag14
a((S'taskHandle'
p18978
(lp18979
S'TaskHandle'
p18980
aNtp18981
(S'data'
p18982
(lp18983
S'int32'
p18984
aNtp18985
tp18986
tp18987
sS'DAQmxGetReadOverWrite'
p18988
((lp18989
S'int32'
p18990
ag14
a((S'taskHandle'
p18991
(lp18992
S'TaskHandle'
p18993
aNtp18994
(S'data'
p18995
(lp18996
S'int32'
p18997
ag22
aNtp18998
tp18999
tp19000
sS'DAQmxCreateTEDSAIPosLVDTChan'
p19001
((lp19002
S'int32'
p19003
ag14
a((S'taskHandle'
p19004
(lp19005
S'TaskHandle'
p19006
aNtp19007
(S'physicalChannel'
p19008
(lp19009
S'char'
p19010
a(lp19011
I-1
aaNtp19012
(S'nameToAssignToChannel'
p19013
(lp19014
S'char'
p19015
a(lp19016
I-1
aaNtp19017
(S'minVal'
p19018
(lp19019
S'float64'
p19020
aNtp19021
(S'maxVal'
p19022
(lp19023
S'float64'
p19024
aNtp19025
(S'units'
p19026
(lp19027
S'int32'
p19028
aNtp19029
(S'voltageExcitSource'
p19030
(lp19031
S'int32'
p19032
aNtp19033
(S'voltageExcitVal'
p19034
(lp19035
S'float64'
p19036
aNtp19037
(S'voltageExcitFreq'
p19038
(lp19039
S'float64'
p19040
aNtp19041
(S'ACExcitWireMode'
p19042
(lp19043
S'int32'
p19044
aNtp19045
(S'customScaleName'
p19046
(lp19047
S'char'
p19048
a(lp19049
I-1
aaNtp19050
tp19051
tp19052
sS'DAQmxGetCILinEncoderInitialPos'
p19053
((lp19054
S'int32'
p19055
ag14
a((S'taskHandle'
p19056
(lp19057
S'TaskHandle'
p19058
aNtp19059
(S'channel'
p19060
(lp19061
S'char'
p19062
a(lp19063
I-1
aaNtp19064
(S'data'
p19065
(lp19066
S'float64'
p19067
ag22
aNtp19068
tp19069
tp19070
sS'DAQmxGetAIRngHigh'
p19071
((lp19072
S'int32'
p19073
ag14
a((S'taskHandle'
p19074
(lp19075
S'TaskHandle'
p19076
aNtp19077
(S'channel'
p19078
(lp19079
S'char'
p19080
a(lp19081
I-1
aaNtp19082
(S'data'
p19083
(lp19084
S'float64'
p19085
ag22
aNtp19086
tp19087
tp19088
sS'DAQmxResetCICtrTimebaseDigFltrTimebaseRate'
p19089
((lp19090
S'int32'
p19091
ag14
a((S'taskHandle'
p19092
(lp19093
S'TaskHandle'
p19094
aNtp19095
(S'channel'
p19096
(lp19097
S'char'
p19098
a(lp19099
I-1
aaNtp19100
tp19101
tp19102
sS'DAQmxGetCOPulseTerm'
p19103
((lp19104
S'int32'
p19105
ag14
a((S'taskHandle'
p19106
(lp19107
S'TaskHandle'
p19108
aNtp19109
(S'channel'
p19110
(lp19111
S'char'
p19112
a(lp19113
I-1
aaNtp19114
(S'data'
p19115
(lp19116
S'char'
p19117
ag22
aNtp19118
(S'bufferSize'
p19119
(lp19120
S'uInt32'
p19121
aNtp19122
tp19123
tp19124
sS'DAQmxGetDevPXISlotNum'
p19125
((lp19126
S'int32'
p19127
ag14
a((S'device'
p19128
(lp19129
S'char'
p19130
a(lp19131
I-1
aaNtp19132
(S'data'
p19133
(lp19134
S'uInt32'
p19135
ag22
aNtp19136
tp19137
tp19138
sS'DAQmxGetAIFreqHyst'
p19139
((lp19140
S'int32'
p19141
ag14
a((S'taskHandle'
p19142
(lp19143
S'TaskHandle'
p19144
aNtp19145
(S'channel'
p19146
(lp19147
S'char'
p19148
a(lp19149
I-1
aaNtp19150
(S'data'
p19151
(lp19152
S'float64'
p19153
ag22
aNtp19154
tp19155
tp19156
sS'DAQmxResetCIEncoderZInputDigFltrTimebaseRate'
p19157
((lp19158
S'int32'
p19159
ag14
a((S'taskHandle'
p19160
(lp19161
S'TaskHandle'
p19162
aNtp19163
(S'channel'
p19164
(lp19165
S'char'
p19166
a(lp19167
I-1
aaNtp19168
tp19169
tp19170
sS'DAQmxGetAnlgWinPauseTrigSrc'
p19171
((lp19172
S'int32'
p19173
ag14
a((S'taskHandle'
p19174
(lp19175
S'TaskHandle'
p19176
aNtp19177
(S'data'
p19178
(lp19179
S'char'
p19180
ag22
aNtp19181
(S'bufferSize'
p19182
(lp19183
S'uInt32'
p19184
aNtp19185
tp19186
tp19187
sS'DAQmxGetWriteRegenMode'
p19188
((lp19189
S'int32'
p19190
ag14
a((S'taskHandle'
p19191
(lp19192
S'TaskHandle'
p19193
aNtp19194
(S'data'
p19195
(lp19196
S'int32'
p19197
ag22
aNtp19198
tp19199
tp19200
sS'DAQmxResetDOTristate'
p19201
((lp19202
S'int32'
p19203
ag14
a((S'taskHandle'
p19204
(lp19205
S'TaskHandle'
p19206
aNtp19207
(S'channel'
p19208
(lp19209
S'char'
p19210
a(lp19211
I-1
aaNtp19212
tp19213
tp19214
sS'DAQmxResetCIPulseWidthStartingEdge'
p19215
((lp19216
S'int32'
p19217
ag14
a((S'taskHandle'
p19218
(lp19219
S'TaskHandle'
p19220
aNtp19221
(S'channel'
p19222
(lp19223
S'char'
p19224
a(lp19225
I-1
aaNtp19226
tp19227
tp19228
sS'DAQmxSetAIACExcitWireMode'
p19229
((lp19230
S'int32'
p19231
ag14
a((S'taskHandle'
p19232
(lp19233
S'TaskHandle'
p19234
aNtp19235
(S'channel'
p19236
(lp19237
S'char'
p19238
a(lp19239
I-1
aaNtp19240
(S'data'
p19241
(lp19242
S'int32'
p19243
aNtp19244
tp19245
tp19246
sS'DAQmxSetSwitchDevSettlingTime'
p19247
((lp19248
S'int32'
p19249
ag14
a((S'deviceName'
p19250
(lp19251
S'char'
p19252
a(lp19253
I-1
aaNtp19254
(S'data'
p19255
(lp19256
S'float64'
p19257
aNtp19258
tp19259
tp19260
sS'DAQmxResetAnlgEdgeRefTrigCoupling'
p19261
((lp19262
S'int32'
p19263
ag14
a((S'taskHandle'
p19264
(lp19265
S'TaskHandle'
p19266
aNtp19267
tp19268
tp19269
sS'DAQmxGetTaskName'
p19270
((lp19271
S'int32'
p19272
ag14
a((S'taskHandle'
p19273
(lp19274
S'TaskHandle'
p19275
aNtp19276
(S'data'
p19277
(lp19278
S'char'
p19279
ag22
aNtp19280
(S'bufferSize'
p19281
(lp19282
S'uInt32'
p19283
aNtp19284
tp19285
tp19286
sS'DAQmxSetCISemiPeriodDigSyncEnable'
p19287
((lp19288
S'int32'
p19289
ag14
a((S'taskHandle'
p19290
(lp19291
S'TaskHandle'
p19292
aNtp19293
(S'channel'
p19294
(lp19295
S'char'
p19296
a(lp19297
I-1
aaNtp19298
(S'data'
p19299
(lp19300
S'bool32'
p19301
aNtp19302
tp19303
tp19304
sS'DAQmxGetCIEncoderAInputDigFltrTimebaseRate'
p19305
((lp19306
S'int32'
p19307
ag14
a((S'taskHandle'
p19308
(lp19309
S'TaskHandle'
p19310
aNtp19311
(S'channel'
p19312
(lp19313
S'char'
p19314
a(lp19315
I-1
aaNtp19316
(S'data'
p19317
(lp19318
S'float64'
p19319
ag22
aNtp19320
tp19321
tp19322
sS'DAQmxReadCounterF64'
p19323
((lp19324
S'int32'
p19325
ag14
a((S'taskHandle'
p19326
(lp19327
S'TaskHandle'
p19328
aNtp19329
(S'numSampsPerChan'
p19330
(lp19331
S'int32'
p19332
aNtp19333
(S'timeout'
p19334
(lp19335
S'float64'
p19336
aNtp19337
(S'readArray'
p19338
(lp19339
S'float64'
p19340
a(lp19341
I-1
aaNtp19342
(S'arraySizeInSamps'
p19343
(lp19344
S'uInt32'
p19345
aNtp19346
(S'sampsPerChanRead'
p19347
(lp19348
S'int32'
p19349
ag22
aNtp19350
(S'reserved'
p19351
(lp19352
S'bool32'
p19353
ag22
aNtp19354
tp19355
tp19356
sS'DAQmxSetCICtrTimebaseActiveEdge'
p19357
((lp19358
S'int32'
p19359
ag14
a((S'taskHandle'
p19360
(lp19361
S'TaskHandle'
p19362
aNtp19363
(S'channel'
p19364
(lp19365
S'char'
p19366
a(lp19367
I-1
aaNtp19368
(S'data'
p19369
(lp19370
S'int32'
p19371
aNtp19372
tp19373
tp19374
sS'DAQmxSetDigEdgeArmStartTrigDigFltrEnable'
p19375
((lp19376
S'int32'
p19377
ag14
a((S'taskHandle'
p19378
(lp19379
S'TaskHandle'
p19380
aNtp19381
(S'data'
p19382
(lp19383
S'bool32'
p19384
aNtp19385
tp19386
tp19387
sS'DAQmxSetSampClkDigFltrTimebaseRate'
p19388
((lp19389
S'int32'
p19390
ag14
a((S'taskHandle'
p19391
(lp19392
S'TaskHandle'
p19393
aNtp19394
(S'data'
p19395
(lp19396
S'float64'
p19397
aNtp19398
tp19399
tp19400
sS'DAQmxResetCICountEdgesActiveEdge'
p19401
((lp19402
S'int32'
p19403
ag14
a((S'taskHandle'
p19404
(lp19405
S'TaskHandle'
p19406
aNtp19407
(S'channel'
p19408
(lp19409
S'char'
p19410
a(lp19411
I-1
aaNtp19412
tp19413
tp19414
sS'DAQmxGetHshkDelayAfterXfer'
p19415
((lp19416
S'int32'
p19417
ag14
a((S'taskHandle'
p19418
(lp19419
S'TaskHandle'
p19420
aNtp19421
(S'data'
p19422
(lp19423
S'float64'
p19424
ag22
aNtp19425
tp19426
tp19427
sS'DAQmxSetAODACOffsetExtSrc'
p19428
((lp19429
S'int32'
p19430
ag14
a((S'taskHandle'
p19431
(lp19432
S'TaskHandle'
p19433
aNtp19434
(S'channel'
p19435
(lp19436
S'char'
p19437
a(lp19438
I-1
aaNtp19439
(S'data'
p19440
(lp19441
S'char'
p19442
ag22
aNtp19443
tp19444
tp19445
sS'DAQmxGetReadCurrReadPos'
p19446
((lp19447
S'int32'
p19448
ag14
a((S'taskHandle'
p19449
(lp19450
S'TaskHandle'
p19451
aNtp19452
(S'data'
p19453
(lp19454
S'uInt64'
p19455
ag22
aNtp19456
tp19457
tp19458
sS'DAQmxGetAIThrmcplCJCSrc'
p19459
((lp19460
S'int32'
p19461
ag14
a((S'taskHandle'
p19462
(lp19463
S'TaskHandle'
p19464
aNtp19465
(S'channel'
p19466
(lp19467
S'char'
p19468
a(lp19469
I-1
aaNtp19470
(S'data'
p19471
(lp19472
S'int32'
p19473
ag22
aNtp19474
tp19475
tp19476
sS'DAQmxGetCIGPSSyncMethod'
p19477
((lp19478
S'int32'
p19479
ag14
a((S'taskHandle'
p19480
(lp19481
S'TaskHandle'
p19482
aNtp19483
(S'channel'
p19484
(lp19485
S'char'
p19486
a(lp19487
I-1
aaNtp19488
(S'data'
p19489
(lp19490
S'int32'
p19491
ag22
aNtp19492
tp19493
tp19494
sS'DAQmxGetStartTrigDelayUnits'
p19495
((lp19496
S'int32'
p19497
ag14
a((S'taskHandle'
p19498
(lp19499
S'TaskHandle'
p19500
aNtp19501
(S'data'
p19502
(lp19503
S'int32'
p19504
ag22
aNtp19505
tp19506
tp19507
sS'DAQmxResetAnlgWinStartTrigCoupling'
p19508
((lp19509
S'int32'
p19510
ag14
a((S'taskHandle'
p19511
(lp19512
S'TaskHandle'
p19513
aNtp19514
tp19515
tp19516
sS'DAQmxGetDigLvlPauseTrigDigFltrEnable'
p19517
((lp19518
S'int32'
p19519
ag14
a((S'taskHandle'
p19520
(lp19521
S'TaskHandle'
p19522
aNtp19523
(S'data'
p19524
(lp19525
S'bool32'
p19526
ag22
aNtp19527
tp19528
tp19529
sS'DAQmxWriteCtrTime'
p19530
((lp19531
S'int32'
p19532
ag14
a((S'taskHandle'
p19533
(lp19534
S'TaskHandle'
p19535
aNtp19536
(S'numSampsPerChan'
p19537
(lp19538
S'int32'
p19539
aNtp19540
(S'autoStart'
p19541
(lp19542
S'bool32'
p19543
aNtp19544
(S'timeout'
p19545
(lp19546
S'float64'
p19547
aNtp19548
(S'dataLayout'
p19549
(lp19550
S'bool32'
p19551
aNtp19552
(S'highTime'
p19553
(lp19554
S'float64'
p19555
a(lp19556
I-1
aaNtp19557
(S'lowTime'
p19558
(lp19559
S'float64'
p19560
a(lp19561
I-1
aaNtp19562
(S'numSampsPerChanWritten'
p19563
(lp19564
S'int32'
p19565
ag22
aNtp19566
(S'reserved'
p19567
(lp19568
S'bool32'
p19569
ag22
aNtp19570
tp19571
tp19572
sS'DAQmxResetCOPulseLowTicks'
p19573
((lp19574
S'int32'
p19575
ag14
a((S'taskHandle'
p19576
(lp19577
S'TaskHandle'
p19578
aNtp19579
(S'channel'
p19580
(lp19581
S'char'
p19582
a(lp19583
I-1
aaNtp19584
tp19585
tp19586
sS'DAQmxResetCITwoEdgeSepFirstDigSyncEnable'
p19587
((lp19588
S'int32'
p19589
ag14
a((S'taskHandle'
p19590
(lp19591
S'TaskHandle'
p19592
aNtp19593
(S'channel'
p19594
(lp19595
S'char'
p19596
a(lp19597
I-1
aaNtp19598
tp19599
tp19600
sS'DAQmxSetCOPulseLowTicks'
p19601
((lp19602
S'int32'
p19603
ag14
a((S'taskHandle'
p19604
(lp19605
S'TaskHandle'
p19606
aNtp19607
(S'channel'
p19608
(lp19609
S'char'
p19610
a(lp19611
I-1
aaNtp19612
(S'data'
p19613
(lp19614
S'uInt32'
p19615
aNtp19616
tp19617
tp19618
sS'DAQmxGetReadAvailSampPerChan'
p19619
((lp19620
S'int32'
p19621
ag14
a((S'taskHandle'
p19622
(lp19623
S'TaskHandle'
p19624
aNtp19625
(S'data'
p19626
(lp19627
S'uInt32'
p19628
ag22
aNtp19629
tp19630
tp19631
sS'DAQmxSetExportedStartTrigOutputTerm'
p19632
((lp19633
S'int32'
p19634
ag14
a((S'taskHandle'
p19635
(lp19636
S'TaskHandle'
p19637
aNtp19638
(S'data'
p19639
(lp19640
S'char'
p19641
ag22
aNtp19642
tp19643
tp19644
sS'DAQmxSetSampClkTimebaseMasterTimebaseDiv'
p19645
((lp19646
S'int32'
p19647
ag14
a((S'taskHandle'
p19648
(lp19649
S'TaskHandle'
p19650
aNtp19651
(S'data'
p19652
(lp19653
S'uInt32'
p19654
aNtp19655
tp19656
tp19657
sS'DAQmxGetWriteWaitMode'
p19658
((lp19659
S'int32'
p19660
ag14
a((S'taskHandle'
p19661
(lp19662
S'TaskHandle'
p19663
aNtp19664
(S'data'
p19665
(lp19666
S'int32'
p19667
ag22
aNtp19668
tp19669
tp19670
sS'DAQmxResetCIFreqDigFltrEnable'
p19671
((lp19672
S'int32'
p19673
ag14
a((S'taskHandle'
p19674
(lp19675
S'TaskHandle'
p19676
aNtp19677
(S'channel'
p19678
(lp19679
S'char'
p19680
a(lp19681
I-1
aaNtp19682
tp19683
tp19684
sS'DAQmxGetExportedRdyForXferEventOutputTerm'
p19685
((lp19686
S'int32'
p19687
ag14
a((S'taskHandle'
p19688
(lp19689
S'TaskHandle'
p19690
aNtp19691
(S'data'
p19692
(lp19693
S'char'
p19694
ag22
aNtp19695
(S'bufferSize'
p19696
(lp19697
S'uInt32'
p19698
aNtp19699
tp19700
tp19701
sS'DAQmxGetCITwoEdgeSepSecondTerm'
p19702
((lp19703
S'int32'
p19704
ag14
a((S'taskHandle'
p19705
(lp19706
S'TaskHandle'
p19707
aNtp19708
(S'channel'
p19709
(lp19710
S'char'
p19711
a(lp19712
I-1
aaNtp19713
(S'data'
p19714
(lp19715
S'char'
p19716
ag22
aNtp19717
(S'bufferSize'
p19718
(lp19719
S'uInt32'
p19720
aNtp19721
tp19722
tp19723
sS'DAQmxGetSwitchDevTopology'
p19724
((lp19725
S'int32'
p19726
ag14
a((S'deviceName'
p19727
(lp19728
S'char'
p19729
a(lp19730
I-1
aaNtp19731
(S'data'
p19732
(lp19733
S'char'
p19734
ag22
aNtp19735
(S'bufferSize'
p19736
(lp19737
S'uInt32'
p19738
aNtp19739
tp19740
tp19741
sS'DAQmxGetAOMemMapEnable'
p19742
((lp19743
S'int32'
p19744
ag14
a((S'taskHandle'
p19745
(lp19746
S'TaskHandle'
p19747
aNtp19748
(S'channel'
p19749
(lp19750
S'char'
p19751
a(lp19752
I-1
aaNtp19753
(S'data'
p19754
(lp19755
S'bool32'
p19756
ag22
aNtp19757
tp19758
tp19759
sS'DAQmxSetMasterTimebaseRate'
p19760
((lp19761
S'int32'
p19762
ag14
a((S'taskHandle'
p19763
(lp19764
S'TaskHandle'
p19765
aNtp19766
(S'data'
p19767
(lp19768
S'float64'
p19769
aNtp19770
tp19771
tp19772
sS'DAQmxResetExportedHshkEventDelay'
p19773
((lp19774
S'int32'
p19775
ag14
a((S'taskHandle'
p19776
(lp19777
S'TaskHandle'
p19778
aNtp19779
tp19780
tp19781
sS'DAQmxGetCIFreqDigFltrTimebaseRate'
p19782
((lp19783
S'int32'
p19784
ag14
a((S'taskHandle'
p19785
(lp19786
S'TaskHandle'
p19787
aNtp19788
(S'channel'
p19789
(lp19790
S'char'
p19791
a(lp19792
I-1
aaNtp19793
(S'data'
p19794
(lp19795
S'float64'
p19796
ag22
aNtp19797
tp19798
tp19799
sS'DAQmxGetWriteOffset'
p19800
((lp19801
S'int32'
p19802
ag14
a((S'taskHandle'
p19803
(lp19804
S'TaskHandle'
p19805
aNtp19806
(S'data'
p19807
(lp19808
S'int32'
p19809
ag22
aNtp19810
tp19811
tp19812
sS'DAQmxResetWatchdogExpirTrigType'
p19813
((lp19814
S'int32'
p19815
ag14
a((S'taskHandle'
p19816
(lp19817
S'TaskHandle'
p19818
aNtp19819
tp19820
tp19821
sS'DAQmxGetCIPeriodUnits'
p19822
((lp19823
S'int32'
p19824
ag14
a((S'taskHandle'
p19825
(lp19826
S'TaskHandle'
p19827
aNtp19828
(S'channel'
p19829
(lp19830
S'char'
p19831
a(lp19832
I-1
aaNtp19833
(S'data'
p19834
(lp19835
S'int32'
p19836
ag22
aNtp19837
tp19838
tp19839
sS'DAQmxResetExportedAdvTrigPulseWidth'
p19840
((lp19841
S'int32'
p19842
ag14
a((S'taskHandle'
p19843
(lp19844
S'TaskHandle'
p19845
aNtp19846
tp19847
tp19848
sS'DAQmxSetRealTimeReportMissedSamp'
p19849
((lp19850
S'int32'
p19851
ag14
a((S'taskHandle'
p19852
(lp19853
S'TaskHandle'
p19854
aNtp19855
(S'data'
p19856
(lp19857
S'bool32'
p19858
aNtp19859
tp19860
tp19861
sS'DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth'
p19862
((lp19863
S'int32'
p19864
ag14
a((S'taskHandle'
p19865
(lp19866
S'TaskHandle'
p19867
aNtp19868
(S'data'
p19869
(lp19870
S'float64'
p19871
aNtp19872
tp19873
tp19874
sS'DAQmxCreateTEDSAIThrmstrChanVex'
p19875
((lp19876
S'int32'
p19877
ag14
a((S'taskHandle'
p19878
(lp19879
S'TaskHandle'
p19880
aNtp19881
(S'physicalChannel'
p19882
(lp19883
S'char'
p19884
a(lp19885
I-1
aaNtp19886
(S'nameToAssignToChannel'
p19887
(lp19888
S'char'
p19889
a(lp19890
I-1
aaNtp19891
(S'minVal'
p19892
(lp19893
S'float64'
p19894
aNtp19895
(S'maxVal'
p19896
(lp19897
S'float64'
p19898
aNtp19899
(S'units'
p19900
(lp19901
S'int32'
p19902
aNtp19903
(S'resistanceConfig'
p19904
(lp19905
S'int32'
p19906
aNtp19907
(S'voltageExcitSource'
p19908
(lp19909
S'int32'
p19910
aNtp19911
(S'voltageExcitVal'
p19912
(lp19913
S'float64'
p19914
aNtp19915
(S'r1'
p19916
(lp19917
S'float64'
p19918
aNtp19919
tp19920
tp19921
sS'DAQmxSetAIConvTimebaseDiv'
p19922
((lp19923
S'int32'
p19924
ag14
a((S'taskHandle'
p19925
(lp19926
S'TaskHandle'
p19927
aNtp19928
(S'data'
p19929
(lp19930
S'uInt32'
p19931
aNtp19932
tp19933
tp19934
sS'DAQmxSetAIRngHigh'
p19935
((lp19936
S'int32'
p19937
ag14
a((S'taskHandle'
p19938
(lp19939
S'TaskHandle'
p19940
aNtp19941
(S'channel'
p19942
(lp19943
S'char'
p19944
a(lp19945
I-1
aaNtp19946
(S'data'
p19947
(lp19948
S'float64'
p19949
aNtp19950
tp19951
tp19952
sS'DAQmxSetDigEdgeAdvTrigSrc'
p19953
((lp19954
S'int32'
p19955
ag14
a((S'taskHandle'
p19956
(lp19957
S'TaskHandle'
p19958
aNtp19959
(S'data'
p19960
(lp19961
S'char'
p19962
ag22
aNtp19963
tp19964
tp19965
sS'DAQmxGetCICtrTimebaseDigSyncEnable'
p19966
((lp19967
S'int32'
p19968
ag14
a((S'taskHandle'
p19969
(lp19970
S'TaskHandle'
p19971
aNtp19972
(S'channel'
p19973
(lp19974
S'char'
p19975
a(lp19976
I-1
aaNtp19977
(S'data'
p19978
(lp19979
S'bool32'
p19980
ag22
aNtp19981
tp19982
tp19983
sS'DAQmxResetExportedHshkEventOutputBehavior'
p19984
((lp19985
S'int32'
p19986
ag14
a((S'taskHandle'
p19987
(lp19988
S'TaskHandle'
p19989
aNtp19990
tp19991
tp19992
sS'DAQmxResetAIFreqUnits'
p19993
((lp19994
S'int32'
p19995
ag14
a((S'taskHandle'
p19996
(lp19997
S'TaskHandle'
p19998
aNtp19999
(S'channel'
p20000
(lp20001
S'char'
p20002
a(lp20003
I-1
aaNtp20004
tp20005
tp20006
sS'DAQmxCfgDigEdgeStartTrig'
p20007
((lp20008
S'int32'
p20009
ag14
a((S'taskHandle'
p20010
(lp20011
S'TaskHandle'
p20012
aNtp20013
(S'triggerSource'
p20014
(lp20015
S'char'
p20016
a(lp20017
I-1
aaNtp20018
(S'triggerEdge'
p20019
(lp20020
S'int32'
p20021
aNtp20022
tp20023
tp20024
sS'DAQmxSetAISoundPressureUnits'
p20025
((lp20026
S'int32'
p20027
ag14
a((S'taskHandle'
p20028
(lp20029
S'TaskHandle'
p20030
aNtp20031
(S'channel'
p20032
(lp20033
S'char'
p20034
a(lp20035
I-1
aaNtp20036
(S'data'
p20037
(lp20038
S'int32'
p20039
aNtp20040
tp20041
tp20042
sS'DAQmxControlWatchdogTask'
p20043
((lp20044
S'int32'
p20045
ag14
a((S'taskHandle'
p20046
(lp20047
S'TaskHandle'
p20048
aNtp20049
(S'action'
p20050
(lp20051
S'int32'
p20052
aNtp20053
tp20054
tp20055
sS'DAQmxGetCICount'
p20056
((lp20057
S'int32'
p20058
ag14
a((S'taskHandle'
p20059
(lp20060
S'TaskHandle'
p20061
aNtp20062
(S'channel'
p20063
(lp20064
S'char'
p20065
a(lp20066
I-1
aaNtp20067
(S'data'
p20068
(lp20069
S'uInt32'
p20070
ag22
aNtp20071
tp20072
tp20073
sS'DAQmxResetCICountEdgesDigFltrMinPulseWidth'
p20074
((lp20075
S'int32'
p20076
ag14
a((S'taskHandle'
p20077
(lp20078
S'TaskHandle'
p20079
aNtp20080
(S'channel'
p20081
(lp20082
S'char'
p20083
a(lp20084
I-1
aaNtp20085
tp20086
tp20087
sS'DAQmxResetExportedHshkEventPulseWidth'
p20088
((lp20089
S'int32'
p20090
ag14
a((S'taskHandle'
p20091
(lp20092
S'TaskHandle'
p20093
aNtp20094
tp20095
tp20096
sS'DAQmxRegisterSignalEvent'
p20097
((lp20098
S'int32'
p20099
ag14
a((S'task'
p20100
(lp20101
S'TaskHandle'
p20102
aNtp20103
(S'signalID'
p20104
(lp20105
S'int32'
p20106
aNtp20107
(S'options'
p20108
(lp20109
S'uInt32'
p20110
aNtp20111
(S'callbackFunction'
p20112
(lp20113
S'DAQmxSignalEventCallbackPtr'
p20114
aNtp20115
(S'callbackData'
p20116
(lp20117
S'void'
p20118
ag22
aNtp20119
tp20120
tp20121
sS'DAQmxSetRealTimeWaitForNextSampClkWaitMode'
p20122
((lp20123
S'int32'
p20124
ag14
a((S'taskHandle'
p20125
(lp20126
S'TaskHandle'
p20127
aNtp20128
(S'data'
p20129
(lp20130
S'int32'
p20131
aNtp20132
tp20133
tp20134
sS'DAQmxCreateCICountEdgesChan'
p20135
((lp20136
S'int32'
p20137
ag14
a((S'taskHandle'
p20138
(lp20139
S'TaskHandle'
p20140
aNtp20141
(S'counter'
p20142
(lp20143
S'char'
p20144
a(lp20145
I-1
aaNtp20146
(S'nameToAssignToChannel'
p20147
(lp20148
S'char'
p20149
a(lp20150
I-1
aaNtp20151
(S'edge'
p20152
(lp20153
S'int32'
p20154
aNtp20155
(S'initialCount'
p20156
(lp20157
S'uInt32'
p20158
aNtp20159
(S'countDirection'
p20160
(lp20161
S'int32'
p20162
aNtp20163
tp20164
tp20165
sS'DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling'
p20166
((lp20167
S'int32'
p20168
ag14
a((S'deviceName'
p20169
(lp20170
S'char'
p20171
a(lp20172
I-1
aaNtp20173
(S'data'
p20174
(lp20175
S'bool32'
p20176
ag22
aNtp20177
tp20178
tp20179
sS'DAQmxGetSampClkDigFltrTimebaseSrc'
p20180
((lp20181
S'int32'
p20182
ag14
a((S'taskHandle'
p20183
(lp20184
S'TaskHandle'
p20185
aNtp20186
(S'data'
p20187
(lp20188
S'char'
p20189
ag22
aNtp20190
(S'bufferSize'
p20191
(lp20192
S'uInt32'
p20193
aNtp20194
tp20195
tp20196
sS'DAQmxGetReadOverloadedChans'
p20197
((lp20198
S'int32'
p20199
ag14
a((S'taskHandle'
p20200
(lp20201
S'TaskHandle'
p20202
aNtp20203
(S'data'
p20204
(lp20205
S'char'
p20206
ag22
aNtp20207
(S'bufferSize'
p20208
(lp20209
S'uInt32'
p20210
aNtp20211
tp20212
tp20213
sS'DAQmxResetAnlgLvlPauseTrigHyst'
p20214
((lp20215
S'int32'
p20216
ag14
a((S'taskHandle'
p20217
(lp20218
S'TaskHandle'
p20219
aNtp20220
tp20221
tp20222
sS'DAQmxSetAODACRefVal'
p20223
((lp20224
S'int32'
p20225
ag14
a((S'taskHandle'
p20226
(lp20227
S'TaskHandle'
p20228
aNtp20229
(S'channel'
p20230
(lp20231
S'char'
p20232
a(lp20233
I-1
aaNtp20234
(S'data'
p20235
(lp20236
S'float64'
p20237
aNtp20238
tp20239
tp20240
sS'DAQmxCreatePolynomialScale'
p20241
((lp20242
S'int32'
p20243
ag14
a((S'name'
p20244
(lp20245
S'char'
p20246
a(lp20247
I-1
aaNtp20248
(S'forwardCoeffs'
p20249
(lp20250
S'float64'
p20251
a(lp20252
I-1
aaNtp20253
(S'numForwardCoeffsIn'
p20254
(lp20255
S'uInt32'
p20256
aNtp20257
(S'reverseCoeffs'
p20258
(lp20259
S'float64'
p20260
a(lp20261
I-1
aaNtp20262
(S'numReverseCoeffsIn'
p20263
(lp20264
S'uInt32'
p20265
aNtp20266
(S'preScaledUnits'
p20267
(lp20268
S'int32'
p20269
aNtp20270
(S'scaledUnits'
p20271
(lp20272
S'char'
p20273
a(lp20274
I-1
aaNtp20275
tp20276
tp20277
sS'DAQmxReadDigitalLines'
p20278
((lp20279
S'int32'
p20280
ag14
a((S'taskHandle'
p20281
(lp20282
S'TaskHandle'
p20283
aNtp20284
(S'numSampsPerChan'
p20285
(lp20286
S'int32'
p20287
aNtp20288
(S'timeout'
p20289
(lp20290
S'float64'
p20291
aNtp20292
(S'fillMode'
p20293
(lp20294
S'bool32'
p20295
aNtp20296
(S'readArray'
p20297
(lp20298
S'uInt8'
p20299
a(lp20300
I-1
aaNtp20301
(S'arraySizeInBytes'
p20302
(lp20303
S'uInt32'
p20304
aNtp20305
(S'sampsPerChanRead'
p20306
(lp20307
S'int32'
p20308
ag22
aNtp20309
(S'numBytesPerSamp'
p20310
(lp20311
S'int32'
p20312
ag22
aNtp20313
(S'reserved'
p20314
(lp20315
S'bool32'
p20316
ag22
aNtp20317
tp20318
tp20319
sS'DAQmxResetAIImpedance'
p20320
((lp20321
S'int32'
p20322
ag14
a((S'taskHandle'
p20323
(lp20324
S'TaskHandle'
p20325
aNtp20326
(S'channel'
p20327
(lp20328
S'char'
p20329
a(lp20330
I-1
aaNtp20331
tp20332
tp20333
sS'DAQmxResetCITwoEdgeSepFirstTerm'
p20334
((lp20335
S'int32'
p20336
ag14
a((S'taskHandle'
p20337
(lp20338
S'TaskHandle'
p20339
aNtp20340
(S'channel'
p20341
(lp20342
S'char'
p20343
a(lp20344
I-1
aaNtp20345
tp20346
tp20347
sS'DAQmxCreateTEDSAICurrentChan'
p20348
((lp20349
S'int32'
p20350
ag14
a((S'taskHandle'
p20351
(lp20352
S'TaskHandle'
p20353
aNtp20354
(S'physicalChannel'
p20355
(lp20356
S'char'
p20357
a(lp20358
I-1
aaNtp20359
(S'nameToAssignToChannel'
p20360
(lp20361
S'char'
p20362
a(lp20363
I-1
aaNtp20364
(S'terminalConfig'
p20365
(lp20366
S'int32'
p20367
aNtp20368
(S'minVal'
p20369
(lp20370
S'float64'
p20371
aNtp20372
(S'maxVal'
p20373
(lp20374
S'float64'
p20375
aNtp20376
(S'units'
p20377
(lp20378
S'int32'
p20379
aNtp20380
(S'shuntResistorLoc'
p20381
(lp20382
S'int32'
p20383
aNtp20384
(S'extShuntResistorVal'
p20385
(lp20386
S'float64'
p20387
aNtp20388
(S'customScaleName'
p20389
(lp20390
S'char'
p20391
a(lp20392
I-1
aaNtp20393
tp20394
tp20395
sS'DAQmxGetExported10MHzRefClkOutputTerm'
p20396
((lp20397
S'int32'
p20398
ag14
a((S'taskHandle'
p20399
(lp20400
S'TaskHandle'
p20401
aNtp20402
(S'data'
p20403
(lp20404
S'char'
p20405
ag22
aNtp20406
(S'bufferSize'
p20407
(lp20408
S'uInt32'
p20409
aNtp20410
tp20411
tp20412
sS'DAQmxSetAODACOffsetVal'
p20413
((lp20414
S'int32'
p20415
ag14
a((S'taskHandle'
p20416
(lp20417
S'TaskHandle'
p20418
aNtp20419
(S'channel'
p20420
(lp20421
S'char'
p20422
a(lp20423
I-1
aaNtp20424
(S'data'
p20425
(lp20426
S'float64'
p20427
aNtp20428
tp20429
tp20430
sS'DAQmxGetSwitchDevNumRelays'
p20431
((lp20432
S'int32'
p20433
ag14
a((S'deviceName'
p20434
(lp20435
S'char'
p20436
a(lp20437
I-1
aaNtp20438
(S'data'
p20439
(lp20440
S'uInt32'
p20441
ag22
aNtp20442
tp20443
tp20444
sS'DAQmxSetCIEncoderBInputDigFltrTimebaseSrc'
p20445
((lp20446
S'int32'
p20447
ag14
a((S'taskHandle'
p20448
(lp20449
S'TaskHandle'
p20450
aNtp20451
(S'channel'
p20452
(lp20453
S'char'
p20454
a(lp20455
I-1
aaNtp20456
(S'data'
p20457
(lp20458
S'char'
p20459
ag22
aNtp20460
tp20461
tp20462
sS'DAQmxGetReadChangeDetectHasOverflowed'
p20463
((lp20464
S'int32'
p20465
ag14
a((S'taskHandle'
p20466
(lp20467
S'TaskHandle'
p20468
aNtp20469
(S'data'
p20470
(lp20471
S'bool32'
p20472
ag22
aNtp20473
tp20474
tp20475
sS'DAQmxSetScaleMapScaledMax'
p20476
((lp20477
S'int32'
p20478
ag14
a((S'scaleName'
p20479
(lp20480
S'char'
p20481
a(lp20482
I-1
aaNtp20483
(S'data'
p20484
(lp20485
S'float64'
p20486
aNtp20487
tp20488
tp20489
sS'DAQmxResetCILinEncoderDistPerPulse'
p20490
((lp20491
S'int32'
p20492
ag14
a((S'taskHandle'
p20493
(lp20494
S'TaskHandle'
p20495
aNtp20496
(S'channel'
p20497
(lp20498
S'char'
p20499
a(lp20500
I-1
aaNtp20501
tp20502
tp20503
sS'DAQmxResetAnlgEdgeRefTrigLvl'
p20504
((lp20505
S'int32'
p20506
ag14
a((S'taskHandle'
p20507
(lp20508
S'TaskHandle'
p20509
aNtp20510
tp20511
tp20512
sS'DAQmxSetAIChanCalPolyReverseCoeff'
p20513
((lp20514
S'int32'
p20515
ag14
a((S'taskHandle'
p20516
(lp20517
S'TaskHandle'
p20518
aNtp20519
(S'channel'
p20520
(lp20521
S'char'
p20522
a(lp20523
I-1
aaNtp20524
(S'data'
p20525
(lp20526
S'float64'
p20527
ag22
aNtp20528
(S'arraySizeInSamples'
p20529
(lp20530
S'uInt32'
p20531
aNtp20532
tp20533
tp20534
sS'DAQmxGetReadOffset'
p20535
((lp20536
S'int32'
p20537
ag14
a((S'taskHandle'
p20538
(lp20539
S'TaskHandle'
p20540
aNtp20541
(S'data'
p20542
(lp20543
S'int32'
p20544
ag22
aNtp20545
tp20546
tp20547
sS'DAQmxResetCIEncoderZInputTerm'
p20548
((lp20549
S'int32'
p20550
ag14
a((S'taskHandle'
p20551
(lp20552
S'TaskHandle'
p20553
aNtp20554
(S'channel'
p20555
(lp20556
S'char'
p20557
a(lp20558
I-1
aaNtp20559
tp20560
tp20561
sS'DAQmxGetCICtrTimebaseMasterTimebaseDiv'
p20562
((lp20563
S'int32'
p20564
ag14
a((S'taskHandle'
p20565
(lp20566
S'TaskHandle'
p20567
aNtp20568
(S'channel'
p20569
(lp20570
S'char'
p20571
a(lp20572
I-1
aaNtp20573
(S'data'
p20574
(lp20575
S'uInt32'
p20576
ag22
aNtp20577
tp20578
tp20579
sS'DAQmxResetCIPrescaler'
p20580
((lp20581
S'int32'
p20582
ag14
a((S'taskHandle'
p20583
(lp20584
S'TaskHandle'
p20585
aNtp20586
(S'channel'
p20587
(lp20588
S'char'
p20589
a(lp20590
I-1
aaNtp20591
tp20592
tp20593
sS'DAQmxDeleteSavedTask'
p20594
((lp20595
S'int32'
p20596
ag14
a((S'taskName'
p20597
(lp20598
S'char'
p20599
a(lp20600
I-1
aaNtp20601
tp20602
tp20603
sS'DAQmxGetAnlgLvlPauseTrigHyst'
p20604
((lp20605
S'int32'
p20606
ag14
a((S'taskHandle'
p20607
(lp20608
S'TaskHandle'
p20609
aNtp20610
(S'data'
p20611
(lp20612
S'float64'
p20613
ag22
aNtp20614
tp20615
tp20616
sS'DAQmxResetExportedSignalAttribute'
p20617
((lp20618
S'int32'
p20619
ag14
a((S'taskHandle'
p20620
(lp20621
S'TaskHandle'
p20622
aNtp20623
(S'attribute'
p20624
(lp20625
S'int32'
p20626
aNtp20627
tp20628
tp20629
sS'DAQmxGetRealTimeWriteRecoveryMode'
p20630
((lp20631
S'int32'
p20632
ag14
a((S'taskHandle'
p20633
(lp20634
S'TaskHandle'
p20635
aNtp20636
(S'data'
p20637
(lp20638
S'int32'
p20639
ag22
aNtp20640
tp20641
tp20642
sS'DAQmxCreateTableScale'
p20643
((lp20644
S'int32'
p20645
ag14
a((S'name'
p20646
(lp20647
S'char'
p20648
a(lp20649
I-1
aaNtp20650
(S'prescaledVals'
p20651
(lp20652
S'float64'
p20653
a(lp20654
I-1
aaNtp20655
(S'numPrescaledValsIn'
p20656
(lp20657
S'uInt32'
p20658
aNtp20659
(S'scaledVals'
p20660
(lp20661
S'float64'
p20662
a(lp20663
I-1
aaNtp20664
(S'numScaledValsIn'
p20665
(lp20666
S'uInt32'
p20667
aNtp20668
(S'preScaledUnits'
p20669
(lp20670
S'int32'
p20671
aNtp20672
(S'scaledUnits'
p20673
(lp20674
S'char'
p20675
a(lp20676
I-1
aaNtp20677
tp20678
tp20679
sS'DAQmxGetCICountEdgesCountDirDigSyncEnable'
p20680
((lp20681
S'int32'
p20682
ag14
a((S'taskHandle'
p20683
(lp20684
S'TaskHandle'
p20685
aNtp20686
(S'channel'
p20687
(lp20688
S'char'
p20689
a(lp20690
I-1
aaNtp20691
(S'data'
p20692
(lp20693
S'bool32'
p20694
ag22
aNtp20695
tp20696
tp20697
sS'DAQmxResetAIGain'
p20698
((lp20699
S'int32'
p20700
ag14
a((S'taskHandle'
p20701
(lp20702
S'TaskHandle'
p20703
aNtp20704
(S'channel'
p20705
(lp20706
S'char'
p20707
a(lp20708
I-1
aaNtp20709
tp20710
tp20711
sS'DAQmxSetAnlgLvlPauseTrigSrc'
p20712
((lp20713
S'int32'
p20714
ag14
a((S'taskHandle'
p20715
(lp20716
S'TaskHandle'
p20717
aNtp20718
(S'data'
p20719
(lp20720
S'char'
p20721
ag22
aNtp20722
tp20723
tp20724
sS'DAQmxAdjust4204Cal'
p20725
((lp20726
S'int32'
p20727
ag14
a((S'calHandle'
p20728
(lp20729
S'uInt32'
p20730
aNtp20731
(S'channelNames'
p20732
(lp20733
S'char'
p20734
a(lp20735
I-1
aaNtp20736
(S'lowPassFreq'
p20737
(lp20738
S'float64'
p20739
aNtp20740
(S'trackHoldEnabled'
p20741
(lp20742
S'bool32'
p20743
aNtp20744
(S'inputVal'
p20745
(lp20746
S'float64'
p20747
aNtp20748
tp20749
tp20750
sS'DAQmxSetRefClkSrc'
p20751
((lp20752
S'int32'
p20753
ag14
a((S'taskHandle'
p20754
(lp20755
S'TaskHandle'
p20756
aNtp20757
(S'data'
p20758
(lp20759
S'char'
p20760
ag22
aNtp20761
tp20762
tp20763
sS'DAQmxSetCOPulseFreqUnits'
p20764
((lp20765
S'int32'
p20766
ag14
a((S'taskHandle'
p20767
(lp20768
S'TaskHandle'
p20769
aNtp20770
(S'channel'
p20771
(lp20772
S'char'
p20773
a(lp20774
I-1
aaNtp20775
(S'data'
p20776
(lp20777
S'int32'
p20778
aNtp20779
tp20780
tp20781
sS'DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate'
p20782
((lp20783
S'int32'
p20784
ag14
a((S'taskHandle'
p20785
(lp20786
S'TaskHandle'
p20787
aNtp20788
tp20789
tp20790
sS'DAQmxGetCICtrTimebaseDigFltrTimebaseSrc'
p20791
((lp20792
S'int32'
p20793
ag14
a((S'taskHandle'
p20794
(lp20795
S'TaskHandle'
p20796
aNtp20797
(S'channel'
p20798
(lp20799
S'char'
p20800
a(lp20801
I-1
aaNtp20802
(S'data'
p20803
(lp20804
S'char'
p20805
ag22
aNtp20806
(S'bufferSize'
p20807
(lp20808
S'uInt32'
p20809
aNtp20810
tp20811
tp20812
sS'DAQmxGetRealTimeNumOfWarmupIters'
p20813
((lp20814
S'int32'
p20815
ag14
a((S'taskHandle'
p20816
(lp20817
S'TaskHandle'
p20818
aNtp20819
(S'data'
p20820
(lp20821
S'uInt32'
p20822
ag22
aNtp20823
tp20824
tp20825
sS'DAQmxGetDIInvertLines'
p20826
((lp20827
S'int32'
p20828
ag14
a((S'taskHandle'
p20829
(lp20830
S'TaskHandle'
p20831
aNtp20832
(S'channel'
p20833
(lp20834
S'char'
p20835
a(lp20836
I-1
aaNtp20837
(S'data'
p20838
(lp20839
S'bool32'
p20840
ag22
aNtp20841
tp20842
tp20843
sS'DAQmxResetAnlgEdgeStartTrigCoupling'
p20844
((lp20845
S'int32'
p20846
ag14
a((S'taskHandle'
p20847
(lp20848
S'TaskHandle'
p20849
aNtp20850
tp20851
tp20852
sS'DAQmxGetWriteSleepTime'
p20853
((lp20854
S'int32'
p20855
ag14
a((S'taskHandle'
p20856
(lp20857
S'TaskHandle'
p20858
aNtp20859
(S'data'
p20860
(lp20861
S'float64'
p20862
ag22
aNtp20863
tp20864
tp20865
sS'DAQmxGetCOPulseHighTime'
p20866
((lp20867
S'int32'
p20868
ag14
a((S'taskHandle'
p20869
(lp20870
S'TaskHandle'
p20871
aNtp20872
(S'channel'
p20873
(lp20874
S'char'
p20875
a(lp20876
I-1
aaNtp20877
(S'data'
p20878
(lp20879
S'float64'
p20880
ag22
aNtp20881
tp20882
tp20883
sS'DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling'
p20884
((lp20885
S'int32'
p20886
ag14
a((S'deviceName'
p20887
(lp20888
S'char'
p20889
a(lp20890
I-1
aaNtp20891
(S'data'
p20892
(lp20893
S'bool32'
p20894
aNtp20895
tp20896
tp20897
sS'DAQmxSetAIBridgeCfg'
p20898
((lp20899
S'int32'
p20900
ag14
a((S'taskHandle'
p20901
(lp20902
S'TaskHandle'
p20903
aNtp20904
(S'channel'
p20905
(lp20906
S'char'
p20907
a(lp20908
I-1
aaNtp20909
(S'data'
p20910
(lp20911
S'int32'
p20912
aNtp20913
tp20914
tp20915
sS'DAQmxSetExportedAdvCmpltEventPulseWidth'
p20916
((lp20917
S'int32'
p20918
ag14
a((S'taskHandle'
p20919
(lp20920
S'TaskHandle'
p20921
aNtp20922
(S'data'
p20923
(lp20924
S'float64'
p20925
aNtp20926
tp20927
tp20928
sS'DAQmxSetChangeDetectDIRisingEdgePhysicalChans'
p20929
((lp20930
S'int32'
p20931
ag14
a((S'taskHandle'
p20932
(lp20933
S'TaskHandle'
p20934
aNtp20935
(S'data'
p20936
(lp20937
S'char'
p20938
ag22
aNtp20939
tp20940
tp20941
sS'DAQmxSetDigLvlPauseTrigWhen'
p20942
((lp20943
S'int32'
p20944
ag14
a((S'taskHandle'
p20945
(lp20946
S'TaskHandle'
p20947
aNtp20948
(S'data'
p20949
(lp20950
S'int32'
p20951
aNtp20952
tp20953
tp20954
sS'DAQmxResetCIEncoderZIndexVal'
p20955
((lp20956
S'int32'
p20957
ag14
a((S'taskHandle'
p20958
(lp20959
S'TaskHandle'
p20960
aNtp20961
(S'channel'
p20962
(lp20963
S'char'
p20964
a(lp20965
I-1
aaNtp20966
tp20967
tp20968
sS'DAQmxGetAODACOffsetVal'
p20969
((lp20970
S'int32'
p20971
ag14
a((S'taskHandle'
p20972
(lp20973
S'TaskHandle'
p20974
aNtp20975
(S'channel'
p20976
(lp20977
S'char'
p20978
a(lp20979
I-1
aaNtp20980
(S'data'
p20981
(lp20982
S'float64'
p20983
ag22
aNtp20984
tp20985
tp20986
sS'DAQmxSetAnlgLvlPauseTrigLvl'
p20987
((lp20988
S'int32'
p20989
ag14
a((S'taskHandle'
p20990
(lp20991
S'TaskHandle'
p20992
aNtp20993
(S'data'
p20994
(lp20995
S'float64'
p20996
aNtp20997
tp20998
tp20999
sS'DAQmxGetReadRawDataWidth'
p21000
((lp21001
S'int32'
p21002
ag14
a((S'taskHandle'
p21003
(lp21004
S'TaskHandle'
p21005
aNtp21006
(S'data'
p21007
(lp21008
S'uInt32'
p21009
ag22
aNtp21010
tp21011
tp21012
sS'DAQmxGetDigEdgeAdvTrigDigFltrEnable'
p21013
((lp21014
S'int32'
p21015
ag14
a((S'taskHandle'
p21016
(lp21017
S'TaskHandle'
p21018
aNtp21019
(S'data'
p21020
(lp21021
S'bool32'
p21022
ag22
aNtp21023
tp21024
tp21025
sS'DAQmxSetAnlgWinStartTrigTop'
p21026
((lp21027
S'int32'
p21028
ag14
a((S'taskHandle'
p21029
(lp21030
S'TaskHandle'
p21031
aNtp21032
(S'data'
p21033
(lp21034
S'float64'
p21035
aNtp21036
tp21037
tp21038
sS'DAQmxSetSampClkDigSyncEnable'
p21039
((lp21040
S'int32'
p21041
ag14
a((S'taskHandle'
p21042
(lp21043
S'TaskHandle'
p21044
aNtp21045
(S'data'
p21046
(lp21047
S'bool32'
p21048
aNtp21049
tp21050
tp21051
sS'DAQmxResetDigEdgeStartTrigEdge'
p21052
((lp21053
S'int32'
p21054
ag14
a((S'taskHandle'
p21055
(lp21056
S'TaskHandle'
p21057
aNtp21058
tp21059
tp21060
sS'DAQmxResetCITwoEdgeSepFirstDigFltrEnable'
p21061
((lp21062
S'int32'
p21063
ag14
a((S'taskHandle'
p21064
(lp21065
S'TaskHandle'
p21066
aNtp21067
(S'channel'
p21068
(lp21069
S'char'
p21070
a(lp21071
I-1
aaNtp21072
tp21073
tp21074
sS'DAQmxSetScaleMapPreScaledMin'
p21075
((lp21076
S'int32'
p21077
ag14
a((S'scaleName'
p21078
(lp21079
S'char'
p21080
a(lp21081
I-1
aaNtp21082
(S'data'
p21083
(lp21084
S'float64'
p21085
aNtp21086
tp21087
tp21088
sS'DAQmxSetDIDigFltrMinPulseWidth'
p21089
((lp21090
S'int32'
p21091
ag14
a((S'taskHandle'
p21092
(lp21093
S'TaskHandle'
p21094
aNtp21095
(S'channel'
p21096
(lp21097
S'char'
p21098
a(lp21099
I-1
aaNtp21100
(S'data'
p21101
(lp21102
S'float64'
p21103
aNtp21104
tp21105
tp21106
sS'DAQmxSetCIEncoderBInputDigFltrTimebaseRate'
p21107
((lp21108
S'int32'
p21109
ag14
a((S'taskHandle'
p21110
(lp21111
S'TaskHandle'
p21112
aNtp21113
(S'channel'
p21114
(lp21115
S'char'
p21116
a(lp21117
I-1
aaNtp21118
(S'data'
p21119
(lp21120
S'float64'
p21121
aNtp21122
tp21123
tp21124
sS'DAQmxResetAIExcitUseMultiplexed'
p21125
((lp21126
S'int32'
p21127
ag14
a((S'taskHandle'
p21128
(lp21129
S'TaskHandle'
p21130
aNtp21131
(S'channel'
p21132
(lp21133
S'char'
p21134
a(lp21135
I-1
aaNtp21136
tp21137
tp21138
sS'DAQmxSetAOCurrentUnits'
p21139
((lp21140
S'int32'
p21141
ag14
a((S'taskHandle'
p21142
(lp21143
S'TaskHandle'
p21144
aNtp21145
(S'channel'
p21146
(lp21147
S'char'
p21148
a(lp21149
I-1
aaNtp21150
(S'data'
p21151
(lp21152
S'int32'
p21153
aNtp21154
tp21155
tp21156
sS'DAQmxSetCITimestampUnits'
p21157
((lp21158
S'int32'
p21159
ag14
a((S'taskHandle'
p21160
(lp21161
S'TaskHandle'
p21162
aNtp21163
(S'channel'
p21164
(lp21165
S'char'
p21166
a(lp21167
I-1
aaNtp21168
(S'data'
p21169
(lp21170
S'int32'
p21171
aNtp21172
tp21173
tp21174
sS'DAQmxSetSampClkTimebaseDiv'
p21175
((lp21176
S'int32'
p21177
ag14
a((S'taskHandle'
p21178
(lp21179
S'TaskHandle'
p21180
aNtp21181
(S'data'
p21182
(lp21183
S'uInt32'
p21184
aNtp21185
tp21186
tp21187
sS'DAQmxClearTask'
p21188
((lp21189
S'int32'
p21190
ag14
a((S'taskHandle'
p21191
(lp21192
S'TaskHandle'
p21193
aNtp21194
tp21195
tp21196
sS'DAQmxResetExportedCtrOutEventPulsePolarity'
p21197
((lp21198
S'int32'
p21199
ag14
a((S'taskHandle'
p21200
(lp21201
S'TaskHandle'
p21202
aNtp21203
tp21204
tp21205
sS'DAQmxGetPhysicalChanName'
p21206
((lp21207
S'int32'
p21208
ag14
a((S'taskHandle'
p21209
(lp21210
S'TaskHandle'
p21211
aNtp21212
(S'channel'
p21213
(lp21214
S'char'
p21215
a(lp21216
I-1
aaNtp21217
(S'data'
p21218
(lp21219
S'char'
p21220
ag22
aNtp21221
(S'bufferSize'
p21222
(lp21223
S'uInt32'
p21224
aNtp21225
tp21226
tp21227
sS'DAQmxResetAIThrmcplCJCVal'
p21228
((lp21229
S'int32'
p21230
ag14
a((S'taskHandle'
p21231
(lp21232
S'TaskHandle'
p21233
aNtp21234
(S'channel'
p21235
(lp21236
S'char'
p21237
a(lp21238
I-1
aaNtp21239
tp21240
tp21241
sS'DAQmxWriteCtrTimeScalar'
p21242
((lp21243
S'int32'
p21244
ag14
a((S'taskHandle'
p21245
(lp21246
S'TaskHandle'
p21247
aNtp21248
(S'autoStart'
p21249
(lp21250
S'bool32'
p21251
aNtp21252
(S'timeout'
p21253
(lp21254
S'float64'
p21255
aNtp21256
(S'highTime'
p21257
(lp21258
S'float64'
p21259
aNtp21260
(S'lowTime'
p21261
(lp21262
S'float64'
p21263
aNtp21264
(S'reserved'
p21265
(lp21266
S'bool32'
p21267
ag22
aNtp21268
tp21269
tp21270
sS'DAQmxResetCIEncoderAInputDigFltrMinPulseWidth'
p21271
((lp21272
S'int32'
p21273
ag14
a((S'taskHandle'
p21274
(lp21275
S'TaskHandle'
p21276
aNtp21277
(S'channel'
p21278
(lp21279
S'char'
p21280
a(lp21281
I-1
aaNtp21282
tp21283
tp21284
sS'DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth'
p21285
((lp21286
S'int32'
p21287
ag14
a((S'taskHandle'
p21288
(lp21289
S'TaskHandle'
p21290
aNtp21291
(S'data'
p21292
(lp21293
S'float64'
p21294
ag22
aNtp21295
tp21296
tp21297
sS'DAQmxSetDOTristate'
p21298
((lp21299
S'int32'
p21300
ag14
a((S'taskHandle'
p21301
(lp21302
S'TaskHandle'
p21303
aNtp21304
(S'channel'
p21305
(lp21306
S'char'
p21307
a(lp21308
I-1
aaNtp21309
(S'data'
p21310
(lp21311
S'bool32'
p21312
aNtp21313
tp21314
tp21315
sS'DAQmxSetSampQuantSampPerChan'
p21316
((lp21317
S'int32'
p21318
ag14
a((S'taskHandle'
p21319
(lp21320
S'TaskHandle'
p21321
aNtp21322
(S'data'
p21323
(lp21324
S'uInt64'
p21325
aNtp21326
tp21327
tp21328
sS'DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth'
p21329
((lp21330
S'int32'
p21331
ag14
a((S'taskHandle'
p21332
(lp21333
S'TaskHandle'
p21334
aNtp21335
(S'channel'
p21336
(lp21337
S'char'
p21338
a(lp21339
I-1
aaNtp21340
(S'data'
p21341
(lp21342
S'float64'
p21343
ag22
aNtp21344
tp21345
tp21346
sS'DAQmxResetAITermCfg'
p21347
((lp21348
S'int32'
p21349
ag14
a((S'taskHandle'
p21350
(lp21351
S'TaskHandle'
p21352
aNtp21353
(S'channel'
p21354
(lp21355
S'char'
p21356
a(lp21357
I-1
aaNtp21358
tp21359
tp21360
sS'DAQmxSetAODataXferReqCond'
p21361
((lp21362
S'int32'
p21363
ag14
a((S'taskHandle'
p21364
(lp21365
S'TaskHandle'
p21366
aNtp21367
(S'channel'
p21368
(lp21369
S'char'
p21370
a(lp21371
I-1
aaNtp21372
(S'data'
p21373
(lp21374
S'int32'
p21375
aNtp21376
tp21377
tp21378
sS'DAQmxCreateAOCurrentChan'
p21379
((lp21380
S'int32'
p21381
ag14
a((S'taskHandle'
p21382
(lp21383
S'TaskHandle'
p21384
aNtp21385
(S'physicalChannel'
p21386
(lp21387
S'char'
p21388
a(lp21389
I-1
aaNtp21390
(S'nameToAssignToChannel'
p21391
(lp21392
S'char'
p21393
a(lp21394
I-1
aaNtp21395
(S'minVal'
p21396
(lp21397
S'float64'
p21398
aNtp21399
(S'maxVal'
p21400
(lp21401
S'float64'
p21402
aNtp21403
(S'units'
p21404
(lp21405
S'int32'
p21406
aNtp21407
(S'customScaleName'
p21408
(lp21409
S'char'
p21410
a(lp21411
I-1
aaNtp21412
tp21413
tp21414
sS'DAQmxResetExportedSampClkOutputTerm'
p21415
((lp21416
S'int32'
p21417
ag14
a((S'taskHandle'
p21418
(lp21419
S'TaskHandle'
p21420
aNtp21421
tp21422
tp21423
sS'DAQmxWriteCtrFreq'
p21424
((lp21425
S'int32'
p21426
ag14
a((S'taskHandle'
p21427
(lp21428
S'TaskHandle'
p21429
aNtp21430
(S'numSampsPerChan'
p21431
(lp21432
S'int32'
p21433
aNtp21434
(S'autoStart'
p21435
(lp21436
S'bool32'
p21437
aNtp21438
(S'timeout'
p21439
(lp21440
S'float64'
p21441
aNtp21442
(S'dataLayout'
p21443
(lp21444
S'bool32'
p21445
aNtp21446
(S'frequency'
p21447
(lp21448
S'float64'
p21449
a(lp21450
I-1
aaNtp21451
(S'dutyCycle'
p21452
(lp21453
S'float64'
p21454
a(lp21455
I-1
aaNtp21456
(S'numSampsPerChanWritten'
p21457
(lp21458
S'int32'
p21459
ag22
aNtp21460
(S'reserved'
p21461
(lp21462
S'bool32'
p21463
ag22
aNtp21464
tp21465
tp21466
sS'DAQmxGetAILossyLSBRemovalCompressedSampSize'
p21467
((lp21468
S'int32'
p21469
ag14
a((S'taskHandle'
p21470
(lp21471
S'TaskHandle'
p21472
aNtp21473
(S'channel'
p21474
(lp21475
S'char'
p21476
a(lp21477
I-1
aaNtp21478
(S'data'
p21479
(lp21480
S'uInt32'
p21481
ag22
aNtp21482
tp21483
tp21484
sS'DAQmxCreateCISemiPeriodChan'
p21485
((lp21486
S'int32'
p21487
ag14
a((S'taskHandle'
p21488
(lp21489
S'TaskHandle'
p21490
aNtp21491
(S'counter'
p21492
(lp21493
S'char'
p21494
a(lp21495
I-1
aaNtp21496
(S'nameToAssignToChannel'
p21497
(lp21498
S'char'
p21499
a(lp21500
I-1
aaNtp21501
(S'minVal'
p21502
(lp21503
S'float64'
p21504
aNtp21505
(S'maxVal'
p21506
(lp21507
S'float64'
p21508
aNtp21509
(S'units'
p21510
(lp21511
S'int32'
p21512
aNtp21513
(S'customScaleName'
p21514
(lp21515
S'char'
p21516
a(lp21517
I-1
aaNtp21518
tp21519
tp21520
sS'DAQmxGetAIFreqThreshVoltage'
p21521
((lp21522
S'int32'
p21523
ag14
a((S'taskHandle'
p21524
(lp21525
S'TaskHandle'
p21526
aNtp21527
(S'channel'
p21528
(lp21529
S'char'
p21530
a(lp21531
I-1
aaNtp21532
(S'data'
p21533
(lp21534
S'float64'
p21535
ag22
aNtp21536
tp21537
tp21538
sS'DAQmxSetAnlgEdgeRefTrigSlope'
p21539
((lp21540
S'int32'
p21541
ag14
a((S'taskHandle'
p21542
(lp21543
S'TaskHandle'
p21544
aNtp21545
(S'data'
p21546
(lp21547
S'int32'
p21548
aNtp21549
tp21550
tp21551
sS'DAQmxSetCIEncoderDecodingType'
p21552
((lp21553
S'int32'
p21554
ag14
a((S'taskHandle'
p21555
(lp21556
S'TaskHandle'
p21557
aNtp21558
(S'channel'
p21559
(lp21560
S'char'
p21561
a(lp21562
I-1
aaNtp21563
(S'data'
p21564
(lp21565
S'int32'
p21566
aNtp21567
tp21568
tp21569
sS'DAQmxResetWriteOffset'
p21570
((lp21571
S'int32'
p21572
ag14
a((S'taskHandle'
p21573
(lp21574
S'TaskHandle'
p21575
aNtp21576
tp21577
tp21578
sS'DAQmxResetSyncPulseSrc'
p21579
((lp21580
S'int32'
p21581
ag14
a((S'taskHandle'
p21582
(lp21583
S'TaskHandle'
p21584
aNtp21585
tp21586
tp21587
sS'DAQmxGetSysScales'
p21588
((lp21589
S'int32'
p21590
ag14
a((S'data'
p21591
(lp21592
S'char'
p21593
ag22
aNtp21594
(S'bufferSize'
p21595
(lp21596
S'uInt32'
p21597
aNtp21598
tp21599
tp21600
sS'DAQmxReadAnalogScalarF64'
p21601
((lp21602
S'int32'
p21603
ag14
a((S'taskHandle'
p21604
(lp21605
S'TaskHandle'
p21606
aNtp21607
(S'timeout'
p21608
(lp21609
S'float64'
p21610
aNtp21611
(S'value'
p21612
(lp21613
S'float64'
p21614
ag22
aNtp21615
(S'reserved'
p21616
(lp21617
S'bool32'
p21618
ag22
aNtp21619
tp21620
tp21621
sS'DAQmxGetCIEncoderZInputDigFltrEnable'
p21622
((lp21623
S'int32'
p21624
ag14
a((S'taskHandle'
p21625
(lp21626
S'TaskHandle'
p21627
aNtp21628
(S'channel'
p21629
(lp21630
S'char'
p21631
a(lp21632
I-1
aaNtp21633
(S'data'
p21634
(lp21635
S'bool32'
p21636
ag22
aNtp21637
tp21638
tp21639
sS'DAQmxResetAICoupling'
p21640
((lp21641
S'int32'
p21642
ag14
a((S'taskHandle'
p21643
(lp21644
S'TaskHandle'
p21645
aNtp21646
(S'channel'
p21647
(lp21648
S'char'
p21649
a(lp21650
I-1
aaNtp21651
tp21652
tp21653
sS'DAQmxResetCIEncoderBInputDigFltrMinPulseWidth'
p21654
((lp21655
S'int32'
p21656
ag14
a((S'taskHandle'
p21657
(lp21658
S'TaskHandle'
p21659
aNtp21660
(S'channel'
p21661
(lp21662
S'char'
p21663
a(lp21664
I-1
aaNtp21665
tp21666
tp21667
sS'DAQmxSetAODataXferMech'
p21668
((lp21669
S'int32'
p21670
ag14
a((S'taskHandle'
p21671
(lp21672
S'TaskHandle'
p21673
aNtp21674
(S'channel'
p21675
(lp21676
S'char'
p21677
a(lp21678
I-1
aaNtp21679
(S'data'
p21680
(lp21681
S'int32'
p21682
aNtp21683
tp21684
tp21685
sS'DAQmxGetScalePolyForwardCoeff'
p21686
((lp21687
S'int32'
p21688
ag14
a((S'scaleName'
p21689
(lp21690
S'char'
p21691
a(lp21692
I-1
aaNtp21693
(S'data'
p21694
(lp21695
S'float64'
p21696
ag22
aNtp21697
(S'arraySizeInSamples'
p21698
(lp21699
S'uInt32'
p21700
aNtp21701
tp21702
tp21703
sS'DAQmxResetAIChanCalTableScaledVals'
p21704
((lp21705
S'int32'
p21706
ag14
a((S'taskHandle'
p21707
(lp21708
S'TaskHandle'
p21709
aNtp21710
(S'channel'
p21711
(lp21712
S'char'
p21713
a(lp21714
I-1
aaNtp21715
tp21716
tp21717
sS'DAQmxSetBufInputBufSize'
p21718
((lp21719
S'int32'
p21720
ag14
a((S'taskHandle'
p21721
(lp21722
S'TaskHandle'
p21723
aNtp21724
(S'data'
p21725
(lp21726
S'uInt32'
p21727
aNtp21728
tp21729
tp21730
sS'DAQmxGetReadChannelsToRead'
p21731
((lp21732
S'int32'
p21733
ag14
a((S'taskHandle'
p21734
(lp21735
S'TaskHandle'
p21736
aNtp21737
(S'data'
p21738
(lp21739
S'char'
p21740
ag22
aNtp21741
(S'bufferSize'
p21742
(lp21743
S'uInt32'
p21744
aNtp21745
tp21746
tp21747
sS'DAQmxResetCOCtrTimebaseRate'
p21748
((lp21749
S'int32'
p21750
ag14
a((S'taskHandle'
p21751
(lp21752
S'TaskHandle'
p21753
aNtp21754
(S'channel'
p21755
(lp21756
S'char'
p21757
a(lp21758
I-1
aaNtp21759
tp21760
tp21761
sS'DAQmxGetErrorString'
p21762
((lp21763
S'int32'
p21764
ag14
a((S'errorCode'
p21765
(lp21766
S'int32'
p21767
aNtp21768
(S'errorString'
p21769
(lp21770
S'char'
p21771
a(lp21772
I-1
aaNtp21773
(S'bufferSize'
p21774
(lp21775
S'uInt32'
p21776
aNtp21777
tp21778
tp21779
sS'DAQmxResetAnlgWinPauseTrigSrc'
p21780
((lp21781
S'int32'
p21782
ag14
a((S'taskHandle'
p21783
(lp21784
S'TaskHandle'
p21785
aNtp21786
tp21787
tp21788
sS'DAQmxResetAIRTDType'
p21789
((lp21790
S'int32'
p21791
ag14
a((S'taskHandle'
p21792
(lp21793
S'TaskHandle'
p21794
aNtp21795
(S'channel'
p21796
(lp21797
S'char'
p21798
a(lp21799
I-1
aaNtp21800
tp21801
tp21802
sS'DAQmxResetCICtrTimebaseDigSyncEnable'
p21803
((lp21804
S'int32'
p21805
ag14
a((S'taskHandle'
p21806
(lp21807
S'TaskHandle'
p21808
aNtp21809
(S'channel'
p21810
(lp21811
S'char'
p21812
a(lp21813
I-1
aaNtp21814
tp21815
tp21816
sS'DAQmxResetDelayFromSampClkDelay'
p21817
((lp21818
S'int32'
p21819
ag14
a((S'taskHandle'
p21820
(lp21821
S'TaskHandle'
p21822
aNtp21823
tp21824
tp21825
sS'DAQmxResetAIChanCalPolyForwardCoeff'
p21826
((lp21827
S'int32'
p21828
ag14
a((S'taskHandle'
p21829
(lp21830
S'TaskHandle'
p21831
aNtp21832
(S'channel'
p21833
(lp21834
S'char'
p21835
a(lp21836
I-1
aaNtp21837
tp21838
tp21839
sS'DAQmxResetSampClkDigFltrEnable'
p21840
((lp21841
S'int32'
p21842
ag14
a((S'taskHandle'
p21843
(lp21844
S'TaskHandle'
p21845
aNtp21846
tp21847
tp21848
sS'DAQmxResetAIBridgeShuntCalSelect'
p21849
((lp21850
S'int32'
p21851
ag14
a((S'taskHandle'
p21852
(lp21853
S'TaskHandle'
p21854
aNtp21855
(S'channel'
p21856
(lp21857
S'char'
p21858
a(lp21859
I-1
aaNtp21860
tp21861
tp21862
sS'DAQmxGetSwitchDevNumSwitchChans'
p21863
((lp21864
S'int32'
p21865
ag14
a((S'deviceName'
p21866
(lp21867
S'char'
p21868
a(lp21869
I-1
aaNtp21870
(S'data'
p21871
(lp21872
S'uInt32'
p21873
ag22
aNtp21874
tp21875
tp21876
sS'DAQmxSetAIBridgeShuntCalEnable'
p21877
((lp21878
S'int32'
p21879
ag14
a((S'taskHandle'
p21880
(lp21881
S'TaskHandle'
p21882
aNtp21883
(S'channel'
p21884
(lp21885
S'char'
p21886
a(lp21887
I-1
aaNtp21888
(S'data'
p21889
(lp21890
S'bool32'
p21891
aNtp21892
tp21893
tp21894
sS'DAQmxGetAnlgEdgeRefTrigSrc'
p21895
((lp21896
S'int32'
p21897
ag14
a((S'taskHandle'
p21898
(lp21899
S'TaskHandle'
p21900
aNtp21901
(S'data'
p21902
(lp21903
S'char'
p21904
ag22
aNtp21905
(S'bufferSize'
p21906
(lp21907
S'uInt32'
p21908
aNtp21909
tp21910
tp21911
sS'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate'
p21912
((lp21913
S'int32'
p21914
ag14
a((S'taskHandle'
p21915
(lp21916
S'TaskHandle'
p21917
aNtp21918
tp21919
tp21920
sS'DAQmxSetAnlgLvlPauseTrigWhen'
p21921
((lp21922
S'int32'
p21923
ag14
a((S'taskHandle'
p21924
(lp21925
S'TaskHandle'
p21926
aNtp21927
(S'data'
p21928
(lp21929
S'int32'
p21930
aNtp21931
tp21932
tp21933
sS'DAQmxGetWriteRawDataWidth'
p21934
((lp21935
S'int32'
p21936
ag14
a((S'taskHandle'
p21937
(lp21938
S'TaskHandle'
p21939
aNtp21940
(S'data'
p21941
(lp21942
S'uInt32'
p21943
ag22
aNtp21944
tp21945
tp21946
sS'DAQmxResetAdvTrigType'
p21947
((lp21948
S'int32'
p21949
ag14
a((S'taskHandle'
p21950
(lp21951
S'TaskHandle'
p21952
aNtp21953
tp21954
tp21955
sS'DAQmxReadBinaryU16'
p21956
((lp21957
S'int32'
p21958
ag14
a((S'taskHandle'
p21959
(lp21960
S'TaskHandle'
p21961
aNtp21962
(S'numSampsPerChan'
p21963
(lp21964
S'int32'
p21965
aNtp21966
(S'timeout'
p21967
(lp21968
S'float64'
p21969
aNtp21970
(S'fillMode'
p21971
(lp21972
S'bool32'
p21973
aNtp21974
(S'readArray'
p21975
(lp21976
S'uInt16'
p21977
a(lp21978
I-1
aaNtp21979
(S'arraySizeInSamps'
p21980
(lp21981
S'uInt32'
p21982
aNtp21983
(S'sampsPerChanRead'
p21984
(lp21985
S'int32'
p21986
ag22
aNtp21987
(S'reserved'
p21988
(lp21989
S'bool32'
p21990
ag22
aNtp21991
tp21992
tp21993
sS'DAQmxResetExportedCtrOutEventOutputTerm'
p21994
((lp21995
S'int32'
p21996
ag14
a((S'taskHandle'
p21997
(lp21998
S'TaskHandle'
p21999
aNtp22000
tp22001
tp22002
sS'DAQmxGetCOPulseFreq'
p22003
((lp22004
S'int32'
p22005
ag14
a((S'taskHandle'
p22006
(lp22007
S'TaskHandle'
p22008
aNtp22009
(S'channel'
p22010
(lp22011
S'char'
p22012
a(lp22013
I-1
aaNtp22014
(S'data'
p22015
(lp22016
S'float64'
p22017
ag22
aNtp22018
tp22019
tp22020
sS'DAQmxSetCICountEdgesInitialCnt'
p22021
((lp22022
S'int32'
p22023
ag14
a((S'taskHandle'
p22024
(lp22025
S'TaskHandle'
p22026
aNtp22027
(S'channel'
p22028
(lp22029
S'char'
p22030
a(lp22031
I-1
aaNtp22032
(S'data'
p22033
(lp22034
S'uInt32'
p22035
aNtp22036
tp22037
tp22038
sS'DAQmxInitExtCal'
p22039
((lp22040
S'int32'
p22041
ag14
a((S'deviceName'
p22042
(lp22043
S'char'
p22044
a(lp22045
I-1
aaNtp22046
(S'password'
p22047
(lp22048
S'char'
p22049
a(lp22050
I-1
aaNtp22051
(S'calHandle'
p22052
(lp22053
S'uInt32'
p22054
ag22
aNtp22055
tp22056
tp22057
sS'DAQmxGetSyncPulseMinDelayToStart'
p22058
((lp22059
S'int32'
p22060
ag14
a((S'taskHandle'
p22061
(lp22062
S'TaskHandle'
p22063
aNtp22064
(S'data'
p22065
(lp22066
S'float64'
p22067
ag22
aNtp22068
tp22069
tp22070
sS'DAQmxSetExportedAdvCmpltEventDelay'
p22071
((lp22072
S'int32'
p22073
ag14
a((S'taskHandle'
p22074
(lp22075
S'TaskHandle'
p22076
aNtp22077
(S'data'
p22078
(lp22079
S'float64'
p22080
aNtp22081
tp22082
tp22083
sS'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate'
p22084
((lp22085
S'int32'
p22086
ag14
a((S'taskHandle'
p22087
(lp22088
S'TaskHandle'
p22089
aNtp22090
(S'channel'
p22091
(lp22092
S'char'
p22093
a(lp22094
I-1
aaNtp22095
(S'data'
p22096
(lp22097
S'float64'
p22098
ag22
aNtp22099
tp22100
tp22101
sS'DAQmxConfigureTEDS'
p22102
((lp22103
S'int32'
p22104
ag14
a((S'physicalChannel'
p22105
(lp22106
S'char'
p22107
a(lp22108
I-1
aaNtp22109
(S'filePath'
p22110
(lp22111
S'char'
p22112
a(lp22113
I-1
aaNtp22114
tp22115
tp22116
sS'DAQmxResetDigEdgeRefTrigEdge'
p22117
((lp22118
S'int32'
p22119
ag14
a((S'taskHandle'
p22120
(lp22121
S'TaskHandle'
p22122
aNtp22123
tp22124
tp22125
sS'DAQmxResetAnlgWinRefTrigCoupling'
p22126
((lp22127
S'int32'
p22128
ag14
a((S'taskHandle'
p22129
(lp22130
S'TaskHandle'
p22131
aNtp22132
tp22133
tp22134
sS'DAQmxRegisterDoneEvent'
p22135
((lp22136
S'int32'
p22137
ag14
a((S'task'
p22138
(lp22139
S'TaskHandle'
p22140
aNtp22141
(S'options'
p22142
(lp22143
S'uInt32'
p22144
aNtp22145
(S'callbackFunction'
p22146
(lp22147
S'DAQmxDoneEventCallbackPtr'
p22148
aNtp22149
(S'callbackData'
p22150
(lp22151
S'void'
p22152
ag22
aNtp22153
tp22154
tp22155
sS'DAQmxGetExportedHshkEventPulsePolarity'
p22156
((lp22157
S'int32'
p22158
ag14
a((S'taskHandle'
p22159
(lp22160
S'TaskHandle'
p22161
aNtp22162
(S'data'
p22163
(lp22164
S'int32'
p22165
ag22
aNtp22166
tp22167
tp22168
sS'DAQmxGetSwitchScanWaitingForAdv'
p22169
((lp22170
S'int32'
p22171
ag14
a((S'taskHandle'
p22172
(lp22173
S'TaskHandle'
p22174
aNtp22175
(S'data'
p22176
(lp22177
S'bool32'
p22178
ag22
aNtp22179
tp22180
tp22181
sS'DAQmxSaveScale'
p22182
((lp22183
S'int32'
p22184
ag14
a((S'scaleName'
p22185
(lp22186
S'char'
p22187
a(lp22188
I-1
aaNtp22189
(S'saveAs'
p22190
(lp22191
S'char'
p22192
a(lp22193
I-1
aaNtp22194
(S'author'
p22195
(lp22196
S'char'
p22197
a(lp22198
I-1
aaNtp22199
(S'options'
p22200
(lp22201
S'uInt32'
p22202
aNtp22203
tp22204
tp22205
sS'DAQmxSetExportedRefTrigOutputTerm'
p22206
((lp22207
S'int32'
p22208
ag14
a((S'taskHandle'
p22209
(lp22210
S'TaskHandle'
p22211
aNtp22212
(S'data'
p22213
(lp22214
S'char'
p22215
ag22
aNtp22216
tp22217
tp22218
sS'DAQmxGetCOPulseTimeUnits'
p22219
((lp22220
S'int32'
p22221
ag14
a((S'taskHandle'
p22222
(lp22223
S'TaskHandle'
p22224
aNtp22225
(S'channel'
p22226
(lp22227
S'char'
p22228
a(lp22229
I-1
aaNtp22230
(S'data'
p22231
(lp22232
S'int32'
p22233
ag22
aNtp22234
tp22235
tp22236
sS'DAQmxResetAOVoltageUnits'
p22237
((lp22238
S'int32'
p22239
ag14
a((S'taskHandle'
p22240
(lp22241
S'TaskHandle'
p22242
aNtp22243
(S'channel'
p22244
(lp22245
S'char'
p22246
a(lp22247
I-1
aaNtp22248
tp22249
tp22250
sS'DAQmxSetRefTrigType'
p22251
((lp22252
S'int32'
p22253
ag14
a((S'taskHandle'
p22254
(lp22255
S'TaskHandle'
p22256
aNtp22257
(S'data'
p22258
(lp22259
S'int32'
p22260
aNtp22261
tp22262
tp22263
sS'DAQmxResetAODACOffsetVal'
p22264
((lp22265
S'int32'
p22266
ag14
a((S'taskHandle'
p22267
(lp22268
S'TaskHandle'
p22269
aNtp22270
(S'channel'
p22271
(lp22272
S'char'
p22273
a(lp22274
I-1
aaNtp22275
tp22276
tp22277
sS'DAQmxGetSwitchChanMaxACSwitchCurrent'
p22278
((lp22279
S'int32'
p22280
ag14
a((S'switchChannelName'
p22281
(lp22282
S'char'
p22283
a(lp22284
I-1
aaNtp22285
(S'data'
p22286
(lp22287
S'float64'
p22288
ag22
aNtp22289
tp22290
tp22291
sS'DAQmxResetDigLvlPauseTrigWhen'
p22292
((lp22293
S'int32'
p22294
ag14
a((S'taskHandle'
p22295
(lp22296
S'TaskHandle'
p22297
aNtp22298
tp22299
tp22300
sS'DAQmxCreateTEDSAIThrmstrChanIex'
p22301
((lp22302
S'int32'
p22303
ag14
a((S'taskHandle'
p22304
(lp22305
S'TaskHandle'
p22306
aNtp22307
(S'physicalChannel'
p22308
(lp22309
S'char'
p22310
a(lp22311
I-1
aaNtp22312
(S'nameToAssignToChannel'
p22313
(lp22314
S'char'
p22315
a(lp22316
I-1
aaNtp22317
(S'minVal'
p22318
(lp22319
S'float64'
p22320
aNtp22321
(S'maxVal'
p22322
(lp22323
S'float64'
p22324
aNtp22325
(S'units'
p22326
(lp22327
S'int32'
p22328
aNtp22329
(S'resistanceConfig'
p22330
(lp22331
S'int32'
p22332
aNtp22333
(S'currentExcitSource'
p22334
(lp22335
S'int32'
p22336
aNtp22337
(S'currentExcitVal'
p22338
(lp22339
S'float64'
p22340
aNtp22341
tp22342
tp22343
sS'DAQmxGetAIChanCalEnableCal'
p22344
((lp22345
S'int32'
p22346
ag14
a((S'taskHandle'
p22347
(lp22348
S'TaskHandle'
p22349
aNtp22350
(S'channel'
p22351
(lp22352
S'char'
p22353
a(lp22354
I-1
aaNtp22355
(S'data'
p22356
(lp22357
S'bool32'
p22358
ag22
aNtp22359
tp22360
tp22361
sS'DAQmxGetAOEnhancedImageRejectionEnable'
p22362
((lp22363
S'int32'
p22364
ag14
a((S'taskHandle'
p22365
(lp22366
S'TaskHandle'
p22367
aNtp22368
(S'channel'
p22369
(lp22370
S'char'
p22371
a(lp22372
I-1
aaNtp22373
(S'data'
p22374
(lp22375
S'bool32'
p22376
ag22
aNtp22377
tp22378
tp22379
sS'DAQmxResetCIFreqStartingEdge'
p22380
((lp22381
S'int32'
p22382
ag14
a((S'taskHandle'
p22383
(lp22384
S'TaskHandle'
p22385
aNtp22386
(S'channel'
p22387
(lp22388
S'char'
p22389
a(lp22390
I-1
aaNtp22391
tp22392
tp22393
sS'DAQmxSetDigPatternStartTrigPattern'
p22394
((lp22395
S'int32'
p22396
ag14
a((S'taskHandle'
p22397
(lp22398
S'TaskHandle'
p22399
aNtp22400
(S'data'
p22401
(lp22402
S'char'
p22403
ag22
aNtp22404
tp22405
tp22406
sS'DAQmxSetExportedHshkEventInterlockedAssertedLvl'
p22407
((lp22408
S'int32'
p22409
ag14
a((S'taskHandle'
p22410
(lp22411
S'TaskHandle'
p22412
aNtp22413
(S'data'
p22414
(lp22415
S'int32'
p22416
aNtp22417
tp22418
tp22419
sS'DAQmxResetAIChanCalApplyCalIfExp'
p22420
((lp22421
S'int32'
p22422
ag14
a((S'taskHandle'
p22423
(lp22424
S'TaskHandle'
p22425
aNtp22426
(S'channel'
p22427
(lp22428
S'char'
p22429
a(lp22430
I-1
aaNtp22431
tp22432
tp22433
sS'DAQmxSetAOUseOnlyOnBrdMem'
p22434
((lp22435
S'int32'
p22436
ag14
a((S'taskHandle'
p22437
(lp22438
S'TaskHandle'
p22439
aNtp22440
(S'channel'
p22441
(lp22442
S'char'
p22443
a(lp22444
I-1
aaNtp22445
(S'data'
p22446
(lp22447
S'bool32'
p22448
aNtp22449
tp22450
tp22451
sS'DAQmxGetCIFreqStartingEdge'
p22452
((lp22453
S'int32'
p22454
ag14
a((S'taskHandle'
p22455
(lp22456
S'TaskHandle'
p22457
aNtp22458
(S'channel'
p22459
(lp22460
S'char'
p22461
a(lp22462
I-1
aaNtp22463
(S'data'
p22464
(lp22465
S'int32'
p22466
ag22
aNtp22467
tp22468
tp22469
sS'DAQmxSetCICtrTimebaseDigSyncEnable'
p22470
((lp22471
S'int32'
p22472
ag14
a((S'taskHandle'
p22473
(lp22474
S'TaskHandle'
p22475
aNtp22476
(S'channel'
p22477
(lp22478
S'char'
p22479
a(lp22480
I-1
aaNtp22481
(S'data'
p22482
(lp22483
S'bool32'
p22484
aNtp22485
tp22486
tp22487
sS'DAQmxGetAnlgWinRefTrigWhen'
p22488
((lp22489
S'int32'
p22490
ag14
a((S'taskHandle'
p22491
(lp22492
S'TaskHandle'
p22493
aNtp22494
(S'data'
p22495
(lp22496
S'int32'
p22497
ag22
aNtp22498
tp22499
tp22500
sS'DAQmxResetAnlgWinPauseTrigTop'
p22501
((lp22502
S'int32'
p22503
ag14
a((S'taskHandle'
p22504
(lp22505
S'TaskHandle'
p22506
aNtp22507
tp22508
tp22509
sS'DAQmxGetExportedCtrOutEventOutputTerm'
p22510
((lp22511
S'int32'
p22512
ag14
a((S'taskHandle'
p22513
(lp22514
S'TaskHandle'
p22515
aNtp22516
(S'data'
p22517
(lp22518
S'char'
p22519
ag22
aNtp22520
(S'bufferSize'
p22521
(lp22522
S'uInt32'
p22523
aNtp22524
tp22525
tp22526
sS'DAQmxSetAnlgEdgeStartTrigLvl'
p22527
((lp22528
S'int32'
p22529
ag14
a((S'taskHandle'
p22530
(lp22531
S'TaskHandle'
p22532
aNtp22533
(S'data'
p22534
(lp22535
S'float64'
p22536
aNtp22537
tp22538
tp22539
sS'DAQmxSetAODACRngLow'
p22540
((lp22541
S'int32'
p22542
ag14
a((S'taskHandle'
p22543
(lp22544
S'TaskHandle'
p22545
aNtp22546
(S'channel'
p22547
(lp22548
S'char'
p22549
a(lp22550
I-1
aaNtp22551
(S'data'
p22552
(lp22553
S'float64'
p22554
aNtp22555
tp22556
tp22557
sS'DAQmxCloseExtCal'
p22558
((lp22559
S'int32'
p22560
ag14
a((S'calHandle'
p22561
(lp22562
S'uInt32'
p22563
aNtp22564
(S'action'
p22565
(lp22566
S'int32'
p22567
aNtp22568
tp22569
tp22570
sS'DAQmxResetPauseTrigType'
p22571
((lp22572
S'int32'
p22573
ag14
a((S'taskHandle'
p22574
(lp22575
S'TaskHandle'
p22576
aNtp22577
tp22578
tp22579
sS'DAQmxGetAnlgWinRefTrigTop'
p22580
((lp22581
S'int32'
p22582
ag14
a((S'taskHandle'
p22583
(lp22584
S'TaskHandle'
p22585
aNtp22586
(S'data'
p22587
(lp22588
S'float64'
p22589
ag22
aNtp22590
tp22591
tp22592
sS'DAQmxGetCICustomScaleName'
p22593
((lp22594
S'int32'
p22595
ag14
a((S'taskHandle'
p22596
(lp22597
S'TaskHandle'
p22598
aNtp22599
(S'channel'
p22600
(lp22601
S'char'
p22602
a(lp22603
I-1
aaNtp22604
(S'data'
p22605
(lp22606
S'char'
p22607
ag22
aNtp22608
(S'bufferSize'
p22609
(lp22610
S'uInt32'
p22611
aNtp22612
tp22613
tp22614
sS'DAQmxResetExportedChangeDetectEventOutputTerm'
p22615
((lp22616
S'int32'
p22617
ag14
a((S'taskHandle'
p22618
(lp22619
S'TaskHandle'
p22620
aNtp22621
tp22622
tp22623
sS'DAQmxGetAODACRefAllowConnToGnd'
p22624
((lp22625
S'int32'
p22626
ag14
a((S'taskHandle'
p22627
(lp22628
S'TaskHandle'
p22629
aNtp22630
(S'channel'
p22631
(lp22632
S'char'
p22633
a(lp22634
I-1
aaNtp22635
(S'data'
p22636
(lp22637
S'bool32'
p22638
ag22
aNtp22639
tp22640
tp22641
sS'DAQmxSetAIMax'
p22642
((lp22643
S'int32'
p22644
ag14
a((S'taskHandle'
p22645
(lp22646
S'TaskHandle'
p22647
aNtp22648
(S'channel'
p22649
(lp22650
S'char'
p22651
a(lp22652
I-1
aaNtp22653
(S'data'
p22654
(lp22655
S'float64'
p22656
aNtp22657
tp22658
tp22659
sS'DAQmxGetExportedAIHoldCmpltEventPulsePolarity'
p22660
((lp22661
S'int32'
p22662
ag14
a((S'taskHandle'
p22663
(lp22664
S'TaskHandle'
p22665
aNtp22666
(S'data'
p22667
(lp22668
S'int32'
p22669
ag22
aNtp22670
tp22671
tp22672
sS'DAQmxCreateAIMicrophoneChan'
p22673
((lp22674
S'int32'
p22675
ag14
a((S'taskHandle'
p22676
(lp22677
S'TaskHandle'
p22678
aNtp22679
(S'physicalChannel'
p22680
(lp22681
S'char'
p22682
a(lp22683
I-1
aaNtp22684
(S'nameToAssignToChannel'
p22685
(lp22686
S'char'
p22687
a(lp22688
I-1
aaNtp22689
(S'terminalConfig'
p22690
(lp22691
S'int32'
p22692
aNtp22693
(S'units'
p22694
(lp22695
S'int32'
p22696
aNtp22697
(S'micSensitivity'
p22698
(lp22699
S'float64'
p22700
aNtp22701
(S'maxSndPressLevel'
p22702
(lp22703
S'float64'
p22704
aNtp22705
(S'currentExcitSource'
p22706
(lp22707
S'int32'
p22708
aNtp22709
(S'currentExcitVal'
p22710
(lp22711
S'float64'
p22712
aNtp22713
(S'customScaleName'
p22714
(lp22715
S'char'
p22716
a(lp22717
I-1
aaNtp22718
tp22719
tp22720
sS'DAQmxChangeExtCalPassword'
p22721
((lp22722
S'int32'
p22723
ag14
a((S'deviceName'
p22724
(lp22725
S'char'
p22726
a(lp22727
I-1
aaNtp22728
(S'password'
p22729
(lp22730
S'char'
p22731
a(lp22732
I-1
aaNtp22733
(S'newPassword'
p22734
(lp22735
S'char'
p22736
a(lp22737
I-1
aaNtp22738
tp22739
tp22740
sS'DAQmxGetTaskDevices'
p22741
((lp22742
S'int32'
p22743
ag14
a((S'taskHandle'
p22744
(lp22745
S'TaskHandle'
p22746
aNtp22747
(S'data'
p22748
(lp22749
S'char'
p22750
ag22
aNtp22751
(S'bufferSize'
p22752
(lp22753
S'uInt32'
p22754
aNtp22755
tp22756
tp22757
sS'DAQmxWriteBinaryI32'
p22758
((lp22759
S'int32'
p22760
ag14
a((S'taskHandle'
p22761
(lp22762
S'TaskHandle'
p22763
aNtp22764
(S'numSampsPerChan'
p22765
(lp22766
S'int32'
p22767
aNtp22768
(S'autoStart'
p22769
(lp22770
S'bool32'
p22771
aNtp22772
(S'timeout'
p22773
(lp22774
S'float64'
p22775
aNtp22776
(S'dataLayout'
p22777
(lp22778
S'bool32'
p22779
aNtp22780
(S'writeArray'
p22781
(lp22782
S'int32'
p22783
a(lp22784
I-1
aaNtp22785
(S'sampsPerChanWritten'
p22786
(lp22787
S'int32'
p22788
ag22
aNtp22789
(S'reserved'
p22790
(lp22791
S'bool32'
p22792
ag22
aNtp22793
tp22794
tp22795
sS'DAQmxResetAnlgEdgeRefTrigSrc'
p22796
((lp22797
S'int32'
p22798
ag14
a((S'taskHandle'
p22799
(lp22800
S'TaskHandle'
p22801
aNtp22802
tp22803
tp22804
sS'DAQmxGetAIExcitUseMultiplexed'
p22805
((lp22806
S'int32'
p22807
ag14
a((S'taskHandle'
p22808
(lp22809
S'TaskHandle'
p22810
aNtp22811
(S'channel'
p22812
(lp22813
S'char'
p22814
a(lp22815
I-1
aaNtp22816
(S'data'
p22817
(lp22818
S'bool32'
p22819
ag22
aNtp22820
tp22821
tp22822
sS'DAQmxSetCIAngEncoderPulsesPerRev'
p22823
((lp22824
S'int32'
p22825
ag14
a((S'taskHandle'
p22826
(lp22827
S'TaskHandle'
p22828
aNtp22829
(S'channel'
p22830
(lp22831
S'char'
p22832
a(lp22833
I-1
aaNtp22834
(S'data'
p22835
(lp22836
S'uInt32'
p22837
aNtp22838
tp22839
tp22840
sS'DAQmxSetAIStrainGageGageFactor'
p22841
((lp22842
S'int32'
p22843
ag14
a((S'taskHandle'
p22844
(lp22845
S'TaskHandle'
p22846
aNtp22847
(S'channel'
p22848
(lp22849
S'char'
p22850
a(lp22851
I-1
aaNtp22852
(S'data'
p22853
(lp22854
S'float64'
p22855
aNtp22856
tp22857
tp22858
sS'DAQmxGetTaskChannels'
p22859
((lp22860
S'int32'
p22861
ag14
a((S'taskHandle'
p22862
(lp22863
S'TaskHandle'
p22864
aNtp22865
(S'data'
p22866
(lp22867
S'char'
p22868
ag22
aNtp22869
(S'bufferSize'
p22870
(lp22871
S'uInt32'
p22872
aNtp22873
tp22874
tp22875
sS'DAQmxCfgOutputBuffer'
p22876
((lp22877
S'int32'
p22878
ag14
a((S'taskHandle'
p22879
(lp22880
S'TaskHandle'
p22881
aNtp22882
(S'numSampsPerChan'
p22883
(lp22884
S'uInt32'
p22885
aNtp22886
tp22887
tp22888
sS'DAQmxResetCILinEncoderInitialPos'
p22889
((lp22890
S'int32'
p22891
ag14
a((S'taskHandle'
p22892
(lp22893
S'TaskHandle'
p22894
aNtp22895
(S'channel'
p22896
(lp22897
S'char'
p22898
a(lp22899
I-1
aaNtp22900
tp22901
tp22902
sS'DAQmxGetAIEnhancedAliasRejectionEnable'
p22903
((lp22904
S'int32'
p22905
ag14
a((S'taskHandle'
p22906
(lp22907
S'TaskHandle'
p22908
aNtp22909
(S'channel'
p22910
(lp22911
S'char'
p22912
a(lp22913
I-1
aaNtp22914
(S'data'
p22915
(lp22916
S'bool32'
p22917
ag22
aNtp22918
tp22919
tp22920
sS'DAQmxSetSampClkRate'
p22921
((lp22922
S'int32'
p22923
ag14
a((S'taskHandle'
p22924
(lp22925
S'TaskHandle'
p22926
aNtp22927
(S'data'
p22928
(lp22929
S'float64'
p22930
aNtp22931
tp22932
tp22933
sS'DAQmxAdjust4225Cal'
p22934
((lp22935
S'int32'
p22936
ag14
a((S'calHandle'
p22937
(lp22938
S'uInt32'
p22939
aNtp22940
(S'channelNames'
p22941
(lp22942
S'char'
p22943
a(lp22944
I-1
aaNtp22945
(S'gain'
p22946
(lp22947
S'float64'
p22948
aNtp22949
(S'inputVal'
p22950
(lp22951
S'float64'
p22952
aNtp22953
tp22954
tp22955
sS'DAQmxResetWriteWaitMode'
p22956
((lp22957
S'int32'
p22958
ag14
a((S'taskHandle'
p22959
(lp22960
S'TaskHandle'
p22961
aNtp22962
tp22963
tp22964
sS'DAQmxGetAIDevScalingCoeff'
p22965
((lp22966
S'int32'
p22967
ag14
a((S'taskHandle'
p22968
(lp22969
S'TaskHandle'
p22970
aNtp22971
(S'channel'
p22972
(lp22973
S'char'
p22974
a(lp22975
I-1
aaNtp22976
(S'data'
p22977
(lp22978
S'float64'
p22979
ag22
aNtp22980
(S'arraySizeInSamples'
p22981
(lp22982
S'uInt32'
p22983
aNtp22984
tp22985
tp22986
sS'DAQmxGetDIDataXferMech'
p22987
((lp22988
S'int32'
p22989
ag14
a((S'taskHandle'
p22990
(lp22991
S'TaskHandle'
p22992
aNtp22993
(S'channel'
p22994
(lp22995
S'char'
p22996
a(lp22997
I-1
aaNtp22998
(S'data'
p22999
(lp23000
S'int32'
p23001
ag22
aNtp23002
tp23003
tp23004
sS'DAQmxGetSwitchChanMaxACVoltage'
p23005
((lp23006
S'int32'
p23007
ag14
a((S'switchChannelName'
p23008
(lp23009
S'char'
p23010
a(lp23011
I-1
aaNtp23012
(S'data'
p23013
(lp23014
S'float64'
p23015
ag22
aNtp23016
tp23017
tp23018
sS'DAQmxGetCICountEdgesDigSyncEnable'
p23019
((lp23020
S'int32'
p23021
ag14
a((S'taskHandle'
p23022
(lp23023
S'TaskHandle'
p23024
aNtp23025
(S'channel'
p23026
(lp23027
S'char'
p23028
a(lp23029
I-1
aaNtp23030
(S'data'
p23031
(lp23032
S'bool32'
p23033
ag22
aNtp23034
tp23035
tp23036
sS'DAQmxSetAOMin'
p23037
((lp23038
S'int32'
p23039
ag14
a((S'taskHandle'
p23040
(lp23041
S'TaskHandle'
p23042
aNtp23043
(S'channel'
p23044
(lp23045
S'char'
p23046
a(lp23047
I-1
aaNtp23048
(S'data'
p23049
(lp23050
S'float64'
p23051
aNtp23052
tp23053
tp23054
sS'DAQmxResetCIPeriodMeasTime'
p23055
((lp23056
S'int32'
p23057
ag14
a((S'taskHandle'
p23058
(lp23059
S'TaskHandle'
p23060
aNtp23061
(S'channel'
p23062
(lp23063
S'char'
p23064
a(lp23065
I-1
aaNtp23066
tp23067
tp23068
sS'DAQmxGetDevAOPhysicalChans'
p23069
((lp23070
S'int32'
p23071
ag14
a((S'device'
p23072
(lp23073
S'char'
p23074
a(lp23075
I-1
aaNtp23076
(S'data'
p23077
(lp23078
S'char'
p23079
ag22
aNtp23080
(S'bufferSize'
p23081
(lp23082
S'uInt32'
p23083
aNtp23084
tp23085
tp23086
sS'DAQmxResetAICustomScaleName'
p23087
((lp23088
S'int32'
p23089
ag14
a((S'taskHandle'
p23090
(lp23091
S'TaskHandle'
p23092
aNtp23093
(S'channel'
p23094
(lp23095
S'char'
p23096
a(lp23097
I-1
aaNtp23098
tp23099
tp23100
sS'DAQmxGetCalDevTemp'
p23101
((lp23102
S'int32'
p23103
ag14
a((S'deviceName'
p23104
(lp23105
S'char'
p23106
a(lp23107
I-1
aaNtp23108
(S'data'
p23109
(lp23110
S'float64'
p23111
ag22
aNtp23112
tp23113
tp23114
sS'DAQmxAdjust4220Cal'
p23115
((lp23116
S'int32'
p23117
ag14
a((S'calHandle'
p23118
(lp23119
S'uInt32'
p23120
aNtp23121
(S'channelNames'
p23122
(lp23123
S'char'
p23124
a(lp23125
I-1
aaNtp23126
(S'gain'
p23127
(lp23128
S'float64'
p23129
aNtp23130
(S'inputVal'
p23131
(lp23132
S'float64'
p23133
aNtp23134
tp23135
tp23136
sS'DAQmxResetAIACExcitWireMode'
p23137
((lp23138
S'int32'
p23139
ag14
a((S'taskHandle'
p23140
(lp23141
S'TaskHandle'
p23142
aNtp23143
(S'channel'
p23144
(lp23145
S'char'
p23146
a(lp23147
I-1
aaNtp23148
tp23149
tp23150
sS'DAQmxGetCIPulseWidthDigFltrMinPulseWidth'
p23151
((lp23152
S'int32'
p23153
ag14
a((S'taskHandle'
p23154
(lp23155
S'TaskHandle'
p23156
aNtp23157
(S'channel'
p23158
(lp23159
S'char'
p23160
a(lp23161
I-1
aaNtp23162
(S'data'
p23163
(lp23164
S'float64'
p23165
ag22
aNtp23166
tp23167
tp23168
sS'DAQmxSetInterlockedHshkTrigAssertedLvl'
p23169
((lp23170
S'int32'
p23171
ag14
a((S'taskHandle'
p23172
(lp23173
S'TaskHandle'
p23174
aNtp23175
(S'data'
p23176
(lp23177
S'int32'
p23178
aNtp23179
tp23180
tp23181
sS'DAQmxSetSampTimingType'
p23182
((lp23183
S'int32'
p23184
ag14
a((S'taskHandle'
p23185
(lp23186
S'TaskHandle'
p23187
aNtp23188
(S'data'
p23189
(lp23190
S'int32'
p23191
aNtp23192
tp23193
tp23194
sS'DAQmxResetSampClkTimebaseMasterTimebaseDiv'
p23195
((lp23196
S'int32'
p23197
ag14
a((S'taskHandle'
p23198
(lp23199
S'TaskHandle'
p23200
aNtp23201
tp23202
tp23203
sS'DAQmxResetOnDemandSimultaneousAOEnable'
p23204
((lp23205
S'int32'
p23206
ag14
a((S'taskHandle'
p23207
(lp23208
S'TaskHandle'
p23209
aNtp23210
tp23211
tp23212
sS'DAQmxGetAnlgEdgeStartTrigHyst'
p23213
((lp23214
S'int32'
p23215
ag14
a((S'taskHandle'
p23216
(lp23217
S'TaskHandle'
p23218
aNtp23219
(S'data'
p23220
(lp23221
S'float64'
p23222
ag22
aNtp23223
tp23224
tp23225
sS'DAQmxReadDigitalU16'
p23226
((lp23227
S'int32'
p23228
ag14
a((S'taskHandle'
p23229
(lp23230
S'TaskHandle'
p23231
aNtp23232
(S'numSampsPerChan'
p23233
(lp23234
S'int32'
p23235
aNtp23236
(S'timeout'
p23237
(lp23238
S'float64'
p23239
aNtp23240
(S'fillMode'
p23241
(lp23242
S'bool32'
p23243
aNtp23244
(S'readArray'
p23245
(lp23246
S'uInt16'
p23247
a(lp23248
I-1
aaNtp23249
(S'arraySizeInSamps'
p23250
(lp23251
S'uInt32'
p23252
aNtp23253
(S'sampsPerChanRead'
p23254
(lp23255
S'int32'
p23256
ag22
aNtp23257
(S'reserved'
p23258
(lp23259
S'bool32'
p23260
ag22
aNtp23261
tp23262
tp23263
sS'DAQmxSwitchConnect'
p23264
((lp23265
S'int32'
p23266
ag14
a((S'switchChannel1'
p23267
(lp23268
S'char'
p23269
a(lp23270
I-1
aaNtp23271
(S'switchChannel2'
p23272
(lp23273
S'char'
p23274
a(lp23275
I-1
aaNtp23276
(S'waitForSettling'
p23277
(lp23278
S'bool32'
p23279
aNtp23280
tp23281
tp23282
sS'DAQmxGetDigPatternStartTrigPattern'
p23283
((lp23284
S'int32'
p23285
ag14
a((S'taskHandle'
p23286
(lp23287
S'TaskHandle'
p23288
aNtp23289
(S'data'
p23290
(lp23291
S'char'
p23292
ag22
aNtp23293
(S'bufferSize'
p23294
(lp23295
S'uInt32'
p23296
aNtp23297
tp23298
tp23299
sS'DAQmxResetDigPatternRefTrigWhen'
p23300
((lp23301
S'int32'
p23302
ag14
a((S'taskHandle'
p23303
(lp23304
S'TaskHandle'
p23305
aNtp23306
tp23307
tp23308
sS'DAQmxGetCILinEncoderUnits'
p23309
((lp23310
S'int32'
p23311
ag14
a((S'taskHandle'
p23312
(lp23313
S'TaskHandle'
p23314
aNtp23315
(S'channel'
p23316
(lp23317
S'char'
p23318
a(lp23319
I-1
aaNtp23320
(S'data'
p23321
(lp23322
S'int32'
p23323
ag22
aNtp23324
tp23325
tp23326
sS'DAQmxGetAIBridgeNomResistance'
p23327
((lp23328
S'int32'
p23329
ag14
a((S'taskHandle'
p23330
(lp23331
S'TaskHandle'
p23332
aNtp23333
(S'channel'
p23334
(lp23335
S'char'
p23336
a(lp23337
I-1
aaNtp23338
(S'data'
p23339
(lp23340
S'float64'
p23341
ag22
aNtp23342
tp23343
tp23344
sS'DAQmxStartTask'
p23345
((lp23346
S'int32'
p23347
ag14
a((S'taskHandle'
p23348
(lp23349
S'TaskHandle'
p23350
aNtp23351
tp23352
tp23353
sS'DAQmxGetAnlgEdgeStartTrigSlope'
p23354
((lp23355
S'int32'
p23356
ag14
a((S'taskHandle'
p23357
(lp23358
S'TaskHandle'
p23359
aNtp23360
(S'data'
p23361
(lp23362
S'int32'
p23363
ag22
aNtp23364
tp23365
tp23366
sS'DAQmxGetReadOverloadedChansExist'
p23367
((lp23368
S'int32'
p23369
ag14
a((S'taskHandle'
p23370
(lp23371
S'TaskHandle'
p23372
aNtp23373
(S'data'
p23374
(lp23375
S'bool32'
p23376
ag22
aNtp23377
tp23378
tp23379
sS'DAQmxGetCIAngEncoderPulsesPerRev'
p23380
((lp23381
S'int32'
p23382
ag14
a((S'taskHandle'
p23383
(lp23384
S'TaskHandle'
p23385
aNtp23386
(S'channel'
p23387
(lp23388
S'char'
p23389
a(lp23390
I-1
aaNtp23391
(S'data'
p23392
(lp23393
S'uInt32'
p23394
ag22
aNtp23395
tp23396
tp23397
sS'DAQmxResetReadOffset'
p23398
((lp23399
S'int32'
p23400
ag14
a((S'taskHandle'
p23401
(lp23402
S'TaskHandle'
p23403
aNtp23404
tp23405
tp23406
sS'DAQmxGetRealTimeReportMissedSamp'
p23407
((lp23408
S'int32'
p23409
ag14
a((S'taskHandle'
p23410
(lp23411
S'TaskHandle'
p23412
aNtp23413
(S'data'
p23414
(lp23415
S'bool32'
p23416
ag22
aNtp23417
tp23418
tp23419
sS'DAQmxGetAIAtten'
p23420
((lp23421
S'int32'
p23422
ag14
a((S'taskHandle'
p23423
(lp23424
S'TaskHandle'
p23425
aNtp23426
(S'channel'
p23427
(lp23428
S'char'
p23429
a(lp23430
I-1
aaNtp23431
(S'data'
p23432
(lp23433
S'float64'
p23434
ag22
aNtp23435
tp23436
tp23437
sS'DAQmxGetAIChanCalDesc'
p23438
((lp23439
S'int32'
p23440
ag14
a((S'taskHandle'
p23441
(lp23442
S'TaskHandle'
p23443
aNtp23444
(S'channel'
p23445
(lp23446
S'char'
p23447
a(lp23448
I-1
aaNtp23449
(S'data'
p23450
(lp23451
S'char'
p23452
ag22
aNtp23453
(S'bufferSize'
p23454
(lp23455
S'uInt32'
p23456
aNtp23457
tp23458
tp23459
sS'DAQmxSwitchDisconnectMulti'
p23460
((lp23461
S'int32'
p23462
ag14
a((S'connectionList'
p23463
(lp23464
S'char'
p23465
a(lp23466
I-1
aaNtp23467
(S'waitForSettling'
p23468
(lp23469
S'bool32'
p23470
aNtp23471
tp23472
tp23473
sS'DAQmxSetStartTrigDelay'
p23474
((lp23475
S'int32'
p23476
ag14
a((S'taskHandle'
p23477
(lp23478
S'TaskHandle'
p23479
aNtp23480
(S'data'
p23481
(lp23482
S'float64'
p23483
aNtp23484
tp23485
tp23486
sS'DAQmxResetBufOutputBufSize'
p23487
((lp23488
S'int32'
p23489
ag14
a((S'taskHandle'
p23490
(lp23491
S'TaskHandle'
p23492
aNtp23493
tp23494
tp23495
sS'DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc'
p23496
((lp23497
S'int32'
p23498
ag14
a((S'taskHandle'
p23499
(lp23500
S'TaskHandle'
p23501
aNtp23502
(S'channel'
p23503
(lp23504
S'char'
p23505
a(lp23506
I-1
aaNtp23507
(S'data'
p23508
(lp23509
S'char'
p23510
ag22
aNtp23511
tp23512
tp23513
sS'DAQmxCfgAnlgEdgeRefTrig'
p23514
((lp23515
S'int32'
p23516
ag14
a((S'taskHandle'
p23517
(lp23518
S'TaskHandle'
p23519
aNtp23520
(S'triggerSource'
p23521
(lp23522
S'char'
p23523
a(lp23524
I-1
aaNtp23525
(S'triggerSlope'
p23526
(lp23527
S'int32'
p23528
aNtp23529
(S'triggerLevel'
p23530
(lp23531
S'float64'
p23532
aNtp23533
(S'pretriggerSamples'
p23534
(lp23535
S'uInt32'
p23536
aNtp23537
tp23538
tp23539
sS'DAQmxResetAIChanCalPolyReverseCoeff'
p23540
((lp23541
S'int32'
p23542
ag14
a((S'taskHandle'
p23543
(lp23544
S'TaskHandle'
p23545
aNtp23546
(S'channel'
p23547
(lp23548
S'char'
p23549
a(lp23550
I-1
aaNtp23551
tp23552
tp23553
sS'DAQmxGetExportedCtrOutEventOutputBehavior'
p23554
((lp23555
S'int32'
p23556
ag14
a((S'taskHandle'
p23557
(lp23558
S'TaskHandle'
p23559
aNtp23560
(S'data'
p23561
(lp23562
S'int32'
p23563
ag22
aNtp23564
tp23565
tp23566
sS'DAQmxWriteCtrFreqScalar'
p23567
((lp23568
S'int32'
p23569
ag14
a((S'taskHandle'
p23570
(lp23571
S'TaskHandle'
p23572
aNtp23573
(S'autoStart'
p23574
(lp23575
S'bool32'
p23576
aNtp23577
(S'timeout'
p23578
(lp23579
S'float64'
p23580
aNtp23581
(S'frequency'
p23582
(lp23583
S'float64'
p23584
aNtp23585
(S'dutyCycle'
p23586
(lp23587
S'float64'
p23588
aNtp23589
(S'reserved'
p23590
(lp23591
S'bool32'
p23592
ag22
aNtp23593
tp23594
tp23595
sS'DAQmxWriteToTEDSFromArray'
p23596
((lp23597
S'int32'
p23598
ag14
a((S'physicalChannel'
p23599
(lp23600
S'char'
p23601
a(lp23602
I-1
aaNtp23603
(S'bitStream'
p23604
(lp23605
S'uInt8'
p23606
a(lp23607
I-1
aaNtp23608
(S'arraySize'
p23609
(lp23610
S'uInt32'
p23611
aNtp23612
(S'basicTEDSOptions'
p23613
(lp23614
S'int32'
p23615
aNtp23616
tp23617
tp23618
sS'DAQmxSetAOGain'
p23619
((lp23620
S'int32'
p23621
ag14
a((S'taskHandle'
p23622
(lp23623
S'TaskHandle'
p23624
aNtp23625
(S'channel'
p23626
(lp23627
S'char'
p23628
a(lp23629
I-1
aaNtp23630
(S'data'
p23631
(lp23632
S'float64'
p23633
aNtp23634
tp23635
tp23636
sS'DAQmxSetAIRVDTUnits'
p23637
((lp23638
S'int32'
p23639
ag14
a((S'taskHandle'
p23640
(lp23641
S'TaskHandle'
p23642
aNtp23643
(S'channel'
p23644
(lp23645
S'char'
p23646
a(lp23647
I-1
aaNtp23648
(S'data'
p23649
(lp23650
S'int32'
p23651
aNtp23652
tp23653
tp23654
sS'DAQmxResetAODACOffsetExtSrc'
p23655
((lp23656
S'int32'
p23657
ag14
a((S'taskHandle'
p23658
(lp23659
S'TaskHandle'
p23660
aNtp23661
(S'channel'
p23662
(lp23663
S'char'
p23664
a(lp23665
I-1
aaNtp23666
tp23667
tp23668
sS'DAQmxSetAOIdleOutputBehavior'
p23669
((lp23670
S'int32'
p23671
ag14
a((S'taskHandle'
p23672
(lp23673
S'TaskHandle'
p23674
aNtp23675
(S'channel'
p23676
(lp23677
S'char'
p23678
a(lp23679
I-1
aaNtp23680
(S'data'
p23681
(lp23682
S'int32'
p23683
aNtp23684
tp23685
tp23686
sS'DAQmxSetAIAccelSensitivity'
p23687
((lp23688
S'int32'
p23689
ag14
a((S'taskHandle'
p23690
(lp23691
S'TaskHandle'
p23692
aNtp23693
(S'channel'
p23694
(lp23695
S'char'
p23696
a(lp23697
I-1
aaNtp23698
(S'data'
p23699
(lp23700
S'float64'
p23701
aNtp23702
tp23703
tp23704
sS'DAQmxSetCOPrescaler'
p23705
((lp23706
S'int32'
p23707
ag14
a((S'taskHandle'
p23708
(lp23709
S'TaskHandle'
p23710
aNtp23711
(S'channel'
p23712
(lp23713
S'char'
p23714
a(lp23715
I-1
aaNtp23716
(S'data'
p23717
(lp23718
S'uInt32'
p23719
aNtp23720
tp23721
tp23722
sS'DAQmxCreateAOVoltageChan'
p23723
((lp23724
S'int32'
p23725
ag14
a((S'taskHandle'
p23726
(lp23727
S'TaskHandle'
p23728
aNtp23729
(S'physicalChannel'
p23730
(lp23731
S'char'
p23732
a(lp23733
I-1
aaNtp23734
(S'nameToAssignToChannel'
p23735
(lp23736
S'char'
p23737
a(lp23738
I-1
aaNtp23739
(S'minVal'
p23740
(lp23741
S'float64'
p23742
aNtp23743
(S'maxVal'
p23744
(lp23745
S'float64'
p23746
aNtp23747
(S'units'
p23748
(lp23749
S'int32'
p23750
aNtp23751
(S'customScaleName'
p23752
(lp23753
S'char'
p23754
a(lp23755
I-1
aaNtp23756
tp23757
tp23758
sS'DAQmxSetDigEdgeStartTrigDigFltrEnable'
p23759
((lp23760
S'int32'
p23761
ag14
a((S'taskHandle'
p23762
(lp23763
S'TaskHandle'
p23764
aNtp23765
(S'data'
p23766
(lp23767
S'bool32'
p23768
aNtp23769
tp23770
tp23771
sS'DAQmxGetAIChanCalPolyReverseCoeff'
p23772
((lp23773
S'int32'
p23774
ag14
a((S'taskHandle'
p23775
(lp23776
S'TaskHandle'
p23777
aNtp23778
(S'channel'
p23779
(lp23780
S'char'
p23781
a(lp23782
I-1
aaNtp23783
(S'data'
p23784
(lp23785
S'float64'
p23786
ag22
aNtp23787
(S'arraySizeInSamples'
p23788
(lp23789
S'uInt32'
p23790
aNtp23791
tp23792
tp23793
sS'DAQmxGetExportedHshkEventInterlockedAssertedLvl'
p23794
((lp23795
S'int32'
p23796
ag14
a((S'taskHandle'
p23797
(lp23798
S'TaskHandle'
p23799
aNtp23800
(S'data'
p23801
(lp23802
S'int32'
p23803
ag22
aNtp23804
tp23805
tp23806
sS'DAQmxGetAIMicrophoneSensitivity'
p23807
((lp23808
S'int32'
p23809
ag14
a((S'taskHandle'
p23810
(lp23811
S'TaskHandle'
p23812
aNtp23813
(S'channel'
p23814
(lp23815
S'char'
p23816
a(lp23817
I-1
aaNtp23818
(S'data'
p23819
(lp23820
S'float64'
p23821
ag22
aNtp23822
tp23823
tp23824
sS'DAQmxSetExportedAdvCmpltEventOutputTerm'
p23825
((lp23826
S'int32'
p23827
ag14
a((S'taskHandle'
p23828
(lp23829
S'TaskHandle'
p23830
aNtp23831
(S'data'
p23832
(lp23833
S'char'
p23834
ag22
aNtp23835
tp23836
tp23837
sS'DAQmxGetSampClkRate'
p23838
((lp23839
S'int32'
p23840
ag14
a((S'taskHandle'
p23841
(lp23842
S'TaskHandle'
p23843
aNtp23844
(S'data'
p23845
(lp23846
S'float64'
p23847
ag22
aNtp23848
tp23849
tp23850
sS'DAQmxGetCalUserDefinedInfo'
p23851
((lp23852
S'int32'
p23853
ag14
a((S'deviceName'
p23854
(lp23855
S'char'
p23856
a(lp23857
I-1
aaNtp23858
(S'data'
p23859
(lp23860
S'char'
p23861
ag22
aNtp23862
(S'bufferSize'
p23863
(lp23864
S'uInt32'
p23865
aNtp23866
tp23867
tp23868
sS'DAQmxSetAIRTDA'
p23869
((lp23870
S'int32'
p23871
ag14
a((S'taskHandle'
p23872
(lp23873
S'TaskHandle'
p23874
aNtp23875
(S'channel'
p23876
(lp23877
S'char'
p23878
a(lp23879
I-1
aaNtp23880
(S'data'
p23881
(lp23882
S'float64'
p23883
aNtp23884
tp23885
tp23886
sS'DAQmxSetAIRTDC'
p23887
((lp23888
S'int32'
p23889
ag14
a((S'taskHandle'
p23890
(lp23891
S'TaskHandle'
p23892
aNtp23893
(S'channel'
p23894
(lp23895
S'char'
p23896
a(lp23897
I-1
aaNtp23898
(S'data'
p23899
(lp23900
S'float64'
p23901
aNtp23902
tp23903
tp23904
sS'DAQmxSetAIRTDB'
p23905
((lp23906
S'int32'
p23907
ag14
a((S'taskHandle'
p23908
(lp23909
S'TaskHandle'
p23910
aNtp23911
(S'channel'
p23912
(lp23913
S'char'
p23914
a(lp23915
I-1
aaNtp23916
(S'data'
p23917
(lp23918
S'float64'
p23919
aNtp23920
tp23921
tp23922
sS'DAQmxGetDevDOLines'
p23923
((lp23924
S'int32'
p23925
ag14
a((S'device'
p23926
(lp23927
S'char'
p23928
a(lp23929
I-1
aaNtp23930
(S'data'
p23931
(lp23932
S'char'
p23933
ag22
aNtp23934
(S'bufferSize'
p23935
(lp23936
S'uInt32'
p23937
aNtp23938
tp23939
tp23940
sS'DAQmxSetCIGPSSyncMethod'
p23941
((lp23942
S'int32'
p23943
ag14
a((S'taskHandle'
p23944
(lp23945
S'TaskHandle'
p23946
aNtp23947
(S'channel'
p23948
(lp23949
S'char'
p23950
a(lp23951
I-1
aaNtp23952
(S'data'
p23953
(lp23954
S'int32'
p23955
aNtp23956
tp23957
tp23958
sS'DAQmxSetRealTimeWriteRecoveryMode'
p23959
((lp23960
S'int32'
p23961
ag14
a((S'taskHandle'
p23962
(lp23963
S'TaskHandle'
p23964
aNtp23965
(S'data'
p23966
(lp23967
S'int32'
p23968
aNtp23969
tp23970
tp23971
sS'DAQmxSetCOCtrTimebaseRate'
p23972
((lp23973
S'int32'
p23974
ag14
a((S'taskHandle'
p23975
(lp23976
S'TaskHandle'
p23977
aNtp23978
(S'channel'
p23979
(lp23980
S'char'
p23981
a(lp23982
I-1
aaNtp23983
(S'data'
p23984
(lp23985
S'float64'
p23986
aNtp23987
tp23988
tp23989
sS'DAQmxGetAIRTDType'
p23990
((lp23991
S'int32'
p23992
ag14
a((S'taskHandle'
p23993
(lp23994
S'TaskHandle'
p23995
aNtp23996
(S'channel'
p23997
(lp23998
S'char'
p23999
a(lp24000
I-1
aaNtp24001
(S'data'
p24002
(lp24003
S'int32'
p24004
ag22
aNtp24005
tp24006
tp24007
sS'DAQmxSetDIInvertLines'
p24008
((lp24009
S'int32'
p24010
ag14
a((S'taskHandle'
p24011
(lp24012
S'TaskHandle'
p24013
aNtp24014
(S'channel'
p24015
(lp24016
S'char'
p24017
a(lp24018
I-1
aaNtp24019
(S'data'
p24020
(lp24021
S'bool32'
p24022
aNtp24023
tp24024
tp24025
sS'DAQmxResetSampClkSrc'
p24026
((lp24027
S'int32'
p24028
ag14
a((S'taskHandle'
p24029
(lp24030
S'TaskHandle'
p24031
aNtp24032
tp24033
tp24034
sS'DAQmxResetCITwoEdgeSepSecondEdge'
p24035
((lp24036
S'int32'
p24037
ag14
a((S'taskHandle'
p24038
(lp24039
S'TaskHandle'
p24040
aNtp24041
(S'channel'
p24042
(lp24043
S'char'
p24044
a(lp24045
I-1
aaNtp24046
tp24047
tp24048
sS'DAQmxResetDIInvertLines'
p24049
((lp24050
S'int32'
p24051
ag14
a((S'taskHandle'
p24052
(lp24053
S'TaskHandle'
p24054
aNtp24055
(S'channel'
p24056
(lp24057
S'char'
p24058
a(lp24059
I-1
aaNtp24060
tp24061
tp24062
sS'DAQmxSwitchGetMultiRelayCount'
p24063
((lp24064
S'int32'
p24065
ag14
a((S'relayList'
p24066
(lp24067
S'char'
p24068
a(lp24069
I-1
aaNtp24070
(S'count'
p24071
(lp24072
S'uInt32'
p24073
a(lp24074
I-1
aaNtp24075
(S'countArraySize'
p24076
(lp24077
S'uInt32'
p24078
aNtp24079
(S'numRelayCountsRead'
p24080
(lp24081
S'uInt32'
p24082
ag22
aNtp24083
tp24084
tp24085
sS'DAQmxSetCICountEdgesTerm'
p24086
((lp24087
S'int32'
p24088
ag14
a((S'taskHandle'
p24089
(lp24090
S'TaskHandle'
p24091
aNtp24092
(S'channel'
p24093
(lp24094
S'char'
p24095
a(lp24096
I-1
aaNtp24097
(S'data'
p24098
(lp24099
S'char'
p24100
ag22
aNtp24101
tp24102
tp24103
sS'DAQmxSetAnlgWinStartTrigWhen'
p24104
((lp24105
S'int32'
p24106
ag14
a((S'taskHandle'
p24107
(lp24108
S'TaskHandle'
p24109
aNtp24110
(S'data'
p24111
(lp24112
S'int32'
p24113
aNtp24114
tp24115
tp24116
sS'DAQmxResetSampClkActiveEdge'
p24117
((lp24118
S'int32'
p24119
ag14
a((S'taskHandle'
p24120
(lp24121
S'TaskHandle'
p24122
aNtp24123
tp24124
tp24125
sS'DAQmxSwitchDisconnect'
p24126
((lp24127
S'int32'
p24128
ag14
a((S'switchChannel1'
p24129
(lp24130
S'char'
p24131
a(lp24132
I-1
aaNtp24133
(S'switchChannel2'
p24134
(lp24135
S'char'
p24136
a(lp24137
I-1
aaNtp24138
(S'waitForSettling'
p24139
(lp24140
S'bool32'
p24141
aNtp24142
tp24143
tp24144
sS'DAQmxSetCIPeriodDigFltrTimebaseRate'
p24145
((lp24146
S'int32'
p24147
ag14
a((S'taskHandle'
p24148
(lp24149
S'TaskHandle'
p24150
aNtp24151
(S'channel'
p24152
(lp24153
S'char'
p24154
a(lp24155
I-1
aaNtp24156
(S'data'
p24157
(lp24158
S'float64'
p24159
aNtp24160
tp24161
tp24162
sS'DAQmxResetAnlgWinRefTrigBtm'
p24163
((lp24164
S'int32'
p24165
ag14
a((S'taskHandle'
p24166
(lp24167
S'TaskHandle'
p24168
aNtp24169
tp24170
tp24171
sS'DAQmxResetMasterTimebaseSrc'
p24172
((lp24173
S'int32'
p24174
ag14
a((S'taskHandle'
p24175
(lp24176
S'TaskHandle'
p24177
aNtp24178
tp24179
tp24180
sS'DAQmxSetDigEdgeRefTrigEdge'
p24181
((lp24182
S'int32'
p24183
ag14
a((S'taskHandle'
p24184
(lp24185
S'TaskHandle'
p24186
aNtp24187
(S'data'
p24188
(lp24189
S'int32'
p24190
aNtp24191
tp24192
tp24193
sS'DAQmxResetWriteAttribute'
p24194
((lp24195
S'int32'
p24196
ag14
a((S'taskHandle'
p24197
(lp24198
S'TaskHandle'
p24199
aNtp24200
(S'attribute'
p24201
(lp24202
S'int32'
p24203
aNtp24204
tp24205
tp24206
sS'DAQmxGetCIEncoderZIndexVal'
p24207
((lp24208
S'int32'
p24209
ag14
a((S'taskHandle'
p24210
(lp24211
S'TaskHandle'
p24212
aNtp24213
(S'channel'
p24214
(lp24215
S'char'
p24216
a(lp24217
I-1
aaNtp24218
(S'data'
p24219
(lp24220
S'float64'
p24221
ag22
aNtp24222
tp24223
tp24224
sS'DAQmxSetAIBridgeBalanceFinePot'
p24225
((lp24226
S'int32'
p24227
ag14
a((S'taskHandle'
p24228
(lp24229
S'TaskHandle'
p24230
aNtp24231
(S'channel'
p24232
(lp24233
S'char'
p24234
a(lp24235
I-1
aaNtp24236
(S'data'
p24237
(lp24238
S'int32'
p24239
aNtp24240
tp24241
tp24242
sS'DAQmxSetRefClkRate'
p24243
((lp24244
S'int32'
p24245
ag14
a((S'taskHandle'
p24246
(lp24247
S'TaskHandle'
p24248
aNtp24249
(S'data'
p24250
(lp24251
S'float64'
p24252
aNtp24253
tp24254
tp24255
sS'DAQmxSetAILVDTSensitivityUnits'
p24256
((lp24257
S'int32'
p24258
ag14
a((S'taskHandle'
p24259
(lp24260
S'TaskHandle'
p24261
aNtp24262
(S'channel'
p24263
(lp24264
S'char'
p24265
a(lp24266
I-1
aaNtp24267
(S'data'
p24268
(lp24269
S'int32'
p24270
aNtp24271
tp24272
tp24273
sS'DAQmxCreateAIThrmstrChanIex'
p24274
((lp24275
S'int32'
p24276
ag14
a((S'taskHandle'
p24277
(lp24278
S'TaskHandle'
p24279
aNtp24280
(S'physicalChannel'
p24281
(lp24282
S'char'
p24283
a(lp24284
I-1
aaNtp24285
(S'nameToAssignToChannel'
p24286
(lp24287
S'char'
p24288
a(lp24289
I-1
aaNtp24290
(S'minVal'
p24291
(lp24292
S'float64'
p24293
aNtp24294
(S'maxVal'
p24295
(lp24296
S'float64'
p24297
aNtp24298
(S'units'
p24299
(lp24300
S'int32'
p24301
aNtp24302
(S'resistanceConfig'
p24303
(lp24304
S'int32'
p24305
aNtp24306
(S'currentExcitSource'
p24307
(lp24308
S'int32'
p24309
aNtp24310
(S'currentExcitVal'
p24311
(lp24312
S'float64'
p24313
aNtp24314
(g18392
(lp24315
S'float64'
p24316
aNtp24317
(g18396
(lp24318
S'float64'
p24319
aNtp24320
(g18400
(lp24321
S'float64'
p24322
aNtp24323
tp24324
tp24325
sS'DAQmxSetCOPulseFreq'
p24326
((lp24327
S'int32'
p24328
ag14
a((S'taskHandle'
p24329
(lp24330
S'TaskHandle'
p24331
aNtp24332
(S'channel'
p24333
(lp24334
S'char'
p24335
a(lp24336
I-1
aaNtp24337
(S'data'
p24338
(lp24339
S'float64'
p24340
aNtp24341
tp24342
tp24343
sS'DAQmxSetCITwoEdgeSepFirstTerm'
p24344
((lp24345
S'int32'
p24346
ag14
a((S'taskHandle'
p24347
(lp24348
S'TaskHandle'
p24349
aNtp24350
(S'channel'
p24351
(lp24352
S'char'
p24353
a(lp24354
I-1
aaNtp24355
(S'data'
p24356
(lp24357
S'char'
p24358
ag22
aNtp24359
tp24360
tp24361
sS'DAQmxResetCICountEdgesTerm'
p24362
((lp24363
S'int32'
p24364
ag14
a((S'taskHandle'
p24365
(lp24366
S'TaskHandle'
p24367
aNtp24368
(S'channel'
p24369
(lp24370
S'char'
p24371
a(lp24372
I-1
aaNtp24373
tp24374
tp24375
sS'DAQmxSetCIPrescaler'
p24376
((lp24377
S'int32'
p24378
ag14
a((S'taskHandle'
p24379
(lp24380
S'TaskHandle'
p24381
aNtp24382
(S'channel'
p24383
(lp24384
S'char'
p24385
a(lp24386
I-1
aaNtp24387
(S'data'
p24388
(lp24389
S'uInt32'
p24390
aNtp24391
tp24392
tp24393
sS'DAQmxGetCICtrTimebaseRate'
p24394
((lp24395
S'int32'
p24396
ag14
a((S'taskHandle'
p24397
(lp24398
S'TaskHandle'
p24399
aNtp24400
(S'channel'
p24401
(lp24402
S'char'
p24403
a(lp24404
I-1
aaNtp24405
(S'data'
p24406
(lp24407
S'float64'
p24408
ag22
aNtp24409
tp24410
tp24411
sS'DAQmxResetAIFreqThreshVoltage'
p24412
((lp24413
S'int32'
p24414
ag14
a((S'taskHandle'
p24415
(lp24416
S'TaskHandle'
p24417
aNtp24418
(S'channel'
p24419
(lp24420
S'char'
p24421
a(lp24422
I-1
aaNtp24423
tp24424
tp24425
sS'DAQmxSetCOCtrTimebaseDigSyncEnable'
p24426
((lp24427
S'int32'
p24428
ag14
a((S'taskHandle'
p24429
(lp24430
S'TaskHandle'
p24431
aNtp24432
(S'channel'
p24433
(lp24434
S'char'
p24435
a(lp24436
I-1
aaNtp24437
(S'data'
p24438
(lp24439
S'bool32'
p24440
aNtp24441
tp24442
tp24443
sS'DAQmxResetAOCustomScaleName'
p24444
((lp24445
S'int32'
p24446
ag14
a((S'taskHandle'
p24447
(lp24448
S'TaskHandle'
p24449
aNtp24450
(S'channel'
p24451
(lp24452
S'char'
p24453
a(lp24454
I-1
aaNtp24455
tp24456
tp24457
sS'DAQmxCalculateReversePolyCoeff'
p24458
((lp24459
S'int32'
p24460
ag14
a((S'forwardCoeffs'
p24461
(lp24462
S'float64'
p24463
a(lp24464
I-1
aaNtp24465
(S'numForwardCoeffsIn'
p24466
(lp24467
S'uInt32'
p24468
aNtp24469
(S'minValX'
p24470
(lp24471
S'float64'
p24472
aNtp24473
(S'maxValX'
p24474
(lp24475
S'float64'
p24476
aNtp24477
(S'numPointsToCompute'
p24478
(lp24479
S'int32'
p24480
aNtp24481
(S'reversePolyOrder'
p24482
(lp24483
S'int32'
p24484
aNtp24485
(S'reverseCoeffs'
p24486
(lp24487
S'float64'
p24488
a(lp24489
I-1
aaNtp24490
tp24491
tp24492
sS'DAQmxResetCISemiPeriodDigFltrTimebaseSrc'
p24493
((lp24494
S'int32'
p24495
ag14
a((S'taskHandle'
p24496
(lp24497
S'TaskHandle'
p24498
aNtp24499
(S'channel'
p24500
(lp24501
S'char'
p24502
a(lp24503
I-1
aaNtp24504
tp24505
tp24506
sS'DAQmxGetAIRTDA'
p24507
((lp24508
S'int32'
p24509
ag14
a((S'taskHandle'
p24510
(lp24511
S'TaskHandle'
p24512
aNtp24513
(S'channel'
p24514
(lp24515
S'char'
p24516
a(lp24517
I-1
aaNtp24518
(S'data'
p24519
(lp24520
S'float64'
p24521
ag22
aNtp24522
tp24523
tp24524
sS'DAQmxGetAIRTDC'
p24525
((lp24526
S'int32'
p24527
ag14
a((S'taskHandle'
p24528
(lp24529
S'TaskHandle'
p24530
aNtp24531
(S'channel'
p24532
(lp24533
S'char'
p24534
a(lp24535
I-1
aaNtp24536
(S'data'
p24537
(lp24538
S'float64'
p24539
ag22
aNtp24540
tp24541
tp24542
sS'DAQmxGetAIRTDB'
p24543
((lp24544
S'int32'
p24545
ag14
a((S'taskHandle'
p24546
(lp24547
S'TaskHandle'
p24548
aNtp24549
(S'channel'
p24550
(lp24551
S'char'
p24552
a(lp24553
I-1
aaNtp24554
(S'data'
p24555
(lp24556
S'float64'
p24557
ag22
aNtp24558
tp24559
tp24560
sS'DAQmxGetAOMin'
p24561
((lp24562
S'int32'
p24563
ag14
a((S'taskHandle'
p24564
(lp24565
S'TaskHandle'
p24566
aNtp24567
(S'channel'
p24568
(lp24569
S'char'
p24570
a(lp24571
I-1
aaNtp24572
(S'data'
p24573
(lp24574
S'float64'
p24575
ag22
aNtp24576
tp24577
tp24578
sS'DAQmxGetCOPulseDutyCyc'
p24579
((lp24580
S'int32'
p24581
ag14
a((S'taskHandle'
p24582
(lp24583
S'TaskHandle'
p24584
aNtp24585
(S'channel'
p24586
(lp24587
S'char'
p24588
a(lp24589
I-1
aaNtp24590
(S'data'
p24591
(lp24592
S'float64'
p24593
ag22
aNtp24594
tp24595
tp24596
sS'DAQmxGetAICurrentUnits'
p24597
((lp24598
S'int32'
p24599
ag14
a((S'taskHandle'
p24600
(lp24601
S'TaskHandle'
p24602
aNtp24603
(S'channel'
p24604
(lp24605
S'char'
p24606
a(lp24607
I-1
aaNtp24608
(S'data'
p24609
(lp24610
S'int32'
p24611
ag22
aNtp24612
tp24613
tp24614
sS'DAQmxGetAIChanCalTableScaledVals'
p24615
((lp24616
S'int32'
p24617
ag14
a((S'taskHandle'
p24618
(lp24619
S'TaskHandle'
p24620
aNtp24621
(S'channel'
p24622
(lp24623
S'char'
p24624
a(lp24625
I-1
aaNtp24626
(S'data'
p24627
(lp24628
S'float64'
p24629
ag22
aNtp24630
(S'arraySizeInSamples'
p24631
(lp24632
S'uInt32'
p24633
aNtp24634
tp24635
tp24636
sS'DAQmxGetAIImpedance'
p24637
((lp24638
S'int32'
p24639
ag14
a((S'taskHandle'
p24640
(lp24641
S'TaskHandle'
p24642
aNtp24643
(S'channel'
p24644
(lp24645
S'char'
p24646
a(lp24647
I-1
aaNtp24648
(S'data'
p24649
(lp24650
S'float64'
p24651
ag22
aNtp24652
tp24653
tp24654
sS'DAQmxResetCIGPSSyncMethod'
p24655
((lp24656
S'int32'
p24657
ag14
a((S'taskHandle'
p24658
(lp24659
S'TaskHandle'
p24660
aNtp24661
(S'channel'
p24662
(lp24663
S'char'
p24664
a(lp24665
I-1
aaNtp24666
tp24667
tp24668
sS'DAQmxResetAIStrainUnits'
p24669
((lp24670
S'int32'
p24671
ag14
a((S'taskHandle'
p24672
(lp24673
S'TaskHandle'
p24674
aNtp24675
(S'channel'
p24676
(lp24677
S'char'
p24678
a(lp24679
I-1
aaNtp24680
tp24681
tp24682
sS'DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate'
p24683
((lp24684
S'int32'
p24685
ag14
a((S'taskHandle'
p24686
(lp24687
S'TaskHandle'
p24688
aNtp24689
(S'data'
p24690
(lp24691
S'float64'
p24692
aNtp24693
tp24694
tp24695
sS'DAQmxResetDOUseOnlyOnBrdMem'
p24696
((lp24697
S'int32'
p24698
ag14
a((S'taskHandle'
p24699
(lp24700
S'TaskHandle'
p24701
aNtp24702
(S'channel'
p24703
(lp24704
S'char'
p24705
a(lp24706
I-1
aaNtp24707
tp24708
tp24709
sS'DAQmxGetCOPulseFreqInitialDelay'
p24710
((lp24711
S'int32'
p24712
ag14
a((S'taskHandle'
p24713
(lp24714
S'TaskHandle'
p24715
aNtp24716
(S'channel'
p24717
(lp24718
S'char'
p24719
a(lp24720
I-1
aaNtp24721
(S'data'
p24722
(lp24723
S'float64'
p24724
ag22
aNtp24725
tp24726
tp24727
sS'DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth'
p24728
((lp24729
S'int32'
p24730
ag14
a((S'taskHandle'
p24731
(lp24732
S'TaskHandle'
p24733
aNtp24734
tp24735
tp24736
sS'DAQmxSetExportedRdyForXferEventLvlActiveLvl'
p24737
((lp24738
S'int32'
p24739
ag14
a((S'taskHandle'
p24740
(lp24741
S'TaskHandle'
p24742
aNtp24743
(S'data'
p24744
(lp24745
S'int32'
p24746
aNtp24747
tp24748
tp24749
sS'DAQmxSetCIFreqMeasTime'
p24750
((lp24751
S'int32'
p24752
ag14
a((S'taskHandle'
p24753
(lp24754
S'TaskHandle'
p24755
aNtp24756
(S'channel'
p24757
(lp24758
S'char'
p24759
a(lp24760
I-1
aaNtp24761
(S'data'
p24762
(lp24763
S'float64'
p24764
aNtp24765
tp24766
tp24767
sS'DAQmxResetDigPatternStartTrigWhen'
p24768
((lp24769
S'int32'
p24770
ag14
a((S'taskHandle'
p24771
(lp24772
S'TaskHandle'
p24773
aNtp24774
tp24775
tp24776
sS'DAQmxSetCICountEdgesDirTerm'
p24777
((lp24778
S'int32'
p24779
ag14
a((S'taskHandle'
p24780
(lp24781
S'TaskHandle'
p24782
aNtp24783
(S'channel'
p24784
(lp24785
S'char'
p24786
a(lp24787
I-1
aaNtp24788
(S'data'
p24789
(lp24790
S'char'
p24791
ag22
aNtp24792
tp24793
tp24794
sS'DAQmxSetExportedSampClkOutputTerm'
p24795
((lp24796
S'int32'
p24797
ag14
a((S'taskHandle'
p24798
(lp24799
S'TaskHandle'
p24800
aNtp24801
(S'data'
p24802
(lp24803
S'char'
p24804
ag22
aNtp24805
tp24806
tp24807
sS'DAQmxSetStartTrigRetriggerable'
p24808
((lp24809
S'int32'
p24810
ag14
a((S'taskHandle'
p24811
(lp24812
S'TaskHandle'
p24813
aNtp24814
(S'data'
p24815
(lp24816
S'bool32'
p24817
aNtp24818
tp24819
tp24820
sS'DAQmxGetExportedRdyForXferEventLvlActiveLvl'
p24821
((lp24822
S'int32'
p24823
ag14
a((S'taskHandle'
p24824
(lp24825
S'TaskHandle'
p24826
aNtp24827
(S'data'
p24828
(lp24829
S'int32'
p24830
ag22
aNtp24831
tp24832
tp24833
sS'DAQmxResetAIRVDTSensitivity'
p24834
((lp24835
S'int32'
p24836
ag14
a((S'taskHandle'
p24837
(lp24838
S'TaskHandle'
p24839
aNtp24840
(S'channel'
p24841
(lp24842
S'char'
p24843
a(lp24844
I-1
aaNtp24845
tp24846
tp24847
sS'DAQmxSetAODACRngHigh'
p24848
((lp24849
S'int32'
p24850
ag14
a((S'taskHandle'
p24851
(lp24852
S'TaskHandle'
p24853
aNtp24854
(S'channel'
p24855
(lp24856
S'char'
p24857
a(lp24858
I-1
aaNtp24859
(S'data'
p24860
(lp24861
S'float64'
p24862
aNtp24863
tp24864
tp24865
sS'DAQmxSetCICtrTimebaseMasterTimebaseDiv'
p24866
((lp24867
S'int32'
p24868
ag14
a((S'taskHandle'
p24869
(lp24870
S'TaskHandle'
p24871
aNtp24872
(S'channel'
p24873
(lp24874
S'char'
p24875
a(lp24876
I-1
aaNtp24877
(S'data'
p24878
(lp24879
S'uInt32'
p24880
aNtp24881
tp24882
tp24883
sS'DAQmxResetCIFreqMeasTime'
p24884
((lp24885
S'int32'
p24886
ag14
a((S'taskHandle'
p24887
(lp24888
S'TaskHandle'
p24889
aNtp24890
(S'channel'
p24891
(lp24892
S'char'
p24893
a(lp24894
I-1
aaNtp24895
tp24896
tp24897
sS'DAQmxSetSwitchScanRepeatMode'
p24898
((lp24899
S'int32'
p24900
ag14
a((S'taskHandle'
p24901
(lp24902
S'TaskHandle'
p24903
aNtp24904
(S'data'
p24905
(lp24906
S'int32'
p24907
aNtp24908
tp24909
tp24910
sS'DAQmxGetReadReadAllAvailSamp'
p24911
((lp24912
S'int32'
p24913
ag14
a((S'taskHandle'
p24914
(lp24915
S'TaskHandle'
p24916
aNtp24917
(S'data'
p24918
(lp24919
S'bool32'
p24920
ag22
aNtp24921
tp24922
tp24923
sS'DAQmxGetDigEdgeStartTrigDigSyncEnable'
p24924
((lp24925
S'int32'
p24926
ag14
a((S'taskHandle'
p24927
(lp24928
S'TaskHandle'
p24929
aNtp24930
(S'data'
p24931
(lp24932
S'bool32'
p24933
ag22
aNtp24934
tp24935
tp24936
sS'DAQmxSetAIDataXferReqCond'
p24937
((lp24938
S'int32'
p24939
ag14
a((S'taskHandle'
p24940
(lp24941
S'TaskHandle'
p24942
aNtp24943
(S'channel'
p24944
(lp24945
S'char'
p24946
a(lp24947
I-1
aaNtp24948
(S'data'
p24949
(lp24950
S'int32'
p24951
aNtp24952
tp24953
tp24954
sS'DAQmxResetCIDataXferMech'
p24955
((lp24956
S'int32'
p24957
ag14
a((S'taskHandle'
p24958
(lp24959
S'TaskHandle'
p24960
aNtp24961
(S'channel'
p24962
(lp24963
S'char'
p24964
a(lp24965
I-1
aaNtp24966
tp24967
tp24968
sS'DAQmxResetDigEdgeStartTrigDigFltrEnable'
p24969
((lp24970
S'int32'
p24971
ag14
a((S'taskHandle'
p24972
(lp24973
S'TaskHandle'
p24974
aNtp24975
tp24976
tp24977
sS'DAQmxWriteCtrTicks'
p24978
((lp24979
S'int32'
p24980
ag14
a((S'taskHandle'
p24981
(lp24982
S'TaskHandle'
p24983
aNtp24984
(S'numSampsPerChan'
p24985
(lp24986
S'int32'
p24987
aNtp24988
(S'autoStart'
p24989
(lp24990
S'bool32'
p24991
aNtp24992
(S'timeout'
p24993
(lp24994
S'float64'
p24995
aNtp24996
(S'dataLayout'
p24997
(lp24998
S'bool32'
p24999
aNtp25000
(S'highTicks'
p25001
(lp25002
S'uInt32'
p25003
a(lp25004
I-1
aaNtp25005
(S'lowTicks'
p25006
(lp25007
S'uInt32'
p25008
a(lp25009
I-1
aaNtp25010
(S'numSampsPerChanWritten'
p25011
(lp25012
S'int32'
p25013
ag22
aNtp25014
(S'reserved'
p25015
(lp25016
S'bool32'
p25017
ag22
aNtp25018
tp25019
tp25020
sS'DAQmxGetDigEdgeStartTrigDigFltrEnable'
p25021
((lp25022
S'int32'
p25023
ag14
a((S'taskHandle'
p25024
(lp25025
S'TaskHandle'
p25026
aNtp25027
(S'data'
p25028
(lp25029
S'bool32'
p25030
ag22
aNtp25031
tp25032
tp25033
sS'DAQmxResetAnlgEdgeStartTrigLvl'
p25034
((lp25035
S'int32'
p25036
ag14
a((S'taskHandle'
p25037
(lp25038
S'TaskHandle'
p25039
aNtp25040
tp25041
tp25042
sS'DAQmxGetCIDupCountPrevent'
p25043
((lp25044
S'int32'
p25045
ag14
a((S'taskHandle'
p25046
(lp25047
S'TaskHandle'
p25048
aNtp25049
(S'channel'
p25050
(lp25051
S'char'
p25052
a(lp25053
I-1
aaNtp25054
(S'data'
p25055
(lp25056
S'bool32'
p25057
ag22
aNtp25058
tp25059
tp25060
sS'DAQmxResetCIPeriodDigFltrMinPulseWidth'
p25061
((lp25062
S'int32'
p25063
ag14
a((S'taskHandle'
p25064
(lp25065
S'TaskHandle'
p25066
aNtp25067
(S'channel'
p25068
(lp25069
S'char'
p25070
a(lp25071
I-1
aaNtp25072
tp25073
tp25074
sS'DAQmxGetScaleTablePreScaledVals'
p25075
((lp25076
S'int32'
p25077
ag14
a((S'scaleName'
p25078
(lp25079
S'char'
p25080
a(lp25081
I-1
aaNtp25082
(S'data'
p25083
(lp25084
S'float64'
p25085
ag22
aNtp25086
(S'arraySizeInSamples'
p25087
(lp25088
S'uInt32'
p25089
aNtp25090
tp25091
tp25092
sS'DAQmxGetCOPulseHighTicks'
p25093
((lp25094
S'int32'
p25095
ag14
a((S'taskHandle'
p25096
(lp25097
S'TaskHandle'
p25098
aNtp25099
(S'channel'
p25100
(lp25101
S'char'
p25102
a(lp25103
I-1
aaNtp25104
(S'data'
p25105
(lp25106
S'uInt32'
p25107
ag22
aNtp25108
tp25109
tp25110
sS'DAQmxGetWriteRelativeTo'
p25111
((lp25112
S'int32'
p25113
ag14
a((S'taskHandle'
p25114
(lp25115
S'TaskHandle'
p25116
aNtp25117
(S'data'
p25118
(lp25119
S'int32'
p25120
ag22
aNtp25121
tp25122
tp25123
sS'DAQmxSetAIExcitVoltageOrCurrent'
p25124
((lp25125
S'int32'
p25126
ag14
a((S'taskHandle'
p25127
(lp25128
S'TaskHandle'
p25129
aNtp25130
(S'channel'
p25131
(lp25132
S'char'
p25133
a(lp25134
I-1
aaNtp25135
(S'data'
p25136
(lp25137
S'int32'
p25138
aNtp25139
tp25140
tp25141
sS'DAQmxGetSampQuantSampPerChan'
p25142
((lp25143
S'int32'
p25144
ag14
a((S'taskHandle'
p25145
(lp25146
S'TaskHandle'
p25147
aNtp25148
(S'data'
p25149
(lp25150
S'uInt64'
p25151
ag22
aNtp25152
tp25153
tp25154
sS'DAQmxGetScaleMapScaledMax'
p25155
((lp25156
S'int32'
p25157
ag14
a((S'scaleName'
p25158
(lp25159
S'char'
p25160
a(lp25161
I-1
aaNtp25162
(S'data'
p25163
(lp25164
S'float64'
p25165
ag22
aNtp25166
tp25167
tp25168
sS'DAQmxGetSampClkDigFltrMinPulseWidth'
p25169
((lp25170
S'int32'
p25171
ag14
a((S'taskHandle'
p25172
(lp25173
S'TaskHandle'
p25174
aNtp25175
(S'data'
p25176
(lp25177
S'float64'
p25178
ag22
aNtp25179
tp25180
tp25181
sS'DAQmxSetAIDataXferCustomThreshold'
p25182
((lp25183
S'int32'
p25184
ag14
a((S'taskHandle'
p25185
(lp25186
S'TaskHandle'
p25187
aNtp25188
(S'channel'
p25189
(lp25190
S'char'
p25191
a(lp25192
I-1
aaNtp25193
(S'data'
p25194
(lp25195
S'uInt32'
p25196
aNtp25197
tp25198
tp25199
sS'DAQmxSetAICurrentUnits'
p25200
((lp25201
S'int32'
p25202
ag14
a((S'taskHandle'
p25203
(lp25204
S'TaskHandle'
p25205
aNtp25206
(S'channel'
p25207
(lp25208
S'char'
p25209
a(lp25210
I-1
aaNtp25211
(S'data'
p25212
(lp25213
S'int32'
p25214
aNtp25215
tp25216
tp25217
sS'DAQmxGetAOGain'
p25218
((lp25219
S'int32'
p25220
ag14
a((S'taskHandle'
p25221
(lp25222
S'TaskHandle'
p25223
aNtp25224
(S'channel'
p25225
(lp25226
S'char'
p25227
a(lp25228
I-1
aaNtp25229
(S'data'
p25230
(lp25231
S'float64'
p25232
ag22
aNtp25233
tp25234
tp25235
sS'DAQmxResetExportedHshkEventInterlockedAssertedLvl'
p25236
((lp25237
S'int32'
p25238
ag14
a((S'taskHandle'
p25239
(lp25240
S'TaskHandle'
p25241
aNtp25242
tp25243
tp25244
sS'DAQmxGetExportedStartTrigOutputTerm'
p25245
((lp25246
S'int32'
p25247
ag14
a((S'taskHandle'
p25248
(lp25249
S'TaskHandle'
p25250
aNtp25251
(S'data'
p25252
(lp25253
S'char'
p25254
ag22
aNtp25255
(S'bufferSize'
p25256
(lp25257
S'uInt32'
p25258
aNtp25259
tp25260
tp25261
sS'DAQmxGetCIAngEncoderInitialAngle'
p25262
((lp25263
S'int32'
p25264
ag14
a((S'taskHandle'
p25265
(lp25266
S'TaskHandle'
p25267
aNtp25268
(S'channel'
p25269
(lp25270
S'char'
p25271
a(lp25272
I-1
aaNtp25273
(S'data'
p25274
(lp25275
S'float64'
p25276
ag22
aNtp25277
tp25278
tp25279
sS'DAQmxClearTEDS'
p25280
((lp25281
S'int32'
p25282
ag14
a((S'physicalChannel'
p25283
(lp25284
S'char'
p25285
a(lp25286
I-1
aaNtp25287
tp25288
tp25289
sS'DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth'
p25290
((lp25291
S'int32'
p25292
ag14
a((S'taskHandle'
p25293
(lp25294
S'TaskHandle'
p25295
aNtp25296
(S'channel'
p25297
(lp25298
S'char'
p25299
a(lp25300
I-1
aaNtp25301
tp25302
tp25303
sS'DAQmxGetExportedAdvTrigPulseWidth'
p25304
((lp25305
S'int32'
p25306
ag14
a((S'taskHandle'
p25307
(lp25308
S'TaskHandle'
p25309
aNtp25310
(S'data'
p25311
(lp25312
S'float64'
p25313
ag22
aNtp25314
tp25315
tp25316
sS'DAQmxCfgAnlgWindowStartTrig'
p25317
((lp25318
S'int32'
p25319
ag14
a((S'taskHandle'
p25320
(lp25321
S'TaskHandle'
p25322
aNtp25323
(S'triggerSource'
p25324
(lp25325
S'char'
p25326
a(lp25327
I-1
aaNtp25328
(S'triggerWhen'
p25329
(lp25330
S'int32'
p25331
aNtp25332
(S'windowTop'
p25333
(lp25334
S'float64'
p25335
aNtp25336
(S'windowBottom'
p25337
(lp25338
S'float64'
p25339
aNtp25340
tp25341
tp25342
sS'DAQmxGetCOPulseLowTime'
p25343
((lp25344
S'int32'
p25345
ag14
a((S'taskHandle'
p25346
(lp25347
S'TaskHandle'
p25348
aNtp25349
(S'channel'
p25350
(lp25351
S'char'
p25352
a(lp25353
I-1
aaNtp25354
(S'data'
p25355
(lp25356
S'float64'
p25357
ag22
aNtp25358
tp25359
tp25360
sS'DAQmxSetAILVDTUnits'
p25361
((lp25362
S'int32'
p25363
ag14
a((S'taskHandle'
p25364
(lp25365
S'TaskHandle'
p25366
aNtp25367
(S'channel'
p25368
(lp25369
S'char'
p25370
a(lp25371
I-1
aaNtp25372
(S'data'
p25373
(lp25374
S'int32'
p25375
aNtp25376
tp25377
tp25378
sS'DAQmxSetExportedChangeDetectEventOutputTerm'
p25379
((lp25380
S'int32'
p25381
ag14
a((S'taskHandle'
p25382
(lp25383
S'TaskHandle'
p25384
aNtp25385
(S'data'
p25386
(lp25387
S'char'
p25388
ag22
aNtp25389
tp25390
tp25391
sS'DAQmxCfgDigPatternStartTrig'
p25392
((lp25393
S'int32'
p25394
ag14
a((S'taskHandle'
p25395
(lp25396
S'TaskHandle'
p25397
aNtp25398
(S'triggerSource'
p25399
(lp25400
S'char'
p25401
a(lp25402
I-1
aaNtp25403
(S'triggerPattern'
p25404
(lp25405
S'char'
p25406
a(lp25407
I-1
aaNtp25408
(S'triggerWhen'
p25409
(lp25410
S'int32'
p25411
aNtp25412
tp25413
tp25414
sS'DAQmxSetCIEncoderAInputDigFltrTimebaseSrc'
p25415
((lp25416
S'int32'
p25417
ag14
a((S'taskHandle'
p25418
(lp25419
S'TaskHandle'
p25420
aNtp25421
(S'channel'
p25422
(lp25423
S'char'
p25424
a(lp25425
I-1
aaNtp25426
(S'data'
p25427
(lp25428
S'char'
p25429
ag22
aNtp25430
tp25431
tp25432
sS'DAQmxAdjust4224Cal'
p25433
((lp25434
S'int32'
p25435
ag14
a((S'calHandle'
p25436
(lp25437
S'uInt32'
p25438
aNtp25439
(S'channelNames'
p25440
(lp25441
S'char'
p25442
a(lp25443
I-1
aaNtp25444
(S'gain'
p25445
(lp25446
S'float64'
p25447
aNtp25448
(S'inputVal'
p25449
(lp25450
S'float64'
p25451
aNtp25452
tp25453
tp25454
sS'DAQmxDisconnectTerms'
p25455
((lp25456
S'int32'
p25457
ag14
a((S'sourceTerminal'
p25458
(lp25459
S'char'
p25460
a(lp25461
I-1
aaNtp25462
(S'destinationTerminal'
p25463
(lp25464
S'char'
p25465
a(lp25466
I-1
aaNtp25467
tp25468
tp25469
sS'DAQmxResetExportedHshkEventPulsePolarity'
p25470
((lp25471
S'int32'
p25472
ag14
a((S'taskHandle'
p25473
(lp25474
S'TaskHandle'
p25475
aNtp25476
tp25477
tp25478
sS'DAQmxResetAIFreqHyst'
p25479
((lp25480
S'int32'
p25481
ag14
a((S'taskHandle'
p25482
(lp25483
S'TaskHandle'
p25484
aNtp25485
(S'channel'
p25486
(lp25487
S'char'
p25488
a(lp25489
I-1
aaNtp25490
tp25491
tp25492
sS'DAQmxGetWatchdogHasExpired'
p25493
((lp25494
S'int32'
p25495
ag14
a((S'taskHandle'
p25496
(lp25497
S'TaskHandle'
p25498
aNtp25499
(S'data'
p25500
(lp25501
S'bool32'
p25502
ag22
aNtp25503
tp25504
tp25505
sS'DAQmxResetAILowpassEnable'
p25506
((lp25507
S'int32'
p25508
ag14
a((S'taskHandle'
p25509
(lp25510
S'TaskHandle'
p25511
aNtp25512
(S'channel'
p25513
(lp25514
S'char'
p25515
a(lp25516
I-1
aaNtp25517
tp25518
tp25519
sS'DAQmxGetDITristate'
p25520
((lp25521
S'int32'
p25522
ag14
a((S'taskHandle'
p25523
(lp25524
S'TaskHandle'
p25525
aNtp25526
(S'channel'
p25527
(lp25528
S'char'
p25529
a(lp25530
I-1
aaNtp25531
(S'data'
p25532
(lp25533
S'bool32'
p25534
ag22
aNtp25535
tp25536
tp25537
sS'DAQmxGetCISemiPeriodTerm'
p25538
((lp25539
S'int32'
p25540
ag14
a((S'taskHandle'
p25541
(lp25542
S'TaskHandle'
p25543
aNtp25544
(S'channel'
p25545
(lp25546
S'char'
p25547
a(lp25548
I-1
aaNtp25549
(S'data'
p25550
(lp25551
S'char'
p25552
ag22
aNtp25553
(S'bufferSize'
p25554
(lp25555
S'uInt32'
p25556
aNtp25557
tp25558
tp25559
sS'DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth'
p25560
((lp25561
S'int32'
p25562
ag14
a((S'taskHandle'
p25563
(lp25564
S'TaskHandle'
p25565
aNtp25566
(S'channel'
p25567
(lp25568
S'char'
p25569
a(lp25570
I-1
aaNtp25571
(S'data'
p25572
(lp25573
S'float64'
p25574
ag22
aNtp25575
tp25576
tp25577
sS'DAQmxSetScalePolyForwardCoeff'
p25578
((lp25579
S'int32'
p25580
ag14
a((S'scaleName'
p25581
(lp25582
S'char'
p25583
a(lp25584
I-1
aaNtp25585
(S'data'
p25586
(lp25587
S'float64'
p25588
ag22
aNtp25589
(S'arraySizeInSamples'
p25590
(lp25591
S'uInt32'
p25592
aNtp25593
tp25594
tp25595
sS'DAQmxGetAILVDTUnits'
p25596
((lp25597
S'int32'
p25598
ag14
a((S'taskHandle'
p25599
(lp25600
S'TaskHandle'
p25601
aNtp25602
(S'channel'
p25603
(lp25604
S'char'
p25605
a(lp25606
I-1
aaNtp25607
(S'data'
p25608
(lp25609
S'int32'
p25610
ag22
aNtp25611
tp25612
tp25613
sS'DAQmxSetDigPatternStartTrigSrc'
p25614
((lp25615
S'int32'
p25616
ag14
a((S'taskHandle'
p25617
(lp25618
S'TaskHandle'
p25619
aNtp25620
(S'data'
p25621
(lp25622
S'char'
p25623
ag22
aNtp25624
tp25625
tp25626
sS'DAQmxSetAIResistanceCfg'
p25627
((lp25628
S'int32'
p25629
ag14
a((S'taskHandle'
p25630
(lp25631
S'TaskHandle'
p25632
aNtp25633
(S'channel'
p25634
(lp25635
S'char'
p25636
a(lp25637
I-1
aaNtp25638
(S'data'
p25639
(lp25640
S'int32'
p25641
aNtp25642
tp25643
tp25644
sS'DAQmxSetup1125Cal'
p25645
((lp25646
S'int32'
p25647
ag14
a((S'calHandle'
p25648
(lp25649
S'uInt32'
p25650
aNtp25651
(S'channelNames'
p25652
(lp25653
S'char'
p25654
a(lp25655
I-1
aaNtp25656
(S'gain'
p25657
(lp25658
S'float64'
p25659
aNtp25660
tp25661
tp25662
sS'DAQmxSetCOAutoIncrCnt'
p25663
((lp25664
S'int32'
p25665
ag14
a((S'taskHandle'
p25666
(lp25667
S'TaskHandle'
p25668
aNtp25669
(S'channel'
p25670
(lp25671
S'char'
p25672
a(lp25673
I-1
aaNtp25674
(S'data'
p25675
(lp25676
S'uInt32'
p25677
aNtp25678
tp25679
tp25680
sS'DAQmxResetDigPatternRefTrigPattern'
p25681
((lp25682
S'int32'
p25683
ag14
a((S'taskHandle'
p25684
(lp25685
S'TaskHandle'
p25686
aNtp25687
tp25688
tp25689
sS'DAQmxSwitchFindPath'
p25690
((lp25691
S'int32'
p25692
ag14
a((S'switchChannel1'
p25693
(lp25694
S'char'
p25695
a(lp25696
I-1
aaNtp25697
(S'switchChannel2'
p25698
(lp25699
S'char'
p25700
a(lp25701
I-1
aaNtp25702
(S'path'
p25703
(lp25704
S'char'
p25705
a(lp25706
I-1
aaNtp25707
(S'pathBufferSize'
p25708
(lp25709
S'uInt32'
p25710
aNtp25711
(S'pathStatus'
p25712
(lp25713
S'int32'
p25714
ag22
aNtp25715
tp25716
tp25717
sS'DAQmxSetBufOutputOnbrdBufSize'
p25718
((lp25719
S'int32'
p25720
ag14
a((S'taskHandle'
p25721
(lp25722
S'TaskHandle'
p25723
aNtp25724
(S'data'
p25725
(lp25726
S'uInt32'
p25727
aNtp25728
tp25729
tp25730
sS'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p25731
((lp25732
S'int32'
p25733
ag14
a((S'taskHandle'
p25734
(lp25735
S'TaskHandle'
p25736
aNtp25737
(S'channel'
p25738
(lp25739
S'char'
p25740
a(lp25741
I-1
aaNtp25742
(S'data'
p25743
(lp25744
S'char'
p25745
ag22
aNtp25746
tp25747
tp25748
sS'DAQmxGetCIEncoderZInputDigFltrTimebaseRate'
p25749
((lp25750
S'int32'
p25751
ag14
a((S'taskHandle'
p25752
(lp25753
S'TaskHandle'
p25754
aNtp25755
(S'channel'
p25756
(lp25757
S'char'
p25758
a(lp25759
I-1
aaNtp25760
(S'data'
p25761
(lp25762
S'float64'
p25763
ag22
aNtp25764
tp25765
tp25766
sS'DAQmxResetDigLvlPauseTrigDigSyncEnable'
p25767
((lp25768
S'int32'
p25769
ag14
a((S'taskHandle'
p25770
(lp25771
S'TaskHandle'
p25772
aNtp25773
tp25774
tp25775
sS'DAQmxGetCIEncoderBInputDigSyncEnable'
p25776
((lp25777
S'int32'
p25778
ag14
a((S'taskHandle'
p25779
(lp25780
S'TaskHandle'
p25781
aNtp25782
(S'channel'
p25783
(lp25784
S'char'
p25785
a(lp25786
I-1
aaNtp25787
(S'data'
p25788
(lp25789
S'bool32'
p25790
ag22
aNtp25791
tp25792
tp25793
sS'DAQmxSetAICurrentShuntLoc'
p25794
((lp25795
S'int32'
p25796
ag14
a((S'taskHandle'
p25797
(lp25798
S'TaskHandle'
p25799
aNtp25800
(S'channel'
p25801
(lp25802
S'char'
p25803
a(lp25804
I-1
aaNtp25805
(S'data'
p25806
(lp25807
S'int32'
p25808
aNtp25809
tp25810
tp25811
sS'DAQmxSetCIEncoderBInputTerm'
p25812
((lp25813
S'int32'
p25814
ag14
a((S'taskHandle'
p25815
(lp25816
S'TaskHandle'
p25817
aNtp25818
(S'channel'
p25819
(lp25820
S'char'
p25821
a(lp25822
I-1
aaNtp25823
(S'data'
p25824
(lp25825
S'char'
p25826
ag22
aNtp25827
tp25828
tp25829
sS'DAQmxRegisterEveryNSamplesEvent'
p25830
((lp25831
S'int32'
p25832
ag14
a((S'task'
p25833
(lp25834
S'TaskHandle'
p25835
aNtp25836
(S'everyNsamplesEventType'
p25837
(lp25838
S'int32'
p25839
aNtp25840
(S'nSamples'
p25841
(lp25842
S'uInt32'
p25843
aNtp25844
(S'options'
p25845
(lp25846
S'uInt32'
p25847
aNtp25848
(S'callbackFunction'
p25849
(lp25850
S'DAQmxEveryNSamplesEventCallbackPtr'
p25851
aNtp25852
(S'callbackData'
p25853
(lp25854
S'void'
p25855
ag22
aNtp25856
tp25857
tp25858
sS'DAQmxSetReadOffset'
p25859
((lp25860
S'int32'
p25861
ag14
a((S'taskHandle'
p25862
(lp25863
S'TaskHandle'
p25864
aNtp25865
(S'data'
p25866
(lp25867
S'int32'
p25868
aNtp25869
tp25870
tp25871
sS'DAQmxResetCIEncoderZInputDigFltrMinPulseWidth'
p25872
((lp25873
S'int32'
p25874
ag14
a((S'taskHandle'
p25875
(lp25876
S'TaskHandle'
p25877
aNtp25878
(S'channel'
p25879
(lp25880
S'char'
p25881
a(lp25882
I-1
aaNtp25883
tp25884
tp25885
sS'DAQmxResetReadWaitMode'
p25886
((lp25887
S'int32'
p25888
ag14
a((S'taskHandle'
p25889
(lp25890
S'TaskHandle'
p25891
aNtp25892
tp25893
tp25894
sS'DAQmxGetCIPeriodTerm'
p25895
((lp25896
S'int32'
p25897
ag14
a((S'taskHandle'
p25898
(lp25899
S'TaskHandle'
p25900
aNtp25901
(S'channel'
p25902
(lp25903
S'char'
p25904
a(lp25905
I-1
aaNtp25906
(S'data'
p25907
(lp25908
S'char'
p25909
ag22
aNtp25910
(S'bufferSize'
p25911
(lp25912
S'uInt32'
p25913
aNtp25914
tp25915
tp25916
sS'DAQmxResetDIDataXferMech'
p25917
((lp25918
S'int32'
p25919
ag14
a((S'taskHandle'
p25920
(lp25921
S'TaskHandle'
p25922
aNtp25923
(S'channel'
p25924
(lp25925
S'char'
p25926
a(lp25927
I-1
aaNtp25928
tp25929
tp25930
sS'DAQmxReadBinaryU32'
p25931
((lp25932
S'int32'
p25933
ag14
a((S'taskHandle'
p25934
(lp25935
S'TaskHandle'
p25936
aNtp25937
(S'numSampsPerChan'
p25938
(lp25939
S'int32'
p25940
aNtp25941
(S'timeout'
p25942
(lp25943
S'float64'
p25944
aNtp25945
(S'fillMode'
p25946
(lp25947
S'bool32'
p25948
aNtp25949
(S'readArray'
p25950
(lp25951
S'uInt32'
p25952
a(lp25953
I-1
aaNtp25954
(S'arraySizeInSamps'
p25955
(lp25956
S'uInt32'
p25957
aNtp25958
(S'sampsPerChanRead'
p25959
(lp25960
S'int32'
p25961
ag22
aNtp25962
(S'reserved'
p25963
(lp25964
S'bool32'
p25965
ag22
aNtp25966
tp25967
tp25968
sS'DAQmxCfgDigEdgeRefTrig'
p25969
((lp25970
S'int32'
p25971
ag14
a((S'taskHandle'
p25972
(lp25973
S'TaskHandle'
p25974
aNtp25975
(S'triggerSource'
p25976
(lp25977
S'char'
p25978
a(lp25979
I-1
aaNtp25980
(S'triggerEdge'
p25981
(lp25982
S'int32'
p25983
aNtp25984
(S'pretriggerSamples'
p25985
(lp25986
S'uInt32'
p25987
aNtp25988
tp25989
tp25990
sS'DAQmxResetAnlgWinStartTrigBtm'
p25991
((lp25992
S'int32'
p25993
ag14
a((S'taskHandle'
p25994
(lp25995
S'TaskHandle'
p25996
aNtp25997
tp25998
tp25999
sS'DAQmxGetCOPulseLowTicks'
p26000
((lp26001
S'int32'
p26002
ag14
a((S'taskHandle'
p26003
(lp26004
S'TaskHandle'
p26005
aNtp26006
(S'channel'
p26007
(lp26008
S'char'
p26009
a(lp26010
I-1
aaNtp26011
(S'data'
p26012
(lp26013
S'uInt32'
p26014
ag22
aNtp26015
tp26016
tp26017
sS'DAQmxGetSysNIDAQMajorVersion'
p26018
((lp26019
S'int32'
p26020
ag14
a((S'data'
p26021
(lp26022
S'uInt32'
p26023
ag22
aNtp26024
tp26025
tp26026
sS'DAQmxGetAIChanCalOperatorName'
p26027
((lp26028
S'int32'
p26029
ag14
a((S'taskHandle'
p26030
(lp26031
S'TaskHandle'
p26032
aNtp26033
(S'channel'
p26034
(lp26035
S'char'
p26036
a(lp26037
I-1
aaNtp26038
(S'data'
p26039
(lp26040
S'char'
p26041
ag22
aNtp26042
(S'bufferSize'
p26043
(lp26044
S'uInt32'
p26045
aNtp26046
tp26047
tp26048
sS'DAQmxGetExportedHshkEventOutputBehavior'
p26049
((lp26050
S'int32'
p26051
ag14
a((S'taskHandle'
p26052
(lp26053
S'TaskHandle'
p26054
aNtp26055
(S'data'
p26056
(lp26057
S'int32'
p26058
ag22
aNtp26059
tp26060
tp26061
sS'DAQmxGetAIChanCalApplyCalIfExp'
p26062
((lp26063
S'int32'
p26064
ag14
a((S'taskHandle'
p26065
(lp26066
S'TaskHandle'
p26067
aNtp26068
(S'channel'
p26069
(lp26070
S'char'
p26071
a(lp26072
I-1
aaNtp26073
(S'data'
p26074
(lp26075
S'bool32'
p26076
ag22
aNtp26077
tp26078
tp26079
sS'DAQmxResetSampClkDigFltrMinPulseWidth'
p26080
((lp26081
S'int32'
p26082
ag14
a((S'taskHandle'
p26083
(lp26084
S'TaskHandle'
p26085
aNtp26086
tp26087
tp26088
sS'DAQmxSetCOCtrTimebaseSrc'
p26089
((lp26090
S'int32'
p26091
ag14
a((S'taskHandle'
p26092
(lp26093
S'TaskHandle'
p26094
aNtp26095
(S'channel'
p26096
(lp26097
S'char'
p26098
a(lp26099
I-1
aaNtp26100
(S'data'
p26101
(lp26102
S'char'
p26103
ag22
aNtp26104
tp26105
tp26106
sS'DAQmxGetPersistedScaleAuthor'
p26107
((lp26108
S'int32'
p26109
ag14
a((S'scaleName'
p26110
(lp26111
S'char'
p26112
a(lp26113
I-1
aaNtp26114
(S'data'
p26115
(lp26116
S'char'
p26117
ag22
aNtp26118
(S'bufferSize'
p26119
(lp26120
S'uInt32'
p26121
aNtp26122
tp26123
tp26124
sS'DAQmxGetCITwoEdgeSepFirstTerm'
p26125
((lp26126
S'int32'
p26127
ag14
a((S'taskHandle'
p26128
(lp26129
S'TaskHandle'
p26130
aNtp26131
(S'channel'
p26132
(lp26133
S'char'
p26134
a(lp26135
I-1
aaNtp26136
(S'data'
p26137
(lp26138
S'char'
p26139
ag22
aNtp26140
(S'bufferSize'
p26141
(lp26142
S'uInt32'
p26143
aNtp26144
tp26145
tp26146
sS'DAQmxSetDigPatternStartTrigWhen'
p26147
((lp26148
S'int32'
p26149
ag14
a((S'taskHandle'
p26150
(lp26151
S'TaskHandle'
p26152
aNtp26153
(S'data'
p26154
(lp26155
S'int32'
p26156
aNtp26157
tp26158
tp26159
sS'DAQmxGetNthTaskReadChannel'
p26160
((lp26161
S'int32'
p26162
ag14
a((S'taskHandle'
p26163
(lp26164
S'TaskHandle'
p26165
aNtp26166
(S'index'
p26167
(lp26168
S'uInt32'
p26169
aNtp26170
(S'buffer'
p26171
(lp26172
S'char'
p26173
a(lp26174
I-1
aaNtp26175
(S'bufferSize'
p26176
(lp26177
S'int32'
p26178
aNtp26179
tp26180
tp26181
sS'DAQmxGetDevDIPorts'
p26182
((lp26183
S'int32'
p26184
ag14
a((S'device'
p26185
(lp26186
S'char'
p26187
a(lp26188
I-1
aaNtp26189
(S'data'
p26190
(lp26191
S'char'
p26192
ag22
aNtp26193
(S'bufferSize'
p26194
(lp26195
S'uInt32'
p26196
aNtp26197
tp26198
tp26199
sS'DAQmxWaitUntilTaskDone'
p26200
((lp26201
S'int32'
p26202
ag14
a((S'taskHandle'
p26203
(lp26204
S'TaskHandle'
p26205
aNtp26206
(S'timeToWait'
p26207
(lp26208
S'float64'
p26209
aNtp26210
tp26211
tp26212
sS'DAQmxSetAIAtten'
p26213
((lp26214
S'int32'
p26215
ag14
a((S'taskHandle'
p26216
(lp26217
S'TaskHandle'
p26218
aNtp26219
(S'channel'
p26220
(lp26221
S'char'
p26222
a(lp26223
I-1
aaNtp26224
(S'data'
p26225
(lp26226
S'float64'
p26227
aNtp26228
tp26229
tp26230
sS'DAQmxResetAILowpassSwitchCapClkSrc'
p26231
((lp26232
S'int32'
p26233
ag14
a((S'taskHandle'
p26234
(lp26235
S'TaskHandle'
p26236
aNtp26237
(S'channel'
p26238
(lp26239
S'char'
p26240
a(lp26241
I-1
aaNtp26242
tp26243
tp26244
sS'DAQmxSetRefTrigPretrigSamples'
p26245
((lp26246
S'int32'
p26247
ag14
a((S'taskHandle'
p26248
(lp26249
S'TaskHandle'
p26250
aNtp26251
(S'data'
p26252
(lp26253
S'uInt32'
p26254
aNtp26255
tp26256
tp26257
sS'DAQmxResetAICurrentShuntLoc'
p26258
((lp26259
S'int32'
p26260
ag14
a((S'taskHandle'
p26261
(lp26262
S'TaskHandle'
p26263
aNtp26264
(S'channel'
p26265
(lp26266
S'char'
p26267
a(lp26268
I-1
aaNtp26269
tp26270
tp26271
sS'DAQmxGetCICountEdgesDigFltrTimebaseRate'
p26272
((lp26273
S'int32'
p26274
ag14
a((S'taskHandle'
p26275
(lp26276
S'TaskHandle'
p26277
aNtp26278
(S'channel'
p26279
(lp26280
S'char'
p26281
a(lp26282
I-1
aaNtp26283
(S'data'
p26284
(lp26285
S'float64'
p26286
ag22
aNtp26287
tp26288
tp26289
sS'DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc'
p26290
((lp26291
S'int32'
p26292
ag14
a((S'taskHandle'
p26293
(lp26294
S'TaskHandle'
p26295
aNtp26296
(S'channel'
p26297
(lp26298
S'char'
p26299
a(lp26300
I-1
aaNtp26301
(S'data'
p26302
(lp26303
S'char'
p26304
ag22
aNtp26305
(S'bufferSize'
p26306
(lp26307
S'uInt32'
p26308
aNtp26309
tp26310
tp26311
sS'DAQmxIsTaskDone'
p26312
((lp26313
S'int32'
p26314
ag14
a((S'taskHandle'
p26315
(lp26316
S'TaskHandle'
p26317
aNtp26318
(S'isTaskDone'
p26319
(lp26320
S'bool32'
p26321
ag22
aNtp26322
tp26323
tp26324
sS'DAQmxSetCOPulseTimeUnits'
p26325
((lp26326
S'int32'
p26327
ag14
a((S'taskHandle'
p26328
(lp26329
S'TaskHandle'
p26330
aNtp26331
(S'channel'
p26332
(lp26333
S'char'
p26334
a(lp26335
I-1
aaNtp26336
(S'data'
p26337
(lp26338
S'int32'
p26339
aNtp26340
tp26341
tp26342
sS'DAQmxGetAODACRefExtSrc'
p26343
((lp26344
S'int32'
p26345
ag14
a((S'taskHandle'
p26346
(lp26347
S'TaskHandle'
p26348
aNtp26349
(S'channel'
p26350
(lp26351
S'char'
p26352
a(lp26353
I-1
aaNtp26354
(S'data'
p26355
(lp26356
S'char'
p26357
ag22
aNtp26358
(S'bufferSize'
p26359
(lp26360
S'uInt32'
p26361
aNtp26362
tp26363
tp26364
sS'DAQmxSetAIExcitVal'
p26365
((lp26366
S'int32'
p26367
ag14
a((S'taskHandle'
p26368
(lp26369
S'TaskHandle'
p26370
aNtp26371
(S'channel'
p26372
(lp26373
S'char'
p26374
a(lp26375
I-1
aaNtp26376
(S'data'
p26377
(lp26378
S'float64'
p26379
aNtp26380
tp26381
tp26382
sS'DAQmxGetCICountEdgesDirTerm'
p26383
((lp26384
S'int32'
p26385
ag14
a((S'taskHandle'
p26386
(lp26387
S'TaskHandle'
p26388
aNtp26389
(S'channel'
p26390
(lp26391
S'char'
p26392
a(lp26393
I-1
aaNtp26394
(S'data'
p26395
(lp26396
S'char'
p26397
ag22
aNtp26398
(S'bufferSize'
p26399
(lp26400
S'uInt32'
p26401
aNtp26402
tp26403
tp26404
sS'DAQmxSetDOUseOnlyOnBrdMem'
p26405
((lp26406
S'int32'
p26407
ag14
a((S'taskHandle'
p26408
(lp26409
S'TaskHandle'
p26410
aNtp26411
(S'channel'
p26412
(lp26413
S'char'
p26414
a(lp26415
I-1
aaNtp26416
(S'data'
p26417
(lp26418
S'bool32'
p26419
aNtp26420
tp26421
tp26422
sS'DAQmxResetSampQuantSampMode'
p26423
((lp26424
S'int32'
p26425
ag14
a((S'taskHandle'
p26426
(lp26427
S'TaskHandle'
p26428
aNtp26429
tp26430
tp26431
sS'DAQmxSetCIEncoderZInputDigFltrTimebaseRate'
p26432
((lp26433
S'int32'
p26434
ag14
a((S'taskHandle'
p26435
(lp26436
S'TaskHandle'
p26437
aNtp26438
(S'channel'
p26439
(lp26440
S'char'
p26441
a(lp26442
I-1
aaNtp26443
(S'data'
p26444
(lp26445
S'float64'
p26446
aNtp26447
tp26448
tp26449
sS'DAQmxSetCISemiPeriodTerm'
p26450
((lp26451
S'int32'
p26452
ag14
a((S'taskHandle'
p26453
(lp26454
S'TaskHandle'
p26455
aNtp26456
(S'channel'
p26457
(lp26458
S'char'
p26459
a(lp26460
I-1
aaNtp26461
(S'data'
p26462
(lp26463
S'char'
p26464
ag22
aNtp26465
tp26466
tp26467
sS'DAQmxGetCISemiPeriodDigSyncEnable'
p26468
((lp26469
S'int32'
p26470
ag14
a((S'taskHandle'
p26471
(lp26472
S'TaskHandle'
p26473
aNtp26474
(S'channel'
p26475
(lp26476
S'char'
p26477
a(lp26478
I-1
aaNtp26479
(S'data'
p26480
(lp26481
S'bool32'
p26482
ag22
aNtp26483
tp26484
tp26485
sS'DAQmxResetAILowpassSwitchCapExtClkFreq'
p26486
((lp26487
S'int32'
p26488
ag14
a((S'taskHandle'
p26489
(lp26490
S'TaskHandle'
p26491
aNtp26492
(S'channel'
p26493
(lp26494
S'char'
p26495
a(lp26496
I-1
aaNtp26497
tp26498
tp26499
sS'DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate'
p26500
((lp26501
S'int32'
p26502
ag14
a((S'taskHandle'
p26503
(lp26504
S'TaskHandle'
p26505
aNtp26506
(S'data'
p26507
(lp26508
S'float64'
p26509
aNtp26510
tp26511
tp26512
sS'DAQmxGetStartTrigType'
p26513
((lp26514
S'int32'
p26515
ag14
a((S'taskHandle'
p26516
(lp26517
S'TaskHandle'
p26518
aNtp26519
(S'data'
p26520
(lp26521
S'int32'
p26522
ag22
aNtp26523
tp26524
tp26525
sS'DAQmxGetAnlgWinPauseTrigTop'
p26526
((lp26527
S'int32'
p26528
ag14
a((S'taskHandle'
p26529
(lp26530
S'TaskHandle'
p26531
aNtp26532
(S'data'
p26533
(lp26534
S'float64'
p26535
ag22
aNtp26536
tp26537
tp26538
sS'DAQmxGetPauseTrigType'
p26539
((lp26540
S'int32'
p26541
ag14
a((S'taskHandle'
p26542
(lp26543
S'TaskHandle'
p26544
aNtp26545
(S'data'
p26546
(lp26547
S'int32'
p26548
ag22
aNtp26549
tp26550
tp26551
sS'DAQmxSetCOCtrTimebaseMasterTimebaseDiv'
p26552
((lp26553
S'int32'
p26554
ag14
a((S'taskHandle'
p26555
(lp26556
S'TaskHandle'
p26557
aNtp26558
(S'channel'
p26559
(lp26560
S'char'
p26561
a(lp26562
I-1
aaNtp26563
(S'data'
p26564
(lp26565
S'uInt32'
p26566
aNtp26567
tp26568
tp26569
sS'DAQmxResetAnlgLvlPauseTrigWhen'
p26570
((lp26571
S'int32'
p26572
ag14
a((S'taskHandle'
p26573
(lp26574
S'TaskHandle'
p26575
aNtp26576
tp26577
tp26578
sS'DAQmxSetExportedHshkEventOutputBehavior'
p26579
((lp26580
S'int32'
p26581
ag14
a((S'taskHandle'
p26582
(lp26583
S'TaskHandle'
p26584
aNtp26585
(S'data'
p26586
(lp26587
S'int32'
p26588
aNtp26589
tp26590
tp26591
sS'DAQmxGetCOCtrTimebaseDigSyncEnable'
p26592
((lp26593
S'int32'
p26594
ag14
a((S'taskHandle'
p26595
(lp26596
S'TaskHandle'
p26597
aNtp26598
(S'channel'
p26599
(lp26600
S'char'
p26601
a(lp26602
I-1
aaNtp26603
(S'data'
p26604
(lp26605
S'bool32'
p26606
ag22
aNtp26607
tp26608
tp26609
sS'DAQmxGetScalePreScaledUnits'
p26610
((lp26611
S'int32'
p26612
ag14
a((S'scaleName'
p26613
(lp26614
S'char'
p26615
a(lp26616
I-1
aaNtp26617
(S'data'
p26618
(lp26619
S'int32'
p26620
ag22
aNtp26621
tp26622
tp26623
sS'DAQmxResetAILVDTSensitivityUnits'
p26624
((lp26625
S'int32'
p26626
ag14
a((S'taskHandle'
p26627
(lp26628
S'TaskHandle'
p26629
aNtp26630
(S'channel'
p26631
(lp26632
S'char'
p26633
a(lp26634
I-1
aaNtp26635
tp26636
tp26637
sS'DAQmxResetCICtrTimebaseRate'
p26638
((lp26639
S'int32'
p26640
ag14
a((S'taskHandle'
p26641
(lp26642
S'TaskHandle'
p26643
aNtp26644
(S'channel'
p26645
(lp26646
S'char'
p26647
a(lp26648
I-1
aaNtp26649
tp26650
tp26651
sS'DAQmxGetWriteAttribute'
p26652
((lp26653
S'int32'
p26654
ag2545
a((S'taskHandle'
p26655
(lp26656
S'TaskHandle'
p26657
aNtp26658
(S'attribute'
p26659
(lp26660
S'int32'
p26661
aNtp26662
(S'value'
p26663
(lp26664
S'void'
p26665
ag22
aNtp26666
tp26667
tp26668
sS'DAQmxResetCIEncoderBInputDigFltrTimebaseSrc'
p26669
((lp26670
S'int32'
p26671
ag14
a((S'taskHandle'
p26672
(lp26673
S'TaskHandle'
p26674
aNtp26675
(S'channel'
p26676
(lp26677
S'char'
p26678
a(lp26679
I-1
aaNtp26680
tp26681
tp26682
sS'DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth'
p26683
((lp26684
S'int32'
p26685
ag14
a((S'taskHandle'
p26686
(lp26687
S'TaskHandle'
p26688
aNtp26689
(S'channel'
p26690
(lp26691
S'char'
p26692
a(lp26693
I-1
aaNtp26694
tp26695
tp26696
sS'DAQmxResetCIAngEncoderUnits'
p26697
((lp26698
S'int32'
p26699
ag14
a((S'taskHandle'
p26700
(lp26701
S'TaskHandle'
p26702
aNtp26703
(S'channel'
p26704
(lp26705
S'char'
p26706
a(lp26707
I-1
aaNtp26708
tp26709
tp26710
sS'DAQmxResetAOEnhancedImageRejectionEnable'
p26711
((lp26712
S'int32'
p26713
ag14
a((S'taskHandle'
p26714
(lp26715
S'TaskHandle'
p26716
aNtp26717
(S'channel'
p26718
(lp26719
S'char'
p26720
a(lp26721
I-1
aaNtp26722
tp26723
tp26724
sS'DAQmxGetSyncPulseSyncTime'
p26725
((lp26726
S'int32'
p26727
ag14
a((S'taskHandle'
p26728
(lp26729
S'TaskHandle'
p26730
aNtp26731
(S'data'
p26732
(lp26733
S'float64'
p26734
ag22
aNtp26735
tp26736
tp26737
sS'DAQmxDeleteSavedScale'
p26738
((lp26739
S'int32'
p26740
ag14
a((S'scaleName'
p26741
(lp26742
S'char'
p26743
a(lp26744
I-1
aaNtp26745
tp26746
tp26747
sS'DAQmxGetPersistedScaleAllowInteractiveEditing'
p26748
((lp26749
S'int32'
p26750
ag14
a((S'scaleName'
p26751
(lp26752
S'char'
p26753
a(lp26754
I-1
aaNtp26755
(S'data'
p26756
(lp26757
S'bool32'
p26758
ag22
aNtp26759
tp26760
tp26761
sS'DAQmxGetCOPrescaler'
p26762
((lp26763
S'int32'
p26764
ag14
a((S'taskHandle'
p26765
(lp26766
S'TaskHandle'
p26767
aNtp26768
(S'channel'
p26769
(lp26770
S'char'
p26771
a(lp26772
I-1
aaNtp26773
(S'data'
p26774
(lp26775
S'uInt32'
p26776
ag22
aNtp26777
tp26778
tp26779
sS'DAQmxGetAIRTDR0'
p26780
((lp26781
S'int32'
p26782
ag14
a((S'taskHandle'
p26783
(lp26784
S'TaskHandle'
p26785
aNtp26786
(S'channel'
p26787
(lp26788
S'char'
p26789
a(lp26790
I-1
aaNtp26791
(S'data'
p26792
(lp26793
S'float64'
p26794
ag22
aNtp26795
tp26796
tp26797
sS'DAQmxGetAIResistanceUnits'
p26798
((lp26799
S'int32'
p26800
ag14
a((S'taskHandle'
p26801
(lp26802
S'TaskHandle'
p26803
aNtp26804
(S'channel'
p26805
(lp26806
S'char'
p26807
a(lp26808
I-1
aaNtp26809
(S'data'
p26810
(lp26811
S'int32'
p26812
ag22
aNtp26813
tp26814
tp26815
sS'DAQmxSetCOCtrTimebaseActiveEdge'
p26816
((lp26817
S'int32'
p26818
ag14
a((S'taskHandle'
p26819
(lp26820
S'TaskHandle'
p26821
aNtp26822
(S'channel'
p26823
(lp26824
S'char'
p26825
a(lp26826
I-1
aaNtp26827
(S'data'
p26828
(lp26829
S'int32'
p26830
aNtp26831
tp26832
tp26833
sS'DAQmxGetCIFreqDigFltrMinPulseWidth'
p26834
((lp26835
S'int32'
p26836
ag14
a((S'taskHandle'
p26837
(lp26838
S'TaskHandle'
p26839
aNtp26840
(S'channel'
p26841
(lp26842
S'char'
p26843
a(lp26844
I-1
aaNtp26845
(S'data'
p26846
(lp26847
S'float64'
p26848
ag22
aNtp26849
tp26850
tp26851
sS'DAQmxResetCIGPSSyncSrc'
p26852
((lp26853
S'int32'
p26854
ag14
a((S'taskHandle'
p26855
(lp26856
S'TaskHandle'
p26857
aNtp26858
(S'channel'
p26859
(lp26860
S'char'
p26861
a(lp26862
I-1
aaNtp26863
tp26864
tp26865
sS'DAQmxResetExportedHshkEventInterlockedDeassertDelay'
p26866
((lp26867
S'int32'
p26868
ag14
a((S'taskHandle'
p26869
(lp26870
S'TaskHandle'
p26871
aNtp26872
tp26873
tp26874
sS'DAQmxSetAIConvActiveEdge'
p26875
((lp26876
S'int32'
p26877
ag14
a((S'taskHandle'
p26878
(lp26879
S'TaskHandle'
p26880
aNtp26881
(S'data'
p26882
(lp26883
S'int32'
p26884
aNtp26885
tp26886
tp26887
sS'DAQmxGetCIFreqMeasTime'
p26888
((lp26889
S'int32'
p26890
ag14
a((S'taskHandle'
p26891
(lp26892
S'TaskHandle'
p26893
aNtp26894
(S'channel'
p26895
(lp26896
S'char'
p26897
a(lp26898
I-1
aaNtp26899
(S'data'
p26900
(lp26901
S'float64'
p26902
ag22
aNtp26903
tp26904
tp26905
sS'DAQmxGetAIDataXferReqCond'
p26906
((lp26907
S'int32'
p26908
ag14
a((S'taskHandle'
p26909
(lp26910
S'TaskHandle'
p26911
aNtp26912
(S'channel'
p26913
(lp26914
S'char'
p26915
a(lp26916
I-1
aaNtp26917
(S'data'
p26918
(lp26919
S'int32'
p26920
ag22
aNtp26921
tp26922
tp26923
sS'DAQmxGetCISemiPeriodStartingEdge'
p26924
((lp26925
S'int32'
p26926
ag14
a((S'taskHandle'
p26927
(lp26928
S'TaskHandle'
p26929
aNtp26930
(S'channel'
p26931
(lp26932
S'char'
p26933
a(lp26934
I-1
aaNtp26935
(S'data'
p26936
(lp26937
S'int32'
p26938
ag22
aNtp26939
tp26940
tp26941
sS'DAQmxGetAIBridgeShuntCalGainAdjust'
p26942
((lp26943
S'int32'
p26944
ag14
a((S'taskHandle'
p26945
(lp26946
S'TaskHandle'
p26947
aNtp26948
(S'channel'
p26949
(lp26950
S'char'
p26951
a(lp26952
I-1
aaNtp26953
(S'data'
p26954
(lp26955
S'float64'
p26956
ag22
aNtp26957
tp26958
tp26959
sS'DAQmxWriteBinaryI16'
p26960
((lp26961
S'int32'
p26962
ag14
a((S'taskHandle'
p26963
(lp26964
S'TaskHandle'
p26965
aNtp26966
(S'numSampsPerChan'
p26967
(lp26968
S'int32'
p26969
aNtp26970
(S'autoStart'
p26971
(lp26972
S'bool32'
p26973
aNtp26974
(S'timeout'
p26975
(lp26976
S'float64'
p26977
aNtp26978
(S'dataLayout'
p26979
(lp26980
S'bool32'
p26981
aNtp26982
(S'writeArray'
p26983
(lp26984
S'int16'
p26985
a(lp26986
I-1
aaNtp26987
(S'sampsPerChanWritten'
p26988
(lp26989
S'int32'
p26990
ag22
aNtp26991
(S'reserved'
p26992
(lp26993
S'bool32'
p26994
ag22
aNtp26995
tp26996
tp26997
sS'DAQmxSetCICountEdgesCountDirDigSyncEnable'
p26998
((lp26999
S'int32'
p27000
ag14
a((S'taskHandle'
p27001
(lp27002
S'TaskHandle'
p27003
aNtp27004
(S'channel'
p27005
(lp27006
S'char'
p27007
a(lp27008
I-1
aaNtp27009
(S'data'
p27010
(lp27011
S'bool32'
p27012
aNtp27013
tp27014
tp27015
sS'DAQmxGetWriteNumChans'
p27016
((lp27017
S'int32'
p27018
ag14
a((S'taskHandle'
p27019
(lp27020
S'TaskHandle'
p27021
aNtp27022
(S'data'
p27023
(lp27024
S'uInt32'
p27025
ag22
aNtp27026
tp27027
tp27028
sS'DAQmxSetSampClkDigFltrEnable'
p27029
((lp27030
S'int32'
p27031
ag14
a((S'taskHandle'
p27032
(lp27033
S'TaskHandle'
p27034
aNtp27035
(S'data'
p27036
(lp27037
S'bool32'
p27038
aNtp27039
tp27040
tp27041
sS'DAQmxSetCICountEdgesDigFltrMinPulseWidth'
p27042
((lp27043
S'int32'
p27044
ag14
a((S'taskHandle'
p27045
(lp27046
S'TaskHandle'
p27047
aNtp27048
(S'channel'
p27049
(lp27050
S'char'
p27051
a(lp27052
I-1
aaNtp27053
(S'data'
p27054
(lp27055
S'float64'
p27056
aNtp27057
tp27058
tp27059
sS'DAQmxGetAnlgWinStartTrigWhen'
p27060
((lp27061
S'int32'
p27062
ag14
a((S'taskHandle'
p27063
(lp27064
S'TaskHandle'
p27065
aNtp27066
(S'data'
p27067
(lp27068
S'int32'
p27069
ag22
aNtp27070
tp27071
tp27072
sS'DAQmxCreateAIStrainGageChan'
p27073
((lp27074
S'int32'
p27075
ag14
a((S'taskHandle'
p27076
(lp27077
S'TaskHandle'
p27078
aNtp27079
(S'physicalChannel'
p27080
(lp27081
S'char'
p27082
a(lp27083
I-1
aaNtp27084
(S'nameToAssignToChannel'
p27085
(lp27086
S'char'
p27087
a(lp27088
I-1
aaNtp27089
(S'minVal'
p27090
(lp27091
S'float64'
p27092
aNtp27093
(S'maxVal'
p27094
(lp27095
S'float64'
p27096
aNtp27097
(S'units'
p27098
(lp27099
S'int32'
p27100
aNtp27101
(S'strainConfig'
p27102
(lp27103
S'int32'
p27104
aNtp27105
(S'voltageExcitSource'
p27106
(lp27107
S'int32'
p27108
aNtp27109
(S'voltageExcitVal'
p27110
(lp27111
S'float64'
p27112
aNtp27113
(S'gageFactor'
p27114
(lp27115
S'float64'
p27116
aNtp27117
(S'initialBridgeVoltage'
p27118
(lp27119
S'float64'
p27120
aNtp27121
(S'nominalGageResistance'
p27122
(lp27123
S'float64'
p27124
aNtp27125
(S'poissonRatio'
p27126
(lp27127
S'float64'
p27128
aNtp27129
(S'leadWireResistance'
p27130
(lp27131
S'float64'
p27132
aNtp27133
(S'customScaleName'
p27134
(lp27135
S'char'
p27136
a(lp27137
I-1
aaNtp27138
tp27139
tp27140
sS'DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth'
p27141
((lp27142
S'int32'
p27143
ag14
a((S'taskHandle'
p27144
(lp27145
S'TaskHandle'
p27146
aNtp27147
(S'data'
p27148
(lp27149
S'float64'
p27150
ag22
aNtp27151
tp27152
tp27153
sS'DAQmxResetSampClkTimebaseSrc'
p27154
((lp27155
S'int32'
p27156
ag14
a((S'taskHandle'
p27157
(lp27158
S'TaskHandle'
p27159
aNtp27160
tp27161
tp27162
sS'DAQmxResetCICtrTimebaseDigFltrEnable'
p27163
((lp27164
S'int32'
p27165
ag14
a((S'taskHandle'
p27166
(lp27167
S'TaskHandle'
p27168
aNtp27169
(S'channel'
p27170
(lp27171
S'char'
p27172
a(lp27173
I-1
aaNtp27174
tp27175
tp27176
sS'DAQmxGetSysNIDAQMinorVersion'
p27177
((lp27178
S'int32'
p27179
ag14
a((S'data'
p27180
(lp27181
S'uInt32'
p27182
ag22
aNtp27183
tp27184
tp27185
sS'DAQmxAOSeriesCalAdjust'
p27186
((lp27187
S'int32'
p27188
ag14
a((S'calHandle'
p27189
(lp27190
S'uInt32'
p27191
aNtp27192
(S'referenceVoltage'
p27193
(lp27194
S'float64'
p27195
aNtp27196
tp27197
tp27198
sS'DAQmxSetAOEnhancedImageRejectionEnable'
p27199
((lp27200
S'int32'
p27201
ag14
a((S'taskHandle'
p27202
(lp27203
S'TaskHandle'
p27204
aNtp27205
(S'channel'
p27206
(lp27207
S'char'
p27208
a(lp27209
I-1
aaNtp27210
(S'data'
p27211
(lp27212
S'bool32'
p27213
aNtp27214
tp27215
tp27216
sS'DAQmxSetCIAngEncoderUnits'
p27217
((lp27218
S'int32'
p27219
ag14
a((S'taskHandle'
p27220
(lp27221
S'TaskHandle'
p27222
aNtp27223
(S'channel'
p27224
(lp27225
S'char'
p27226
a(lp27227
I-1
aaNtp27228
(S'data'
p27229
(lp27230
S'int32'
p27231
aNtp27232
tp27233
tp27234
sS'DAQmxGetReadNumChans'
p27235
((lp27236
S'int32'
p27237
ag14
a((S'taskHandle'
p27238
(lp27239
S'TaskHandle'
p27240
aNtp27241
(S'data'
p27242
(lp27243
S'uInt32'
p27244
ag22
aNtp27245
tp27246
tp27247
sS'DAQmxGetCITwoEdgeSepFirstDigFltrEnable'
p27248
((lp27249
S'int32'
p27250
ag14
a((S'taskHandle'
p27251
(lp27252
S'TaskHandle'
p27253
aNtp27254
(S'channel'
p27255
(lp27256
S'char'
p27257
a(lp27258
I-1
aaNtp27259
(S'data'
p27260
(lp27261
S'bool32'
p27262
ag22
aNtp27263
tp27264
tp27265
sS'DAQmxResetAODACRefExtSrc'
p27266
((lp27267
S'int32'
p27268
ag14
a((S'taskHandle'
p27269
(lp27270
S'TaskHandle'
p27271
aNtp27272
(S'channel'
p27273
(lp27274
S'char'
p27275
a(lp27276
I-1
aaNtp27277
tp27278
tp27279
sS'DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth'
p27280
((lp27281
S'int32'
p27282
ag14
a((S'taskHandle'
p27283
(lp27284
S'TaskHandle'
p27285
aNtp27286
(S'channel'
p27287
(lp27288
S'char'
p27289
a(lp27290
I-1
aaNtp27291
(S'data'
p27292
(lp27293
S'float64'
p27294
aNtp27295
tp27296
tp27297
sS'DAQmxSetCIEncoderZIndexEnable'
p27298
((lp27299
S'int32'
p27300
ag14
a((S'taskHandle'
p27301
(lp27302
S'TaskHandle'
p27303
aNtp27304
(S'channel'
p27305
(lp27306
S'char'
p27307
a(lp27308
I-1
aaNtp27309
(S'data'
p27310
(lp27311
S'bool32'
p27312
aNtp27313
tp27314
tp27315
sS'DAQmxSetCOPulseTimeInitialDelay'
p27316
((lp27317
S'int32'
p27318
ag14
a((S'taskHandle'
p27319
(lp27320
S'TaskHandle'
p27321
aNtp27322
(S'channel'
p27323
(lp27324
S'char'
p27325
a(lp27326
I-1
aaNtp27327
(S'data'
p27328
(lp27329
S'float64'
p27330
aNtp27331
tp27332
tp27333
sS'DAQmxSetCIFreqDigFltrTimebaseRate'
p27334
((lp27335
S'int32'
p27336
ag14
a((S'taskHandle'
p27337
(lp27338
S'TaskHandle'
p27339
aNtp27340
(S'channel'
p27341
(lp27342
S'char'
p27343
a(lp27344
I-1
aaNtp27345
(S'data'
p27346
(lp27347
S'float64'
p27348
aNtp27349
tp27350
tp27351
sS'DAQmxSetAIMicrophoneSensitivity'
p27352
((lp27353
S'int32'
p27354
ag14
a((S'taskHandle'
p27355
(lp27356
S'TaskHandle'
p27357
aNtp27358
(S'channel'
p27359
(lp27360
S'char'
p27361
a(lp27362
I-1
aaNtp27363
(S'data'
p27364
(lp27365
S'float64'
p27366
aNtp27367
tp27368
tp27369
sS'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc'
p27370
((lp27371
S'int32'
p27372
ag14
a((S'taskHandle'
p27373
(lp27374
S'TaskHandle'
p27375
aNtp27376
(S'channel'
p27377
(lp27378
S'char'
p27379
a(lp27380
I-1
aaNtp27381
tp27382
tp27383
sS'DAQmxSetCOPulseDutyCyc'
p27384
((lp27385
S'int32'
p27386
ag14
a((S'taskHandle'
p27387
(lp27388
S'TaskHandle'
p27389
aNtp27390
(S'channel'
p27391
(lp27392
S'char'
p27393
a(lp27394
I-1
aaNtp27395
(S'data'
p27396
(lp27397
S'float64'
p27398
aNtp27399
tp27400
tp27401
sS'DAQmxResetAILowpassCutoffFreq'
p27402
((lp27403
S'int32'
p27404
ag14
a((S'taskHandle'
p27405
(lp27406
S'TaskHandle'
p27407
aNtp27408
(S'channel'
p27409
(lp27410
S'char'
p27411
a(lp27412
I-1
aaNtp27413
tp27414
tp27415
sS'DAQmxResetRefTrigType'
p27416
((lp27417
S'int32'
p27418
ag14
a((S'taskHandle'
p27419
(lp27420
S'TaskHandle'
p27421
aNtp27422
tp27423
tp27424
sS'DAQmxGetCIFreqTerm'
p27425
((lp27426
S'int32'
p27427
ag14
a((S'taskHandle'
p27428
(lp27429
S'TaskHandle'
p27430
aNtp27431
(S'channel'
p27432
(lp27433
S'char'
p27434
a(lp27435
I-1
aaNtp27436
(S'data'
p27437
(lp27438
S'char'
p27439
ag22
aNtp27440
(S'bufferSize'
p27441
(lp27442
S'uInt32'
p27443
aNtp27444
tp27445
tp27446
sS'DAQmxResetCIFreqDigFltrTimebaseSrc'
p27447
((lp27448
S'int32'
p27449
ag14
a((S'taskHandle'
p27450
(lp27451
S'TaskHandle'
p27452
aNtp27453
(S'channel'
p27454
(lp27455
S'char'
p27456
a(lp27457
I-1
aaNtp27458
tp27459
tp27460
sS'DAQmxResetCOPrescaler'
p27461
((lp27462
S'int32'
p27463
ag14
a((S'taskHandle'
p27464
(lp27465
S'TaskHandle'
p27466
aNtp27467
(S'channel'
p27468
(lp27469
S'char'
p27470
a(lp27471
I-1
aaNtp27472
tp27473
tp27474
sS'DAQmxResetCOPulseTerm'
p27475
((lp27476
S'int32'
p27477
ag14
a((S'taskHandle'
p27478
(lp27479
S'TaskHandle'
p27480
aNtp27481
(S'channel'
p27482
(lp27483
S'char'
p27484
a(lp27485
I-1
aaNtp27486
tp27487
tp27488
sS'DAQmxGetScaleDescr'
p27489
((lp27490
S'int32'
p27491
ag14
a((S'scaleName'
p27492
(lp27493
S'char'
p27494
a(lp27495
I-1
aaNtp27496
(S'data'
p27497
(lp27498
S'char'
p27499
ag22
aNtp27500
(S'bufferSize'
p27501
(lp27502
S'uInt32'
p27503
aNtp27504
tp27505
tp27506
sS'DAQmxGetAnlgWinStartTrigCoupling'
p27507
((lp27508
S'int32'
p27509
ag14
a((S'taskHandle'
p27510
(lp27511
S'TaskHandle'
p27512
aNtp27513
(S'data'
p27514
(lp27515
S'int32'
p27516
ag22
aNtp27517
tp27518
tp27519
sS'DAQmxGetAnlgLvlPauseTrigLvl'
p27520
((lp27521
S'int32'
p27522
ag14
a((S'taskHandle'
p27523
(lp27524
S'TaskHandle'
p27525
aNtp27526
(S'data'
p27527
(lp27528
S'float64'
p27529
ag22
aNtp27530
tp27531
tp27532
sS'DAQmxResetCISemiPeriodStartingEdge'
p27533
((lp27534
S'int32'
p27535
ag14
a((S'taskHandle'
p27536
(lp27537
S'TaskHandle'
p27538
aNtp27539
(S'channel'
p27540
(lp27541
S'char'
p27542
a(lp27543
I-1
aaNtp27544
tp27545
tp27546
sS'DAQmxGetSysTasks'
p27547
((lp27548
S'int32'
p27549
ag14
a((S'data'
p27550
(lp27551
S'char'
p27552
ag22
aNtp27553
(S'bufferSize'
p27554
(lp27555
S'uInt32'
p27556
aNtp27557
tp27558
tp27559
sS'DAQmxSetCISemiPeriodDigFltrEnable'
p27560
((lp27561
S'int32'
p27562
ag14
a((S'taskHandle'
p27563
(lp27564
S'TaskHandle'
p27565
aNtp27566
(S'channel'
p27567
(lp27568
S'char'
p27569
a(lp27570
I-1
aaNtp27571
(S'data'
p27572
(lp27573
S'bool32'
p27574
aNtp27575
tp27576
tp27577
sS'DAQmxSetAnlgEdgeStartTrigSrc'
p27578
((lp27579
S'int32'
p27580
ag14
a((S'taskHandle'
p27581
(lp27582
S'TaskHandle'
p27583
aNtp27584
(S'data'
p27585
(lp27586
S'char'
p27587
ag22
aNtp27588
tp27589
tp27590
sS'DAQmxResetBufInputBufSize'
p27591
((lp27592
S'int32'
p27593
ag14
a((S'taskHandle'
p27594
(lp27595
S'TaskHandle'
p27596
aNtp27597
tp27598
tp27599
sS'DAQmxSetCICountEdgesDigFltrTimebaseSrc'
p27600
((lp27601
S'int32'
p27602
ag14
a((S'taskHandle'
p27603
(lp27604
S'TaskHandle'
p27605
aNtp27606
(S'channel'
p27607
(lp27608
S'char'
p27609
a(lp27610
I-1
aaNtp27611
(S'data'
p27612
(lp27613
S'char'
p27614
ag22
aNtp27615
tp27616
tp27617
sS'DAQmxResetReadOverWrite'
p27618
((lp27619
S'int32'
p27620
ag14
a((S'taskHandle'
p27621
(lp27622
S'TaskHandle'
p27623
aNtp27624
tp27625
tp27626
sS'DAQmxGetTaskComplete'
p27627
((lp27628
S'int32'
p27629
ag14
a((S'taskHandle'
p27630
(lp27631
S'TaskHandle'
p27632
aNtp27633
(S'data'
p27634
(lp27635
S'bool32'
p27636
ag22
aNtp27637
tp27638
tp27639
sS'DAQmxGetSysGlobalChans'
p27640
((lp27641
S'int32'
p27642
ag14
a((S'data'
p27643
(lp27644
S'char'
p27645
ag22
aNtp27646
(S'bufferSize'
p27647
(lp27648
S'uInt32'
p27649
aNtp27650
tp27651
tp27652
sS'DAQmxResetCICustomScaleName'
p27653
((lp27654
S'int32'
p27655
ag14
a((S'taskHandle'
p27656
(lp27657
S'TaskHandle'
p27658
aNtp27659
(S'channel'
p27660
(lp27661
S'char'
p27662
a(lp27663
I-1
aaNtp27664
tp27665
tp27666
sS'DAQmxReadDigitalU32'
p27667
((lp27668
S'int32'
p27669
ag14
a((S'taskHandle'
p27670
(lp27671
S'TaskHandle'
p27672
aNtp27673
(S'numSampsPerChan'
p27674
(lp27675
S'int32'
p27676
aNtp27677
(S'timeout'
p27678
(lp27679
S'float64'
p27680
aNtp27681
(S'fillMode'
p27682
(lp27683
S'bool32'
p27684
aNtp27685
(S'readArray'
p27686
(lp27687
S'uInt32'
p27688
a(lp27689
I-1
aaNtp27690
(S'arraySizeInSamps'
p27691
(lp27692
S'uInt32'
p27693
aNtp27694
(S'sampsPerChanRead'
p27695
(lp27696
S'int32'
p27697
ag22
aNtp27698
(S'reserved'
p27699
(lp27700
S'bool32'
p27701
ag22
aNtp27702
tp27703
tp27704
sS'DAQmxGetPhysicalChanTEDSVersionLetter'
p27705
((lp27706
S'int32'
p27707
ag14
a((S'physicalChannel'
p27708
(lp27709
S'char'
p27710
a(lp27711
I-1
aaNtp27712
(S'data'
p27713
(lp27714
S'char'
p27715
ag22
aNtp27716
(S'bufferSize'
p27717
(lp27718
S'uInt32'
p27719
aNtp27720
tp27721
tp27722
sS'DAQmxGetCIPeriodDigFltrMinPulseWidth'
p27723
((lp27724
S'int32'
p27725
ag14
a((S'taskHandle'
p27726
(lp27727
S'TaskHandle'
p27728
aNtp27729
(S'channel'
p27730
(lp27731
S'char'
p27732
a(lp27733
I-1
aaNtp27734
(S'data'
p27735
(lp27736
S'float64'
p27737
ag22
aNtp27738
tp27739
tp27740
sS'DAQmxGetDODataXferReqCond'
p27741
((lp27742
S'int32'
p27743
ag14
a((S'taskHandle'
p27744
(lp27745
S'TaskHandle'
p27746
aNtp27747
(S'channel'
p27748
(lp27749
S'char'
p27750
a(lp27751
I-1
aaNtp27752
(S'data'
p27753
(lp27754
S'int32'
p27755
ag22
aNtp27756
tp27757
tp27758
sS'DAQmxResetDIDataXferReqCond'
p27759
((lp27760
S'int32'
p27761
ag14
a((S'taskHandle'
p27762
(lp27763
S'TaskHandle'
p27764
aNtp27765
(S'channel'
p27766
(lp27767
S'char'
p27768
a(lp27769
I-1
aaNtp27770
tp27771
tp27772
sS'DAQmxReadCounterScalarF64'
p27773
((lp27774
S'int32'
p27775
ag14
a((S'taskHandle'
p27776
(lp27777
S'TaskHandle'
p27778
aNtp27779
(S'timeout'
p27780
(lp27781
S'float64'
p27782
aNtp27783
(S'value'
p27784
(lp27785
S'float64'
p27786
ag22
aNtp27787
(S'reserved'
p27788
(lp27789
S'bool32'
p27790
ag22
aNtp27791
tp27792
tp27793
sS'DAQmxGetAIDataXferCustomThreshold'
p27794
((lp27795
S'int32'
p27796
ag14
a((S'taskHandle'
p27797
(lp27798
S'TaskHandle'
p27799
aNtp27800
(S'channel'
p27801
(lp27802
S'char'
p27803
a(lp27804
I-1
aaNtp27805
(S'data'
p27806
(lp27807
S'uInt32'
p27808
ag22
aNtp27809
tp27810
tp27811
sS'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate'
p27812
((lp27813
S'int32'
p27814
ag14
a((S'taskHandle'
p27815
(lp27816
S'TaskHandle'
p27817
aNtp27818
(S'channel'
p27819
(lp27820
S'char'
p27821
a(lp27822
I-1
aaNtp27823
tp27824
tp27825
sS'DAQmxSetAIMemMapEnable'
p27826
((lp27827
S'int32'
p27828
ag14
a((S'taskHandle'
p27829
(lp27830
S'TaskHandle'
p27831
aNtp27832
(S'channel'
p27833
(lp27834
S'char'
p27835
a(lp27836
I-1
aaNtp27837
(S'data'
p27838
(lp27839
S'bool32'
p27840
aNtp27841
tp27842
tp27843
sS'DAQmxResetCOCtrTimebaseMasterTimebaseDiv'
p27844
((lp27845
S'int32'
p27846
ag14
a((S'taskHandle'
p27847
(lp27848
S'TaskHandle'
p27849
aNtp27850
(S'channel'
p27851
(lp27852
S'char'
p27853
a(lp27854
I-1
aaNtp27855
tp27856
tp27857
sS'DAQmxGetCOPulseIdleState'
p27858
((lp27859
S'int32'
p27860
ag14
a((S'taskHandle'
p27861
(lp27862
S'TaskHandle'
p27863
aNtp27864
(S'channel'
p27865
(lp27866
S'char'
p27867
a(lp27868
I-1
aaNtp27869
(S'data'
p27870
(lp27871
S'int32'
p27872
ag22
aNtp27873
tp27874
tp27875
sS'DAQmxResetCOPulseIdleState'
p27876
((lp27877
S'int32'
p27878
ag14
a((S'taskHandle'
p27879
(lp27880
S'TaskHandle'
p27881
aNtp27882
(S'channel'
p27883
(lp27884
S'char'
p27885
a(lp27886
I-1
aaNtp27887
tp27888
tp27889
sS'DAQmxResetDigPatternStartTrigPattern'
p27890
((lp27891
S'int32'
p27892
ag14
a((S'taskHandle'
p27893
(lp27894
S'TaskHandle'
p27895
aNtp27896
tp27897
tp27898
sS'DAQmxGetAIFreqUnits'
p27899
((lp27900
S'int32'
p27901
ag14
a((S'taskHandle'
p27902
(lp27903
S'TaskHandle'
p27904
aNtp27905
(S'channel'
p27906
(lp27907
S'char'
p27908
a(lp27909
I-1
aaNtp27910
(S'data'
p27911
(lp27912
S'int32'
p27913
ag22
aNtp27914
tp27915
tp27916
sS'DAQmxGetPhysicalChanTEDSSerialNum'
p27917
((lp27918
S'int32'
p27919
ag14
a((S'physicalChannel'
p27920
(lp27921
S'char'
p27922
a(lp27923
I-1
aaNtp27924
(S'data'
p27925
(lp27926
S'uInt32'
p27927
ag22
aNtp27928
tp27929
tp27930
sS'DAQmxGetDigLvlPauseTrigSrc'
p27931
((lp27932
S'int32'
p27933
ag14
a((S'taskHandle'
p27934
(lp27935
S'TaskHandle'
p27936
aNtp27937
(S'data'
p27938
(lp27939
S'char'
p27940
ag22
aNtp27941
(S'bufferSize'
p27942
(lp27943
S'uInt32'
p27944
aNtp27945
tp27946
tp27947
sS'DAQmxSetDigLvlPauseTrigDigFltrEnable'
p27948
((lp27949
S'int32'
p27950
ag14
a((S'taskHandle'
p27951
(lp27952
S'TaskHandle'
p27953
aNtp27954
(S'data'
p27955
(lp27956
S'bool32'
p27957
aNtp27958
tp27959
tp27960
sS'DAQmxGetExtCalLastDateAndTime'
p27961
((lp27962
S'int32'
p27963
ag14
a((S'deviceName'
p27964
(lp27965
S'char'
p27966
a(lp27967
I-1
aaNtp27968
(S'year'
p27969
(lp27970
S'uInt32'
p27971
ag22
aNtp27972
(S'month'
p27973
(lp27974
S'uInt32'
p27975
ag22
aNtp27976
(S'day'
p27977
(lp27978
S'uInt32'
p27979
ag22
aNtp27980
(S'hour'
p27981
(lp27982
S'uInt32'
p27983
ag22
aNtp27984
(S'minute'
p27985
(lp27986
S'uInt32'
p27987
ag22
aNtp27988
tp27989
tp27990
sS'DAQmxGetAODevScalingCoeff'
p27991
((lp27992
S'int32'
p27993
ag14
a((S'taskHandle'
p27994
(lp27995
S'TaskHandle'
p27996
aNtp27997
(S'channel'
p27998
(lp27999
S'char'
p28000
a(lp28001
I-1
aaNtp28002
(S'data'
p28003
(lp28004
S'float64'
p28005
ag22
aNtp28006
(S'arraySizeInSamples'
p28007
(lp28008
S'uInt32'
p28009
aNtp28010
tp28011
tp28012
sS'DAQmxSetAIStrainGagePoissonRatio'
p28013
((lp28014
S'int32'
p28015
ag14
a((S'taskHandle'
p28016
(lp28017
S'TaskHandle'
p28018
aNtp28019
(S'channel'
p28020
(lp28021
S'char'
p28022
a(lp28023
I-1
aaNtp28024
(S'data'
p28025
(lp28026
S'float64'
p28027
aNtp28028
tp28029
tp28030
sS'DAQmxGetCIPeriodDiv'
p28031
((lp28032
S'int32'
p28033
ag14
a((S'taskHandle'
p28034
(lp28035
S'TaskHandle'
p28036
aNtp28037
(S'channel'
p28038
(lp28039
S'char'
p28040
a(lp28041
I-1
aaNtp28042
(S'data'
p28043
(lp28044
S'uInt32'
p28045
ag22
aNtp28046
tp28047
tp28048
sS'DAQmxGetAnlgWinStartTrigTop'
p28049
((lp28050
S'int32'
p28051
ag14
a((S'taskHandle'
p28052
(lp28053
S'TaskHandle'
p28054
aNtp28055
(S'data'
p28056
(lp28057
S'float64'
p28058
ag22
aNtp28059
tp28060
tp28061
sS'DAQmxGetAOOutputImpedance'
p28062
((lp28063
S'int32'
p28064
ag14
a((S'taskHandle'
p28065
(lp28066
S'TaskHandle'
p28067
aNtp28068
(S'channel'
p28069
(lp28070
S'char'
p28071
a(lp28072
I-1
aaNtp28073
(S'data'
p28074
(lp28075
S'float64'
p28076
ag22
aNtp28077
tp28078
tp28079
ssS'enums'
p28080
(dp28081
sS'variables'
p28082
(dp28083
sS'macros'
p28084
(dp28085
S'DAQmx_Dev_DI_Ports'
p28086
S'0x2321'
p28087
sS'DAQmxErrorChannelNotReservedForRouting'
p28088
S'(-200186)'
p28089
sS'DAQmx_AI_RTD_B'
p28090
S'0x1011'
p28091
sS'DAQmx_AI_RTD_C'
p28092
S'0x1013'
p28093
sS'DAQmx_AI_RTD_A'
p28094
S'0x1010'
p28095
sS'DAQmxErrorCantSetWatchdogExpirationOnDigInChan'
p28096
S'(-200651)'
p28097
sS'DAQmx_AIConv_MaxRate'
p28098
S'0x22C9'
p28099
sS'DAQmxErrorSampToWritePerChanNotMultipleOfIncr'
p28100
S'(-200584)'
p28101
sS'DAQmx_SwitchDev_NumRows'
p28102
S'0x18E9'
p28103
sS'DAQmxWarningPALTransferOverread'
p28104
S'(50411)'
p28105
sS'DAQmxErrorWriteNotCompleteBeforeSampClk'
p28106
S'(-209801)'
p28107
sS'DAQmxErrorSpecifiedAttrNotValid'
p28108
S'(-200233)'
p28109
sS'DAQmx_Val_Switch_Topology_2575_2_Wire_95x1_Mux'
p28110
S'"2575/2-Wire 95x1 Mux"'
p28111
sS'DAQmx_AI_TermCfg'
p28112
S'0x1097'
p28113
sS'DAQmxErrorCounterTimebaseRateNotSpecified'
p28114
S'(-200143)'
p28115
sS'DAQmxErrorHWUnexpectedlyPoweredOffAndOn'
p28116
S'(-200194)'
p28117
sS'DAQmx_AI_Excit_Val'
p28118
S'0x17F5'
p28119
sS'DAQmx_Val_FullBridgeIII'
p28120
S'10185'
p28121
sS'DAQmxErrorDigitalWaveformExpected'
p28122
S'(-200094)'
p28123
sS'DAQmx_DigEdge_AdvTrig_Edge'
p28124
S'0x1360'
p28125
sS'DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread'
p28126
S'(-200979)'
p28127
sS'DAQmxErrorInadequateResolutionForTimebaseCal'
p28128
S'(-200721)'
p28129
sS'DAQmxErrorInterpolationRateNotPossible'
p28130
S'(-200270)'
p28131
sS'DAQmxErrorRequestedSignalInversionForRoutingNotPossible'
p28132
S'(-200042)'
p28133
sS'DAQmx_Val_Bits'
p28134
S'10109'
p28135
sS'DAQmxErrorInvalidIdentifierFollowingSeparatorInList'
p28136
S'(-200051)'
p28137
sS'DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate'
p28138
S'0x221C'
p28139
sS'DAQmx_SwitchDev_SettlingTime'
p28140
S'0x1244'
p28141
sS'DAQmxErrorInvalidAsynOpHandle'
p28142
S'(-200616)'
p28143
sS'DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth'
p28144
S'0x221A'
p28145
sS'DAQmx_AO_DataXferReqCond'
p28146
S'0x183C'
p28147
sS'DAQmxErrorTimebaseCalFailedToConverge'
p28148
S'(-200722)'
p28149
sS'DAQmx_SwitchDev_RelayList'
p28150
S'0x17DC'
p28151
sS'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2'
p28152
S'(-200745)'
p28153
sS'DAQmxErrorInvalidGlobalChan'
p28154
S'(-200882)'
p28155
sS'DAQmxErrorSwitchDifferentTopologyWhenScanning'
p28156
S'(-200191)'
p28157
sS'DAQmxErrorPROMOnTEDSContainsBasicTEDSData'
p28158
S'(-200824)'
p28159
sS'DAQmx_Val_LargeRng2Ctr'
p28160
S'10205'
p28161
sS'DAQmxErrorMeasCalAdjustDirectPathOutputImpedance'
p28162
S'(-200507)'
p28163
sS'DAQmxErrorCantAllowConnectDACToGnd'
p28164
S'(-200669)'
p28165
sS'DAQmxErrorPALPhysicalBufferEmpty'
p28166
S'(-50408)'
p28167
sS'DAQmxErrorResourcesInUseForInversionInTask_Routing'
p28168
S'(-89135)'
p28169
sS'DAQmxErrorSampPerChanNotMultOfXferSize'
p28170
S'(-200837)'
p28171
sS'DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType'
p28172
S'(-200915)'
p28173
sS'DAQmxErrorSwitchScanlistTooBig'
p28174
S'(-200201)'
p28175
sS'DAQmxErrorPALTransferTimedOut'
p28176
S'(-50400)'
p28177
sS'DAQmxErrorSensorInvalidCompletionResistance'
p28178
S'(-200163)'
p28179
sS'DAQmxErrorTEDSSensorPhysicalChannelConflict'
p28180
S'(-201053)'
p28181
sS'DAQmxErrorPALBadMode'
p28182
S'(-50006)'
p28183
sS'DAQmxWarningWriteNotCompleteBeforeSampClk'
p28184
S'(209801)'
p28185
sS'DAQmxErrorNoForwardPolyScaleCoeffs'
p28186
S'(-200405)'
p28187
sS'DAQmxErrorPowerupTristateNotSpecdForEntirePort'
p28188
S'(-200653)'
p28189
sS'DAQmxErrorChannelSizeTooBigForPortReadType'
p28190
S'(-200466)'
p28191
sS'DAQmxErrorInvalidAIAttenuation'
p28192
S'(-200412)'
p28193
sS'DAQmxErrorDeviceShutDownDueToHighTemp'
p28194
S'(-200680)'
p28195
sS'DAQmxErrorBufferWithOnDemandSampTiming'
p28196
S'(-200217)'
p28197
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc'
p28198
S'0x2216'
p28199
sS'DAQmxErrorChanSizeTooBigForU32PortRead'
p28200
S'(-200564)'
p28201
sS'DAQmx_AI_ChanCal_Desc'
p28202
S'0x22A4'
p28203
sS'DAQmxErrorCantSetPropertyTaskNotRunningCommitted'
p28204
S'(-200971)'
p28205
sS'DAQmx_CO_Pulse_Freq'
p28206
S'0x1178'
p28207
sS'DAQmxErrorDataNotAvailable'
p28208
S'(-200005)'
p28209
sS'DAQmx_SwitchChan_WireMode'
p28210
S'0x18E5'
p28211
sS'DAQmx_RealTime_WaitForNextSampClkWaitMode'
p28212
S'0x22EF'
p28213
sS'DAQmxWarningPALHardwareFault'
p28214
S'(50152)'
p28215
sS'DAQmx_Val_RightJustified'
p28216
S'10279'
p28217
sS'DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged'
p28218
S'(-200961)'
p28219
sS'DAQmxErrorCOWritePulseHighTimeOutOfRange'
p28220
S'(-200686)'
p28221
sS'DAQmxErrorWaveformNotInMem'
p28222
S'(-200312)'
p28223
sS'DAQmxErrorTaskNotInDataNeighborhood'
p28224
S'(-200485)'
p28225
sS'DAQmxErrorInterconnectBridgeRouteNotPossible'
p28226
S'(-54011)'
p28227
sS'DAQmx_CI_Timestamp_Units'
p28228
S'0x22B3'
p28229
sS'DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone'
p28230
S'(-200581)'
p28231
sS'DAQmx_SwitchChan_Usage'
p28232
S'0x18E4'
p28233
sS'DAQmx_AI_Thrmstr_A'
p28234
S'0x18C9'
p28235
sS'DAQmx_AI_Thrmstr_B'
p28236
S'0x18CB'
p28237
sS'DAQmx_AI_Thrmstr_C'
p28238
S'0x18CA'
p28239
sS'DAQmx_Task_NumChans'
p28240
S'0x2181'
p28241
sS'DAQmxErrorAnalogTrigChanNotFirstInScanList'
p28242
S'(-200131)'
p28243
sS'DAQmx_Exported_HshkEvent_Pulse_Width'
p28244
S'0x22C1'
p28245
sS'DAQmx_Val_QuarterBridge'
p28246
S'10270'
p28247
sS'DAQmxErrorInvalidLineGrouping'
p28248
S'(-200528)'
p28249
sS'DAQmx_SampClk_Src'
p28250
S'0x1852'
p28251
sS'DAQmxErrorSampClkTimebaseDCMLock'
p28252
S'(-200237)'
p28253
sS'DAQmxErrorEveryNSampsEventAlreadyRegistered'
p28254
S'(-200881)'
p28255
sS'DAQmxWarningPALBadPointer'
p28256
S'(50004)'
p28257
sS'DAQmxErrorNegativeReadSampleNumber'
p28258
S'(-200277)'
p28259
sS'DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning'
p28260
S'(-200834)'
p28261
sS'DAQmx_Val_Position_LVDT'
p28262
S'10352'
p28263
sS'DAQmxErrorChanCalTablePreScaledValsNotSpecd'
p28264
S'(-200936)'
p28265
sS'DAQmx_Val_FullBridgeI'
p28266
S'10183'
p28267
sS'DAQmxWarningPALOSUnsupported'
p28268
S'(50200)'
p28269
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate'
p28270
S'0x2212'
p28271
sS'DAQmxWarningPALResourceOwnedBySystem'
p28272
S'(50100)'
p28273
sS'DAQmxErrorScriptNotInMem'
p28274
S'(-200342)'
p28275
sS'DAQmxErrorPALHardwareFault'
p28276
S'(-50152)'
p28277
sS'DAQmxErrorPhysChanMeasType'
p28278
S'(-200431)'
p28279
sS'DAQmxWarningPALValueConflict'
p28280
S'(50000)'
p28281
sS'DAQmxErrorMarkerPositionOutsideSubsetInScript'
p28282
S'(-200034)'
p28283
sS'DAQmx_Val_PulseWidth'
p28284
S'10359'
p28285
sS'DAQmxErrorPLLLock'
p28286
S'(-200245)'
p28287
sS'DAQmx_Val_WaitForHandshakeTriggerAssert'
p28288
S'12550'
p28289
sS'DAQmxErrorSpecdDeviceIsAlreadyOnRTSIBus'
p28290
S'(-201029)'
p28291
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_64x1_Mux'
p28292
S'"2576/2-Wire 64x1 Mux"'
p28293
sS'DAQmxErrorInvalidRefClkSrc'
p28294
S'(-200415)'
p28295
sS'DAQmx_CO_Pulse_Term'
p28296
S'0x18E1'
p28297
sS'DAQmx_DO_DataXferReqCond'
p28298
S'0x2267'
p28299
sS'DAQmx_CI_Freq_DigFltr_TimebaseRate'
p28300
S'0x21EA'
p28301
sS'DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow'
p28302
S'(-200283)'
p28303
sS'DAQmxErrorWaitForNextSampClkNotSupported'
p28304
S'(-200863)'
p28305
sS'DAQmxErrorDeviceInfoFailedPXIChassisNotIdentified'
p28306
S'(-201059)'
p28307
sS'DAQmxErrorNoAnalogTrigHW'
p28308
S'(-200214)'
p28309
sS'DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq'
p28310
S'0x1885'
p28311
sS'DAQmx_AI_Resistance_Units'
p28312
S'0x0955'
p28313
sS'DAQmxErrorWriteOffsetNotMultOfIncr'
p28314
S'(-200630)'
p28315
sS'DAQmx_Val_Seconds'
p28316
S'10364'
p28317
sS'DAQmxErrorClockMasterForExternalClockNotLongestPipeline'
p28318
S'(-201018)'
p28319
sS'DAQmx_PersistedScale_Author'
p28320
S'0x22D4'
p28321
sS'DAQmx_Dev_IsSimulated'
p28322
S'0x22CA'
p28323
sS'DAQmx_Exported_HshkEvent_Delay'
p28324
S'0x22BC'
p28325
sS'DAQmx_AnlgWin_PauseTrig_Coupling'
p28326
S'0x2237'
p28327
sS'DAQmx_AnlgWin_PauseTrig_Btm'
p28328
S'0x1375'
p28329
sS'DAQmx_Val_Switch_Topology_2585_1_Wire_10x1_Mux'
p28330
S'"2585/1-Wire 10x1 Mux"'
p28331
sS'DAQmxErrorPhysChanOutputType'
p28332
S'(-200432)'
p28333
sS'DAQmxWarningSampValCoercedToMin'
p28334
S'(200022)'
p28335
sS'DAQmxErrorNoReversePolyScaleCoeffs'
p28336
S'(-200406)'
p28337
sS'DAQmxErrorPALComponentAlreadyLoaded'
p28338
S'(-50260)'
p28339
sS'DAQmxErrorPhysChanNotInTask'
p28340
S'(-200649)'
p28341
sS'CVICDECL'
p28342
S'__cdecl'
p28343
sS'DAQmxErrorRefClkSrcNotSupported'
p28344
S'(-200903)'
p28345
sS'DAQmxErrorPALComponentInitializationFault'
p28346
S'(-50258)'
p28347
sS'DAQmx_Exported_HshkEvent_OutputBehavior'
p28348
S'0x22BB'
p28349
sS'DAQmx_Val_IRIGB'
p28350
S'10070'
p28351
sS'DAQmx_Val_Position_LinEncoder'
p28352
S'10361'
p28353
sS'DAQmxErrorNoPatternMatcherAvailable'
p28354
S'(-200382)'
p28355
sS'DAQmx_Read_WaitMode'
p28356
S'0x2232'
p28357
sS'DAQmxErrorResourcesInUseForRoute'
p28358
S'(-200369)'
p28359
sS'DAQmx_Val_Switch_Topology_1166_32_SPDT'
p28360
S'"1166/32-SPDT"'
p28361
sS'DAQmxErrorPALTransferInProgress'
p28362
S'(-50403)'
p28363
sS'DAQmx_CI_Max'
p28364
S'0x189C'
p28365
sS'DAQmxErrorExtCalDateTimeNotDAQmx'
p28366
S'(-200543)'
p28367
sS'DAQmxErrorLineNumIncompatibleWithVideoSignalFormat'
p28368
S'(-200424)'
p28369
sS'DAQmx_Exported_RdyForXferEvent_Lvl_ActiveLvl'
p28370
S'0x22B6'
p28371
sS'DAQmxErrorPALDeviceNotFound'
p28372
S'(-50300)'
p28373
sS'DAQmxErrorMStudioMultiplePhysChansNotSupported'
p28374
S'(-200792)'
p28375
sS'DAQmxErrorADCOverrun'
p28376
S'(-200019)'
p28377
sS'DAQmxErrorCounterTimebaseRateNotFound'
p28378
S'(-200142)'
p28379
sS'DAQmxErrorPALLogicalBufferFull'
p28380
S'(-50407)'
p28381
sS'DAQmx_CO_CtrTimebaseRate'
p28382
S'0x18C2'
p28383
sS'DAQmx_Val_MapRanges'
p28384
S'10448'
p28385
sS'DAQmx_Val_Switch_Topology_2593_Dual_8x1_Mux'
p28386
S'"2593/Dual 8x1 Mux"'
p28387
sS'DAQmx_CI_Encoder_AInputTerm'
p28388
S'0x219D'
p28389
sS'TRUE'
p28390
S'(1L)'
p28391
sS'DAQmxErrorExpectedNumberOfChannelsVerificationFailed'
p28392
S'(-200464)'
p28393
sS'DAQmxErrorInvalidSCCSlotNumberSpecd'
p28394
S'(-201079)'
p28395
sS'DAQmxErrorTrigLineNotFound'
p28396
S'(-200224)'
p28397
sS'DAQmx_SwitchDev_AutoConnAnlgBus'
p28398
S'0x17DA'
p28399
sS'DAQmxErrorExternalTimebaseRateNotknownForRate'
p28400
S'(-200132)'
p28401
sS'DAQmx_Val_CO'
p28402
S'10132'
p28403
sS'DAQmxErrorReadChanTypeMismatch'
p28404
S'(-200525)'
p28405
sS'DAQmx_Val_CI'
p28406
S'10131'
p28407
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_4x64_Matrix'
p28408
S'"2532/1-Wire Dual 4x64 Matrix"'
p28409
sS'DAQmx_CO_Pulse_DutyCyc'
p28410
S'0x1176'
p28411
sS'DAQmxErrorPALThreadCouldNotRun'
p28412
S'(-50600)'
p28413
sS'DAQmxErrorAddressAlreadyInUse'
p28414
S'(-201031)'
p28415
sS'DAQmxErrorCannotWriteAfterStartWithOnboardMemory'
p28416
S'(-200295)'
p28417
sS'DAQmx_Val_Radians'
p28418
S'10273'
p28419
sS'DAQmxErrorDrivePhaseShiftDCMBecameUnlocked'
p28420
S'(-200390)'
p28421
sS'DAQmxWarningPALLogicalBufferFull'
p28422
S'(50407)'
p28423
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth'
p28424
S'0x222E'
p28425
sS'DAQmxErrorTEDSSensorDataError'
p28426
S'(-200826)'
p28427
sS'DAQmx_Val_Switch_Topology_2584_1_Wire_15x1_Mux'
p28428
S'"2584/1-Wire 15x1 Mux"'
p28429
sS'DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType'
p28430
S'(-200916)'
p28431
sS'DAQmxErrorFewerThan2ScaledValues'
p28432
S'(-200433)'
p28433
sS'DAQmx_SampQuant_SampMode'
p28434
S'0x1300'
p28435
sS'DAQmxErrorResourcesInUseForExportSignalPolarity'
p28436
S'(-200367)'
p28437
sS'DAQmx_CI_CountEdges_Term'
p28438
S'0x18C7'
p28439
sS'DAQmxErrorProductTypeAndProductNumberConflict'
p28440
S'(-201041)'
p28441
sS'DAQmxErrorAnalogTrigChanNotExternal'
p28442
S'(-200711)'
p28443
sS'DAQmxErrorInvalidAIOffsetCalConst'
p28444
S'(-200717)'
p28445
sS'DAQmxErrorCouldNotReserveRequestedTrigLine'
p28446
S'(-200225)'
p28447
sS'DAQmxErrorTimingSrcDoesNotExist'
p28448
S'(-200738)'
p28449
sS'DAQmx_AI_ChanCal_Verif_AcqVals'
p28450
S'0x22A2'
p28451
sS'DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate'
p28452
S'0x2274'
p28453
sS'DAQmx_Val_Switch_Topology_2595_4x1_Mux'
p28454
S'"2595/4x1 Mux"'
p28455
sS'DAQmx_Val_Switch_Topology_1193_32x1_Mux'
p28456
S'"1193/32x1 Mux"'
p28457
sS'DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist'
p28458
S'(-200640)'
p28459
sS'DAQmxErrorInvalidTriggerLineInList'
p28460
S'(-200048)'
p28461
sS'DAQmx_CI_AngEncoder_Units'
p28462
S'0x18A6'
p28463
sS'DAQmxErrorLocalRemoteDriverVersionMismatch_Routing'
p28464
S'(-88716)'
p28465
sS'DAQmx_Val_ProgrammedIO'
p28466
S'10264'
p28467
sS'DAQmxErrorTableScaleScaledValsNotSpecd'
p28468
S'(-200348)'
p28469
sS'DAQmx_DI_InvertLines'
p28470
S'0x0793'
p28471
sS'DAQmxErrorLinesReservedForSCXIControl'
p28472
S'(-200159)'
p28473
sS'DAQmx_Exported_SampClk_OutputBehavior'
p28474
S'0x186B'
p28475
sS'DAQmx_Scale_Type'
p28476
S'0x1929'
p28477
sS'CVICALLBACK'
p28478
S'__cdecl'
p28479
sS'DAQmxErrorMStudioCppRemoveEventsBeforeStop'
p28480
S'(-200991)'
p28481
sS'DAQmxWarningPALTransferStopped'
p28482
S'(50404)'
p28483
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Octal_8x1_Mux'
p28484
S'"2576/2-Wire Octal 8x1 Mux"'
p28485
sS'DAQmx_CO_OutputType'
p28486
S'0x18B5'
p28487
sS'DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth'
p28488
S'0x2201'
p28489
sS'DAQmxErrorInvalidCalGain'
p28490
S'(-200749)'
p28491
sS'DAQmxErrorScriptHasInvalidIdentifier'
p28492
S'(-200024)'
p28493
sS'DAQmxErrorCfgTEDSNotSupportedOnRT'
p28494
S'(-200808)'
p28495
sS'DAQmxErrorPALDeviceUnknown'
p28496
S'(-50301)'
p28497
sS'DAQmxErrorInternalAIInputSrcInMultipleChanGroups'
p28498
S'(-200571)'
p28499
sS'DAQmxErrorAcqStoppedToPreventInputBufferOverwrite'
p28500
S'(-200222)'
p28501
sS'DAQmxErrorSpecdSlotAlreadyOccupied'
p28502
S'(-201033)'
p28503
sS'DAQmxErrorInvalidVoltageReadingDuringExtCal'
p28504
S'(-200446)'
p28505
sS'DAQmxErrorWaveformWriteOutOfBounds'
p28506
S'(-200311)'
p28507
sS'DAQmx_CI_CountEdges_DigSync_Enable'
p28508
S'0x21FA'
p28509
sS'DAQmxErrorInvalidRoutingDestinationTerminalName_Routing'
p28510
S'(-89121)'
p28511
sS'DAQmxWarningUserDefinedInfoTooLong'
p28512
S'(200025)'
p28513
sS'DAQmxErrorDuplicatedChannel'
p28514
S'(-200003)'
p28515
sS'DAQmxErrorTooManyInstructionsInLoopInScript'
p28516
S'(-201016)'
p28517
sS'DAQmx_Val_Pulse'
p28518
S'10265'
p28519
sS'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc'
p28520
S'0x2202'
p28521
sS'DAQmx_DI_DataXferMech'
p28522
S'0x2263'
p28523
sS'DAQmx_Read_ReadAllAvailSamp'
p28524
S'0x1215'
p28525
sS'DAQmxErrorDAQmxCantUseStringDueToUnknownChar'
p28526
S'(-200811)'
p28527
sS'DAQmxErrorOddTotalNumSampsToWrite'
p28528
S'(-200692)'
p28529
sS'DAQmxErrorSampTbRateSampTbSrcMismatch'
p28530
S'(-200308)'
p28531
sS'DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType'
p28532
S'(-200998)'
p28533
sS'DAQmxErrorInvalidChanName'
p28534
S'(-200461)'
p28535
sS'DAQmx_DO_NumLines'
p28536
S'0x2179'
p28537
sS'DAQmx_Val_TEDS_Sensor'
p28538
S'12531'
p28539
sS'DAQmxErrorCppCantRemoveEventHandlerTwice'
p28540
S'(-200589)'
p28541
sS'DAQmxErrorPALFileSeekFault'
p28542
S'(-50206)'
p28543
sS'DAQmx_Val_ALowBHigh'
p28544
S'10042'
p28545
sS'DAQmx_Task_Name'
p28546
S'0x1276'
p28547
sS'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate'
p28548
S'0x222B'
p28549
sS'DAQmxErrorWriteFailedMultipleCOOutputTypes'
p28550
S'(-200829)'
p28551
sS'DAQmx_CI_Period_MeasTime'
p28552
S'0x192D'
p28553
sS'DAQmx_Exported_HshkEvent_Interlocked_AssertedLvl'
p28554
S'0x22BD'
p28555
sS'DAQmxErrorConnectionInScanlistMustWaitForTrig'
p28556
S'(-200636)'
p28557
sS'DAQmxErrorPALResourceInitialized'
p28558
S'(-50105)'
p28559
sS'DAQmxErrorPALBadToken'
p28560
S'(-50020)'
p28561
sS'DAQmxErrorCannotTristateBusyTerm_Routing'
p28562
S'(-89127)'
p28563
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable'
p28564
S'0x222D'
p28565
sS'DAQmxErrorDevInUnidentifiedPXIChassis'
p28566
S'(-200862)'
p28567
sS'DAQmxErrorDDCClkOutDCMBecameUnlocked'
p28568
S'(-200244)'
p28569
sS'DAQmx_SwitchDev_NumRelays'
p28570
S'0x18E6'
p28571
sS'DAQmxErrorInvalidAttentuationBasedOnMinMax'
p28572
S'(-200321)'
p28573
sS'DAQmxErrorPALThreadStackSizeNotSupported'
p28574
S'(-50603)'
p28575
sS'DAQmxErrorCannotTristateTerm'
p28576
S'(-200253)'
p28577
sS'DAQmxWarningPALResourceReserved'
p28578
S'(50103)'
p28579
sS'DAQmxErrorChanNamesNotSpecdInCfgFile'
p28580
S'(-201083)'
p28581
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable'
p28582
S'0x2214'
p28583
sS'DAQmx_Scale_Map_ScaledMin'
p28584
S'0x1230'
p28585
sS'DAQmxErrorSampClkRateAndDivCombo'
p28586
S'(-200273)'
p28587
sS'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted'
p28588
S'(-200472)'
p28589
sS'DAQmxErrorChanVersionNew'
p28590
S'(-200469)'
p28591
sS'DAQmxWarningPALResourceBusy'
p28592
S'(50106)'
p28593
sS'FALSE'
p28594
S'(0L)'
p28595
sS'DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid'
p28596
S'(-200145)'
p28597
sS'DAQmxErrorInvalidAttributeName'
p28598
S'(-201086)'
p28599
sS'DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask'
p28600
S'(-200948)'
p28601
sS'DAQmx_MasterTimebase_Rate'
p28602
S'0x1495'
p28603
sS'DAQmx_Val_WriteToEEPROM'
p28604
S'12538'
p28605
sS'DAQmx_Val_Pt3851'
p28606
S'10071'
p28607
sS'DAQmxErrorInvalidLocalChanName'
p28608
S'(-201069)'
p28609
sS'DAQmx_AI_ACExcit_Freq'
p28610
S'0x0101'
p28611
sS'DAQmxErrorClkDoublerDCMBecameUnlocked'
p28612
S'(-200242)'
p28613
sS'DAQmxErrorDeviceIsNotAValidSwitch'
p28614
S'(-200069)'
p28615
sS'DAQmxErrorInvalidSectionIdentifier'
p28616
S'(-201078)'
p28617
sS'DAQmx_Read_OverWrite'
p28618
S'0x1211'
p28619
sS'DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop'
p28620
S'(-200740)'
p28621
sS'DAQmxErrorDLLBecameUnlocked'
p28622
S'(-200551)'
p28623
sS'DAQmx_PhysicalChanName'
p28624
S'0x18F5'
p28625
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_16x16_Matrix'
p28626
S'"2532/2-Wire 16x16 Matrix"'
p28627
sS'DAQmxErrorStreamDCMBecameUnlocked'
p28628
S'(-200314)'
p28629
sS'DAQmxErrorDifferentRawDataCompression'
p28630
S'(-200959)'
p28631
sS'DAQmx_Val_StartTrigger'
p28632
S'12491'
p28633
sS'DAQmx_AnlgWin_PauseTrig_Src'
p28634
S'0x1373'
p28635
sS'DAQmx_Val_S_Type_TC'
p28636
S'10085'
p28637
sS'DAQmxErrorMeasCalAdjustDirectPathGain'
p28638
S'(-200505)'
p28639
sS'DAQmxErrorProductOfAOMinAndGainTooSmall'
p28640
S'(-200271)'
p28641
sS'DAQmxErrorChanCalExpirationDateNotSet'
p28642
S'(-200933)'
p28643
sS'DAQmxErrorExternalSampClkAndRefClkThruSameTerm'
p28644
S'(-200276)'
p28645
sS'DAQmxErrorPortConfiguredForStaticDigitalOps'
p28646
S'(-200119)'
p28647
sS'DAQmx_Val_R_Type_TC'
p28648
S'10082'
p28649
sS'DAQmx_Read_OverloadedChansExist'
p28650
S'0x2174'
p28651
sS'DAQmxErrorRepeatLoopNestingTooDeepInScript'
p28652
S'(-200035)'
p28653
sS'DAQmxErrorOutputCantStartChangedRegenerationMode'
p28654
S'(-200568)'
p28655
sS'DAQmxErrorInvalidNumSampsToWrite'
p28656
S'(-200622)'
p28657
sS'DAQmxErrorRecordNotAvailable'
p28658
S'(-200007)'
p28659
sS'_NI_uInt8_DEFINED_'
p28660
S''
p28661
sS'DAQmx_Scale_Map_PreScaledMax'
p28662
S'0x1231'
p28663
sS'DAQmxErrorCantSaveChanWithoutReplace'
p28664
S'(-200483)'
p28665
sS'DAQmxErrorPALBadReadCount'
p28666
S'(-50011)'
p28667
sS'DAQmx_CI_Period_DigFltr_MinPulseWidth'
p28668
S'0x21ED'
p28669
sS'DAQmx_Val_Switch_Topology_1127_Independent'
p28670
S'"1127/Independent"'
p28671
sS'DAQmxErrorInputBoardClkDCMBecameUnlocked'
p28672
S'(-200387)'
p28673
sS'DAQmxErrorHiddenChanMissingInChansPropertyInCfgFile'
p28674
S'(-201084)'
p28675
sS'DAQmx_PersistedScale_AllowInteractiveEditing'
p28676
S'0x22D5'
p28677
sS'DAQmxErrorCannotConnectSrcChans'
p28678
S'(-200188)'
p28679
sS'DAQmx_Val_CurrWritePos'
p28680
S'10430'
p28681
sS'DAQmx_Val_WaitInfinitely'
p28682
S'-1.0'
p28683
sS'DAQmxErrorSelfCalTemperatureNotDAQmx'
p28684
S'(-200542)'
p28685
sS'DAQmxErrorInvalidSectionName'
p28686
S'(-201077)'
p28687
sS'DAQmxErrorChanIndexInvalid'
p28688
S'(-200606)'
p28689
sS'DAQmx_Val_ActiveHigh'
p28690
S'10095'
p28691
sS'DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort'
p28692
S'(-200654)'
p28693
sS'DAQmx_AI_ACExcit_WireMode'
p28694
S'0x18CD'
p28695
sS'DAQmxErrorMeasCalAdjustCalADC'
p28696
S'(-200509)'
p28697
sS'DAQmxErrorStrobePhaseShiftDCMBecameUnlocked'
p28698
S'(-200391)'
p28699
sS'DAQmx_DigLvl_PauseTrig_When'
p28700
S'0x1380'
p28701
sS'DAQmx_CI_Encoder_BInput_DigFltr_Enable'
p28702
S'0x2200'
p28703
sS'DAQmx_Val_AIConvertClock'
p28704
S'12484'
p28705
sS'DAQmx_Read_OverloadedChans'
p28706
S'0x2175'
p28707
sS'DAQmxErrorCollectionDoesNotMatchChanType'
p28708
S'(-200569)'
p28709
sS'DAQmxErrorInvalidRoutingSourceTerminalName_Routing'
p28710
S'(-89120)'
p28711
sS'DAQmx_SyncPulse_SyncTime'
p28712
S'0x223E'
p28713
sS'DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty'
p28714
S'(-200643)'
p28715
sS'DAQmxErrorReferenceVoltageInvalid'
p28716
S'(-200153)'
p28717
sS'DAQmx_ChanIsGlobal'
p28718
S'0x2304'
p28719
sS'DAQmxErrorWriteFailedBecauseWatchdogExpired'
p28720
S'(-200678)'
p28721
sS'DAQmx_Scale_Lin_Slope'
p28722
S'0x1227'
p28723
sS'DAQmx_Val_OverwriteUnreadSamps'
p28724
S'10252'
p28725
sS'DAQmxErrorCalTempNotSupported'
p28726
S'(-200338)'
p28727
sS'DAQmxErrorUnsupportedTrigTypeSendsSWTrig'
p28728
S'(-200373)'
p28729
sS'DAQmxErrorInvalidLoopIterationsInScript'
p28730
S'(-200036)'
p28731
sS'DAQmxErrorSelfCalConstsInvalid'
p28732
S'(-200549)'
p28733
sS'DAQmxWarningTimestampCounterRolledOver'
p28734
S'(200003)'
p28735
sS'DAQmxErrorInversionNotSupportedByHW'
p28736
S'(-200363)'
p28737
sS'DAQmxErrorSCXISerialCommunication'
p28738
S'(-200015)'
p28739
sS'DAQmx_Val_Yield'
p28740
S'12525'
p28741
sS'DAQmxErrorCabledModuleCannotRouteSSH'
p28742
S'(-200320)'
p28743
sS'___nidaqmx_h___'
p28744
g28661
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Quad_32x1_Mux'
p28745
S'"2530/1-Wire Quad 32x1 Mux"'
p28746
sS'DAQmxErrorNoInputOnPortCfgdForWatchdogOutput'
p28747
S'(-200666)'
p28748
sS'DAQmxErrorSampClkTimingTypeWhenTristateIsFalse'
p28749
S'(-200839)'
p28750
sS'DAQmxErrorInvalidSignalTypeExportSignal'
p28751
S'(-200374)'
p28752
sS'DAQmxErrorOneChanReadForMultiChanTask'
p28753
S'(-200523)'
p28754
sS'DAQmxErrorNoAcqStarted'
p28755
S'(-200286)'
p28756
sS'DAQmxErrorDuplicatePropertyInObject'
p28757
S'(-201055)'
p28758
sS'DAQmx_Val_PathStatus_ChannelReservedForRouting'
p28759
S'10436'
p28760
sS'DAQmx_Val_DoNotInvertPolarity'
p28761
S'0'
p28762
sS'DAQmxErrorInvalidSwitchChan'
p28763
S'(-200181)'
p28764
sS'DAQmxErrorSampleValueOutOfRange'
p28765
S'(-200490)'
p28766
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_128x1_Mux'
p28767
S'"2530/1-Wire 128x1 Mux"'
p28768
sS'DAQmx_Val_Ohms'
p28769
S'10384'
p28770
sS'DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty'
p28771
S'(-200642)'
p28772
sS'DAQmxErrorDigFilterIntervalAlreadyCfgd'
p28773
S'(-200645)'
p28774
sS'DAQmx_Val_Switch_Topology_1128_Independent'
p28775
S'"1128/Independent"'
p28776
sS'DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList'
p28777
S'(-200210)'
p28778
sS'DAQmxErrorWriteNoOutputChansInTask'
p28779
S'(-200459)'
p28780
sS'DAQmxErrorUnexpectedIDFollowingSwitchChanName'
p28781
S'(-200532)'
p28782
sS'DAQmxErrorSessionCorruptedByDLLReload'
p28783
S'(-201095)'
p28784
sS'DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq'
p28785
S'(200028)'
p28786
sS'DAQmx_Val_Pulse_Time'
p28787
S'10269'
p28788
sS'DAQmx_Dev_ProductType'
p28789
S'0x0631'
p28790
sS'DAQmxErrorTEDSMultipleCalTemplatesNotSupported'
p28791
S'(-200755)'
p28792
sS'DAQmx_SampClk_DigFltr_TimebaseRate'
p28793
S'0x2221'
p28794
sS'DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg'
p28795
S'(-200771)'
p28796
sS'DAQmx_Val_20MHzTimebase'
p28797
S'12537'
p28798
sS'DAQmx_AI_DataXferMech'
p28799
S'0x1821'
p28800
sS'DAQmxWarningPALPhysicalBufferFull'
p28801
S'(50409)'
p28802
sS'DAQmx_Write_NumChans'
p28803
S'0x217E'
p28804
sS'DAQmx_Val_DC'
p28805
S'10050'
p28806
sS'DAQmx_Val_DI'
p28807
S'10151'
p28808
sS'DAQmx_Val_FromTEDS'
p28809
S'12516'
p28810
sS'DAQmx_AI_Freq_ThreshVoltage'
p28811
S'0x0815'
p28812
sS'DAQmx_AI_InputSrc'
p28813
S'0x2198'
p28814
sS'DAQmx_Val_DO'
p28815
S'10153'
p28816
sS'DAQmxErrorSampRateTooLow'
p28817
S'(-200331)'
p28818
sS'DAQmxErrorPFI0UsedForAnalogAndDigitalSrc'
p28819
S'(-200330)'
p28820
sS'DAQmxErrorBufferedOperationsNotSupportedOnSelectedLines'
p28821
S'(-201062)'
p28822
sS'DAQmx_CI_Encoder_DecodingType'
p28823
S'0x21E6'
p28824
sS'DAQmxErrorInvalidTimeoutVal'
p28825
S'(-200453)'
p28826
sS'DAQmxErrorMeasuredBridgeOffsetTooHigh'
p28827
S'(-200788)'
p28828
sS'DAQmxErrorInvalidNumberInRepeatStatementInList'
p28829
S'(-200049)'
p28830
sS'DAQmxErrorMStudioNoForwardPolyScaleCoeffs'
p28831
S'(-200783)'
p28832
sS'DAQmxErrorValueNotInSet'
p28833
S'(-54022)'
p28834
sS'DAQmx_Val_Switch_Topology_2564_16_SPST'
p28835
S'"2564/16-SPST"'
p28836
sS'DAQmx_RealTime_WriteRecoveryMode'
p28837
S'0x231A'
p28838
sS'DAQmxErrorPALPhysicalBufferFull'
p28839
S'(-50409)'
p28840
sS'DAQmxWarningInvalidCalConstValueForAO'
p28841
S'(200042)'
p28842
sS'DAQmxErrorPropertyNotSupportedNotInputTask'
p28843
S'(-200457)'
p28844
sS'DAQmxWarningInvalidCalConstValueForAI'
p28845
S'(200041)'
p28846
sS'DAQmxErrorPropertyValNotSupportedByHW'
p28847
S'(-200355)'
p28848
sS'DAQmx_AI_Resolution'
p28849
S'0x1765'
p28850
sS'DAQmxErrorInvalidSCCModuleForSlotSpecd'
p28851
S'(-201080)'
p28852
sS'DAQmxErrorInvalidChannelNameInList'
p28853
S'(-200050)'
p28854
sS'DAQmx_Val_InvertPolarity'
p28855
S'1'
p28856
sS'DAQmxErrorDifferentPrptyValsNotSupportedOnDev'
p28857
S'(-200629)'
p28858
sS'DAQmx_CI_Freq_Units'
p28859
S'0x18A1'
p28860
sS'DAQmxErrorInvalidDeviceIDInList'
p28861
S'(-200207)'
p28862
sS'DAQmxErrorIncorrectReadFunction'
p28863
S'(-200100)'
p28864
sS'DAQmxWarningPALBadCount'
p28865
S'(50008)'
p28866
sS'DAQmxErrorPROMOnTEDSAlreadyWritten'
p28867
S'(-200823)'
p28868
sS'DAQmxErrorPALThreadAlreadyDead'
p28869
S'(-50604)'
p28870
sS'DAQmx_AI_RTD_Type'
p28871
S'0x1032'
p28872
sS'DAQmxErrorWfmNameSameAsScriptName'
p28873
S'(-200634)'
p28874
sS'DAQmx_Val_Position_RVDT'
p28875
S'10353'
p28876
sS'DAQmx_Exported_ChangeDetectEvent_OutputTerm'
p28877
S'0x2197'
p28878
sS'DAQmx_Val_AnlgWin'
p28879
S'10103'
p28880
sS'DAQmx_Val_PatternDoesNotMatch'
p28881
S'10253'
p28882
sS'DAQmxErrorInvalidTEDSPhysChanNotAI'
p28883
S'(-200969)'
p28884
sS'DAQmx_Val_HWTimedSinglePoint'
p28885
S'12522'
p28886
sS'DAQmxErrorOperationNotPermittedWhileScanning'
p28887
S'(-200176)'
p28888
sS'DAQmx_Val_AIHoldCmpltEvent'
p28889
S'12493'
p28890
sS'DAQmxErrorAIMinTooLarge'
p28891
S'(-200577)'
p28892
sS'DAQmxErrorSampClkRateMustBeSpecd'
p28893
S'(-201087)'
p28894
sS'DAQmx_DigPattern_StartTrig_When'
p28895
S'0x1411'
p28896
sS'DAQmxErrorRoutingHardwareBusy_Routing'
p28897
S'(-89123)'
p28898
sS'DAQmxWarningSampClkRateTooLow'
p28899
S'(200027)'
p28900
sS'DAQmx_AO_Voltage_Units'
p28901
S'0x1184'
p28902
sS'DAQmx_Val_Switch_Topology_2530_4_Wire_32x1_Mux'
p28903
S'"2530/4-Wire 32x1 Mux"'
p28904
sS'DAQmxErrorLabVIEWEmptyTaskOrChans'
p28905
S'(-200429)'
p28906
sS'DAQmxErrorExportTwoSignalsOnSameTerminal'
p28907
S'(-200607)'
p28908
sS'DAQmx_SampClk_Timebase_Src'
p28909
S'0x1308'
p28910
sS'DAQmx_Val_Switch_Topology_2527_4_Wire_16x1_Mux'
p28911
S'"2527/4-Wire 16x1 Mux"'
p28912
sS'DAQmxErrorCabledModuleNotCapableOfRoutingAI'
p28913
S'(-200151)'
p28914
sS'DAQmx_SampClk_ActiveEdge'
p28915
S'0x1301'
p28916
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot2'
p28917
S'(-200700)'
p28918
sS'DAQmxWarningPropertyVersionNew'
p28919
S'(200024)'
p28920
sS'DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev'
p28921
S'(-200861)'
p28922
sS'DAQmxErrorInvalidAOOffsetCalConst'
p28923
S'(-200719)'
p28924
sS'DAQmx_PhysicalChan_TEDS_SerialNum'
p28925
S'0x21DC'
p28926
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_128x1_Mux'
p28927
S'"1130/2-Wire 128x1 Mux"'
p28928
sS'DAQmx_Buf_Input_OnbrdBufSize'
p28929
S'0x230A'
p28930
sS'DAQmx_Val_External'
p28931
S'10167'
p28932
sS'DAQmx_CI_Period_StartingEdge'
p28933
S'0x0852'
p28934
sS'DAQmxErrorResourcesInUseForRouteInTask_Routing'
p28935
S'(-89138)'
p28936
sS'DAQmxErrorPhysicalChannelNotSpecified'
p28937
S'(-200099)'
p28938
sS'DAQmxErrorWriteDataTypeTooSmall'
p28939
S'(-200790)'
p28940
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Dual_32x1_Mux'
p28941
S'"2576/2-Wire Dual 32x1 Mux"'
p28942
sS'DAQmxErrorAOMinMaxNotInGainRange'
p28943
S'(-200760)'
p28944
sS'DAQmxErrorEmptyStringTermNameNotSupported'
p28945
S'(-200797)'
p28946
sS'DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript'
p28947
S'(-201014)'
p28948
sS'DAQmxErrorWriteWhenTaskNotRunningCOTime'
p28949
S'(-200874)'
p28950
sS'DAQmx_ReadWaitMode'
p28951
S'0x2232'
p28952
sS'DAQmx_Sys_Scales'
p28953
S'0x1266'
p28954
sS'DAQmxErrorPALTransferStopped'
p28955
S'(-50404)'
p28956
sS'DAQmx_AnlgLvl_PauseTrig_When'
p28957
S'0x1371'
p28958
sS'DAQmx_Val_BurstHandshake'
p28959
S'12548'
p28960
sS'_NI_int8_DEFINED_'
p28961
g28661
sS'DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth'
p28962
S'0x21FC'
p28963
sS'DAQmxErrorDSFStopClock'
p28964
S'(-200632)'
p28965
sS'DAQmxErrorDevAbsentOrUnavailable_Routing'
p28966
S'(-89130)'
p28967
sS'DAQmx_Read_NumChans'
p28968
S'0x217B'
p28969
sS'DAQmx_Val_Switch_Topology_1192_8_SPDT'
p28970
S'"1192/8-SPDT"'
p28971
sS'DAQmx_Val_Software'
p28972
S'10292'
p28973
sS'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate'
p28974
S'0x2226'
p28975
sS'DAQmxErrorInvalidEscapeCharacterInString'
p28976
S'(-201068)'
p28977
sS'DAQmxErrorCOWriteFreqOutOfRange'
p28978
S'(-200685)'
p28979
sS'DAQmxErrorWriteToTEDSNotSupportedOnRT'
p28980
S'(-200828)'
p28981
sS'DAQmxErrorAutoStartReadNotAllowedEventRegistered'
p28982
S'(-200984)'
p28983
sS'DAQmx_Val_Linear'
p28984
S'10447'
p28985
sS'DAQmx_CI_Period_Units'
p28986
S'0x18A3'
p28987
sS'DAQmxErrorPALComponentNeverLoaded'
p28988
S'(-50261)'
p28989
sS'DAQmx_Dev_CO_PhysicalChans'
p28990
S'0x2325'
p28991
sS'DAQmx_AI_Lowpass_CutoffFreq'
p28992
S'0x1803'
p28993
sS'DAQmx_Val_CurrReadPos'
p28994
S'10425'
p28995
sS'DAQmx_CI_Period_Term'
p28996
S'0x18A4'
p28997
sS'DAQmx_AO_DevScalingCoeff'
p28998
S'0x1931'
p28999
sS'DAQmxErrorIncapableSCCDigitizingDeviceSpecd'
p29000
S'(-201049)'
p29001
sS'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing'
p29002
S'(-89145)'
p29003
sS'DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc'
p29004
S'0x220C'
p29005
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_Quad_16x1_Mux'
p29006
S'"2530/2-Wire Quad 16x1 Mux"'
p29007
sS'DAQmx_Val_Switch_Topology_1128_1_Wire_64x1_Mux'
p29008
S'"1128/1-Wire 64x1 Mux"'
p29009
sS'DAQmxErrorAIMaxNotSpecified'
p29010
S'(-200695)'
p29011
sS'DAQmxErrorNoSyncPulseAnotherTaskRunning'
p29012
S'(-200761)'
p29013
sS'DAQmx_SwitchChan_MaxDCCarryPwr'
p29014
S'0x0643'
p29015
sS'DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing'
p29016
S'(-89122)'
p29017
sS'DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript'
p29018
S'(-201009)'
p29019
sS'DAQmx_AI_Rng_Low'
p29020
S'0x1816'
p29021
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_16x16_Matrix'
p29022
S'"1129/2-Wire 16x16 Matrix"'
p29023
sS'DAQmx_CI_Count'
p29024
S'0x0148'
p29025
sS'DAQmx_Val_NoBridge'
p29026
S'10228'
p29027
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc'
p29028
S'0x2211'
p29029
sS'DAQmx_Val_Save_Overwrite'
p29030
S'(1<<0)'
p29031
sS'DAQmx_Val_USBbulk'
p29032
S'12590'
p29033
sS'DAQmx_AnlgEdge_StartTrig_Slope'
p29034
S'0x1397'
p29035
sS'DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput'
p29036
S'(-200964)'
p29037
sS'DAQmx_Val_Switch_Topology_1193_Quad_4x1_Terminated_Mux'
p29038
S'"1193/Quad 4x1 Terminated Mux"'
p29039
sS'DAQmxErrorCouldNotReserveLinesForSCXIControl'
p29040
S'(-200158)'
p29041
sS'DAQmx_Exported_CtrOutEvent_OutputTerm'
p29042
S'0x1717'
p29043
sS'DAQmx_Exported_SyncPulseEvent_OutputTerm'
p29044
S'0x223C'
p29045
sS'DAQmxErrorRangeSyntaxNumberTooBig'
p29046
S'(-200605)'
p29047
sS'DAQmx_AI_Excit_VoltageOrCurrent'
p29048
S'0x17F6'
p29049
sS'DAQmx_Val_USB'
p29050
S'12586'
p29051
sS'DAQmx_DigEdge_RefTrig_Src'
p29052
S'0x1434'
p29053
sS'DAQmxErrorCantGetPropertyTaskNotRunning'
p29054
S'(-200973)'
p29055
sS'DAQmxErrorCannotSelfCalDuringExtCal'
p29056
S'(-200522)'
p29057
sS'DAQmxErrorPropertyConflictsWithScale'
p29058
S'(-201061)'
p29059
sS'DAQmxErrorInvalidIdentifierInListFollowingDeviceID'
p29060
S'(-200047)'
p29061
sS'DAQmxErrorPALTransferOverwritten'
p29062
S'(-50410)'
p29063
sS'DAQmx_AO_Max'
p29064
S'0x1186'
p29065
sS'DAQmx_DigLvl_PauseTrig_DigFltr_Enable'
p29066
S'0x2228'
p29067
sS'DAQmxErrorCalibrationFailed'
p29068
S'(-200157)'
p29069
sS'DAQmxErrorInvalidAOChanOrder'
p29070
S'(-200219)'
p29071
sS'DAQmxErrorInvalidCalLowPassCutoffFreq'
p29072
S'(-200857)'
p29073
sS'DAQmxErrorInvalidGainBasedOnMinMax'
p29074
S'(-200258)'
p29075
sS'DAQmxErrorInvalidAIChanOrder'
p29076
S'(-200618)'
p29077
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_4x6_Matrix'
p29078
S'"2501/2-Wire 4x6 Matrix"'
p29079
sS'DAQmx_Val_RisingSlope'
p29080
S'10280'
p29081
sS'DAQmxErrorPALComponentCircularDependency'
p29082
S'(-50259)'
p29083
sS'DAQmxErrorDigFilterIntervalNotEqualForLines'
p29084
S'(-200646)'
p29085
sS'DAQmx_DO_InvertLines'
p29086
S'0x1133'
p29087
sS'DAQmxErrorMultipleActivePhysChansNotSupported'
p29088
S'(-200752)'
p29089
sS'DAQmxErrorInvalidRangeOfObjectsSyntaxInString'
p29090
S'(-200498)'
p29091
sS'DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint'
p29092
S'(200037)'
p29093
sS'DAQmxErrorNoPathToDisconnect'
p29094
S'(-200182)'
p29095
sS'DAQmxErrorEEPROMDataInvalid'
p29096
S'(-200152)'
p29097
sS'DAQmx_Val_Switch_Topology_1191_Quad_4x1_Mux'
p29098
S'"1191/Quad 4x1 Mux"'
p29099
sS'DAQmx_Dev_PXI_SlotNum'
p29100
S'0x232A'
p29101
sS'DAQmx_AO_DAC_Offset_ExtSrc'
p29102
S'0x2254'
p29103
sS'DAQmx_Val_Temp_RTD'
p29104
S'10301'
p29105
sS'DAQmx_AnlgWin_PauseTrig_When'
p29106
S'0x1374'
p29107
sS'DAQmxErrorAIMinTooSmall'
p29108
S'(-200578)'
p29109
sS'DAQmx_AIConv_Timebase_Src'
p29110
S'0x1339'
p29111
sS'DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript'
p29112
S'(-201008)'
p29113
sS'DAQmx_AI_Thrmstr_R1'
p29114
S'0x1061'
p29115
sS'DAQmx_Val_ActiveLow'
p29116
S'10096'
p29117
sS'DAQmx_SampQuant_SampPerChan'
p29118
S'0x1310'
p29119
sS'DAQmx_Val_Task_Abort'
p29120
S'6'
p29121
sS'DAQmx_AI_MeasType'
p29122
S'0x0695'
p29123
sS'DAQmxErrorInvalidExtClockFreqAndDivCombo'
p29124
S'(-200379)'
p29125
sS'DAQmxErrorFREQOUTCannotProduceDesiredFrequency'
p29126
S'(-200148)'
p29127
sS'DAQmxErrorNoRegenWhenUsingBrdMem'
p29128
S'(-200656)'
p29129
sS'DAQmx_Val_Switch_Topology_1130_4_Wire_64x1_Mux'
p29130
S'"1130/4-Wire 64x1 Mux"'
p29131
sS'DAQmxErrorWaitUntilDoneDoesNotIndicateDone'
p29132
S'(-200560)'
p29133
sS'DAQmxErrorTEDSIncompatibleSensorAndMeasType'
p29134
S'(-200756)'
p29135
sS'DAQmx_Val_Switch_Topology_2599_2_SPDT'
p29136
S'"2599/2-SPDT"'
p29137
sS'DAQmx_RealTime_NumOfWarmupIters'
p29138
S'0x22ED'
p29139
sS'DAQmx_AI_RawDataCompressionType'
p29140
S'0x22D8'
p29141
sS'DAQmx_AI_SoundPressure_Units'
p29142
S'0x1528'
p29143
sS'_NI_uInt16_DEFINED_'
p29144
g28661
sS'DAQmxWarningInputTerminationOverloaded'
p29145
S'(200004)'
p29146
sS'DAQmx_Val_DegC'
p29147
S'10143'
p29148
sS'DAQmxErrorEmptyPhysChanInPowerUpStatesArray'
p29149
S'(-200626)'
p29150
sS'DAQmx_Val_DegF'
p29151
S'10144'
p29152
sS'DAQmxErrorSampRateTooHigh'
p29153
S'(-200332)'
p29154
sS'DAQmx_Val_DegR'
p29155
S'10145'
p29156
sS'DAQmx_Val_Internal'
p29157
S'10200'
p29158
sS'DAQmx_CI_TwoEdgeSep_Units'
p29159
S'0x18AC'
p29160
sS'DAQmx_SwitchScan_BreakMode'
p29161
S'0x1247'
p29162
sS'DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO'
p29163
S'(-200769)'
p29164
sS'DAQmxErrorPALRetryLimitExceeded'
p29165
S'(-50412)'
p29166
sS'DAQmxErrorDACRngLowNotMinusRefValNorZero'
p29167
S'(-200449)'
p29168
sS'DAQmxErrorMasterTbRateMasterTbSrcMismatch'
p29169
S'(-200307)'
p29170
sS'DAQmx_Write_SpaceAvail'
p29171
S'0x1460'
p29172
sS'DAQmx_SwitchChan_MaxACSwitchCurrent'
p29173
S'0x0646'
p29174
sS'DAQmx_Val_Strain_Gage'
p29175
S'10300'
p29176
sS'DAQmxErrorCannotCreateChannelAfterTaskVerified'
p29177
S'(-200160)'
p29178
sS'DAQmx_Val_E_Type_TC'
p29179
S'10055'
p29180
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_4x32_Matrix'
p29181
S'"2530/1-Wire 4x32 Matrix"'
p29182
sS'DAQmx_Val_T_Type_TC'
p29183
S'10086'
p29184
sS'DAQmx_AI_Impedance'
p29185
S'0x0062'
p29186
sS'DAQmx_SwitchDev_SwitchChanList'
p29187
S'0x18E7'
p29188
sS'DAQmx_Val_MostRecentSamp'
p29189
S'10428'
p29190
sS'DAQmxErrorInvalidSampAndMasterTimebaseRateCombo'
p29191
S'(-200173)'
p29192
sS'DAQmxErrorFinitePulseTrainNotPossible'
p29193
S'(-200305)'
p29194
sS'DAQmxErrorExpectedConnectOperatorInList'
p29195
S'(-200062)'
p29196
sS'DAQmx_Read_AvailSampPerChan'
p29197
S'0x1223'
p29198
sS'DAQmxErrorInvalidCalConstCalADCAdjustment'
p29199
S'(-200520)'
p29200
sS'DAQmxErrorInvalidSampRateConsiderRIS'
p29201
S'(-200420)'
p29202
sS'DAQmx_Val_Switch_Topology_2566_16_SPDT'
p29203
S'"2566/16-SPDT"'
p29204
sS'DAQmxErrorIncapableTEDSInterfaceControllingDeviceSpecd'
p29205
S'(-201051)'
p29206
sS'DAQmx_Val_Switch_Topology_1130_4_Wire_Quad_16x1_Mux'
p29207
S'"1130/4-Wire Quad 16x1 Mux"'
p29208
sS'DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans'
p29209
S'0x2195'
p29210
sS'DAQmx_Dev_SerialNum'
p29211
S'0x0632'
p29212
sS'DAQmx_AnlgEdge_StartTrig_Hyst'
p29213
S'0x1395'
p29214
sS'DAQmx_Val_AHighBHigh'
p29215
S'10040'
p29216
sS'DAQmxErrorGlobalTaskNameAlreadyChanName'
p29217
S'(-200919)'
p29218
sS'DAQmxErrorTableScalePreScaledValsNotSpecd'
p29219
S'(-200349)'
p29220
sS'DAQmxErrorPALBadReadOffset'
p29221
S'(-50010)'
p29222
sS'DAQmxErrorZeroBasedChanIndexInvalid'
p29223
S'(-200612)'
p29224
sS'DAQmxErrorNonBufferedAOAndDataXferNotProgIO'
p29225
S'(-200768)'
p29226
sS'DAQmx_AI_ACExcit_SyncEnable'
p29227
S'0x0102'
p29228
sS'DAQmxErrorNoChansOfGivenTypeInTask'
p29229
S'(-200611)'
p29230
sS'DAQmxErrorChanNotInTask'
p29231
S'(-200486)'
p29232
sS'DAQmxErrorDuplicateDeviceIDInListWhenSettling'
p29233
S'(-200057)'
p29234
sS'DAQmx_Val_OpenCollector'
p29235
S'12574'
p29236
sS'DAQmxErrorSelfCalDateTimeNotDAQmx'
p29237
S'(-200541)'
p29238
sS'__CFUNCPTRVAR'
p29239
S'__cdecl'
p29240
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_Dual_32x1_Mux'
p29241
S'"2530/2-Wire Dual 32x1 Mux"'
p29242
sS'DAQmx_CI_Freq_DigFltr_TimebaseSrc'
p29243
S'0x21E9'
p29244
sS'DAQmxErrorNoSyncPulseExtSampClkTimebase'
p29245
S'(-200762)'
p29246
sS'DAQmxErrorValueOutOfRange'
p29247
S'(-54021)'
p29248
sS'DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq'
p29249
S'(-200734)'
p29250
sS'DAQmxWarningPALTransferNotInProgress'
p29251
S'(50402)'
p29252
sS'DAQmxErrorBufferWithHWTimedSinglePointSampMode'
p29253
S'(-200690)'
p29254
sS'DAQmxErrorWaveformPreviouslyAllocated'
p29255
S'(-200310)'
p29256
sS'DAQmxErrorAnalogWaveformExpected'
p29257
S'(-200095)'
p29258
sS'DAQmx_DigLvl_PauseTrig_Src'
p29259
S'0x1379'
p29260
sS'DAQmx_Val_Task_Commit'
p29261
S'3'
p29262
sS'DAQmx_AnlgEdge_StartTrig_Src'
p29263
S'0x1398'
p29264
sS'DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove'
p29265
S'(-200702)'
p29266
sS'DAQmxErrorTaskVersionNew'
p29267
S'(-200470)'
p29268
sS'DAQmx_AI_Rng_High'
p29269
S'0x1815'
p29270
sS'DAQmxErrorPALSyncTimedOut'
p29271
S'(-50550)'
p29272
sS'DAQmxErrorTrigLineNotFoundSingleDevRoute'
p29273
S'(-200574)'
p29274
sS'DAQmx_Dev_AO_PhysicalChans'
p29275
S'0x231F'
p29276
sS'DAQmxErrorFullySpecifiedPathInListContainsRange'
p29277
S'(-200060)'
p29278
sS'DAQmxWarningValueNotInSet'
p29279
S'(54022)'
p29280
sS'DAQmx_Val_Switch_Topology_2575_2_Wire_98x1_Mux'
p29281
S'"2575/2-Wire 98x1 Mux"'
p29282
sS'DAQmx_CI_Freq_StartingEdge'
p29283
S'0x0799'
p29284
sS'DAQmxErrorCOCannotKeepUpInHWTimedSinglePointPolled'
p29285
S'(-201022)'
p29286
sS'DAQmxErrorPALMemoryFull'
p29287
S'(-50352)'
p29288
sS'DAQmxErrorDSFFailedToResetStream'
p29289
S'(-200586)'
p29290
sS'DAQmxErrorInvalidActionInControlTask'
p29291
S'(-200538)'
p29292
sS'DAQmxErrorMarkerPositionNotAlignedInScript'
p29293
S'(-200031)'
p29294
sS'DAQmx_Val_None'
p29295
S'10230'
p29296
sS'DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask'
p29297
S'(-200987)'
p29298
sS'DAQmxWarningPALBadWriteMode'
p29299
S'(50012)'
p29300
sS'DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT'
p29301
S'(-200844)'
p29302
sS'DAQmxErrorPortConfiguredForOutput'
p29303
S'(-200121)'
p29304
sS'DAQmxErrorParsingTEDSData'
p29305
S'(-200753)'
p29306
sS'DAQmxWarningPALOSFault'
p29307
S'(50202)'
p29308
sS'DAQmx_Val_ReferenceTrigger'
p29309
S'12490'
p29310
sS'DAQmx_Write_RegenMode'
p29311
S'0x1453'
p29312
sS'DAQmx_Val_Switch_Topology_2527_2_Wire_32x1_Mux'
p29313
S'"2527/2-Wire 32x1 Mux"'
p29314
sS'DAQmxErrorInvalidTimingType'
p29315
S'(-200300)'
p29316
sS'DAQmxErrorBufferNameExpectedInScript'
p29317
S'(-200026)'
p29318
sS'DAQmxErrorConfiguredTEDSInterfaceDevNotDetected'
p29319
S'(-200958)'
p29320
sS'DAQmx_AO_ReglitchEnable'
p29321
S'0x0133'
p29322
sS'DAQmx_SwitchDev_Topology'
p29323
S'0x193D'
p29324
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing'
p29325
S'(-89143)'
p29326
sS'DAQmx_AI_Strain_Units'
p29327
S'0x0981'
p29328
sS'DAQmxErrorTaskMissingChannelProperty'
p29329
S'(-201070)'
p29330
sS'DAQmxErrorSCCCarrierSpecdIsMissing'
p29331
S'(-201050)'
p29332
sS'DAQmx_Scale_Poly_ForwardCoeff'
p29333
S'0x1234'
p29334
sS'DAQmxErrorNoChansSpecdForChangeDetect'
p29335
S'(-200751)'
p29336
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRange'
p29337
S'(-200872)'
p29338
sS'DAQmx_SwitchChan_Impedance'
p29339
S'0x0641'
p29340
sS'DAQmxErrorEventDelayOutOfRange'
p29341
S'(-200345)'
p29342
sS'DAQmxErrorPALResourceBusy'
p29343
S'(-50106)'
p29344
sS'DAQmx_DigEdge_WatchdogExpirTrig_Edge'
p29345
S'0x21A5'
p29346
sS'DAQmx_AnlgWin_StartTrig_Top'
p29347
S'0x1403'
p29348
sS'DAQmx_Val_Low'
p29349
S'10214'
p29350
sS'DAQmxErrorChannelNameGenerationNumberTooBig'
p29351
S'(-200600)'
p29352
sS'DAQmx_Val_FirstSample'
p29353
S'10424'
p29354
sS'DAQmxErrorExtSampClkSrcNotSpecified'
p29355
S'(-200303)'
p29356
sS'DAQmxErrorPortConfiguredForInput'
p29357
S'(-200120)'
p29358
sS'DAQmx_DigEdge_RefTrig_Edge'
p29359
S'0x1430'
p29360
sS'DAQmx_Exported_HshkEvent_OutputTerm'
p29361
S'0x22BA'
p29362
sS'DAQmx_Read_AutoStart'
p29363
S'0x1826'
p29364
sS'DAQmx_ExtCal_LastTemp'
p29365
S'0x1867'
p29366
sS'DAQmxErrorPALSoftwareFault'
p29367
S'(-50150)'
p29368
sS'DAQmxErrorInterconnectBridgeRouteReserved'
p29369
S'(-54012)'
p29370
sS'DAQmx_Val_ChanForAllLines'
p29371
g28856
sS'DAQmx_Val_HandshakeTriggerAsserts'
p29372
S'12552'
p29373
sS'DAQmxErrorExtSampClkRateTooHighForBackplane'
p29374
S'(-200274)'
p29375
sS'DAQmx_CI_SemiPeriod_Units'
p29376
S'0x18AF'
p29377
sS'DAQmxErrorHWTimedAndDataXferPIO'
p29378
S'(-201026)'
p29379
sS'DAQmx_Read_RelativeTo'
p29380
S'0x190A'
p29381
sS'DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback'
p29382
S'(-200968)'
p29383
sS'DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition'
p29384
S'(-200294)'
p29385
sS'DAQmxErrorAIDuringCounter0DMAConflict'
p29386
S'(-200078)'
p29387
sS'DAQmx_DigEdge_ArmStartTrig_DigSync_Enable'
p29388
S'0x2231'
p29389
sS'DAQmxWarningPotentialGlitchDuringWrite'
p29390
S'(200015)'
p29391
sS'DAQmx_AI_Bridge_InitialVoltage'
p29392
S'0x17ED'
p29393
sS'DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth'
p29394
S'0x220B'
p29395
sS'DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize'
p29396
S'(-200895)'
p29397
sS'DAQmx_Val_Switch_Topology_2569_100_SPST'
p29398
S'"2569/100-SPST"'
p29399
sS'DAQmx_AI_RVDT_Units'
p29400
S'0x0877'
p29401
sS'DAQmx_Val_Current'
p29402
S'10134'
p29403
sS'DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges'
p29404
S'(-200357)'
p29405
sS'DAQmx_Val_N_Type_TC'
p29406
S'10077'
p29407
sS'DAQmxErrorTermWithoutDevInMultiDevTask'
p29408
S'(-200853)'
p29409
sS'DAQmxErrorNoHWTimingWithOnDemand'
p29410
S'(-200731)'
p29411
sS'DAQmx_SampClk_Rate'
p29412
S'0x1344'
p29413
sS'DAQmx_Val_Task_Unreserve'
p29414
S'5'
p29415
sS'DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType'
p29416
S'(-200912)'
p29417
sS'DAQmxErrorExtSampClkRateTooLowForClkIn'
p29418
S'(-200275)'
p29419
sS'DAQmxErrorInvalidReadPosDuringRIS'
p29420
S'(-200419)'
p29421
sS'DAQmxErrorUnexpectedIDFollowingRelayNameInList'
p29422
S'(-200530)'
p29423
sS'DAQmxErrorTEDSNotSupported'
p29424
S'(-200741)'
p29425
sS'DAQmxErrorWriteBufferTooSmall'
p29426
S'(-200234)'
p29427
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod'
p29428
S'(-200993)'
p29429
sS'DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth'
p29430
S'0x2206'
p29431
sS'DAQmxError3InputPortCombinationGivenSampTimingType653x'
p29432
S'(-200931)'
p29433
sS'DAQmxErrorReadNotCompleteBefore3SampClkEdges'
p29434
S'(-200843)'
p29435
sS'DAQmxErrorRefTrigMasterSessionUnavailable'
p29436
S'(-200682)'
p29437
sS'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc'
p29438
S'0x21FD'
p29439
sS'DAQmxErrorSwitchDifferentSettlingTimeWhenScanning'
p29440
S'(-200178)'
p29441
sS'DAQmx_Val_Once'
p29442
S'10244'
p29443
sS'DAQmxErrorRefTrigDigPatternChanNotTristated'
p29444
S'(-200888)'
p29445
sS'DAQmx_AnlgWin_RefTrig_When'
p29446
S'0x1427'
p29447
sS'DAQmxErrorCanNotPerformOpWhileTaskRunning'
p29448
S'(-200479)'
p29449
sS'DAQmxErrorRangeWithTooManyObjects'
p29450
S'(-200592)'
p29451
sS'DAQmxErrorDevAlreadyInTask'
p29452
S'(-200481)'
p29453
sS'DAQmx_Val_OnbrdMemCustomThreshold'
p29454
S'12577'
p29455
sS'DAQmxErrorInterruptsInsufficientDataXferMech'
p29456
S'(-200322)'
p29457
sS'DAQmx_AI_Thrmcpl_CJCVal'
p29458
S'0x1036'
p29459
sS'DAQmxErrorCAPIReservedParamNotZero'
p29460
S'(-200491)'
p29461
sS'DAQmx_Val_CounterOutputEvent'
p29462
S'12494'
p29463
sS'DAQmx_Scale_Descr'
p29464
S'0x1226'
p29465
sS'DAQmx_Val_Switch_Topology_1190_Quad_4x1_Mux'
p29466
S'"1190/Quad 4x1 Mux"'
p29467
sS'DAQmxErrorSCXI1126ThreshHystCombination'
p29468
S'(-200223)'
p29469
sS'DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate'
p29470
S'0x21FE'
p29471
sS'DAQmx_AIConv_TimebaseDiv'
p29472
S'0x1335'
p29473
sS'DAQmxErrorSMIOPauseTriggersNotSupportedWithChannelExpansion'
p29474
S'(-201019)'
p29475
sS'DAQmxErrorMemMapOnlyForProgIOXfer'
p29476
S'(-200169)'
p29477
sS'DAQmxErrorVirtualTEDSDataFileError'
p29478
S'(-200827)'
p29479
sS'DAQmx_Val_Switch_Topology_1193_Quad_8x1_Mux'
p29480
S'"1193/Quad 8x1 Mux"'
p29481
sS'DAQmxErrorWhenAcqCompAndNoRefTrig'
p29482
S'(-200864)'
p29483
sS'DAQmxErrorTrigWindowAIMinAIMaxCombo'
p29484
S'(-200423)'
p29485
sS'DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType'
p29486
S'(-200906)'
p29487
sS'DAQmx_AI_Thrmcpl_CJCChan'
p29488
S'0x1034'
p29489
sS'DAQmxErrorReadAllAvailableDataWithoutBuffer'
p29490
S'(-200340)'
p29491
sS'DAQmx_CI_CountEdges_DigFltr_Enable'
p29492
S'0x21F6'
p29493
sS'DAQmx_Val_Switch_Topology_2503_1_Wire_48x1_Mux'
p29494
S'"2503/1-Wire 48x1 Mux"'
p29495
sS'DAQmxErrorIncorrectNumChannelsToWrite'
p29496
S'(-200101)'
p29497
sS'DAQmxWarningPALBadThreadMultitask'
p29498
S'(50019)'
p29499
sS'DAQmx_Write_CurrWritePos'
p29500
S'0x1458'
p29501
sS'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2'
p29502
S'(-200705)'
p29503
sS'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate'
p29504
S'0x2208'
p29505
sS'DAQmx_Val_Rising'
p29506
S'10280'
p29507
sS'DAQmx_Val_2Wire'
p29508
S'2'
p29509
sS'DAQmxErrorDigFilterAndSyncBothEnabled'
p29510
S'(-200770)'
p29511
sS'DAQmxErrorPALBadWriteMode'
p29512
S'(-50012)'
p29513
sS'DAQmxErrorMinAndMaxNotSymmetric'
p29514
S'(-200266)'
p29515
sS'DAQmx_Val_Task_Verify'
p29516
g29509
sS'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt'
p29517
S'(-200803)'
p29518
sS'DAQmx_Val_Switch_Topology_2598_Dual_Transfer'
p29519
S'"2598/Dual Transfer"'
p29520
sS'DAQmx_CI_PulseWidth_Units'
p29521
S'0x0823'
p29522
sS'DAQmxErrorPALFileFault'
p29523
S'(-50209)'
p29524
sS'DAQmx_Val_Switch_Topology_1169_100_SPST'
p29525
S'"1169/100-SPST"'
p29526
sS'DAQmxErrorGetPropertyNotInputBufferedTask'
p29527
S'(-200455)'
p29528
sS'DAQmx_AO_DAC_Offset_Val'
p29529
S'0x2255'
p29530
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_4x64_Matrix'
p29531
S'"2532/2-Wire 4x64 Matrix"'
p29532
sS'DAQmx_Val_X4'
p29533
S'10092'
p29534
sS'DAQmx_Val_X1'
p29535
S'10090'
p29536
sS'DAQmx_Val_X2'
p29537
S'10091'
p29538
sS'DAQmx_RefClk_Src'
p29539
S'0x1316'
p29540
sS'DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks'
p29541
S'(-209803)'
p29542
sS'DAQmxErrorPALComponentBusy'
p29543
S'(-50264)'
p29544
sS'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev'
p29545
S'(-200806)'
p29546
sS'DAQmxWarningChanCalExpired'
p29547
S'(200043)'
p29548
sS'DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput'
p29549
S'(-200725)'
p29550
sS'DAQmx_Val_Pulse_Ticks'
p29551
S'10268'
p29552
sS'DAQmxErrorEmptyString'
p29553
S'(-200467)'
p29554
sS'DAQmxErrorOpNotSupportedWhenRefClkSrcNone'
p29555
S'(-200661)'
p29556
sS'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev'
p29557
S'(-200920)'
p29558
sS'_NI_int16_DEFINED_'
p29559
g28661
sS'DAQmxErrorInputFIFOOverflow'
p29560
S'(-200010)'
p29561
sS'DAQmx_CI_LinEncoder_InitialPos'
p29562
S'0x0915'
p29563
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled'
p29564
S'(-201024)'
p29565
sS'DAQmxErrorSamplesNoLongerAvailable'
p29566
S'(-200279)'
p29567
sS'DAQmx_Val_J_Type_TC'
p29568
S'10072'
p29569
sS'DAQmx_Val_Switch_Topology_1160_16_SPDT'
p29570
S'"1160/16-SPDT"'
p29571
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc'
p29572
S'0x21F3'
p29573
sS'DAQmxErrorDigDevChansSpecdInModeOtherThanParallel'
p29574
S'(-201035)'
p29575
sS'DAQmxErrorChanCalExpired'
p29576
S'(-200934)'
p29577
sS'DAQmxWarningAIConvRateTooLow'
p29578
S'(200018)'
p29579
sS'DAQmx_AI_Microphone_Sensitivity'
p29580
S'0x1536'
p29581
sS'DAQmxErrorSuitableTimebaseNotFoundTimeCombo2'
p29582
S'(-200746)'
p29583
sS'DAQmx_CI_TwoEdgeSep_SecondEdge'
p29584
S'0x0834'
p29585
sS'DAQmx_Val_Temp_TC'
p29586
S'10303'
p29587
sS'DAQmx_Val_Voltage_CustomWithExcitation'
p29588
S'10323'
p29589
sS'DAQmxErrorExtCalFunctionOutsideExtCalSession'
p29590
S'(-200439)'
p29591
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Quad_4x16_Matrix'
p29592
S'"1129/2-Wire Quad 4x16 Matrix"'
p29593
sS'DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning'
p29594
S'(-200960)'
p29595
sS'DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms'
p29596
S'(-200978)'
p29597
sS'DAQmxErrorRoutingPathNotAvailable'
p29598
S'(-200044)'
p29599
sS'DAQmxErrorCantMaintainExistingValueAOSync'
p29600
S'(-200793)'
p29601
sS'DAQmx_AI_ChanCal_ScaleType'
p29602
S'0x229C'
p29603
sS'DAQmxErrorDevCannotBeAccessed'
p29604
S'(-201003)'
p29605
sS'DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth'
p29606
S'0x2277'
p29607
sS'DAQmx_SampClk_Timebase_ActiveEdge'
p29608
S'0x18EC'
p29609
sS'DAQmxErrorMultiDevsInTask'
p29610
S'(-200558)'
p29611
sS'DAQmxErrorCVIFailedToLoadDAQmxDLL'
p29612
S'(-200397)'
p29613
sS'DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance'
p29614
S'(-200514)'
p29615
sS'DAQmxErrorInvalidDateTimeInEEPROM'
p29616
S'(-200501)'
p29617
sS'DAQmx_Val_Switch_Topology_2527_Independent'
p29618
S'"2527/Independent"'
p29619
sS'DAQmxErrorNoDevMemForWaveform'
p29620
S'(-200315)'
p29621
sS'DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning'
p29622
S'(-200994)'
p29623
sS'DAQmx_Val_Toggle'
p29624
S'10307'
p29625
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2'
p29626
S'(-200704)'
p29627
sS'DAQmx_AI_Dither_Enable'
p29628
S'0x0068'
p29629
sS'DAQmxWarningPALBadWriteCount'
p29630
S'(50014)'
p29631
sS'DAQmx_AnlgWin_StartTrig_Btm'
p29632
S'0x1402'
p29633
sS'DAQmxErrorPALValueConflict'
p29634
S'(-50000)'
p29635
sS'DAQmxErrorInvalidRelayName'
p29636
S'(-200202)'
p29637
sS'DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans'
p29638
S'0x2196'
p29639
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal'
p29640
S'(-200869)'
p29641
sS'DAQmx_Scale_Table_ScaledVals'
p29642
S'0x1236'
p29643
sS'DAQmxErrorScriptNameSameAsWfmName'
p29644
S'(-200633)'
p29645
sS'DAQmxErrorPALBusResetOccurred'
p29646
S'(-50800)'
p29647
sS'DAQmx_CI_Freq_Div'
p29648
S'0x0147'
p29649
sS'DAQmxErrorPropertyUnavailWhenUsingOnboardMemory'
p29650
S'(-200297)'
p29651
sS'DAQmxErrorCppCantRemoveInvalidEventHandler'
p29652
S'(-200590)'
p29653
sS'DAQmx_AI_ResistanceCfg'
p29654
S'0x1881'
p29655
sS'DAQmx_Cal_DevTemp'
p29656
S'0x223B'
p29657
sS'DAQmxErrorInputCfgFailedBecauseWatchdogExpired'
p29658
S'(-200712)'
p29659
sS'DAQmx_Val_Voltage'
p29660
S'10322'
p29661
sS'DAQmx_Exported_RefTrig_OutputTerm'
p29662
S'0x0590'
p29663
sS'DAQmxErrorPALBadCount'
p29664
S'(-50008)'
p29665
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_Dual_12x1_Mux'
p29666
S'"2503/2-Wire Dual 12x1 Mux"'
p29667
sS'DAQmx_Val_Table'
p29668
S'10450'
p29669
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove'
p29670
S'(-200703)'
p29671
sS'DAQmxErrorNoAvailTrigLinesOnDevice'
p29672
S'(-200227)'
p29673
sS'DAQmx_AnlgEdge_RefTrig_Lvl'
p29674
S'0x1422'
p29675
sS'DAQmxErrorCalFunctionNotSupported'
p29676
S'(-200445)'
p29677
sS'DAQmx_Val_PCIe'
p29678
S'13612'
p29679
sS'DAQmxErrorMemMapDataXferModeSampTimingCombo'
p29680
S'(-200260)'
p29681
sS'DAQmx_Val_Pt3750'
p29682
S'12481'
p29683
sS'DAQmxErrorSampClkRateUnavailable'
p29684
S'(-200660)'
p29685
sS'DAQmx_Exported_AIHoldCmpltEvent_PulsePolarity'
p29686
S'0x18EE'
p29687
sS'DAQmxErrorReadDataTypeTooSmall'
p29688
S'(-200789)'
p29689
sS'DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech'
p29690
S'(-200613)'
p29691
sS'DAQmx_Val_Open'
p29692
S'10437'
p29693
sS'DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth'
p29694
S'0x2224'
p29695
sS'DAQmx_Task_Channels'
p29696
S'0x1273'
p29697
sS'DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly'
p29698
S'(-200928)'
p29699
sS'DAQmx_Val_Pt3916'
p29700
S'10069'
p29701
sS'DAQmx_Exported_SampClkTimebase_OutputTerm'
p29702
S'0x18F9'
p29703
sS'DAQmxErrorInvalidAttributeValue'
p29704
S'(-200077)'
p29705
sS'DAQmx_Val_Pt3911'
p29706
S'12482'
p29707
sS'DAQmxErrorGlobalChanNameAlreadyTaskName'
p29708
S'(-200918)'
p29709
sS'DAQmxErrorInversionNotSupportedByHW_Routing'
p29710
S'(-89133)'
p29711
sS'DAQmxErrorCannotHaveCJTempWithOtherChans'
p29712
S'(-200167)'
p29713
sS'DAQmxErrorMissingStartOfTable'
p29714
S'(-201065)'
p29715
sS'DAQmx_AI_DevScalingCoeff'
p29716
S'0x1930'
p29717
sS'DAQmx_Val_LosslessPacking'
p29718
S'12555'
p29719
sS'DAQmx_AI_Excit_DCorAC'
p29720
S'0x17FB'
p29721
sS'DAQmxErrorDigSyncNotAvailableOnTerm'
p29722
S'(-200773)'
p29723
sS'DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions'
p29724
S'(200038)'
p29725
sS'DAQmx_Val_Switch_Topology_1193_Independent'
p29726
S'"1193/Independent"'
p29727
sS'DAQmx_AIConv_Src'
p29728
S'0x1502'
p29729
sS'DAQmx_SampTimingType'
p29730
S'0x1347'
p29731
sS'DAQmxWarningPALDispatcherAlreadyExported'
p29732
S'(50500)'
p29733
sS'DAQmx_Exported_AdvTrig_OutputTerm'
p29734
S'0x1645'
p29735
sS'DAQmxWarningPALBadDataSize'
p29736
S'(50005)'
p29737
sS'DAQmxErrorPALBadWindowType'
p29738
S'(-50016)'
p29739
sS'DAQmxErrorInvalidHWProductType'
p29740
S'(-201057)'
p29741
sS'DAQmxErrorUnsupportedSignalTypeExportSignal'
p29742
S'(-200375)'
p29743
sS'DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero'
p29744
S'(-200802)'
p29745
sS'DAQmxErrorTimeoutExceeded'
p29746
S'(-200221)'
p29747
sS'DAQmxErrorOnboardMemTooSmall'
p29748
S'(-200341)'
p29749
sS'DAQmx_Val_Switch_Topology_1167_Independent'
p29750
S'"1167/Independent"'
p29751
sS'DAQmxErrorMStudioPropertyGetWhileTaskNotVerified'
p29752
S'(-200593)'
p29753
sS'DAQmxErrorCounterNoTimebaseEdgesBetweenGates'
p29754
S'(-200140)'
p29755
sS'DAQmxErrorHWTimedSinglePointOddNumChansInAITask'
p29756
S'(-200820)'
p29757
sS'DAQmxErrorRangeWithoutAConnectActionInList'
p29758
S'(-200052)'
p29759
sS'DAQmxErrorPALMessageQueueFull'
p29760
S'(-50108)'
p29761
sS'DAQmx_CI_Encoder_BInputTerm'
p29762
S'0x219E'
p29763
sS'DAQmx_AnlgLvl_PauseTrig_Hyst'
p29764
S'0x1368'
p29765
sS'DAQmxErrorCOInvalidTimingSrcDueToSignal'
p29766
S'(-200801)'
p29767
sS'DAQmx_AI_Temp_Units'
p29768
S'0x1033'
p29769
sS'DAQmxErrorChanDoesNotSupportCJC'
p29770
S'(-200976)'
p29771
sS'DAQmxErrorCustomScaleNameUsed'
p29772
S'(-200356)'
p29773
sS'DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing'
p29774
S'(-89140)'
p29775
sS'DAQmx_PhysicalChan_TEDS_BitStream'
p29776
S'0x21DF'
p29777
sS'DAQmx_AI_EnhancedAliasRejectionEnable'
p29778
S'0x2294'
p29779
sS'DAQmxErrorPALMemoryAlignmentFault'
p29780
S'(-50351)'
p29781
sS'DAQmxErrorAttributeNotSupportedInTaskContext'
p29782
S'(-200452)'
p29783
sS'DAQmxErrorInvalidRefClkRate'
p29784
S'(-200427)'
p29785
sS'DAQmxErrorDeviceDoesNotSupportScanning'
p29786
S'(-200068)'
p29787
sS'DAQmxWarningRateViolatesMaxADCRate'
p29788
S'(200012)'
p29789
sS'DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize'
p29790
S'(-200865)'
p29791
sS'DAQmx_Val_CountUp'
p29792
S'10128'
p29793
sS'DAQmxErrorPALResourceAmbiguous'
p29794
S'(-50107)'
p29795
sS'DAQmxErrorIncorrectDigitalPattern'
p29796
S'(-200102)'
p29797
sS'DAQmxErrorDCMLock'
p29798
S'(-200385)'
p29799
sS'DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist'
p29800
S'(-200638)'
p29801
sS'DAQmx_Val_WriteToPROM'
p29802
S'12539'
p29803
sS'DAQmx_CI_Encoder_AInput_DigSync_Enable'
p29804
S'0x21FF'
p29805
sS'DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset'
p29806
S'(-200504)'
p29807
sS'DAQmx_Val_Switch_Topology_1193_Dual_16x1_Mux'
p29808
S'"1193/Dual 16x1 Mux"'
p29809
sS'DAQmx_Hshk_StartCond'
p29810
S'0x22C3'
p29811
sS'DAQmx_CI_CountEdges_CountDir_DigSync_Enable'
p29812
S'0x21F5'
p29813
sS'DAQmx_SwitchChan_MaxDCVoltage'
p29814
S'0x0650'
p29815
sS'DAQmxErrorInvalidSampClkSrc'
p29816
S'(-200414)'
p29817
sS'DAQmx_SampClk_Timebase_Rate'
p29818
S'0x1303'
p29819
sS'DAQmxErrorCtrMinMax'
p29820
S'(-200527)'
p29821
sS'DAQmx_Val_OnBrdMemEmpty'
p29822
S'10235'
p29823
sS'DAQmx_Task_Devices'
p29824
S'0x230E'
p29825
sS'DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning'
p29826
S'(-200556)'
p29827
sS'DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed'
p29828
S'(-200921)'
p29829
sS'DAQmxErrorInputFIFOUnderflow'
p29830
S'(-200017)'
p29831
sS'DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl'
p29832
S'(-200728)'
p29833
sS'DAQmx_CI_CtrTimebase_DigFltr_Enable'
p29834
S'0x2271'
p29835
sS'DAQmxErrorDSFReadyForOutputNotAsserted'
p29836
S'(-200585)'
p29837
sS'DAQmxErrorInternalSampClkNotRisingEdge'
p29838
S'(-200890)'
p29839
sS'DAQmx_SwitchChan_MaxDCCarryCurrent'
p29840
S'0x0647'
p29841
sS'DAQmxErrorConnectionNotPermittedOnChanReservedForRouting'
p29842
S'(-200189)'
p29843
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth'
p29844
S'0x2210'
p29845
sS'DAQmxErrorBracketPairingMismatchInList'
p29846
S'(-200104)'
p29847
sS'DAQmxErrorInconsistentChannelDirections'
p29848
S'(-200011)'
p29849
sS'DAQmxErrorExplanationNotFound'
p29850
S'(-200235)'
p29851
sS'DAQmx_Val_MaintainExistingValue'
p29852
S'12528'
p29853
sS'DAQmx_Read_TotalSampPerChanAcquired'
p29854
S'0x192A'
p29855
sS'DAQmx_SampClk_DigFltr_MinPulseWidth'
p29856
S'0x221F'
p29857
sS'DAQmx_Dev_PCI_DevNum'
p29858
S'0x2328'
p29859
sS'DAQmx_Dev_DI_Lines'
p29860
S'0x2320'
p29861
sS'DAQmxWarningPALResourceAmbiguous'
p29862
S'(50107)'
p29863
sS'DAQmxErrorPALReceiverSocketInvalid'
p29864
S'(-50503)'
p29865
sS'DAQmxErrorNoCommonTrigLineForImmedRoute'
p29866
S'(-200396)'
p29867
sS'DAQmx_SwitchChan_MaxACVoltage'
p29868
S'0x0651'
p29869
sS'DAQmxWarningPALBadReadMode'
p29870
S'(50009)'
p29871
sS'DAQmxErrorPALResourceReserved'
p29872
S'(-50103)'
p29873
sS'DAQmxErrorSampClkTimebaseRateInvalid'
p29874
S'(-201089)'
p29875
sS'DAQmx_AI_ChanCal_HasValidCalInfo'
p29876
S'0x2297'
p29877
sS'DAQmxErrorRefTrigTypeNotSupportedGivenTimingType'
p29878
S'(-200907)'
p29879
sS'DAQmx_Val_Transferred_From_Buffer'
p29880
g29509
sS'DAQmx_CO_Pulse_Freq_Units'
p29881
S'0x18D5'
p29882
sS'DAQmxErrorInvalidRoutingDestinationTerminalName'
p29883
S'(-200041)'
p29884
sS'DAQmx_Val_ClearExpiration'
p29885
g28856
sS'DAQmx_Val_Task_Start'
p29886
g28762
sS'DAQmxErrorCouldNotDownloadFirmwareHWDamaged'
p29887
S'(-200962)'
p29888
sS'DAQmxErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks'
p29889
S'(-201027)'
p29890
sS'DAQmxErrorWriteNumChansMismatch'
p29891
S'(-200524)'
p29892
sS'DAQmxErrorNoAdvTrigForMultiDevScan'
p29893
S'(-200323)'
p29894
sS'DAQmxErrorTooManyChansForAnalogPauseTrig'
p29895
S'(-200263)'
p29896
sS'DAQmx_AI_TEDS_Units'
p29897
S'0x21E0'
p29898
sS'DAQmxErrorCannotStoreCalConst'
p29899
S'(-200074)'
p29900
sS'DAQmx_CO_Pulse_Time_Units'
p29901
S'0x18D6'
p29902
sS'DAQmx_Val_Switch_Topology_1175_2_Wire_98x1_Mux'
p29903
S'"1175/2-Wire 98x1 Mux"'
p29904
sS'DAQmxErrorTooManyPhysicalChansForTEDSInterfaceSpecd'
p29905
S'(-201052)'
p29906
sS'DAQmxErrorCannotTristateTerm_Routing'
p29907
S'(-89128)'
p29908
sS'DAQmxErrorPALDeviceNotSupported'
p29909
S'(-50302)'
p29910
sS'DAQmx_Val_GND'
p29911
S'10066'
p29912
sS'DAQmxErrorSwitchNotResetBeforeScan'
p29913
S'(-200199)'
p29914
sS'DAQmxErrorNoDivisorForExternalSignal'
p29915
S'(-200130)'
p29916
sS'DAQmx_SwitchChan_MaxDCSwitchCurrent'
p29917
S'0x0645'
p29918
sS'DAQmxErrorRepeatedAIPhysicalChan'
p29919
S'(-200620)'
p29920
sS'DAQmxErrorInvalidTimeValue'
p29921
S'(-201037)'
p29922
sS'DAQmx_AnlgWin_RefTrig_Coupling'
p29923
S'0x1857'
p29924
sS'DAQmxErrorDigInputNotSupported'
p29925
S'(-200647)'
p29926
sS'DAQmxErrorSampClkOutputTermIncludesStartTrigSrc'
p29927
S'(-200954)'
p29928
sS'DAQmx_AI_SoundPressure_MaxSoundPressureLvl'
p29929
S'0x223A'
p29930
sS'DAQmxErrorCantResetExpiredWatchdog'
p29931
S'(-200644)'
p29932
sS'DAQmxErrorInvalidSyntaxForPhysicalChannelRange'
p29933
S'(-200086)'
p29934
sS'DAQmxErrorNonZeroBufferSizeInProgIOXfer'
p29935
S'(-200172)'
p29936
sS'DAQmx_Val_QuarterBridgeII'
p29937
S'10272'
p29938
sS'DAQmxErrorInputBufSizeTooSmallToStartAcq'
p29939
S'(-200608)'
p29940
sS'DAQmx_AdvTrig_Type'
p29941
S'0x1365'
p29942
sS'DAQmx_PhysicalChan_TEDS_VersionLetter'
p29943
S'0x21DE'
p29944
sS'DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS'
p29945
S'(-200825)'
p29946
sS'DAQmx_Val_K_Type_TC'
p29947
S'10073'
p29948
sS'DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported'
p29949
S'(-200766)'
p29950
sS'DAQmx_CI_CountEdges_ActiveEdge'
p29951
S'0x0697'
p29952
sS'DAQmxErrorRepeatedNumberInScaledValues'
p29953
S'(-200599)'
p29954
sS'DAQmx_Exported_AdvTrig_Pulse_WidthUnits'
p29955
S'0x1647'
p29956
sS'DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript'
p29957
S'(-201011)'
p29958
sS'DAQmx_CI_SemiPeriod_Term'
p29959
S'0x18B0'
p29960
sS'DAQmx_AI_LossyLSBRemoval_CompressedSampSize'
p29961
S'0x22D9'
p29962
sS'DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange'
p29963
S'(-200076)'
p29964
sS'DAQmxErrorSampPerChanNotMultipleOfIncr'
p29965
S'(-200344)'
p29966
sS'DAQmx_Val_Chan'
p29967
S'10113'
p29968
sS'DAQmxErrorRoutingNotSupportedForDevice'
p29969
S'(-200039)'
p29970
sS'DAQmxErrorCOSampModeSampTimingTypeSampClkConflict'
p29971
S'(-200778)'
p29972
sS'DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning'
p29973
S'(-200846)'
p29974
sS'DAQmx_CI_LinEncoder_Units'
p29975
S'0x18A9'
p29976
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_Octal_16x1_Mux'
p29977
S'"1130/2-Wire Octal 16x1 Mux"'
p29978
sS'DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay'
p29979
S'0x22BF'
p29980
sS'DAQmx_CI_CountEdges_DigFltr_TimebaseSrc'
p29981
S'0x21F8'
p29982
sS'DAQmxErrorLines4To7ConfiguredForOutput'
p29983
S'(-200125)'
p29984
sS'DAQmx_Val_SampleCompleteEvent'
p29985
S'12530'
p29986
sS'DAQmxErrorStrainGageCalibration'
p29987
S'(-200380)'
p29988
sS'DAQmxWarningPALIrrelevantAttribute'
p29989
S'(50001)'
p29990
sS'DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript'
p29991
S'(-200850)'
p29992
sS'DAQmx_CI_Prescaler'
p29993
S'0x2239'
p29994
sS'DAQmxErrorReversePolynomialCoefNotSpecd'
p29995
S'(-200325)'
p29996
sS'DAQmx_Val_OnBrdMemHalfFullOrLess'
p29997
S'10239'
p29998
sS'DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint'
p29999
S'(-200997)'
p30000
sS'DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev'
p30001
S'(-200856)'
p30002
sS'DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv'
p30003
S'0x1886'
p30004
sS'DAQmx_PhysicalChan_TEDS_VersionNum'
p30005
S'0x21DD'
p30006
sS'DAQmx_Scale_Lin_YIntercept'
p30007
S'0x1228'
p30008
sS'DAQmxErrorCannotTristateBusyTerm'
p30009
S'(-200252)'
p30010
sS'DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing'
p30011
S'(-89144)'
p30012
sS'DAQmxErrorRepeatedNumberInPreScaledValues'
p30013
S'(-200598)'
p30014
sS'DAQmx_Val_Pt3928'
p30015
S'12483'
p30016
sS'DAQmx_Val_PathStatus_AlreadyExists'
p30017
S'10432'
p30018
sS'DAQmxErrorWaitModeValueNotSupportedNonBuffered'
p30019
S'(-200924)'
p30020
sS'DAQmx_Val_Pt3920'
p30021
S'10053'
p30022
sS'DAQmxErrorSCXIModuleIncorrect'
p30023
S'(-200107)'
p30024
sS'DAQmx_Val_Polynomial'
p30025
S'10449'
p30026
sS'DAQmx_Val_Implicit'
p30027
S'10451'
p30028
sS'DAQmxErrorPLLBecameUnlocked'
p30029
S'(-200246)'
p30030
sS'DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads'
p30031
S'(-200990)'
p30032
sS'DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals'
p30033
S'(-200657)'
p30034
sS'DAQmxErrorTimebaseCalFreqVarianceTooLarge'
p30035
S'(-200723)'
p30036
sS'DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth'
p30037
S'0x2229'
p30038
sS'DAQmxErrorDelayFromSampClkTooShort'
p30039
S'(-200336)'
p30040
sS'DAQmxErrorNoRefTrigConfigured'
p30041
S'(-200282)'
p30042
sS'DAQmx_Val_Switch_Topology_2501_4_Wire_12x1_Mux'
p30043
S'"2501/4-Wire 12x1 Mux"'
p30044
sS'DAQmxError3OutputPortCombinationGivenSampTimingType653x'
p30045
S'(-200932)'
p30046
sS'DAQmx_CO_Prescaler'
p30047
S'0x226D'
p30048
sS'DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2'
p30049
S'(-200970)'
p30050
sS'DAQmxErrorReferenceCurrentInvalid'
p30051
S'(-200154)'
p30052
sS'DAQmx_AI_LVDT_Units'
p30053
S'0x0910'
p30054
sS'DAQmxErrorLines0To3ConfiguredForInput'
p30055
S'(-200122)'
p30056
sS'DAQmx_Val_DMA'
p30057
S'10054'
p30058
sS'DAQmx_DigPattern_RefTrig_When'
p30059
S'0x1438'
p30060
sS'DAQmxErrorCalChanReversePolyCoefNotSpecd'
p30061
S'(-200941)'
p30062
sS'DAQmxErrorTopologyNotSupportedByCfgTermBlock'
p30063
S'(-200256)'
p30064
sS'DAQmx_Val_Accelerometer'
p30065
S'10356'
p30066
sS'DAQmx_CI_Period_Div'
p30067
S'0x192E'
p30068
sS'DAQmxErrorRegisterNotWritable'
p30069
S'(-200393)'
p30070
sS'DAQmx_DO_DataXferMech'
p30071
S'0x2266'
p30072
sS'DAQmxErrorPALComponentTooOld'
p30073
S'(-50252)'
p30074
sS'DAQmx_Write_SleepTime'
p30075
S'0x22B2'
p30076
sS'DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand'
p30077
S'(-200999)'
p30078
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing'
p30079
S'(-89149)'
p30080
sS'DAQmxErrorDevNotInTask'
p30081
S'(-200482)'
p30082
sS'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Mux'
p30083
S'"2501/1-Wire 48x1 Mux"'
p30084
sS'DAQmx_Val_NoChange'
p30085
S'10160'
p30086
sS'DAQmxErrorAIMaxTooLarge'
p30087
S'(-200579)'
p30088
sS'DAQmxErrorPALCalculationOverflow'
p30089
S'(-50175)'
p30090
sS'DAQmx_DigEdge_StartTrig_Src'
p30091
S'0x1407'
p30092
sS'DAQmx_CI_CtrTimebaseSrc'
p30093
S'0x0143'
p30094
sS'DAQmxErrorUnsupportedUnicodeByteOrderMarker'
p30095
S'(-201017)'
p30096
sS'DAQmxErrorDevOnlySupportsSampClkTimingAI'
p30097
S'(-200757)'
p30098
sS'DAQmx_DI_DataXferReqCond'
p30099
S'0x2264'
p30100
sS'DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x'
p30101
S'(-200897)'
p30102
sS'DAQmxErrorDevOnlySupportsSampClkTimingAO'
p30103
S'(-200758)'
p30104
sS'DAQmx_PhysicalChan_TEDS_TemplateIDs'
p30105
S'0x228F'
p30106
sS'DAQmxErrorInvalidExcitValForScaling'
p30107
S'(-200318)'
p30108
sS'DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx'
p30109
S'(-200804)'
p30110
sS'DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing'
p30111
S'(-89147)'
p30112
sS'DAQmxErrorDisconnectionRequiredInScanlist'
p30113
S'(-200639)'
p30114
sS'DAQmxErrorMultiChanTypesInTask'
p30115
S'(-200559)'
p30116
sS'DAQmx_Val_Hz'
p30117
S'10373'
p30118
sS'DAQmxErrorOperationOnlyPermittedWhileScanning'
p30119
S'(-200177)'
p30120
sS'DAQmxErrorCannotCalculateNumSampsTaskNotStarted'
p30121
S'(-200343)'
p30122
sS'DAQmxErrorMemMapAndHWTimedSinglePoint'
p30123
S'(-200995)'
p30124
sS'DAQmxErrorValueInvalid'
p30125
S'(-54023)'
p30126
sS'DAQmxErrorSetupCalNeededBeforeAdjustCal'
p30127
S'(-201005)'
p30128
sS'DAQmxWarningPALResourceNotAvailable'
p30129
S'(50101)'
p30130
sS'DAQmxErrorCAPIReservedParamNotNULL'
p30131
S'(-200492)'
p30132
sS'DAQmx_Val_PXI'
p30133
S'12583'
p30134
sS'DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction'
p30135
S'(-200046)'
p30136
sS'DAQmxErrorExternalTimebaseRateNotKnownForDelay'
p30137
S'(-200149)'
p30138
sS'DAQmx_CO_CtrTimebase_DigSync_Enable'
p30139
S'0x227A'
p30140
sS'DAQmx_Val_SoundPressure_Microphone'
p30141
S'10354'
p30142
sS'DAQmxErrorCalChanForwardPolyCoefNotSpecd'
p30143
S'(-200940)'
p30144
sS'DAQmx_CI_CountEdges_InitialCnt'
p30145
S'0x0698'
p30146
sS'DAQmxErrorProgIODataXferForBufferedAO'
p30147
S'(-200767)'
p30148
sS'DAQmxErrorPALBadLibrarySpecifier'
p30149
S'(-50018)'
p30150
sS'DAQmxErrorFREQOUTCannotProduceDesiredFrequency2'
p30151
S'(-200736)'
p30152
sS'DAQmxErrorTooManyPretrigPlusMinPostTrigSamps'
p30153
S'(-200213)'
p30154
sS'DAQmx_Val_PatternMatches'
p30155
S'10254'
p30156
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_8x32_Matrix'
p30157
S'"2532/1-Wire Dual 8x32 Matrix"'
p30158
sS'DAQmxErrorDriverDeviceGUIDNotFound_Routing'
p30159
S'(-88705)'
p30160
sS'DAQmxErrorTooManyPostTrigSampsPerChan'
p30161
S'(-200575)'
p30162
sS'DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA'
p30163
S'(-200877)'
p30164
sS'DAQmxErrorAIConvRateTooHigh'
p30165
S'(-200335)'
p30166
sS'DAQmx_AI_Bridge_ShuntCal_Select'
p30167
S'0x21D5'
p30168
sS'DAQmx_Val_ReservedForRouting'
p30169
S'10441'
p30170
sS'DAQmx_AI_AutoZeroMode'
p30171
S'0x1760'
p30172
sS'DAQmxError2InputPortCombinationGivenSampTimingType653x'
p30173
S'(-200929)'
p30174
sS'DAQmx_AO_DAC_Rng_Low'
p30175
S'0x182D'
p30176
sS'DAQmxErrorLinesAlreadyReservedForOutput'
p30177
S'(-200597)'
p30178
sS'DAQmxErrorDigPrptyCannotBeSetPerLine'
p30179
S'(-200641)'
p30180
sS'DAQmx_AnlgLvl_PauseTrig_Src'
p30181
S'0x1370'
p30182
sS'DAQmxErrorStartTrigTypeNotSupportedGivenTimingType'
p30183
S'(-200904)'
p30184
sS'DAQmxErrorPALLogicalBufferEmpty'
p30185
S'(-50406)'
p30186
sS'DAQmx_Sys_NIDAQMajorVersion'
p30187
S'0x1272'
p30188
sS'DAQmxErrorSwitchOpFailedDueToPrevError'
p30189
S'(-200674)'
p30190
sS'DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall'
p30191
S'(-200873)'
p30192
sS'DAQmx_CI_CtrTimebaseRate'
p30193
S'0x18B2'
p30194
sS'DAQmx_Exported_AdvCmpltEvent_Pulse_Width'
p30195
S'0x1654'
p30196
sS'DAQmxErrorClearIsLastInstructionInIfElseBlockInScript'
p30197
S'(-201012)'
p30198
sS'DAQmxWarningPALBadOffset'
p30199
S'(50007)'
p30200
sS'DAQmxErrorPXIStarAndClock10Sync'
p30201
S'(-200885)'
p30202
sS'DAQmx_Val_SameAsMasterTimebase'
p30203
S'10282'
p30204
sS'DAQmxErrorInternalTimebaseSourceRateCombo'
p30205
S'(-200134)'
p30206
sS'DAQmxErrorCAPIChanIndexInvalid'
p30207
S'(-200570)'
p30208
sS'DAQmx_DI_DigFltr_MinPulseWidth'
p30209
S'0x21D7'
p30210
sS'DAQmx_Read_DigitalLines_BytesPerChan'
p30211
S'0x217C'
p30212
sS'DAQmx_CO_Pulse_Ticks_InitialDelay'
p30213
S'0x0298'
p30214
sS'DAQmxErrorNoPathAvailableBetween2SwitchChans'
p30215
S'(-200180)'
p30216
sS'DAQmxErrorCounterMaxMinRangeTime'
p30217
S'(-200138)'
p30218
sS'DAQmxErrorAOBufferSizeZeroForSampClkTimingType'
p30219
S'(-200859)'
p30220
sS'DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode'
p30221
S'(-200799)'
p30222
sS'DAQmxErrorPALSocketListenerInvalid'
p30223
S'(-50502)'
p30224
sS'DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType'
p30225
S'(-200913)'
p30226
sS'DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType'
p30227
S'(-200910)'
p30228
sS'DAQmxErrorPALCommunicationsFault'
p30229
S'(-50401)'
p30230
sS'DAQmx_AI_ChanCal_Poly_ReverseCoeff'
p30231
S'0x22A0'
p30232
sS'DAQmxErrorMeasCalAdjustMainPathOutputImpedance'
p30233
S'(-200506)'
p30234
sS'DAQmx_CI_DataXferMech'
p30235
S'0x0200'
p30236
sS'DAQmxErrorVirtualTEDSFileNotFound'
p30237
S'(-200784)'
p30238
sS'DAQmxErrorInvalidCalConstOscillatorPhaseDACValue'
p30239
S'(-200518)'
p30240
sS'DAQmx_AI_Thrmcpl_Type'
p30241
S'0x1050'
p30242
sS'DAQmx_Sys_Tasks'
p30243
S'0x1267'
p30244
sS'DAQmxErrorInvalidEnumValueSpecd'
p30245
S'(-201054)'
p30246
sS'DAQmxErrorStopTriggerHasNotOccurred'
p30247
S'(-200008)'
p30248
sS'DAQmxWarningPALFirmwareFault'
p30249
S'(50151)'
p30250
sS'DAQmx_AI_CurrentShunt_Resistance'
p30251
S'0x17F3'
p30252
sS'DAQmx_Val_Interlocked'
p30253
S'12549'
p30254
sS'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty'
p30255
S'(-200774)'
p30256
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_16x32_Matrix'
p30257
S'"2532/1-Wire 16x32 Matrix"'
p30258
sS'DAQmxErrorCascadeDigitizationModeNotSupported'
p30259
S'(-201034)'
p30260
sS'DAQmxErrorMeasCalAdjustOscillatorPhaseDAC'
p30261
S'(-200521)'
p30262
sS'DAQmx_Read_ChangeDetect_HasOverflowed'
p30263
S'0x2194'
p30264
sS'DAQmx_Val_Switch_Topology_2527_1_Wire_64x1_Mux'
p30265
S'"2527/1-Wire 64x1 Mux"'
p30266
sS'DAQmxErrorDeviceNameNotFound_Routing'
p30267
S'(-88717)'
p30268
sS'DAQmxErrorDataXferCustomThresholdNotSpecified'
p30269
S'(-200943)'
p30270
sS'DAQmx_CI_TwoEdgeSep_First_DigSync_Enable'
p30271
S'0x2213'
p30272
sS'DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal'
p30273
S'(-200545)'
p30274
sS'DAQmx_Cal_UserDefinedInfo_MaxSize'
p30275
S'0x191C'
p30276
sS'DAQmxErrorActiveDevNotSupportedWithChanExpansion'
p30277
S'(-201094)'
p30278
sS'DAQmx_Val_Switch_Topology_1127_4_Wire_16x1_Mux'
p30279
S'"1127/4-Wire 16x1 Mux"'
p30280
sS'DAQmxErrorTrailingSpaceInString'
p30281
S'(-200554)'
p30282
sS'DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce'
p30283
S'(-200014)'
p30284
sS'DAQmx_CI_Encoder_ZIndexEnable'
p30285
S'0x0890'
p30286
sS'DAQmx_AI_DataXferCustomThreshold'
p30287
S'0x230C'
p30288
sS'DAQmxErrorCanNotPerformOpWhenNoDevInTask'
p30289
S'(-200477)'
p30290
sS'DAQmxWarningPLLUnlocked'
p30291
S'(200007)'
p30292
sS'DAQmxErrorEveryNSampsTransferredFromBufferNotForInput'
p30293
S'(-200965)'
p30294
sS'DAQmx_Buf_Output_BufSize'
p30295
S'0x186D'
p30296
sS'DAQmxErrorRefTrigDigPatternChanNotInTask'
p30297
S'(-200889)'
p30298
sS'DAQmx_Val_mVoltsPerVoltPerMilliInch'
p30299
S'12505'
p30300
sS'DAQmx_AI_ChanCal_Poly_ForwardCoeff'
p30301
S'0x229F'
p30302
sS'DAQmxErrorSamplesNoLongerWriteable'
p30303
S'(-200289)'
p30304
sS'DAQmxErrorClearTEDSNotSupportedOnRT'
p30305
S'(-200809)'
p30306
sS'DAQmx_Val_Switch_Topology_1194_Quad_4x1_Mux'
p30307
S'"1194/Quad 4x1 Mux"'
p30308
sS'DAQmxErrorCOWritePulseHighTicksNotSupported'
p30309
S'(-200688)'
p30310
sS'DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions'
p30311
S'(200039)'
p30312
sS'DAQmxErrorClearIsLastInstructionOfLoopInScript'
p30313
S'(-200037)'
p30314
sS'DAQmx_CO_CtrTimebaseSrc'
p30315
S'0x0339'
p30316
sS'DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals'
p30317
S'(-200659)'
p30318
sS'DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset'
p30319
S'(-200510)'
p30320
sS'DAQmxErrorWriteChanTypeMismatch'
p30321
S'(-200526)'
p30322
sS'DAQmxErrorPALFileCloseFault'
p30323
S'(-50205)'
p30324
sS'DAQmxErrorCantConfigureTEDSForChan'
p30325
S'(-200791)'
p30326
sS'DAQmx_CI_CountEdges_DirTerm'
p30327
S'0x21E1'
p30328
sS'DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc'
p30329
S'0x222A'
p30330
sS'DAQmx_CI_CtrTimebaseActiveEdge'
p30331
S'0x0142'
p30332
sS'DAQmxWarningSampClkRateViolatesSettlingTimeForGen'
p30333
S'(200040)'
p30334
sS'DAQmxErrorMeasCalAdjustMainPathPreAmpOffset'
p30335
S'(-200502)'
p30336
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Mux'
p30337
S'"2501/2-Wire 24x1 Mux"'
p30338
sS'DAQmx_CO_Count'
p30339
S'0x0293'
p30340
sS'DAQmx_DO_UseOnlyOnBrdMem'
p30341
S'0x2265'
p30342
sS'DAQmx_Val_Switch_Topology_2503_4_Wire_12x1_Mux'
p30343
S'"2503/4-Wire 12x1 Mux"'
p30344
sS'DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen'
p30345
S'(-200795)'
p30346
sS'DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse'
p30347
S'(-200733)'
p30348
sS'DAQmxWarningPALResourceNotReserved'
p30349
S'(50102)'
p30350
sS'DAQmx_PersistedTask_AllowInteractiveEditing'
p30351
S'0x22CD'
p30352
sS'DAQmxErrorPALBadWriteOffset'
p30353
S'(-50013)'
p30354
sS'DAQmxErrorCannotConnectChannelToItself'
p30355
S'(-200187)'
p30356
sS'DAQmxErrorKeywordExpectedInScript'
p30357
S'(-200027)'
p30358
sS'DAQmx_DO_Tristate'
p30359
S'0x18F3'
p30360
sS'DAQmx_Val_4Wire'
p30361
S'4'
p30362
sS'DAQmxErrorSamplesCanNotYetBeWritten'
p30363
S'(-200292)'
p30364
sS'DAQmx_CO_Pulse_HighTime'
p30365
S'0x18BA'
p30366
sS'DAQmx_Val_Switch_Topology_2567_Independent'
p30367
S'"2567/Independent"'
p30368
sS'DAQmx_SwitchChan_MaxACSwitchPwr'
p30369
S'0x0644'
p30370
sS'DAQmxErrorCantSyncToExtStimulusFreqDuringCal'
p30371
S'(-200442)'
p30372
sS'DAQmx_SelfCal_LastTemp'
p30373
S'0x1864'
p30374
sS'DAQmx_MasterTimebase_Src'
p30375
S'0x1343'
p30376
sS'DAQmx_Exported_WatchdogExpiredEvent_OutputTerm'
p30377
S'0x21AA'
p30378
sS'DAQmx_Val_SCXI'
p30379
S'12584'
p30380
sS'DAQmxErrorDevCannotProduceMinPulseWidth'
p30381
S'(-200777)'
p30382
sS'DAQmx_ChanType'
p30383
S'0x187F'
p30384
sS'DAQmxErrorZeroSlopeLinearScale'
p30385
S'(-200409)'
p30386
sS'DAQmx_CI_CtrTimebase_DigSync_Enable'
p30387
S'0x2275'
p30388
sS'DAQmxWarningSampValCoercedToMax'
p30389
S'(200021)'
p30390
sS'DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan'
p30391
S'(-200548)'
p30392
sS'DAQmx_DigEdge_StartTrig_Edge'
p30393
S'0x1404'
p30394
sS'DAQmxErrorMarkerOutsideWaveformInScript'
p30395
S'(-200029)'
p30396
sS'DAQmxErrorPALMemoryPageLockFailed'
p30397
S'(-50353)'
p30398
sS'DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall'
p30399
S'(-200868)'
p30400
sS'DAQmx_HshkTrig_Type'
p30401
S'0x22B7'
p30402
sS'DAQmxErrorNoChangeDetectionOnSelectedLineForDevice'
p30403
S'(-201020)'
p30404
sS'DAQmx_AI_RVDT_Sensitivity'
p30405
S'0x0903'
p30406
sS'DAQmxErrorPALThreadControllerIsNotThreadCreator'
p30407
S'(-50602)'
p30408
sS'DAQmx_AO_DataXferMech'
p30409
S'0x0134'
p30410
sS'DAQmxWarningRateViolatesSettlingTime'
p30411
S'(200011)'
p30412
sS'DAQmxErrorDotNetAPINotUnsigned32BitNumber'
p30413
S'(-200499)'
p30414
sS'DAQmx_DO_OutputDriveType'
p30415
S'0x1137'
p30416
sS'DAQmxErrorACCouplingNotAllowedWith50OhmImpedance'
p30417
S'(-200411)'
p30418
sS'DAQmxErrorInvalidSignalModifier_Routing'
p30419
S'(-89150)'
p30420
sS'DAQmxErrorPALMemoryConfigurationFault'
p30421
S'(-50350)'
p30422
sS'DAQmxErrorDuplicatePhysicalChansNotSupported'
p30423
S'(-200072)'
p30424
sS'DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed'
p30425
S'(-200922)'
p30426
sS'DAQmx_AI_Thrmcpl_CJCSrc'
p30427
S'0x1035'
p30428
sS'DAQmx_AI_ResolutionUnits'
p30429
S'0x1764'
p30430
sS'DAQmxErrorInvalidJumperedAttr'
p30431
S'(-200259)'
p30432
sS'DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues'
p30433
S'(-200708)'
p30434
sS'DAQmx_Val_ZeroVolts'
p30435
S'12526'
p30436
sS'DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange'
p30437
S'(-200075)'
p30438
sS'DAQmxErrorReversePolyOrderNotPositive'
p30439
S'(-200402)'
p30440
sS'_NI_uInt32_DEFINED_'
p30441
g28661
sS'DAQmxWarningPALFunctionNotFound'
p30442
S'(50255)'
p30443
sS'DAQmx_AnlgWin_RefTrig_Top'
p30444
S'0x1429'
p30445
sS'DAQmxErrorInvalidCalConstOffsetDACValue'
p30446
S'(-200517)'
p30447
sS'DAQmxErrorPropertyValNotValidTermName'
p30448
S'(-200354)'
p30449
sS'DAQmx_CI_GPS_SyncMethod'
p30450
S'0x1092'
p30451
sS'DAQmx_Val_Lvl'
p30452
S'10210'
p30453
sS'DAQmxErrorExpectedTerminatorInList'
p30454
S'(-200063)'
p30455
sS'DAQmxErrorInvalidSampModeForPositionMeas'
p30456
S'(-200813)'
p30457
sS'DAQmx_Exported_SampClk_Pulse_Polarity'
p30458
S'0x1664'
p30459
sS'DAQmx_AI_MemMapEnable'
p30460
S'0x188C'
p30461
sS'DAQmx_Val_AboveLvl'
p30462
S'10093'
p30463
sS'DAQmxErrorTEDSDoesNotContainPROM'
p30464
S'(-200822)'
p30465
sS'DAQmx_Val_OnBrdMemNotFull'
p30466
S'10242'
p30467
sS'DAQmxErrorRoutingDestTermPXIChassisNotIdentified'
p30468
S'(-200699)'
p30469
sS'DAQmxErrorIncorrectPassword'
p30470
S'(-200110)'
p30471
sS'DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples'
p30472
S'(-200291)'
p30473
sS'DAQmxErrorWriteFailsBufferSizeAutoConfigured'
p30474
S'(-200547)'
p30475
sS'DAQmx_AI_StrainGage_Cfg'
p30476
S'0x0982'
p30477
sS'DAQmx_Exported_CtrOutEvent_Pulse_Polarity'
p30478
S'0x1718'
p30479
sS'DAQmxErrorResourceNotInPool_Routing'
p30480
S'(-88708)'
p30481
sS'DAQmx_Val_AccelUnit_g'
p30482
S'10186'
p30483
sS'DAQmx_Val_CountEdges'
p30484
S'10125'
p30485
sS'DAQmx_CI_Encoder_BInput_DigSync_Enable'
p30486
S'0x2204'
p30487
sS'DAQmx_Val_Switch_Topology_1161_8_SPDT'
p30488
S'"1161/8-SPDT"'
p30489
sS'DAQmxErrorSwitchChanInUse'
p30490
S'(-200200)'
p30491
sS'DAQmxErrorPALDispatcherAlreadyExported'
p30492
S'(-50500)'
p30493
sS'DAQmx_CI_AngEncoder_InitialAngle'
p30494
S'0x0881'
p30495
sS'DAQmxErrorChanSizeTooBigForU32PortWrite'
p30496
S'(-200566)'
p30497
sS'DAQmx_Val_Switch_Topology_1163R_Octal_4x1_Mux'
p30498
S'"1163R/Octal 4x1 Mux"'
p30499
sS'DAQmx_CI_Encoder_AInput_DigFltr_Enable'
p30500
S'0x21FB'
p30501
sS'DAQmxErrorBuiltInCJCSrcNotSupported'
p30502
S'(-200576)'
p30503
sS'DAQmxErrorCouldNotConnectToServer_Routing'
p30504
S'(-88900)'
p30505
sS'DAQmxErrorPALBadDataSize'
p30506
S'(-50005)'
p30507
sS'DAQmx_AnlgEdge_RefTrig_Src'
p30508
S'0x1424'
p30509
sS'DAQmxWarningReadOffsetCoercion'
p30510
S'(200019)'
p30511
sS'DAQmxErrorSelfTestFailed'
p30512
S'(-200020)'
p30513
sS'DAQmx_AI_LVDT_SensitivityUnits'
p30514
S'0x219A'
p30515
sS'DAQmx_Val_TwoPulseCounting'
p30516
S'10313'
p30517
sS'DAQmxErrorUnableToLocateErrorResources'
p30518
S'(-200500)'
p30519
sS'DAQmxErrorPALBadWriteCount'
p30520
S'(-50014)'
p30521
sS'DAQmxErrorPasswordRequired'
p30522
S'(-200111)'
p30523
sS'DAQmxErrorSensorValTooLow'
p30524
S'(-200536)'
p30525
sS'DAQmx_Val_Freq_Voltage'
p30526
S'10181'
p30527
sS'DAQmxErrorStartTrigDigPatternChanNotTristated'
p30528
S'(-200886)'
p30529
sS'DAQmxErrorScaledMinEqualMax'
p30530
S'(-200603)'
p30531
sS'DAQmx_Val_InsideWin'
p30532
S'10199'
p30533
sS'DAQmxErrorDACUnderflow'
p30534
S'(-200018)'
p30535
sS'DAQmxErrorCannotDetectChangesWhenTristateIsFalse'
p30536
S'(-200730)'
p30537
sS'DAQmx_Val_Switch_Topology_1127_2_Wire_4x8_Matrix'
p30538
S'"1127/2-Wire 4x8 Matrix"'
p30539
sS'DAQmx_Val_LeavingWin'
p30540
S'10208'
p30541
sS'DAQmxErrorIdentifierInUse'
p30542
S'(-201028)'
p30543
sS'DAQmx_Val_LeftJustified'
p30544
S'10209'
p30545
sS'DAQmx_Val_AnlgEdge'
p30546
S'10099'
p30547
sS'DAQmxErrorCalibrationSessionAlreadyOpen'
p30548
S'(-200108)'
p30549
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_4x64_Matrix'
p30550
S'"1129/2-Wire 4x64 Matrix"'
p30551
sS'DAQmx_DelayFromSampClk_DelayUnits'
p30552
S'0x1304'
p30553
sS'DAQmxErrorPALFunctionObsolete'
p30554
S'(-50254)'
p30555
sS'DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Amplified_Mux'
p30556
S'"2501/1-Wire 48x1 Amplified Mux"'
p30557
sS'DAQmxErrorDifftInternalAIInputSrcs'
p30558
S'(-200677)'
p30559
sS'DAQmx_AI_Accel_Units'
p30560
S'0x0673'
p30561
sS'DAQmxErrorPALMemoryBlockCheckFailed'
p30562
S'(-50354)'
p30563
sS'DAQmxErrorDeviceIDNotSpecifiedInList'
p30564
S'(-200055)'
p30565
sS'DAQmxErrorBufferedAndDataXferPIO'
p30566
S'(-200847)'
p30567
sS'DAQmx_Val_GroupByChannel'
p30568
g28762
sS'DAQmxErrorUnexpectedIDFollowingSwitchOpInList'
p30569
S'(-200529)'
p30570
sS'DAQmxErrorCAPISyncCallbackNotSupportedOnThisPlatform'
p30571
S'(-200942)'
p30572
sS'DAQmx_Exported_RdyForXferEvent_OutputTerm'
p30573
S'0x22B5'
p30574
sS'DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt'
p30575
S'(-200974)'
p30576
sS'DAQmx_Val_GroupByScanNumber'
p30577
g28856
sS'DAQmxErrorAnalogMultiSampWriteNotSupported'
p30578
S'(-200539)'
p30579
sS'DAQmxErrorOffsetTooSmall'
p30580
S'(-200268)'
p30581
sS'DAQmx_Val_AdvCmpltEvent'
p30582
S'12492'
p30583
sS'DAQmxErrorScriptHasInvalidCharacter'
p30584
S'(-200023)'
p30585
sS'DAQmx_Val_10MHzRefClock'
p30586
S'12536'
p30587
sS'DAQmxErrorPALSocketListenerAlreadyRegistered'
p30588
S'(-50501)'
p30589
sS'DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType'
p30590
S'(-200914)'
p30591
sS'DAQmxErrorInvalidSubsetLengthWithinLoopInScript'
p30592
S'(-200249)'
p30593
sS'DAQmxErrorSwitchOperationNotSupported'
p30594
S'(-200193)'
p30595
sS'DAQmxWarningPALResourceNotInitialized'
p30596
S'(50104)'
p30597
sS'DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty'
p30598
S'(-200624)'
p30599
sS'DAQmxErrorGetPropertyNotOutputBufferedTask'
p30600
S'(-200454)'
p30601
sS'DAQmxErrorPrimingCfgFIFO'
p30602
S'(-200329)'
p30603
sS'DAQmx_Val_Switch_Topology_2576_Independent'
p30604
S'"2576/Independent"'
p30605
sS'DAQmx_AO_Gain'
p30606
S'0x0118'
p30607
sS'DAQmxErrorDataVoltageLowAndHighIncompatible'
p30608
S'(-200902)'
p30609
sS'DAQmxErrorTooManyEventsGenerated'
p30610
S'(-200992)'
p30611
sS'DAQmxError2OutputPortCombinationGivenSampTimingType653x'
p30612
S'(-200930)'
p30613
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_8x32_Matrix'
p30614
S'"1130/1-Wire 8x32 Matrix"'
p30615
sS'DAQmxErrorVirtualChanDoesNotExist'
p30616
S'(-200488)'
p30617
sS'DAQmx_Val_SampleClock'
p30618
S'12487'
p30619
sS'DAQmxErrorProcedureNameExpectedInScript'
p30620
S'(-200025)'
p30621
sS'DAQmx_Val_Period'
p30622
S'10256'
p30623
sS'DAQmxErrorTrigBusLineNotAvail'
p30624
S'(-200226)'
p30625
sS'DAQmx_AI_Accel_Sensitivity'
p30626
S'0x0692'
p30627
sS'DAQmxErrorReferenceFrequencyInvalid'
p30628
S'(-200156)'
p30629
sS'DAQmxErrorPrescalerNot1ForInputTerminal'
p30630
S'(-200841)'
p30631
sS'DAQmxErrorTEDSTemplateParametersNotSupported'
p30632
S'(-200754)'
p30633
sS'DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty'
p30634
S'(-200625)'
p30635
sS'DAQmxErrorMoreThanOneMatchForSpecdDevice'
p30636
S'(-201043)'
p30637
sS'DAQmxErrorLocalChannelSpecdWithNoParentTask'
p30638
S'(-201073)'
p30639
sS'DAQmxErrorReversePowerProtectionActivated'
p30640
S'(-200617)'
p30641
sS'DAQmx_Val_Switch_Topology_2593_Independent'
p30642
S'"2593/Independent"'
p30643
sS'DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO'
p30644
S'(-200996)'
p30645
sS'DAQmxErrorOnlyFrontEndChanOpsDuringScan'
p30646
S'(-200377)'
p30647
sS'DAQmxErrorMultScanOpsInOneChassis'
p30648
S'(-200619)'
p30649
sS'DAQmx_Scale_Map_ScaledMax'
p30650
S'0x1229'
p30651
sS'DAQmxErrorPreScaledMinEqualMax'
p30652
S'(-200602)'
p30653
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_4x64_Matrix'
p30654
S'"1130/1-Wire 4x64 Matrix"'
p30655
sS'DAQmx_PauseTrig_Type'
p30656
S'0x1366'
p30657
sS'DAQmx_SwitchDev_Settled'
p30658
S'0x1243'
p30659
sS'DAQmx_AnlgWin_PauseTrig_Top'
p30660
S'0x1376'
p30661
sS'DAQmx_Val_FiniteSamps'
p30662
S'10178'
p30663
sS'DAQmxErrorInvalidTimeFormat'
p30664
S'(-201036)'
p30665
sS'DAQmxErrorPALFeatureDisabled'
p30666
S'(-50265)'
p30667
sS'DAQmx_SyncPulse_MinDelayToStart'
p30668
S'0x223F'
p30669
sS'DAQmx_DelayFromSampClk_Delay'
p30670
S'0x1317'
p30671
sS'DAQmxErrorZeroForwardPolyScaleCoeffs'
p30672
S'(-200407)'
p30673
sS'DAQmx_Val_LossyLSBRemoval'
p30674
S'12556'
p30675
sS'DAQmxErrorInvalidAIGainCalConst'
p30676
S'(-200718)'
p30677
sS'DAQmx_CI_AngEncoder_PulsesPerRev'
p30678
S'0x0875'
p30679
sS'DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals'
p30680
S'(-200938)'
p30681
sS'DAQmxErrorInterconnectLineReserved'
p30682
S'(-54010)'
p30683
sS'DAQmxErrorChanCalTableScaledValsNotSpecd'
p30684
S'(-200937)'
p30685
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_Quad_32x1_Mux'
p30686
S'"1130/2-Wire Quad 32x1 Mux"'
p30687
sS'DAQmx_ExtCal_RecommendedInterval'
p30688
S'0x1868'
p30689
sS'DAQmx_Val_Diff'
p30690
S'10106'
p30691
sS'DAQmx_ArmStartTrig_Type'
p30692
S'0x1414'
p30693
sS'DAQmx_Val_AnlgLvl'
p30694
S'10101'
p30695
sS'DAQmx_Val_OnDemand'
p30696
S'10390'
p30697
sS'DAQmx_AI_SampAndHold_Enable'
p30698
S'0x181A'
p30699
sS'DAQmx_PersistedChan_Author'
p30700
S'0x22D0'
p30701
sS'DAQmxErrorNULLPtr'
p30702
S'(-200604)'
p30703
sS'DAQmxWarningRateViolatesMinADCRate'
p30704
S'(200035)'
p30705
sS'DAQmx_Exported_StartTrig_OutputTerm'
p30706
S'0x0584'
p30707
sS'DAQmxErrorInvalidCloseAction'
p30708
S'(-200440)'
p30709
sS'DAQmxErrorInvalidDigDataWrite'
p30710
S'(-200562)'
p30711
sS'DAQmxErrorCannotPerformOpWhenTaskNotRunning'
p30712
S'(-200475)'
p30713
sS'DAQmxErrorChangeDetectionChanNotTristated'
p30714
S'(-200925)'
p30715
sS'DAQmxErrorVirtualChanNameUsed'
p30716
S'(-200171)'
p30717
sS'DAQmx_Val_Switch_Topology_1195_Quad_4x1_Mux'
p30718
S'"1195/Quad 4x1 Mux"'
p30719
sS'DAQmxErrorFailedToEnableHighSpeedInputClock'
p30720
S'(-200627)'
p30721
sS'DAQmx_AO_IdleOutputBehavior'
p30722
S'0x2240'
p30723
sS'DAQmx_Val_Volts'
p30724
S'10348'
p30725
sS'DAQmx_Dev_PCI_BusNum'
p30726
S'0x2327'
p30727
sS'DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit'
p30728
S'(-200977)'
p30729
sS'DAQmx_WatchdogExpirTrig_Type'
p30730
S'0x21A3'
p30731
sS'DAQmxErrorRoutingDestTermPXIStarInSlot2'
p30732
S'(-200701)'
p30733
sS'DAQmxErrorValueFoundInInvalidColumn'
p30734
S'(-201066)'
p30735
sS'DAQmxErrorPALBadReadMode'
p30736
S'(-50009)'
p30737
sS'DAQmxErrorRouteSrcAndDestSame'
p30738
S'(-200326)'
p30739
sS'DAQmxErrorInvalidCalVoltageForGivenGain'
p30740
S'(-200750)'
p30741
sS'DAQmxErrorExtCalAdjustExtRefVoltageFailed'
p30742
S'(-200546)'
p30743
sS'DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x'
p30744
S'(-200899)'
p30745
sS'DAQmx_Scale_Map_PreScaledMin'
p30746
S'0x1232'
p30747
sS'DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2'
p30748
S'(-200852)'
p30749
sS'DAQmx_Val_Switch_Topology_1128_2_Wire_32x1_Mux'
p30750
S'"1128/2-Wire 32x1 Mux"'
p30751
sS'DAQmx_Val_5Wire'
p30752
g29415
sS'DAQmx_Val_Switch_Topology_1128_4_Wire_16x1_Mux'
p30753
S'"1128/4-Wire 16x1 Mux"'
p30754
sS'DAQmx_AI_RTD_R0'
p30755
S'0x1030'
p30756
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Quad_64x1_Mux'
p30757
S'"1130/1-Wire Quad 64x1 Mux"'
p30758
sS'DAQmxErrorPALMessageUnderflow'
p30759
S'(-50651)'
p30760
sS'DAQmxErrorPALBusError'
p30761
S'(-50413)'
p30762
sS'DAQmx_Val_AandB'
p30763
S'12515'
p30764
sS'DAQmxErrorInvalidCharInPattern'
p30765
S'(-200496)'
p30766
sS'DAQmxErrorWaveformInScriptNotInMem'
p30767
S'(-200028)'
p30768
sS'DAQmx_AO_DAC_Ref_Val'
p30769
S'0x1832'
p30770
sS'DAQmxErrorCOWritePulseLowTicksNotSupported'
p30771
S'(-200689)'
p30772
sS'DAQmx_CI_GPS_SyncSrc'
p30773
S'0x1093'
p30774
sS'DAQmxErrorRepeatedPhysicalChan'
p30775
S'(-200371)'
p30776
sS'DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc'
p30777
S'0x2278'
p30778
sS'DAQmx_Watchdog_HasExpired'
p30779
S'0x21A8'
p30780
sS'DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice'
p30781
S'(-200981)'
p30782
sS'DAQmx_Val_CountDown'
p30783
S'10124'
p30784
sS'DAQmx_Val_Falling'
p30785
S'10171'
p30786
sS'DAQmxErrorChangeDetectionChanNotInTask'
p30787
S'(-200926)'
p30788
sS'DAQmxErrorLabVIEWInvalidTaskOrChans'
p30789
S'(-200428)'
p30790
sS'DAQmx_Hshk_DelayAfterXfer'
p30791
S'0x22C2'
p30792
sS'DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort'
p30793
S'(-200665)'
p30794
sS'DAQmx_PersistedChan_AllowInteractiveEditing'
p30795
S'0x22D1'
p30796
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_8x64_Matrix'
p30797
S'"2532/1-Wire 8x64 Matrix"'
p30798
sS'DAQmxErrorReferenceResistanceInvalid'
p30799
S'(-200155)'
p30800
sS'DAQmx_Val_Save_AllowInteractiveDeletion'
p30801
S'(1<<2)'
p30802
sS'DAQmx_DigEdge_StartTrig_DigFltr_Enable'
p30803
S'0x2223'
p30804
sS'DAQmxErrorPALTransferOverread'
p30805
S'(-50411)'
p30806
sS'DAQmx_CO_Pulse_LowTicks'
p30807
S'0x1171'
p30808
sS'DAQmx_RefTrig_Type'
p30809
S'0x1419'
p30810
sS'DAQmx_AO_OutputImpedance'
p30811
S'0x1490'
p30812
sS'DAQmx_CI_LinEncoder_DistPerPulse'
p30813
S'0x0911'
p30814
sS'DAQmx_Val_Switch_Topology_2565_16_SPST'
p30815
S'"2565/16-SPST"'
p30816
sS'DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate'
p30817
S'0x2279'
p30818
sS'DAQmxErrorUnexpectedSwitchActionInList'
p30819
S'(-200065)'
p30820
sS'DAQmxErrorNoTEDSTerminalBlock'
p30821
S'(-200743)'
p30822
sS'DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList'
p30823
S'(-200204)'
p30824
sS'DAQmx_Val_WaitForHandshakeTriggerDeassert'
p30825
S'12551'
p30826
sS'DAQmx_PersistedChan_AllowInteractiveDeletion'
p30827
S'0x22D2'
p30828
sS'DAQmxErrorResourceAlreadyReserved'
p30829
S'(-200022)'
p30830
sS'DAQmx_Val_SameAsSampTimebase'
p30831
S'10284'
p30832
sS'DAQmx_StartTrig_Delay'
p30833
S'0x1856'
p30834
sS'DAQmx_AO_Resolution'
p30835
S'0x182C'
p30836
sS'DAQmx_Val_Amps'
p30837
S'10342'
p30838
sS'DAQmx_Val_DoNotWrite'
p30839
S'12540'
p30840
sS'DAQmxErrorOddTotalBufferSizeToWrite'
p30841
S'(-200693)'
p30842
sS'DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist'
p30843
S'(-200637)'
p30844
sS'DAQmx_Val_B'
p30845
S'12514'
p30846
sS'DAQmx_Val_A'
p30847
S'12513'
p30848
sS'DAQmx_AI_Bridge_ShuntCal_GainAdjust'
p30849
S'0x193F'
p30850
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_8x16_Matrix'
p30851
S'"2529/2-Wire 8x16 Matrix"'
p30852
sS'DAQmxErrorInvalidAOGainCalConst'
p30853
S'(-200720)'
p30854
sS'DAQmx_Val_High'
p30855
S'10192'
p30856
sS'DAQmxErrorWriteWhenTaskNotRunningCOTicks'
p30857
S'(-200876)'
p30858
sS'DAQmxErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint'
p30859
S'(-201021)'
p30860
sS'DAQmx_AI_Excit_UseMultiplexed'
p30861
S'0x2180'
p30862
sS'DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType'
p30863
S'(-200858)'
p30864
sS'DAQmx_Val_g'
p30865
S'10186'
p30866
sS'DAQmxWarningPXIDevTempExceedsMaxOpTemp'
p30867
S'(200030)'
p30868
sS'DAQmxErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc'
p30869
S'(-201091)'
p30870
sS'DAQmxErrorSignalEventAlreadyRegistered'
p30871
S'(-200949)'
p30872
sS'DAQmx_AnlgLvl_PauseTrig_Coupling'
p30873
S'0x2236'
p30874
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_4x128_Matrix'
p30875
S'"2532/1-Wire 4x128 Matrix"'
p30876
sS'DAQmxErrorLeadingSpaceInString'
p30877
S'(-200553)'
p30878
sS'DAQmxErrorInvalidRecordNum'
p30879
S'(-200410)'
p30880
sS'DAQmx_Interlocked_HshkTrig_AssertedLvl'
p30881
S'0x22B9'
p30882
sS'DAQmx_AI_ChanCal_OperatorName'
p30883
S'0x22A3'
p30884
sS'DAQmxErrorUnitsNotFromCustomScale'
p30885
S'(-200447)'
p30886
sS'DAQmx_Val_Task_Stop'
p30887
g28856
sS'DAQmx_Val_DigPattern'
p30888
S'10398'
p30889
sS'DAQmxErrorTEDSLinearMappingSlopeZero'
p30890
S'(-200764)'
p30891
sS'DAQmxErrorCtrExportSignalNotPossible'
p30892
S'(-200359)'
p30893
sS'DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo'
p30894
S'(-200136)'
p30895
sS'DAQmxErrorAttrCannotBeSet'
p30896
S'(-200231)'
p30897
sS'DAQmx_SampClk_DigFltr_Enable'
p30898
S'0x221E'
p30899
sS'DAQmxErrorSubsetOutsideWaveformInScript'
p30900
S'(-200030)'
p30901
sS'DAQmx_Val_BreakBeforeMake'
p30902
S'10110'
p30903
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc'
p30904
S'0x222F'
p30905
sS'DAQmx_Val_NRSE'
p30906
S'10078'
p30907
sS'DAQmxErrorNoPolyScaleCoeffs'
p30908
S'(-200404)'
p30909
sS'DAQmx_Val_Temp_BuiltInSensor'
p30910
S'10311'
p30911
sS'DAQmxErrorPrescalerNot1ForTimebaseSrc'
p30912
S'(-200840)'
p30913
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_Dual_4x16_Matrix'
p30914
S'"2529/2-Wire Dual 4x16 Matrix"'
p30915
sS'DAQmx_DI_NumLines'
p30916
S'0x2178'
p30917
sS'DAQmxErrorChansAlreadyConnected'
p30918
S'(-200184)'
p30919
sS'DAQmxErrorOutputBoardClkDCMBecameUnlocked'
p30920
S'(-200388)'
p30921
sS'DAQmxErrorDelayFromStartTrigTooLong'
p30922
S'(-200334)'
p30923
sS'DAQmxErrorInvalidCharInDigPatternString'
p30924
S'(-200901)'
p30925
sS'DAQmxErrorTrigAIMinAIMax'
p30926
S'(-200422)'
p30927
sS'DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc'
p30928
S'0x2273'
p30929
sS'DAQmx_PhysicalChan_TEDS_MfgID'
p30930
S'0x21DA'
p30931
sS'DAQmx_Buf_Input_BufSize'
p30932
S'0x186C'
p30933
sS'DAQmx_Val_ContSamps'
p30934
S'10123'
p30935
sS'DAQmx_Val_AHighBLow'
p30936
S'10041'
p30937
sS'DAQmx_CI_Freq_Term'
p30938
S'0x18A2'
p30939
sS'DAQmx_CI_SemiPeriod_DigFltr_Enable'
p30940
S'0x2219'
p30941
sS'DAQmx_Dev_DO_Lines'
p30942
S'0x2322'
p30943
sS'DAQmxErrorTooManyChans'
p30944
S'(-200168)'
p30945
sS'DAQmxErrorMultiRecWithRIS'
p30946
S'(-200416)'
p30947
sS'DAQmx_Val_Handshake'
p30948
S'10389'
p30949
sS'DAQmx_Val_Switch_Topology_2591_4x1_Mux'
p30950
S'"2591/4x1 Mux"'
p30951
sS'DAQmx_Val_FullBridge'
p30952
S'10182'
p30953
sS'DAQmxErrorMoreThanOneActiveChannelSpecified'
p30954
S'(-200097)'
p30955
sS'DAQmxErrorPALTransferAborted'
p30956
S'(-50405)'
p30957
sS'DAQmxErrorChanDuplicatedInPath'
p30958
S'(-200183)'
p30959
sS'DAQmxErrorInvalidCharInString'
p30960
S'(-200552)'
p30961
sS'DAQmxErrorChannelNameNotSpecifiedInList'
p30962
S'(-200056)'
p30963
sS'DAQmx_CO_Pulse_Time_InitialDelay'
p30964
S'0x18BC'
p30965
sS'DAQmx_Val_Switch_Topology_2593_16x1_Mux'
p30966
S'"2593/16x1 Mux"'
p30967
sS'DAQmxErrorSampClkTimebaseSrcInvalid'
p30968
S'(-201088)'
p30969
sS'DAQmx_Val_Switch_Topology_2570_40_SPDT'
p30970
S'"2570/40-SPDT"'
p30971
sS'DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO'
p30972
S'(-200796)'
p30973
sS'DAQmx_AI_LVDT_Sensitivity'
p30974
S'0x0939'
p30975
sS'DAQmxErrorSensorValTooHigh'
p30976
S'(-200535)'
p30977
sS'DAQmxWarningPALBadWindowType'
p30978
S'(50016)'
p30979
sS'DAQmx_DigPattern_StartTrig_Src'
p30980
S'0x1410'
p30981
sS'DAQmxErrorPALComponentImageCorrupt'
p30982
S'(-50257)'
p30983
sS'DAQmxErrorTooManyPhysicalChansInList'
p30984
S'(-200071)'
p30985
sS'DAQmx_CI_PulseWidth_StartingEdge'
p30986
S'0x0825'
p30987
sS'DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript'
p30988
S'(-201007)'
p30989
sS'DAQmxErrorSampClkRateTooLowForDivDown'
p30990
S'(-200272)'
p30991
sS'DAQmx_Val_Sleep'
p30992
S'12547'
p30993
sS'DAQmxErrorFailedToAcquireCalData'
p30994
S'(-200697)'
p30995
sS'DAQmx_Dev_BusType'
p30996
S'0x2326'
p30997
sS'DAQmxErrorHystTrigLevelAIMin'
p30998
S'(-200421)'
p30999
sS'_NI_int32_DEFINED_'
p31000
g28661
sS'DAQmxErrorInconsistentUnitsSpecified'
p31001
S'(-200212)'
p31002
sS'DAQmxErrorSampClkRateDoesntMatchSampClkSrc'
p31003
S'(-201002)'
p31004
sS'DAQmx_Val_Inches'
p31005
S'10379'
p31006
sS'DAQmxSuccess'
p31007
S'(0)'
p31008
sS'DAQmxErrorInvalidRoutingSourceTerminalName'
p31009
S'(-200040)'
p31010
sS'DAQmx_Exported_20MHzTimebase_OutputTerm'
p31011
S'0x1657'
p31012
sS'DAQmx_Val_GPS_Timestamp'
p31013
S'10362'
p31014
sS'DAQmx_AI_ForceReadFromChan'
p31015
S'0x18F8'
p31016
sS'DAQmx_AI_ChanCal_Table_ScaledVals'
p31017
S'0x229E'
p31018
sS'DAQmxErrorGenStoppedToPreventRegenOfOldSamples'
p31019
S'(-200290)'
p31020
sS'DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning'
p31021
S'(-200832)'
p31022
sS'DAQmxErrorInvalidInstallation'
p31023
S'(-200683)'
p31024
sS'DAQmxErrorExtMasterTimebaseRateNotSpecified'
p31025
S'(-200304)'
p31026
sS'DAQmxErrorAccessorySettingNotApplicable'
p31027
S'(-201048)'
p31028
sS'DAQmx_Val_BelowLvl'
p31029
S'10107'
p31030
sS'DAQmx_AnlgEdge_RefTrig_Coupling'
p31031
S'0x2235'
p31032
sS'DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode'
p31033
S'(-200737)'
p31034
sS'DAQmx_AnlgEdge_RefTrig_Hyst'
p31035
S'0x1421'
p31036
sS'DAQmxErrorEventOutputTermIncludesTrigSrc'
p31037
S'(-200952)'
p31038
sS'DAQmxErrorInvalidSubsetLengthInScript'
p31039
S'(-200032)'
p31040
sS'DAQmxWarningDevNotSelfCalibratedWithDAQmx'
p31041
S'(200016)'
p31042
sS'DAQmxErrorExcitationNotSupportedWhenTermCfgDiff'
p31043
S'(-200817)'
p31044
sS'DAQmxErrorChanSizeTooBigForU16PortWrite'
p31045
S'(-200879)'
p31046
sS'DAQmx_Val_FallingSlope'
p31047
S'10171'
p31048
sS'DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset'
p31049
S'(-200512)'
p31050
sS'DAQmxErrorCouldNotReserveRequestedTrigLine_Routing'
p31051
S'(-89126)'
p31052
sS'DAQmxErrorInvalidAccessoryName'
p31053
S'(-201044)'
p31054
sS'DAQmx_Val_ResetTimer'
p31055
g28762
sS'DAQmxErrorNoChangeDetectOnNonInputDigLineForDev'
p31056
S'(-200798)'
p31057
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Octal_32x1_Mux'
p31058
S'"1130/1-Wire Octal 32x1 Mux"'
p31059
sS'DAQmx_DI_Tristate'
p31060
S'0x1890'
p31061
sS'DAQmxErrorPALDiskFull'
p31062
S'(-50203)'
p31063
sS'DAQmxErrorExtCalNotComplete'
p31064
S'(-200443)'
p31065
sS'DAQmxErrorTaskReferencesMissingLocalChannel'
p31066
S'(-201072)'
p31067
sS'DAQmx_AO_ResolutionUnits'
p31068
S'0x182B'
p31069
sS'DAQmxErrorOutputBufferEmpty'
p31070
S'(-200462)'
p31071
sS'DAQmxErrorInvalidHWProductNumber'
p31072
S'(-201058)'
p31073
sS'DAQmx_Val_Switch_Topology_2594_4x1_Mux'
p31074
S'"2594/4x1 Mux"'
p31075
sS'DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask'
p31076
S'(-200775)'
p31077
sS'DAQmxErrorOutputCantStartChangedBufferSize'
p31078
S'(-200567)'
p31079
sS'DAQmxErrorFunctionNotInLibrary'
p31080
S'(-200091)'
p31081
sS'DAQmxErrorPALFileOpenFault'
p31082
S'(-50204)'
p31083
sS'DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning'
p31084
S'(-200986)'
p31085
sS'DAQmxWarningPALComponentInitializationFault'
p31086
S'(50258)'
p31087
sS'DAQmxErrorNonbufferedReadMoreThanSampsPerChan'
p31088
S'(-200655)'
p31089
sS'DAQmx_Val_Action_Commit'
p31090
g28762
sS'DAQmxErrorInvalidExtTrigImpedance'
p31091
S'(-200426)'
p31092
sS'DAQmxErrorResourcesInUseForRoute_Routing'
p31093
S'(-89137)'
p31094
sS'DAQmxErrorDifferentDITristateValsForChansInTask'
p31095
S'(-200724)'
p31096
sS'DAQmx_Val_Pascals'
p31097
S'10081'
p31098
sS'DAQmxErrorStartFailedDueToWriteFailure'
p31099
S'(-200946)'
p31100
sS'DAQmxErrorTooManyChansForAnalogRefTrig'
p31101
S'(-200264)'
p31102
sS'DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch'
p31103
S'(-200893)'
p31104
sS'DAQmxWarningAISampRateTooLow'
p31105
S'(200017)'
p31106
sS'DAQmx_CI_Period_DigFltr_TimebaseRate'
p31107
S'0x21EF'
p31108
sS'DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt'
p31109
S'(-200787)'
p31110
sS'DAQmxErrorDigOutputOverrun'
p31111
S'(-200716)'
p31112
sS'DAQmx_RealTime_ConvLateErrorsToWarnings'
p31113
S'0x22EE'
p31114
sS'DAQmx_Val_RSE'
p31115
S'10083'
p31116
sS'DAQmx_Val_PathStatus_Unsupported'
p31117
S'10433'
p31118
sS'DAQmxWarningPALFeatureNotSupported'
p31119
S'(50256)'
p31120
sS'DAQmxErrorCannotHandshakeWhenTristateIsFalse'
p31121
S'(-200729)'
p31122
sS'DAQmx_Dev_ProductNum'
p31123
S'0x231D'
p31124
sS'DAQmxErrorFunctionNotSupportedForDeviceTasks'
p31125
S'(-200092)'
p31126
sS'DAQmxErrorTrigWhenOnDemandSampTiming'
p31127
S'(-200262)'
p31128
sS'DAQmxErrorPALBadAddressSpace'
p31129
S'(-50017)'
p31130
sS'DAQmx_Exported_AIConvClk_OutputTerm'
p31131
S'0x1687'
p31132
sS'DAQmx_Val_PCCard'
p31133
S'12585'
p31134
sS'DAQmxErrorDACRngHighNotEqualRefVal'
p31135
S'(-200448)'
p31136
sS'DAQmxErrorCJCChanNotSpecd'
p31137
S'(-200360)'
p31138
sS'DAQmx_Val_Switch_Topology_1130_Independent'
p31139
S'"1130/Independent"'
p31140
sS'DAQmx_Val_ALowBLow'
p31141
S'10043'
p31142
sS'__CFUNC'
p31143
S'__stdcall'
p31144
sS'DAQmxErrorPLLNotLocked'
p31145
S'(-201015)'
p31146
sS'DAQmxErrorSCXIModuleNotFound'
p31147
S'(-200073)'
p31148
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_4x16_Matrix'
p31149
S'"2530/2-Wire 4x16 Matrix"'
p31150
sS'DAQmx_CI_OutputState'
p31151
S'0x0149'
p31152
sS'DAQmxErrorRoutingHardwareBusy'
p31153
S'(-200043)'
p31154
sS'DAQmx_Val_ChangeDetectionEvent'
p31155
S'12511'
p31156
sS'DAQmxErrorInvalidTimingSrcDueToSampTimingType'
p31157
S'(-200785)'
p31158
sS'DAQmx_AO_Current_Units'
p31159
S'0x1109'
p31160
sS'DAQmxWarningPALSyncAbandoned'
p31161
S'(50551)'
p31162
sS'DAQmx_AI_Min'
p31163
S'0x17DE'
p31164
sS'DAQmxErrorDuplicateChanNameInCfgFile'
p31165
S'(-201081)'
p31166
sS'DAQmxErrorChansCantAppearInSameTask'
p31167
S'(-200713)'
p31168
sS'DAQmxErrorIntExcitSrcNotAvailable'
p31169
S'(-200161)'
p31170
sS'DAQmx_Val_mVoltsPerVoltPerDegree'
p31171
S'12507'
p31172
sS'DAQmx_AI_ChanCal_EnableCal'
p31173
S'0x2298'
p31174
sS'DAQmx_Read_ChannelsToRead'
p31175
S'0x1823'
p31176
sS'DAQmx_AI_StrainGage_GageFactor'
p31177
S'0x0994'
p31178
sS'DAQmx_Read_CurrReadPos'
p31179
S'0x1221'
p31180
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate'
p31181
S'0x21F4'
p31182
sS'DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate'
p31183
S'0x2230'
p31184
sS'DAQmxErrorInvalidTerm_Routing'
p31185
S'(-89129)'
p31186
sS'DAQmxErrorCppCantRemoveOtherObjectsEventHandler'
p31187
S'(-200588)'
p31188
sS'DAQmxErrorCantSetPowerupStateOnDigInChan'
p31189
S'(-200650)'
p31190
sS'DAQmx_CI_TwoEdgeSep_FirstTerm'
p31191
S'0x18AD'
p31192
sS'DAQmxErrorMinNotLessThanMax'
p31193
S'(-200082)'
p31194
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth'
p31195
S'0x2215'
p31196
sS'DAQmx_DigLvl_PauseTrig_DigSync_Enable'
p31197
S'0x222C'
p31198
sS'DAQmxErrorInvalidTopology'
p31199
S'(-200198)'
p31200
sS'DAQmxErrorCAPINoExtendedErrorInfoAvailable'
p31201
S'(-200399)'
p31202
sS'DAQmx_Val_Switch_Topology_2593_Dual_4x1_Terminated_Mux'
p31203
S'"2593/Dual 4x1 Terminated Mux"'
p31204
sS'DAQmxErrorInvalidOutputVoltageAtSampClkRate'
p31205
S'(-200392)'
p31206
sS'DAQmx_Exported_AdvCmpltEvent_OutputTerm'
p31207
S'0x1651'
p31208
sS'DAQmx_AI_Bridge_Cfg'
p31209
S'0x0087'
p31210
sS'DAQmxWarningSampClkRateAboveDevSpecs'
p31211
S'(200036)'
p31212
sS'DAQmxErrorMoreThanOneTerminal'
p31213
S'(-200098)'
p31214
sS'DAQmxErrorDuplicateDeviceName_Routing'
p31215
S'(-88715)'
p31216
sS'DAQmxErrorConnectOperatorInvalidAtPointInList'
p31217
S'(-200066)'
p31218
sS'DAQmx_AnlgEdge_StartTrig_Lvl'
p31219
S'0x1396'
p31220
sS'DAQmxWarningPALResourceInitialized'
p31221
S'(50105)'
p31222
sS'DAQmxErrorPhysicalChanNotOnThisConnector'
p31223
S'(-200851)'
p31224
sS'DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels'
p31225
S'(-200128)'
p31226
sS'DAQmxErrorChanSizeTooBigForU8PortWrite'
p31227
S'(-200565)'
p31228
sS'DAQmx_CI_CtrTimebaseMasterTimebaseDiv'
p31229
S'0x18B3'
p31230
sS'DAQmx_Val_20MHzTimebaseClock'
p31231
S'12486'
p31232
sS'DAQmxErrorBufferAndDataXferMode'
p31233
S'(-200216)'
p31234
sS'_NI_float64_DEFINED_'
p31235
g28661
sS'DAQmx_AO_DAC_Ref_ExtSrc'
p31236
S'0x2252'
p31237
sS'DAQmx_Val_3Wire'
p31238
g29262
sS'DAQmx_Val_ActiveDrive'
p31239
S'12573'
p31240
sS'DAQmx_Val_Ticks'
p31241
S'10304'
p31242
sS'_NI_int64_DEFINED_'
p31243
g28661
sS'DAQmxErrorIntegerExpectedInScript'
p31244
S'(-200247)'
p31245
sS'DAQmxErrorCOWritePulseLowTimeOutOfRange'
p31246
S'(-200687)'
p31247
sS'DAQmx_SampClk_Timebase_MasterTimebaseDiv'
p31248
S'0x1305'
p31249
sS'DAQmxErrorSuitableTimebaseNotFoundTimeCombo'
p31250
S'(-200137)'
p31251
sS'DAQmxErrorCJCChanAlreadyUsed'
p31252
S'(-200352)'
p31253
sS'DAQmxErrorChanAlreadyInTask'
p31254
S'(-200489)'
p31255
sS'DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev'
p31256
S'(-200807)'
p31257
sS'DAQmxErrorPropertyNotSupportedForScaleType'
p31258
S'(-200601)'
p31259
sS'DAQmxWarningPALBadMode'
p31260
S'(50006)'
p31261
sS'DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc'
p31262
S'0x2225'
p31263
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_Quad_6x1_Mux'
p31264
S'"2503/2-Wire Quad 6x1 Mux"'
p31265
sS'DAQmxErrorWriteToTEDSFailed'
p31266
S'(-200836)'
p31267
sS'DAQmx_CO_Pulse_LowTime'
p31268
S'0x18BB'
p31269
sS'DAQmxErrorHystTrigLevelAIMax'
p31270
S'(-200425)'
p31271
sS'DAQmx_RefTrig_PretrigSamples'
p31272
S'0x1445'
p31273
sS'DAQmxErrorPropertyNotSupportedForTimingSrc'
p31274
S'(-200739)'
p31275
sS'DAQmx_Val_Switch_Topology_1193_Dual_8x1_Terminated_Mux'
p31276
S'"1193/Dual 8x1 Terminated Mux"'
p31277
sS'DAQmxErrorTypeUnknown'
p31278
S'(-54020)'
p31279
sS'DAQmxErrorCounterMaxMinRangeFreq'
p31280
S'(-200139)'
p31281
sS'DAQmx_Val_NoAction'
p31282
S'10227'
p31283
sS'DAQmxWarningPALBadSelector'
p31284
S'(50003)'
p31285
sS'DAQmxErrorNULLPtrForC_Api'
p31286
S'(-200230)'
p31287
sS'DAQmx_AnlgLvl_PauseTrig_Lvl'
p31288
S'0x1369'
p31289
sS'DAQmx_Val_Closed'
p31290
S'10438'
p31291
sS'DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x'
p31292
S'(-200892)'
p31293
sS'DAQmxErrorPowerupStateNotSpecdForEntirePort'
p31294
S'(-200652)'
p31295
sS'DAQmxErrorReadNotCompleteBeforeSampClk'
p31296
S'(-209800)'
p31297
sS'DAQmx_Val_Switch_Topology_1193_16x1_Terminated_Mux'
p31298
S'"1193/16x1 Terminated Mux"'
p31299
sS'DAQmx_Exported_CtrOutEvent_Toggle_IdleState'
p31300
S'0x186A'
p31301
sS'DAQmxErrorPolyCoeffsInconsistent'
p31302
S'(-200537)'
p31303
sS'DAQmxErrorOperationTimedOut'
p31304
S'(-200474)'
p31305
sS'DAQmxWarningUserDefInfoStringTooLong'
p31306
S'(200013)'
p31307
sS'DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev'
p31308
S'(-200494)'
p31309
sS'DAQmxErrorIllegalAccessoryTypeForDeviceSpecd'
p31310
S'(-201046)'
p31311
sS'DAQmxErrorHardwareNotResponding'
p31312
S'(-200175)'
p31313
sS'DAQmxErrorInvalidTerm'
p31314
S'(-200254)'
p31315
sS'DAQmxErrorSampClkDCMLock'
p31316
S'(-200239)'
p31317
sS'DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x'
p31318
S'(-200898)'
p31319
sS'DAQmx_Exported_AdvTrig_Pulse_Width'
p31320
S'0x1648'
p31321
sS'DAQmx_AI_Bridge_ShuntCal_Enable'
p31322
S'0x0094'
p31323
sS'DAQmxErrorDoneEventAlreadyRegistered'
p31324
S'(-200950)'
p31325
sS'DAQmxErrorInvalidOptionForDigitalPortChannel'
p31326
S'(-200376)'
p31327
sS'DAQmx_StartTrig_Retriggerable'
p31328
S'0x190F'
p31329
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Sixteen_2x16_Matrix'
p31330
S'"2532/1-Wire Sixteen 2x16 Matrix"'
p31331
sS'DAQmx_Watchdog_Timeout'
p31332
S'0x21A9'
p31333
sS'DAQmxErrorInvalidNumCalADCReadsToAverage'
p31334
S'(-200515)'
p31335
sS'DAQmxWarningPALTransferAborted'
p31336
S'(50405)'
p31337
sS'DAQmxWarningDeviceMayShutDownDueToHighTemp'
p31338
S'(200034)'
p31339
sS'DAQmxErrorTaskReferencesLocalChannelFromOtherTask'
p31340
S'(-201071)'
p31341
sS'DAQmxErrorCounterOverflow'
p31342
S'(-200141)'
p31343
sS'DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput'
p31344
S'(-200727)'
p31345
sS'DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks'
p31346
S'(-200848)'
p31347
sS'DAQmx_Exported_AdvTrig_Pulse_Polarity'
p31348
S'0x1646'
p31349
sS'DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType'
p31350
S'(-200905)'
p31351
sS'DAQmxErrorTEDSMinElecValGEMaxElecVal'
p31352
S'(-200816)'
p31353
sS'DAQmxErrorCannotUpdatePulseGenProperty'
p31354
S'(-200301)'
p31355
sS'DAQmxErrorWaitModePropertyNotSupportedNonBuffered'
p31356
S'(-200923)'
p31357
sS'DAQmxErrorExtSyncPulseSrcCannotBeExported'
p31358
S'(-201092)'
p31359
sS'DAQmx_CI_PulseWidth_DigFltr_Enable'
p31360
S'0x220A'
p31361
sS'DAQmx_Val_Save_AllowInteractiveEditing'
p31362
S'(1<<1)'
p31363
sS'DAQmx_Val_WhenAcqComplete'
p31364
S'12546'
p31365
sS'DAQmxErrorHWObjectsFoundInFile'
p31366
S'(-201074)'
p31367
sS'DAQmx_Val_mVoltsPerVoltPerMillimeter'
p31368
S'12506'
p31369
sS'DAQmxErrorPALDeviceInitializationFault'
p31370
S'(-50303)'
p31371
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_256x1_Mux'
p31372
S'"1130/1-Wire 256x1 Mux"'
p31373
sS'DAQmxErrorResourcesInUseForInversion_Routing'
p31374
S'(-89134)'
p31375
sS'DAQmxErrorPALOSFault'
p31376
S'(-50202)'
p31377
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth'
p31378
S'0x21F2'
p31379
sS'DAQmxErrorBufferWithWaitMode'
p31380
S'(-200691)'
p31381
sS'DAQmxErrorPALOSUnsupported'
p31382
S'(-50200)'
p31383
sS'DAQmx_DigEdge_ArmStartTrig_Edge'
p31384
S'0x1415'
p31385
sS'DAQmxErrorPALBadPointer'
p31386
S'(-50004)'
p31387
sS'DAQmxErrorResourcesInUseForProperty'
p31388
S'(-200353)'
p31389
sS'DAQmxErrorTriggerPolarityConflict'
p31390
S'(-200206)'
p31391
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_Dual_12x1_Mux'
p31392
S'"2501/2-Wire Dual 12x1 Mux"'
p31393
sS'DAQmxErrorDigFilterEnableSetWhenTristateIsFalse'
p31394
S'(-200732)'
p31395
sS'DAQmxErrorProductOfAOMaxAndGainTooLarge'
p31396
S'(-200267)'
p31397
sS'DAQmxErrorEveryNSampsEventIntervalZeroNotSupported'
p31398
S'(-200880)'
p31399
sS'DAQmxErrorInterconnectBusNotFound'
p31400
S'(-54002)'
p31401
sS'DAQmx_Val_Switch_Topology_2590_4x1_Mux'
p31402
S'"2590/4x1 Mux"'
p31403
sS'DAQmx_AI_Excit_ActualVal'
p31404
S'0x1883'
p31405
sS'DAQmxErrorDeviceRemoved'
p31406
S'(-200045)'
p31407
sS'DAQmx_DigPattern_StartTrig_Pattern'
p31408
S'0x2186'
p31409
sS'DAQmxErrorDSFReadyForStartClock'
p31410
S'(-200631)'
p31411
sS'DAQmxErrorInvalidNumericFormatSpecd'
p31412
S'(-201056)'
p31413
sS'DAQmx_AI_ChanCal_Table_PreScaledVals'
p31414
S'0x229D'
p31415
sS'DAQmxWarningPALTransferInProgress'
p31416
S'(50403)'
p31417
sS'DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice'
p31418
S'(-200980)'
p31419
sS'DAQmx_CI_Min'
p31420
S'0x189D'
p31421
sS'DAQmx_Val_FromCustomScale'
p31422
S'10065'
p31423
sS'DAQmxErrorRuntimeAborting_Routing'
p31424
S'(-88710)'
p31425
sS'DAQmxWarningPALComponentAlreadyLoaded'
p31426
S'(50260)'
p31427
sS'DAQmx_Val_OnBrdMemMoreThanHalfFull'
p31428
S'10237'
p31429
sS'DAQmx_SampClk_DigFltr_TimebaseSrc'
p31430
S'0x2220'
p31431
sS'DAQmx_Watchdog_DO_ExpirState'
p31432
S'0x21A7'
p31433
sS'DAQmxErrorFailedToEnableHighSpeedOutput'
p31434
S'(-200615)'
p31435
sS'DAQmx_Val_Custom'
p31436
S'10137'
p31437
sS'DAQmx_Val_Switch_Topology_2593_8x1_Terminated_Mux'
p31438
S'"2593/8x1 Terminated Mux"'
p31439
sS'DAQmxErrorSwitchActionInListSpansMultipleDevices'
p31440
S'(-200053)'
p31441
sS'DAQmxErrorMarkerPosInvalidForLoopInScript'
p31442
S'(-200248)'
p31443
sS'DAQmxErrorDataOverwrittenInDeviceMemory'
p31444
S'(-200004)'
p31445
sS'DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh'
p31446
S'(-200381)'
p31447
sS'DAQmx_Val_Interrupts'
p31448
S'10204'
p31449
sS'DAQmxErrorRequiredPropertyMissing'
p31450
S'(-201039)'
p31451
sS'DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch'
p31452
S'(-200786)'
p31453
sS'DAQmx_AnlgEdge_StartTrig_Coupling'
p31454
S'0x2233'
p31455
sS'DAQmxErrorInvalidCalConstOscillatorFreqDACValue'
p31456
S'(-200519)'
p31457
sS'DAQmxErrorOutputBufferSizeNotMultOfXferSize'
p31458
S'(-200838)'
p31459
sS'DAQmxWarningPALBadAddressClass'
p31460
S'(50015)'
p31461
sS'DAQmxErrorDifftAIInputSrcInOneChanGroup'
p31462
S'(-200676)'
p31463
sS'DAQmx_Val_OnBrdMemNotEmpty'
p31464
S'10241'
p31465
sS'DAQmx_Val_Degrees'
p31466
S'10146'
p31467
sS'DAQmxErrorPALBadThreadMultitask'
p31468
S'(-50019)'
p31469
sS'DAQmx_Val_ConstVal'
p31470
S'10116'
p31471
sS'DAQmxWarningRISAcqCompletedSomeBinsNotFilled'
p31472
S'(200029)'
p31473
sS'DAQmx_Cal_UserDefinedInfo'
p31474
S'0x1861'
p31475
sS'DAQmxErrorExportSignalPolarityNotSupportedByHW'
p31476
S'(-200364)'
p31477
sS'DAQmxErrorWroteMultiSampsUsingSingleSampWrite'
p31478
S'(-200673)'
p31479
sS'DAQmx_AnlgWin_RefTrig_Btm'
p31480
S'0x1428'
p31481
sS'DAQmxErrorRefAndPauseTrigConfigured'
p31482
S'(-200628)'
p31483
sS'DAQmxErrorOutputFIFOUnderflow2'
p31484
S'(-200621)'
p31485
sS'DAQmxErrorForwardPolynomialCoefNotSpecd'
p31486
S'(-200351)'
p31487
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Dual_64x1_Mux'
p31488
S'"2530/1-Wire Dual 64x1 Mux"'
p31489
sS'DAQmx_Val_Finite'
p31490
S'10172'
p31491
sS'DAQmxErrorControlLineConflictOnPortC'
p31492
S'(-200126)'
p31493
sS'DAQmx_Val_Switch_Topology_2597_6x1_Terminated_Mux'
p31494
S'"2597/6x1 Terminated Mux"'
p31495
sS'DAQmxErrorCounterOutputPauseTriggerInvalid'
p31496
S'(-200144)'
p31497
sS'DAQmxErrorEventPulseWidthOutOfRange'
p31498
S'(-200346)'
p31499
sS'DAQmxErrorNoDevMemForScript'
p31500
S'(-200317)'
p31501
sS'DAQmxErrorActiveChannelNotSpecified'
p31502
S'(-200093)'
p31503
sS'DAQmxErrorAttributeNotSettableWhenTaskIsRunning'
p31504
S'(-200450)'
p31505
sS'DAQmxErrorInvalidWaveformLengthWithinLoopInScript'
p31506
S'(-200250)'
p31507
sS'DAQmx_Sys_DevNames'
p31508
S'0x193B'
p31509
sS'DAQmxErrorDisconnectPathNotSameAsExistingPath'
p31510
S'(-200190)'
p31511
sS'DAQmxWarningStoppedBeforeDone'
p31512
S'(200010)'
p31513
sS'DAQmx_CI_Encoder_ZInputTerm'
p31514
S'0x219F'
p31515
sS'DAQmxErrorMismatchedInputArraySizes'
p31516
S'(-200672)'
p31517
sS'DAQmx_AI_Excit_UseForScaling'
p31518
S'0x17FC'
p31519
sS'DAQmx_Val_WDTExpiredEvent'
p31520
S'12512'
p31521
sS'DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType'
p31522
S'(-200800)'
p31523
sS'DAQmx_SampClk_TimebaseDiv'
p31524
S'0x18EB'
p31525
sS'DAQmxErrorExtRefClkRateNotSpecified'
p31526
S'(-200735)'
p31527
sS'DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled'
p31528
S'(-200497)'
p31529
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_24x1_Mux'
p31530
S'"2503/2-Wire 24x1 Mux"'
p31531
sS'DAQmxErrorPALVersionMismatch'
p31532
S'(-50250)'
p31533
sS'DAQmxErrorBufferTooSmallForString'
p31534
S'(-200228)'
p31535
sS'DAQmx_Val_ExtControlled'
p31536
S'10326'
p31537
sS'DAQmx_Val_TwoEdgeSep'
p31538
S'10267'
p31539
sS'DAQmxErrorSampClkDCMBecameUnlocked'
p31540
S'(-200240)'
p31541
sS'DAQmxErrorChannelSizeTooBigForPortWriteType'
p31542
S'(-200465)'
p31543
sS'DAQmx_Val_HalfBridgeI'
p31544
S'10188'
p31545
sS'DAQmxErrorMStudioNoReversePolyScaleCoeffs'
p31546
S'(-200782)'
p31547
sS'DAQmxErrorScanListCannotBeTimed'
p31548
S'(-200067)'
p31549
sS'DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked'
p31550
S'(-200389)'
p31551
sS'DAQmxErrorChanCalRepeatedNumberInPreScaledVals'
p31552
S'(-200939)'
p31553
sS'DAQmx_Val_Switch_Topology_1175_1_Wire_196x1_Mux'
p31554
S'"1175/1-Wire 196x1 Mux"'
p31555
sS'DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold'
p31556
S'(-200944)'
p31557
sS'DAQmxErrorCppDotNetAPINegativeBufferSize'
p31558
S'(-200591)'
p31559
sS'DAQmx_PersistedTask_Author'
p31560
S'0x22CC'
p31561
sS'DAQmxWarningOutputGainTooHighForRFFreq'
p31562
S'(200032)'
p31563
sS'DAQmx_CO_CtrTimebaseActiveEdge'
p31564
S'0x0341'
p31565
sS'DAQmx_Val_MetersPerSecondSquared'
p31566
S'12470'
p31567
sS'DAQmxErrorPALWaitInterrupted'
p31568
S'(-50700)'
p31569
sS'DAQmxErrorPALFileReadFault'
p31570
S'(-50207)'
p31571
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_8x16_Matrix'
p31572
S'"1129/2-Wire Dual 8x16 Matrix"'
p31573
sS'DAQmx_CI_TCReached'
p31574
S'0x0150'
p31575
sS'DAQmx_Val_Switch_Topology_2586_10_SPST'
p31576
S'"2586/10-SPST"'
p31577
sS'DAQmx_Val_Tristate'
p31578
S'10310'
p31579
sS'DAQmx_Val_HighImpedance'
p31580
S'12527'
p31581
sS'DAQmx_Val_BuiltIn'
p31582
S'10200'
p31583
sS'DAQmx_Sys_GlobalChans'
p31584
S'0x1265'
p31585
sS'DAQmx_AI_Lowpass_SwitchCap_ClkSrc'
p31586
S'0x1884'
p31587
sS'DAQmxErrorRouteFailedBecauseWatchdogExpired'
p31588
S'(-200681)'
p31589
sS'DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents'
p31590
S'(-201000)'
p31591
sS'DAQmxErrorDeviceIDDoesNotMatch'
p31592
S'(-201063)'
p31593
sS'DAQmxWarningPALBadReadCount'
p31594
S'(50011)'
p31595
sS'DAQmx_CI_Freq_DigSync_Enable'
p31596
S'0x21EB'
p31597
sS'DAQmxErrorCompressedSampSizeExceedsResolution'
p31598
S'(-200957)'
p31599
sS'DAQmx_Val_LowFreq1Ctr'
p31600
S'10105'
p31601
sS'DAQmxErrorInconsistentAnalogTrigSettings'
p31602
S'(-200261)'
p31603
sS'DAQmx_AI_CurrentShunt_Loc'
p31604
S'0x17F2'
p31605
sS'DAQmxErrorCanNotPerformOpWhenNoChansInTask'
p31606
S'(-200478)'
p31607
sS'DAQmxErrorRefClkRateRefClkSrcMismatch'
p31608
S'(-200744)'
p31609
sS'DAQmxErrorPasswordTooLong'
p31610
S'(-200109)'
p31611
sS'DAQmx_Val_DoNotAllowRegen'
p31612
S'10158'
p31613
sS'DAQmxErrorInvalidDeviceConnectorNumberSpecd'
p31614
S'(-201045)'
p31615
sS'DAQmxErrorSyncPulseSrcInvalid'
p31616
S'(-201090)'
p31617
sS'DAQmx_CI_MeasType'
p31618
S'0x18A0'
p31619
sS'DAQmxErrorOffsetTooLarge'
p31620
S'(-200269)'
p31621
sS'DAQmxErrorImmedTrigDuringRISMode'
p31622
S'(-200418)'
p31623
sS'DAQmxErrorNoMatchForSpecdDevice'
p31624
S'(-201042)'
p31625
sS'DAQmx_DigEdge_AdvTrig_Src'
p31626
S'0x1362'
p31627
sS'DAQmx_Read_RawDataWidth'
p31628
S'0x217A'
p31629
sS'DAQmx_SyncPulse_Src'
p31630
S'0x223D'
p31631
sS'DAQmxErrorInvalidDTInsideWfmDataType'
p31632
S'(-200327)'
p31633
sS'DAQmxErrorDelayFromSampClkTooLong'
p31634
S'(-200337)'
p31635
sS'DAQmx_AI_Voltage_Units'
p31636
S'0x1094'
p31637
sS'DAQmxErrorDuplicateHiddenChanNamesInCfgFile'
p31638
S'(-201082)'
p31639
sS'DAQmxErrorPortReservedForHandshaking'
p31640
S'(-200118)'
p31641
sS'DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning'
p31642
S'(-200833)'
p31643
sS'DAQmxErrorAttrCannotBeReset'
p31644
S'(-200236)'
p31645
sS'DAQmx_Hshk_SampleInputDataWhen'
p31646
S'0x22C4'
p31647
sS'DAQmxErrorRefTrigWhenContinuous'
p31648
S'(-200358)'
p31649
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Dual_128x1_Mux'
p31650
S'"1130/1-Wire Dual 128x1 Mux"'
p31651
sS'DAQmx_PhysicalChan_TEDS_ModelNum'
p31652
S'0x21DB'
p31653
sS'DAQmxErrorCannotPerformOpWhenTaskNotReserved'
p31654
S'(-200664)'
p31655
sS'DAQmxErrorInternalTimebaseSourceDivisorCombo'
p31656
S'(-200135)'
p31657
sS'DAQmxWarningMultipleWritesBetweenSampClks'
p31658
S'(200033)'
p31659
sS'DAQmxErrorCVIFunctionNotFoundInDAQmxDLL'
p31660
S'(-200398)'
p31661
sS'DAQmx_Val_EverySample'
p31662
S'10164'
p31663
sS'DAQmx_CI_Freq_MeasMeth'
p31664
S'0x0144'
p31665
sS'DAQmxErrorPhysicalChanDoesNotExist'
p31666
S'(-200170)'
p31667
sS'DAQmx_Val_Switch_Topology_2527_1_Wire_Dual_32x1_Mux'
p31668
S'"2527/1-Wire Dual 32x1 Mux"'
p31669
sS'DAQmxErrorNoCommonTrigLineForRoute_Routing'
p31670
S'(-89139)'
p31671
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_Quad_6x1_Mux'
p31672
S'"2501/2-Wire Quad 6x1 Mux"'
p31673
sS'DAQmxErrorCalibrationHandleInvalid'
p31674
S'(-200112)'
p31675
sS'DAQmx_SelfCal_Supported'
p31676
S'0x1860'
p31677
sS'DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing'
p31678
S'(-89148)'
p31679
sS'DAQmxErrorNonBufferedAndDataXferInterrupts'
p31680
S'(-200845)'
p31681
sS'DAQmx_SwitchScan_WaitingForAdv'
p31682
S'0x17D9'
p31683
sS'DAQmxErrorInputSignalSlowerThanMeasTime'
p31684
S'(-200302)'
p31685
sS'DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed'
p31686
S'(-200883)'
p31687
sS'DAQmx_AO_Min'
p31688
S'0x1187'
p31689
sS'DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered'
p31690
S'(-200966)'
p31691
sS'DAQmxErrorSWObjectsFoundInFile'
p31692
S'(-201075)'
p31693
sS'DAQmx_Val_Switch_Topology_2530_Independent'
p31694
S'"2530/Independent"'
p31695
sS'DAQmx_AO_CustomScaleName'
p31696
S'0x1188'
p31697
sS'DAQmx_Val_mVoltsPerG'
p31698
S'12509'
p31699
sS'DAQmx_CI_Period_DigFltr_TimebaseSrc'
p31700
S'0x21EE'
p31701
sS'DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps'
p31702
S'(-200413)'
p31703
sS'DAQmxErrorPALFeatureNotSupported'
p31704
S'(-50256)'
p31705
sS'DAQmx_PersistedTask_AllowInteractiveDeletion'
p31706
S'0x22CE'
p31707
sS'DAQmxErrorMeasCalAdjustOscillatorFrequency'
p31708
S'(-200508)'
p31709
sS'DAQmx_CO_AutoIncrCnt'
p31710
S'0x0295'
p31711
sS'DAQmxErrorCannotSetPropertyWhenTaskRunning'
p31712
S'(-200557)'
p31713
sS'DAQmx_DigEdge_StartTrig_DigSync_Enable'
p31714
S'0x2227'
p31715
sS'DAQmx_Val_Resistance'
p31716
S'10278'
p31717
sS'DAQmxErrorDelayFromStartTrigTooShort'
p31718
S'(-200333)'
p31719
sS'DAQmx_AO_DAC_Ref_AllowConnToGnd'
p31720
S'0x1830'
p31721
sS'DAQmxErrorMeasCalAdjustMainPathPreAmpGain'
p31722
S'(-200503)'
p31723
sS'DAQmx_CI_TwoEdgeSep_SecondTerm'
p31724
S'0x18AE'
p31725
sS'DAQmxErrorInternalTimebaseRateDivisorSourceCombo'
p31726
S'(-200133)'
p31727
sS'DAQmxErrorSCXIDevNotUsablePowerTurnedOff'
p31728
S'(-200835)'
p31729
sS'DAQmx_Val_Auto'
p31730
S'-1'
p31731
sS'DAQmxErrorF64PrptyValNotUnsignedInt'
p31732
S'(-200394)'
p31733
sS'DAQmxWarningPALBadWriteOffset'
p31734
S'(50013)'
p31735
sS'DAQmxErrorOutputBufSizeTooSmallToStartGen'
p31736
S'(-200609)'
p31737
sS'DAQmxErrorResourcesInUseForInversion'
p31738
S'(-200365)'
p31739
sS'DAQmxErrorLines0To3ConfiguredForOutput'
p31740
S'(-200123)'
p31741
sS'DAQmx_AI_ChanCal_Verif_RefVals'
p31742
S'0x22A1'
p31743
sS'DAQmxErrorIdentifierTooLongInScript'
p31744
S'(-200533)'
p31745
sS'DAQmx_Scale_PreScaledUnits'
p31746
S'0x18F7'
p31747
sS'DAQmxErrorRouteNotSupportedByHW'
p31748
S'(-200368)'
p31749
sS'DAQmx_Val_Switch_Topology_2532_2_Wire_8x32_Matrix'
p31750
S'"2532/2-Wire 8x32 Matrix"'
p31751
sS'DAQmxErrorAIInputBufferSizeNotMultOfXferSize'
p31752
S'(-200763)'
p31753
sS'DAQmx_Val_Source'
p31754
S'10439'
p31755
sS'DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO'
p31756
S'(-200819)'
p31757
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_8x32_Matrix'
p31758
S'"1129/2-Wire 8x32 Matrix"'
p31759
sS'DAQmxErrorDAQmxVersionNotSupported'
p31760
S'(-201076)'
p31761
sS'DAQmx_DigEdge_WatchdogExpirTrig_Src'
p31762
S'0x21A4'
p31763
sS'DAQmx_CI_SemiPeriod_DigSync_Enable'
p31764
S'0x221D'
p31765
sS'DAQmxErrorCantExceedRelayDriveLimit'
p31766
S'(-200671)'
p31767
sS'DAQmxErrorSwitchOperationChansSpanMultipleDevsInList'
p31768
S'(-200596)'
p31769
sS'DAQmx_AI_DataXferReqCond'
p31770
S'0x188B'
p31771
sS'DAQmx_Val_Strain'
p31772
S'10299'
p31773
sS'DAQmxErrorDigitalOutputNotSupported'
p31774
S'(-200012)'
p31775
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Quad_16x1_Mux'
p31776
S'"2576/2-Wire Quad 16x1 Mux"'
p31777
sS'DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents'
p31778
S'(-200947)'
p31779
sS'DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal'
p31780
S'(-200668)'
p31781
sS'DAQmx_Scale_Table_PreScaledVals'
p31782
S'0x1237'
p31783
sS'DAQmxErrorInconsistentExcit'
p31784
S'(-200257)'
p31785
sS'DAQmxErrorConnectionSeparatorAtEndOfList'
p31786
S'(-200059)'
p31787
sS'DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc'
p31788
S'(-200309)'
p31789
sS'DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint'
p31790
S'(-209805)'
p31791
sS'DAQmx_Val_ChannelCurrent'
p31792
g28856
sS'DAQmx_AO_DAC_Offset_Src'
p31793
S'0x2253'
p31794
sS'DAQmx_Val_HighFreq2Ctr'
p31795
S'10157'
p31796
sS'DAQmx_Exported_SampClk_OutputTerm'
p31797
S'0x1663'
p31798
sS'DAQmx_Val_Switch_Topology_2530_2_Wire_64x1_Mux'
p31799
S'"2530/2-Wire 64x1 Mux"'
p31800
sS'DAQmx_Val_ChangeDetection'
p31801
S'12504'
p31802
sS'DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript'
p31803
S'(-200849)'
p31804
sS'DAQmxErrorSpecdDeviceDoesNotSupportRTSI'
p31805
S'(-201030)'
p31806
sS'DAQmxErrorResourcesInUseForRouteInTask'
p31807
S'(-200370)'
p31808
sS'DAQmxErrorPALResourceNotReserved'
p31809
S'(-50102)'
p31810
sS'DAQmxErrorUnableToDetectExtStimulusFreqDuringCal'
p31811
S'(-200441)'
p31812
sS'DAQmx_CI_Timestamp_InitialSeconds'
p31813
S'0x22B4'
p31814
sS'DAQmx_CO_CtrTimebase_DigFltr_Enable'
p31815
S'0x2276'
p31816
sS'DAQmx_SwitchDev_NumSwitchChans'
p31817
S'0x18E8'
p31818
sS'DAQmxErrorPALComponentNotUnloadable'
p31819
S'(-50262)'
p31820
sS'DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues'
p31821
S'(-200776)'
p31822
sS'DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x'
p31823
S'(-200900)'
p31824
sS'DAQmx_CI_Encoder_ZIndexVal'
p31825
S'0x0888'
p31826
sS'DAQmxErrorNoMemMapWhenHWTimedSinglePoint'
p31827
S'(-200679)'
p31828
sS'DAQmxErrorFileMissingRequiredDAQmxHeader'
p31829
S'(-201064)'
p31830
sS'DAQmxErrorInvalidSCXISlotNumberSpecd'
p31831
S'(-201032)'
p31832
sS'DAQmxErrorChanSizeTooBigForU8PortRead'
p31833
S'(-200563)'
p31834
sS'DAQmxWarningPretrigCoercion'
p31835
S'(200020)'
p31836
sS'DAQmxErrorOutputBufferUnderwrite'
p31837
S'(-200166)'
p31838
sS'DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing'
p31839
S'(-89142)'
p31840
sS'DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing'
p31841
S'(-89146)'
p31842
sS'DAQmxErrorInvalidAODataWrite'
p31843
S'(-200561)'
p31844
sS'DAQmxErrorInternalAIInputSrcInMultChanGroups'
p31845
S'(-200675)'
p31846
sS'DAQmxWarningWaitForNextSampClkDetectedMissedSampClk'
p31847
S'(209802)'
p31848
sS'DAQmx_Val_PseudoDiff'
p31849
S'12529'
p31850
sS'DAQmxErrorPowerBudgetExceeded'
p31851
S'(-200195)'
p31852
sS'DAQmxErrorNumLinesMismatchInReadOrWrite'
p31853
S'(-200463)'
p31854
sS'DAQmxErrorWaitForNextSampClkDetectedMissedSampClk'
p31855
S'(-209802)'
p31856
sS'DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual'
p31857
S'(-200350)'
p31858
sS'DAQmxErrorSimultaneousAOWhenNotOnDemandTiming'
p31859
S'(-200831)'
p31860
sS'DAQmxErrorCanExportOnlyDigEdgeTrigs'
p31861
S'(-200896)'
p31862
sS'DAQmx_Val_VoltsPerG'
p31863
S'12510'
p31864
sS'DAQmx_Val_SemiPeriod'
p31865
S'10289'
p31866
sS'DAQmx_Write_TotalSampPerChanGenerated'
p31867
S'0x192B'
p31868
sS'DAQmx_Val_PathStatus_ChannelInUse'
p31869
S'10434'
p31870
sS'DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted'
p31871
S'(-200451)'
p31872
sS'DAQmxWarningADCOverloaded'
p31873
S'(200005)'
p31874
sS'DAQmx_Dev_DO_Ports'
p31875
S'0x2323'
p31876
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal'
p31877
S'(-200871)'
p31878
sS'DAQmx_Val_PathStatus_Available'
p31879
S'10431'
p31880
sS'DAQmxErrorVoltageExcitIncompatibleWith2WireCfg'
p31881
S'(-200162)'
p31882
sS'DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart'
p31883
S'0x22BE'
p31884
sS'DAQmx_AI_RawSampJustification'
p31885
S'0x0050'
p31886
sS'DAQmxErrorLeadingUnderscoreInString'
p31887
S'(-200555)'
p31888
sS'DAQmx_Val_mVoltsPerVoltPerRadian'
p31889
S'12508'
p31890
sS'DAQmxErrorNegativeWriteSampleNumber'
p31891
S'(-200287)'
p31892
sS'DAQmxErrorSampClkRateInvalid'
p31893
S'(-201093)'
p31894
sS'DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev'
p31895
S'(-200945)'
p31896
sS'DAQmx_CI_DupCountPrevent'
p31897
S'0x21AC'
p31898
sS'DAQmx_SampClk_MaxRate'
p31899
S'0x22C8'
p31900
sS'DAQmxErrorInvalidPhysChanType'
p31901
S'(-200430)'
p31902
sS'DAQmx_AO_EnhancedImageRejectionEnable'
p31903
S'0x2241'
p31904
sS'DAQmxErrorStartTrigDelayWithExtSampClk'
p31905
S'(-200436)'
p31906
sS'DAQmxErrorDigFilterNotAvailableOnTerm'
p31907
S'(-200772)'
p31908
sS'DAQmxWarningPALMemoryAlignmentFault'
p31909
S'(50351)'
p31910
sS'DAQmx_Val_ChanPerLine'
p31911
g28762
sS'DAQmx_PersistedScale_AllowInteractiveDeletion'
p31912
S'0x22D6'
p31913
sS'DAQmxErrorAIMinNotSpecified'
p31914
S'(-200694)'
p31915
sS'DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask'
p31916
S'(-200854)'
p31917
sS'DAQmxErrorTooManyChansForInternalAIInputSrc'
p31918
S'(-200710)'
p31919
sS'DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth'
p31920
S'0x2272'
p31921
sS'DAQmxWarningUnrecognizedEnumValueEncounteredInStorage'
p31922
S'(200044)'
p31923
sS'DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain'
p31924
S'(-200511)'
p31925
sS'DAQmx_CI_Encoder_ZIndexPhase'
p31926
S'0x0889'
p31927
sS'DAQmxErrorChanSizeTooBigForU16PortRead'
p31928
S'(-200878)'
p31929
sS'DAQmx_AI_LeadWireResistance'
p31930
S'0x17EE'
p31931
sS'DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable'
p31932
S'0x2218'
p31933
sS'DAQmx_Val_FirstPretrigSamp'
p31934
S'10427'
p31935
sS'DAQmxErrorInternalClkDCMBecameUnlocked'
p31936
S'(-200386)'
p31937
sS'DAQmx_Read_SleepTime'
p31938
S'0x22B0'
p31939
sS'DAQmx_Val_Switch_Topology_2529_2_Wire_4x32_Matrix'
p31940
S'"2529/2-Wire 4x32 Matrix"'
p31941
sS'DAQmxErrorStartTrigSrcEqualToSampClkSrc'
p31942
S'(-200953)'
p31943
sS'DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint'
p31944
S'(-200975)'
p31945
sS'DAQmx_Val_Switch_Topology_1128_2_Wire_4x8_Matrix'
p31946
S'"1128/2-Wire 4x8 Matrix"'
p31947
sS'DAQmxWarningPALLogicalBufferEmpty'
p31948
S'(50406)'
p31949
sS'DAQmx_Exported_AIConvClk_Pulse_Polarity'
p31950
S'0x1688'
p31951
sS'DAQmx_CI_CountEdges_CountDir_DigFltr_Enable'
p31952
S'0x21F1'
p31953
sS'DAQmx_Val_Switch_Topology_2576_2_Wire_Sixteen_4x1_Mux'
p31954
S'"2576/2-Wire Sixteen 4x1 Mux"'
p31955
sS'DAQmx_Val_Pulse_Freq'
p31956
S'10119'
p31957
sS'DAQmxErrorInvalidTask'
p31958
S'(-200088)'
p31959
sS'DAQmx_Exported_DividedSampClkTimebase_OutputTerm'
p31960
S'0x21A1'
p31961
sS'DAQmxErrorRelayNameNotSpecifiedInList'
p31962
S'(-200531)'
p31963
sS'DAQmx_AI_Atten'
p31964
S'0x1801'
p31965
sS'DAQmx_Val_Meters'
p31966
S'10219'
p31967
sS'DAQmx_Exported_AIHoldCmpltEvent_OutputTerm'
p31968
S'0x18ED'
p31969
sS'DAQmxErrorAIMaxTooSmall'
p31970
S'(-200580)'
p31971
sS'DAQmxErrorLibraryNotPresent'
p31972
S'(-200090)'
p31973
sS'DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc'
p31974
S'0x221B'
p31975
sS'DAQmxErrorInconsistentNumSamplesToWrite'
p31976
S'(-200103)'
p31977
sS'DAQmx_Exported_ChangeDetectEvent_Pulse_Polarity'
p31978
S'0x2303'
p31979
sS'DAQmx_Dev_PXI_ChassisNum'
p31980
S'0x2329'
p31981
sS'DAQmx_AI_Max'
p31982
S'0x17DD'
p31983
sS'DAQmx_Val_Switch_Topology_2568_31_SPST'
p31984
S'"2568/31-SPST"'
p31985
sS'DAQmxErrorReadNoInputChansInTask'
p31986
S'(-200460)'
p31987
sS'DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate'
p31988
S'(-200870)'
p31989
sS'DAQmx_Val_Switch_Topology_2530_4_Wire_Dual_16x1_Mux'
p31990
S'"2530/4-Wire Dual 16x1 Mux"'
p31991
sS'DAQmx_Val_AllowRegen'
p31992
S'10097'
p31993
sS'DAQmxErrorCustomScaleDoesNotExist'
p31994
S'(-200378)'
p31995
sS'DAQmxErrorAOPropertiesCauseVoltageOverMax'
p31996
S'(-200582)'
p31997
sS'DAQmx_Write_RelativeTo'
p31998
S'0x190C'
p31999
sS'DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev'
p32000
S'(-200860)'
p32001
sS'DAQmxErrorDeviceAndConnectorSpecdAlreadyOccupied'
p32002
S'(-201047)'
p32003
sS'DAQmx_AO_OutputType'
p32004
S'0x1108'
p32005
sS'DAQmxErrorRoutingPathNotAvailable_Routing'
p32006
S'(-89124)'
p32007
sS'DAQmxErrorDelayFromSampClkWithExtConv'
p32008
S'(-200435)'
p32009
sS'DAQmx_Val_Switch_Topology_2503_2_Wire_4x6_Matrix'
p32010
S'"2503/2-Wire 4x6 Matrix"'
p32011
sS'DAQmx_CI_PulseWidth_DigSync_Enable'
p32012
S'0x220E'
p32013
sS'DAQmxErrorWaveformLengthNotMultipleOfIncr'
p32014
S'(-200400)'
p32015
sS'DAQmx_Val_Temp_Thrmstr'
p32016
S'10302'
p32017
sS'DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode'
p32018
S'(-200812)'
p32019
sS'DAQmxErrorInvalidDeviceID'
p32020
S'(-200220)'
p32021
sS'DAQmxErrorDevAbsentOrUnavailable'
p32022
S'(-200324)'
p32023
sS'DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_4x32_Matrix'
p32024
S'"1129/2-Wire Dual 4x32 Matrix"'
p32025
sS'DAQmx_AI_StrainGage_PoissonRatio'
p32026
S'0x0998'
p32027
sS'DAQmxErrorDigLinesReservedOrUnavailable'
p32028
S'(-200587)'
p32029
sS'DAQmxErrorPALBadDevice'
p32030
S'(-50002)'
p32031
sS'DAQmxErrorSampleTimingTypeAndDataXferMode'
p32032
S'(-200218)'
p32033
sS'DAQmxWarningReadNotCompleteBeforeSampClk'
p32034
S'(209800)'
p32035
sS'DAQmxErrorCAPIReservedParamNotNULLNorEmpty'
p32036
S'(-200493)'
p32037
sS'DAQmx_Val_ChannelVoltage'
p32038
g28762
sS'DAQmxErrorPALComponentNotFound'
p32039
S'(-50251)'
p32040
sS'DAQmx_StartTrig_DelayUnits'
p32041
S'0x18C8'
p32042
sS'DAQmxErrorSamplesWillNeverBeGenerated'
p32043
S'(-200288)'
p32044
sS'DAQmxErrorRouteNotSupportedByHW_Routing'
p32045
S'(-89136)'
p32046
sS'DAQmxErrorCannotHandshakeWithPort0'
p32047
S'(-200127)'
p32048
sS'DAQmx_Val_PPS'
p32049
S'10080'
p32050
sS'DAQmxErrorNoWatchdogOutputOnPortReservedForInput'
p32051
S'(-200667)'
p32052
sS'DAQmx_Val_B_Type_TC'
p32053
S'10047'
p32054
sS'DAQmx_RealTime_ReportMissedSamp'
p32055
S'0x2319'
p32056
sS'DAQmx_CI_CountEdges_DigFltr_TimebaseRate'
p32057
S'0x21F9'
p32058
sS'DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals'
p32059
S'(-200658)'
p32060
sS'DAQmx_CI_Period_DigFltr_Enable'
p32061
S'0x21EC'
p32062
sS'DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance'
p32063
S'(-200513)'
p32064
sS'DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted'
p32065
S'(-200473)'
p32066
sS'DAQmxErrorResourcesInUseForInversionInTask'
p32067
S'(-200366)'
p32068
sS'DAQmx_Val_DigLvl'
p32069
S'10152'
p32070
sS'DAQmx_AnlgWin_StartTrig_Coupling'
p32071
S'0x2234'
p32072
sS'DAQmxWarningPALFunctionObsolete'
p32073
S'(50254)'
p32074
sS'DAQmx_SwitchDev_NumColumns'
p32075
S'0x18EA'
p32076
sS'DAQmxErrorScriptDataUnderflow'
p32077
S'(-200316)'
p32078
sS'DAQmx_SwitchScan_RepeatMode'
p32079
S'0x1248'
p32080
sS'DAQmx_AO_DAC_Ref_ConnToGnd'
p32081
S'0x0130'
p32082
sS'DAQmxErrorUnexpectedSeparatorInList'
p32083
S'(-200064)'
p32084
sS'DAQmxErrorMultipleRelaysForSingleRelayOp'
p32085
S'(-200211)'
p32086
sS'DAQmx_AnlgWin_StartTrig_Src'
p32087
S'0x1400'
p32088
sS'DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc'
p32089
S'(-200780)'
p32090
sS'DAQmxErrorPALComponentTooNew'
p32091
S'(-50253)'
p32092
sS'DAQmxErrorAODuringCounter1DMAConflict'
p32093
S'(-200079)'
p32094
sS'DAQmx_Val_SampClkPeriods'
p32095
S'10286'
p32096
sS'DAQmx_DigEdge_ArmStartTrig_Src'
p32097
S'0x1417'
p32098
sS'DAQmx_AO_UseOnlyOnBrdMem'
p32099
S'0x183A'
p32100
sS'DAQmx_Buf_Output_OnbrdBufSize'
p32101
S'0x230B'
p32102
sS'DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript'
p32103
S'(-201013)'
p32104
sS'DAQmxErrorInvalidAnalogTrigSrc'
p32105
S'(-200265)'
p32106
sS'DAQmxWarningPALTransferOverwritten'
p32107
S'(50410)'
p32108
sS'DAQmx_Val_Acquired_Into_Buffer'
p32109
g28856
sS'DAQmxErrorOutputFIFOUnderflow'
p32110
S'(-200016)'
p32111
sS'DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript'
p32112
S'(-201010)'
p32113
sS'DAQmx_Val_Switch_Topology_2527_2_Wire_Dual_16x1_Mux'
p32114
S'"2527/2-Wire Dual 16x1 Mux"'
p32115
sS'DAQmxErrorActionNotSupportedTaskNotWatchdog'
p32116
S'(-200635)'
p32117
sS'DAQmxErrorTemperatureOutOfRangeForCalibration'
p32118
S'(-200113)'
p32119
sS'DAQmx_Val_QuarterBridgeI'
p32120
S'10271'
p32121
sS'DAQmxErrorPALResourceNotAvailable'
p32122
S'(-50101)'
p32123
sS'DAQmx_CO_PulseDone'
p32124
S'0x190E'
p32125
sS'DAQmx_AI_Bridge_Balance_CoarsePot'
p32126
S'0x17F1'
p32127
sS'DAQmx_AI_Coupling'
p32128
S'0x0064'
p32129
sS'DAQmx_Val_WaitForInterrupt'
p32130
S'12523'
p32131
sS'DAQmxErrorCannotOpenTopologyCfgFile'
p32132
S'(-200328)'
p32133
sS'DAQmx_AI_Freq_Hyst'
p32134
S'0x0814'
p32135
sS'DAQmxErrorInvalidTableIdentifier'
p32136
S'(-201067)'
p32137
sS'DAQmx_DigPattern_RefTrig_Src'
p32138
S'0x1437'
p32139
sS'DAQmxErrorInvalidRangeStatementCharInList'
p32140
S'(-200208)'
p32141
sS'DAQmxErrorPALBadAddressClass'
p32142
S'(-50015)'
p32143
sS'DAQmxErrorNoCommonTrigLineForTaskRoute'
p32144
S'(-200395)'
p32145
sS'DAQmxErrorSamplesWillNeverBeAvailable'
p32146
S'(-200278)'
p32147
sS'DAQmxErrorRuntimeAborted_Routing'
p32148
S'(-88709)'
p32149
sS'DAQmxErrorLines4To7ConfiguredForInput'
p32150
S'(-200124)'
p32151
sS'DAQmx_CI_TwoEdgeSep_FirstEdge'
p32152
S'0x0833'
p32153
sS'DAQmx_AO_DAC_Rng_High'
p32154
S'0x182E'
p32155
sS'DAQmxErrorInvalidAcqTypeForFREQOUT'
p32156
S'(-200747)'
p32157
sS'DAQmxErrorExpectedSeparatorInList'
p32158
S'(-200061)'
p32159
sS'DAQmx_Val_Switch_Topology_1127_1_Wire_64x1_Mux'
p32160
S'"1127/1-Wire 64x1 Mux"'
p32161
sS'DAQmx_CI_Encoder_ZInput_DigFltr_Enable'
p32162
S'0x2205'
p32163
sS'DAQmx_AI_Gain'
p32164
S'0x1818'
p32165
sS'DAQmxErrorFewerThan2PreScaledVals'
p32166
S'(-200434)'
p32167
sS'DAQmx_CO_Pulse_HighTicks'
p32168
S'0x1169'
p32169
sS'DAQmxErrorOnlyContinuousScanSupported'
p32170
S'(-200192)'
p32171
sS'DAQmxErrorMStudioInvalidPolyDirection'
p32172
S'(-200594)'
p32173
sS'DAQmxErrorReadWaitNextSampClkWaitMismatchOne'
p32174
S'(-200988)'
p32175
sS'DAQmxErrorInvalidCalConstGainDACValue'
p32176
S'(-200516)'
p32177
sS'DAQmx_CI_PulseWidth_Term'
p32178
S'0x18AA'
p32179
sS'DAQmxWarningCAPIStringTruncatedToFitBuffer'
p32180
S'(200026)'
p32181
sS'DAQmxErrorAttrCannotBeRead'
p32182
S'(-200232)'
p32183
sS'DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed'
p32184
S'(-200884)'
p32185
sS'DAQmxErrorExtCalConstsInvalid'
p32186
S'(-200437)'
p32187
sS'DAQmxErrorTEDSSensorNotDetected'
p32188
S'(-200709)'
p32189
sS'DAQmx_AnlgEdge_RefTrig_Slope'
p32190
S'0x1423'
p32191
sS'DAQmx_DI_DigFltr_Enable'
p32192
S'0x21D6'
p32193
sS'DAQmxWarningCounter0DMADuringAIConflict'
p32194
S'(200008)'
p32195
sS'DAQmxErrorCODAQmxWriteMultipleChans'
p32196
S'(-200794)'
p32197
sS'DAQmxErrorInvalidAdvanceEventTriggerType'
p32198
S'(-200070)'
p32199
sS'DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2'
p32200
S'(-201023)'
p32201
sS'DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr'
p32202
S'(-200347)'
p32203
sS'DAQmx_DigPattern_RefTrig_Pattern'
p32204
S'0x2187'
p32205
sS'DAQmxErrorWaveformNameTooLong'
p32206
S'(-200534)'
p32207
sS'DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2'
p32208
S'(-200917)'
p32209
sS'DAQmxWarningPALPhysicalBufferEmpty'
p32210
S'(50408)'
p32211
sS'DAQmx_Sys_NIDAQMinorVersion'
p32212
S'0x1923'
p32213
sS'DAQmx_AIConv_ActiveEdge'
p32214
S'0x1853'
p32215
sS'DAQmxErrorResourcesInUseForProperty_Routing'
p32216
S'(-89132)'
p32217
sS'DAQmx_SampClk_DigSync_Enable'
p32218
S'0x2222'
p32219
sS'DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg'
p32220
S'(-200105)'
p32221
sS'DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling'
p32222
S'0x22DB'
p32223
sS'DAQmxErrorStartTrigDigPatternChanNotInTask'
p32224
S'(-200887)'
p32225
sS'DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2'
p32226
S'(-200706)'
p32227
sS'DAQmxErrorCannotReadRelativeToRefTrigUntilDone'
p32228
S'(-200281)'
p32229
sS'DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar'
p32230
S'(-200810)'
p32231
sS'DAQmxErrorClkDoublerDCMLock'
p32232
S'(-200241)'
p32233
sS'DAQmx_CO_RdyForNewVal'
p32234
S'0x22FF'
p32235
sS'DAQmxErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan'
p32236
S'(-201085)'
p32237
sS'DAQmxErrorRecordOverwritten'
p32238
S'(-200006)'
p32239
sS'DAQmx_Exported_HshkEvent_Pulse_Polarity'
p32240
S'0x22C0'
p32241
sS'DAQmx_Val_Switch_Topology_1130_2_Wire_4x32_Matrix'
p32242
S'"1130/2-Wire 4x32 Matrix"'
p32243
sS'DAQmxWarningPALMemoryHeapNotEmpty'
p32244
S'(50355)'
p32245
sS'DAQmx_Scale_ScaledUnits'
p32246
S'0x191B'
p32247
sS'DAQmx_Write_WaitMode'
p32248
S'0x22B1'
p32249
sS'DAQmx_CI_Period_MeasMeth'
p32250
S'0x192C'
p32251
sS'DAQmxErrorZeroReversePolyScaleCoeffs'
p32252
S'(-200408)'
p32253
sS'DAQmxErrorDifferentInternalAIInputSources'
p32254
S'(-200573)'
p32255
sS'DAQmx_AO_LoadImpedance'
p32256
S'0x0121'
p32257
sS'DAQmxErrorDifferentAIInputSrcInOneChanGroup'
p32258
S'(-200572)'
p32259
sS'DAQmxWarningTooManyInterruptsPerSecond'
p32260
S'(200014)'
p32261
sS'DAQmx_Val_HandshakeTriggerDeasserts'
p32262
S'12553'
p32263
sS'DAQmx_Val_PathStatus_SourceChannelConflict'
p32264
S'10435'
p32265
sS'DAQmxErrorCantSetAuthorForLocalChan'
p32266
S'(-201038)'
p32267
sS'DAQmxErrorReadBufferTooSmall'
p32268
S'(-200229)'
p32269
sS'DAQmx_Val_Cfg_Default'
p32270
S'-1'
p32271
sS'DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput'
p32272
S'(-200726)'
p32273
sS'DAQmx_Val_Switch_Topology_1175_2_Wire_95x1_Mux'
p32274
S'"1175/2-Wire 95x1 Mux"'
p32275
sS'DAQmx_CI_Encoder_ZInput_DigSync_Enable'
p32276
S'0x2209'
p32277
sS'DAQmx_Val_Switch_Topology_2596_Dual_6x1_Mux'
p32278
S'"2596/Dual 6x1 Mux"'
p32279
sS'DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType'
p32280
S'(-200911)'
p32281
sS'DAQmxErrorCannotTristate8255OutputLines'
p32282
S'(-200116)'
p32283
sS'DAQmx_AI_Excit_Src'
p32284
S'0x17F4'
p32285
sS'DAQmxErrorPhysChanDevNotInTask'
p32286
S'(-200648)'
p32287
sS'DAQmx_SwitchChan_Bandwidth'
p32288
S'0x0640'
p32289
sS'DAQmx_AI_RawSampSize'
p32290
S'0x22DA'
p32291
sS'DAQmx_Val_EnteringWin'
p32292
S'10163'
p32293
sS'DAQmxErrorResourceNotFound'
p32294
S'(-54000)'
p32295
sS'DAQmxErrorRouteSrcAndDestSame_Routing'
p32296
S'(-89131)'
p32297
sS'DAQmxErrorInvalidINIFileSyntax'
p32298
S'(-201060)'
p32299
sS'DAQmxErrorInvalidCalArea'
p32300
S'(-200438)'
p32301
sS'DAQmxErrorCorruptedTEDSMemory'
p32302
S'(-200742)'
p32303
sS'DAQmxErrorCannotScanWithCurrentTopology'
p32304
S'(-200205)'
p32305
sS'DAQmx_Dev_CI_PhysicalChans'
p32306
S'0x2324'
p32307
sS'DAQmxErrorAOMinMaxNotInDACRange'
p32308
S'(-200759)'
p32309
sS'DAQmxErrorInputFIFOOverflow2'
p32310
S'(-200361)'
p32311
sS'DAQmx_AO_TermCfg'
p32312
S'0x188E'
p32313
sS'DAQmx_Val_Action_Cancel'
p32314
g28856
sS'DAQmxErrorSampClkSrcInvalidForOutputValidForInput'
p32315
S'(-200610)'
p32316
sS'DAQmxErrorSampleRateNumChansConvertPeriodCombo'
p32317
S'(-200081)'
p32318
sS'DAQmxErrorNumPtsToComputeNotPositive'
p32319
S'(-200401)'
p32320
sS'DAQmx_AI_RVDT_SensitivityUnits'
p32321
S'0x219B'
p32322
sS'DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize'
p32323
S'(-200894)'
p32324
sS'DAQmxErrorInvalidTrigTypeSendsSWTrig'
p32325
S'(-200372)'
p32326
sS'DAQmx_CI_CountEdges_DigFltr_MinPulseWidth'
p32327
S'0x21F7'
p32328
sS'DAQmxErrorPALDMALinkEventMissed'
p32329
S'(-50450)'
p32330
sS'DAQmxErrorBridgeOffsetNullingCalNotSupported'
p32331
S'(-200696)'
p32332
sS'DAQmxWarningCounter1DMADuringAOConflict'
p32333
S'(200009)'
p32334
sS'DAQmx_Write_DigitalLines_BytesPerChan'
p32335
S'0x217F'
p32336
sS'DAQmxWarningOutputGainTooLowForRFFreq'
p32337
S'(200031)'
p32338
sS'DAQmx_Task_Complete'
p32339
S'0x1274'
p32340
sS'DAQmx_AO_MemMapEnable'
p32341
S'0x188F'
p32342
sS'DAQmx_CI_PulseWidth_DigFltr_TimebaseRate'
p32343
S'0x220D'
p32344
sS'DAQmx_SwitchChan_MaxACCarryCurrent'
p32345
S'0x0648'
p32346
sS'DAQmxErrorChannelNotAvailableInParallelMode'
p32347
S'(-200150)'
p32348
sS'DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning'
p32349
S'(-200983)'
p32350
sS'DAQmx_AIConv_Rate'
p32351
S'0x1848'
p32352
sS'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified'
p32353
S'(-200698)'
p32354
sS'DAQmx_Val_AdvanceTrigger'
p32355
S'12488'
p32356
sS'DAQmx_Val_Switch_Topology_1127_2_Wire_32x1_Mux'
p32357
S'"1127/2-Wire 32x1 Mux"'
p32358
sS'DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing'
p32359
S'(-89141)'
p32360
sS'DAQmxErrorTEDSMinPhysValGEMaxPhysVal'
p32361
S'(-200815)'
p32362
sS'DAQmx_AI_Bridge_NomResistance'
p32363
S'0x17EC'
p32364
sS'DAQmxErrorMultipleWritesBetweenSampClks'
p32365
S'(-200748)'
p32366
sS'DAQmxErrorPALMessageOverflow'
p32367
S'(-50650)'
p32368
sS'DAQmxErrorTrigLineNotFound_Routing'
p32369
S'(-89125)'
p32370
sS'DAQmx_Val_AO'
p32371
S'10102'
p32372
sS'DAQmxErrorBuiltInTempSensorNotSupported'
p32373
S'(-200255)'
p32374
sS'DAQmx_Val_AI'
p32375
S'10100'
p32376
sS'DAQmx_Val_Switch_Topology_1130_1_Wire_Sixteen_16x1_Mux'
p32377
S'"1130/1-Wire Sixteen 16x1 Mux"'
p32378
sS'DAQmx_Read_Offset'
p32379
S'0x190B'
p32380
sS'DAQmx_Val_AC'
p32381
S'10045'
p32382
sS'DAQmxErrorReadWaitNextSampClkWaitMismatchTwo'
p32383
S'(-200989)'
p32384
sS'DAQmxErrorOverloadedChansExistNotRead'
p32385
S'(-200362)'
p32386
sS'DAQmxErrorPALIrrelevantAttribute'
p32387
S'(-50001)'
p32388
sS'DAQmx_Exported_AdvCmpltEvent_Pulse_Polarity'
p32389
S'0x1652'
p32390
sS'DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate'
p32391
S'0x2217'
p32392
sS'DAQmxErrorMemMapAndBuffer'
p32393
S'(-200215)'
p32394
sS'DAQmxErrorExtCalTemperatureNotDAQmx'
p32395
S'(-200544)'
p32396
sS'DAQmx_Val_OutsideWin'
p32397
S'10251'
p32398
sS'DAQmx_Val_Load'
p32399
S'10440'
p32400
sS'DAQmxErrorPXIDevTempCausedShutDown'
p32401
S'(-200623)'
p32402
sS'DAQmx_CI_CountEdges_Dir'
p32403
S'0x0696'
p32404
sS'DAQmxErrorPALBadSelector'
p32405
S'(-50003)'
p32406
sS'DAQmx_AI_Current_Units'
p32407
S'0x0701'
p32408
sS'DAQmxErrorIntermediateBufferFull'
p32409
S'(-200495)'
p32410
sS'DAQmx_CI_CustomScaleName'
p32411
S'0x189E'
p32412
sS'DAQmxErrorAOSampTimingTypeDifferentIn2Tasks'
p32413
S'(-200963)'
p32414
sS'DAQmxErrorPALBadOffset'
p32415
S'(-50007)'
p32416
sS'DAQmxErrorInvalidNumberSamplesToRead'
p32417
S'(-200096)'
p32418
sS'DAQmxErrorNoDMAChansAvailable'
p32419
S'(-200251)'
p32420
sS'DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_16x16_Matrix'
p32421
S'"2532/1-Wire Dual 16x16 Matrix"'
p32422
sS'DAQmx_Val_HalfBridgeII'
p32423
S'10189'
p32424
sS'DAQmxErrorWatchdogTimerNotSupported'
p32425
S'(-200662)'
p32426
sS'DAQmxErrorSamplesNotYetAvailable'
p32427
S'(-200284)'
p32428
sS'DAQmxErrorMultipleChansNotSupportedDuringCalSetup'
p32429
S'(-201004)'
p32430
sS'DAQmx_Val_Unknown'
p32431
S'12588'
p32432
sS'DAQmxErrorCantSaveTaskWithoutReplace'
p32433
S'(-200484)'
p32434
sS'DAQmx_Exported_AdvCmpltEvent_Delay'
p32435
S'0x1757'
p32436
sS'DAQmx_CI_SemiPeriod_StartingEdge'
p32437
S'0x22FE'
p32438
sS'DAQmx_Val_Kelvins'
p32439
S'10325'
p32440
sS'DAQmxErrorDuplicateTask'
p32441
S'(-200089)'
p32442
sS'DAQmx_RefClk_Rate'
p32443
S'0x1315'
p32444
sS'DAQmx_CI_Freq_MeasTime'
p32445
S'0x0145'
p32446
sS'DAQmxErrorNonBufferedAndHWTimed'
p32447
S'(-201025)'
p32448
sS'DAQmxErrorNoChansSpecdForPatternSource'
p32449
S'(-200927)'
p32450
sS'DAQmx_AI_Lowpass_Enable'
p32451
S'0x1802'
p32452
sS'DAQmxErrorCounterStartPauseTriggerConflict'
p32453
S'(-200146)'
p32454
sS'DAQmxErrorPALFileWriteFault'
p32455
S'(-50208)'
p32456
sS'DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc'
p32457
S'(-200779)'
p32458
sS'DAQmxErrorPALFirmwareFault'
p32459
S'(-50151)'
p32460
sS'DAQmxErrorMemMapAndSimultaneousAO'
p32461
S'(-200830)'
p32462
sS'DAQmx_Val_HalfBridge'
p32463
S'10187'
p32464
sS'DAQmxWarningPALBadDevice'
p32465
S'(50002)'
p32466
sS'DAQmxErrorSampClkTimebaseDCMBecameUnlocked'
p32467
S'(-200238)'
p32468
sS'DAQmxErrorSemicolonDoesNotFollowRangeInList'
p32469
S'(-200054)'
p32470
sS'DAQmx_Val_PCI'
p32471
S'12582'
p32472
sS'DAQmx_Val_Position_AngEncoder'
p32473
S'10360'
p32474
sS'DAQmxErrorCannotAddNewDevsAfterTaskConfiguration'
p32475
S'(-200855)'
p32476
sS'DAQmxErrorWaitIsLastInstructionOfLoopInScript'
p32477
S'(-200038)'
p32478
sS'DAQmxErrorReversePolyOrderLessThanNumPtsToCompute'
p32479
S'(-200403)'
p32480
sS'DAQmx_Val_SynchronousEventCallbacks'
p32481
S'(1<<0)'
p32482
sS'DAQmxErrorDataLineReservedForDynamicOutput'
p32483
S'(-200384)'
p32484
sS'DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc'
p32485
S'0x2207'
p32486
sS'DAQmxErrorPALThreadHasNoThreadObject'
p32487
S'(-50601)'
p32488
sS'DAQmx_Val_DoNotOverwriteUnreadSamps'
p32489
S'10159'
p32490
sS'DAQmxErrorInvalidPhysicalChanForCal'
p32491
S'(-200444)'
p32492
sS'DAQmx_AO_DAC_Ref_Src'
p32493
S'0x0132'
p32494
sS'DAQmxErrorEndpointNotFound'
p32495
S'(-54001)'
p32496
sS'DAQmxErrorSubsetStartOffsetNotAlignedInScript'
p32497
S'(-200033)'
p32498
sS'DAQmxErrorUnexpectedEndOfActionsInList'
p32499
S'(-200196)'
p32500
sS'DAQmxWarningPALBadReadOffset'
p32501
S'(50010)'
p32502
sS'DAQmxErrorSwitchDevShutDownDueToHighTemp'
p32503
S'(-200818)'
p32504
sS'DAQmx_Val_Task_Reserve'
p32505
g30362
sS'DAQmx_AnlgWin_StartTrig_When'
p32506
S'0x1401'
p32507
sS'DAQmx_AI_Accel_SensitivityUnits'
p32508
S'0x219C'
p32509
sS'_NI_float32_DEFINED_'
p32510
g28661
sS'DAQmxErrorChanCalScaleTypeNotSet'
p32511
S'(-200935)'
p32512
sS'DAQmx_CI_Freq_DigFltr_Enable'
p32513
S'0x21E7'
p32514
sS'DAQmxErrorExplicitConnectionExists'
p32515
S'(-200179)'
p32516
sS'DAQmxErrorCannotReadPastEndOfRecord'
p32517
S'(-200614)'
p32518
sS'DAQmx_Scale_Poly_ReverseCoeff'
p32519
S'0x1235'
p32520
sS'DAQmxErrorPropertyNotSupportedNotOutputTask'
p32521
S'(-200456)'
p32522
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal'
p32523
S'(-200867)'
p32524
sS'DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable'
p32525
S'0x220F'
p32526
sS'DAQmxErrorInvalidRefClkSrcGivenSampClkSrc'
p32527
S'(-200383)'
p32528
sS'DAQmx_AI_Lowpass_SwitchCap_OutClkDiv'
p32529
S'0x1887'
p32530
sS'_NI_uInt64_DEFINED_'
p32531
g28661
sS'DAQmx_Dev_AI_PhysicalChans'
p32532
S'0x231E'
p32533
sS'DAQmxErrorExtraPropertyDetectedInSpecdObject'
p32534
S'(-201040)'
p32535
sS'DAQmxErrorDLLLock'
p32536
S'(-200550)'
p32537
sS'DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc'
p32538
S'(-200781)'
p32539
sS'DAQmxErrorStreamDCMLock'
p32540
S'(-200313)'
p32541
sS'DAQmx_CO_Pulse_Freq_InitialDelay'
p32542
S'0x0299'
p32543
sS'DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal'
p32544
S'(-200866)'
p32545
sS'DAQmxErrorHWTimedSinglePointNotSupportedAI'
p32546
S'(-200821)'
p32547
sS'DAQmx_SwitchChan_MaxACCarryPwr'
p32548
S'0x0642'
p32549
sS'DAQmxErrorSampsPerChanTooBig'
p32550
S'(-200306)'
p32551
sS'DAQmx_CO_CtrTimebaseMasterTimebaseDiv'
p32552
S'0x18C3'
p32553
sS'DAQmxErrorSwitchCannotDriveMultipleTrigLines'
p32554
S'(-200203)'
p32555
sS'DAQmx_Exported_CtrOutEvent_OutputBehavior'
p32556
S'0x174F'
p32557
sS'DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO'
p32558
S'(-200842)'
p32559
sS'DAQmx_Val_Cont'
p32560
S'10117'
p32561
sS'DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered'
p32562
S'(-200967)'
p32563
sS'DAQmxErrorAcqStoppedDriverCantXferDataFastEnough'
p32564
S'(-200714)'
p32565
sS'DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Amplified_Mux'
p32566
S'"2501/2-Wire 24x1 Amplified Mux"'
p32567
sS'DAQmx_AI_Bridge_Balance_FinePot'
p32568
S'0x18F4'
p32569
sS'DAQmx_CI_Period_DigSync_Enable'
p32570
S'0x21F0'
p32571
sS'DAQmxErrorAOPropertiesCauseVoltageBelowMin'
p32572
S'(-200583)'
p32573
sS'DAQmx_CI_NumPossiblyInvalidSamps'
p32574
S'0x193C'
p32575
sS'DAQmx_AI_ChanCal_ApplyCalIfExp'
p32576
S'0x2299'
p32577
sS'DAQmxErrorPulseActiveAtStart'
p32578
S'(-200339)'
p32579
sS'DAQmxErrorTEDSMappingMethodInvalidOrUnsupported'
p32580
S'(-200765)'
p32581
sS'DAQmx_Write_RawDataWidth'
p32582
S'0x217D'
p32583
sS'DAQmxErrorAttrNotSupported'
p32584
S'(-200197)'
p32585
sS'DAQmxError20MhzTimebaseNotSupportedGivenTimingType'
p32586
S'(-200909)'
p32587
sS'DAQmx_Write_Offset'
p32588
S'0x190D'
p32589
sS'DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation'
p32590
S'(-200595)'
p32591
sS'DAQmxErrorCOMultipleWritesBetweenSampClks'
p32592
S'(-200951)'
p32593
sS'DAQmx_AnlgWin_RefTrig_Src'
p32594
S'0x1426'
p32595
sS'DAQmxErrorPALFunctionNotFound'
p32596
S'(-50255)'
p32597
sS'DAQmxErrorPortDoesNotSupportHandshakingDataIO'
p32598
S'(-200117)'
p32599
sS'DAQmxErrorDACRefValNotSet'
p32600
S'(-200540)'
p32601
sS'DAQmx_AI_CustomScaleName'
p32602
S'0x17E0'
p32603
sS'DAQmxErrorTDCNotEnabledDuringRISMode'
p32604
S'(-200417)'
p32605
sS'DAQmxErrorCalPasswordNotSupported'
p32606
S'(-201006)'
p32607
sS'DAQmx_Val_Immediate'
p32608
S'10198'
p32609
sS'DAQmx_StartTrig_Type'
p32610
S'0x1393'
p32611
sS'DAQmxErrorCannotConnectChansDirectly'
p32612
S'(-200185)'
p32613
sS'DAQmx_OnDemand_SimultaneousAOEnable'
p32614
S'0x21A0'
p32615
sS'DAQmxErrorIdentifierInListTooLong'
p32616
S'(-200058)'
p32617
sS'DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice'
p32618
S'(-200106)'
p32619
sS'DAQmx_Val_Switch_Topology_2575_1_Wire_196x1_Mux'
p32620
S'"2575/1-Wire 196x1 Mux"'
p32621
sS'DAQmxErrorWriteWhenTaskNotRunningCOFreq'
p32622
S'(-200875)'
p32623
sS'DAQmx_SwitchChan_MaxDCSwitchPwr'
p32624
S'0x0649'
p32625
sS'DAQmxErrorSampClkRateNotSupportedWithEARDisabled'
p32626
S'(-201001)'
p32627
sS'DAQmxErrorCabledModuleCannotRouteConvClk'
p32628
S'(-200319)'
p32629
sS'DAQmx_Val_Freq'
p32630
S'10179'
p32631
sS'DAQmxErrorNoMoreSpace'
p32632
S'(-200293)'
p32633
sS'DAQmxErrorDDCClkOutDCMLock'
p32634
S'(-200243)'
p32635
sS'DAQmxWarningPALComponentNotUnloadable'
p32636
S'(50262)'
p32637
sS'DAQmxErrorDigInputOverrun'
p32638
S'(-200715)'
p32639
sS'DAQmx_ChanDescr'
p32640
S'0x1926'
p32641
sS'__CFUNC_C'
p32642
S'__cdecl'
p32643
sS'DAQmx_CI_Freq_DigFltr_MinPulseWidth'
p32644
S'0x21E8'
p32645
sS'DAQmx_Val_Poll'
p32646
S'12524'
p32647
sS'DAQmxErrorSignalEventsNotSupportedByDevice'
p32648
S'(-200982)'
p32649
sS'DAQmxErrorDuplicateDevIDInList'
p32650
S'(-200209)'
p32651
sS'DAQmx_DigEdge_AdvTrig_DigFltr_Enable'
p32652
S'0x2238'
p32653
sS'DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate'
p32654
S'0x2203'
p32655
sS'NULL'
p32656
S'(0L)'
p32657
sS'DAQmx_Interlocked_HshkTrig_Src'
p32658
S'0x22B8'
p32659
sS'DAQmxErrorPALComponentAlreadyInstalled'
p32660
S'(-50263)'
p32661
sS'DAQmxErrorPALTransferNotInProgress'
p32662
S'(-50402)'
p32663
sS'DAQmxErrorTimeStampOverwritten'
p32664
S'(-200009)'
p32665
sS'DAQmxErrorPALOSInitializationFault'
p32666
S'(-50201)'
p32667
sS'DAQmx_Val_SampClk'
p32668
S'10388'
p32669
sS'DAQmx_Exported_10MHzRefClk_OutputTerm'
p32670
S'0x226E'
p32671
sS'DAQmxErrorMultipleCounterInputTask'
p32672
S'(-200147)'
p32673
sS'DAQmxErrorAutoStartWriteNotAllowedEventRegistered'
p32674
S'(-200985)'
p32675
sS'DAQmxErrorChanDoesNotSupportCompression'
p32676
S'(-200956)'
p32677
sS'DAQmx_Val_DigEdge'
p32678
S'10150'
p32679
sS'DAQmxErrorDACRngLowNotEqualToMinusRefVal'
p32680
S'(-200670)'
p32681
sS'DAQmxErrorPALResourceNotInitialized'
p32682
S'(-50104)'
p32683
sS'DAQmxErrorCIOnboardClockNotSupportedAsInputTerm'
p32684
S'(-200814)'
p32685
sS'DAQmxErrorSampClockSourceNotSupportedGivenTimingType'
p32686
S'(-200908)'
p32687
sS'DAQmx_Val_RefTrig'
p32688
S'10426'
p32689
sS'DAQmxErrorInvalidChannel'
p32690
S'(-200087)'
p32691
sS'DAQmxErrorCanExportOnlyOnboardSampClk'
p32692
S'(-200891)'
p32693
sS'DAQmxErrorDifferentRawDataFormats'
p32694
S'(-200955)'
p32695
sS'DAQmx_CO_OutputState'
p32696
S'0x0294'
p32697
sS'DAQmx_Val_FullBridgeII'
p32698
S'10184'
p32699
sS'DAQmx_AI_Freq_Units'
p32700
S'0x0806'
p32701
sS'DAQmxErrorCOWriteDutyCycleOutOfRange'
p32702
S'(-200684)'
p32703
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_8x16_Matrix'
p32704
S'"2530/1-Wire 8x16 Matrix"'
p32705
sS'DAQmx_Val_Switch_Topology_2530_1_Wire_Octal_16x1_Mux'
p32706
S'"2530/1-Wire Octal 16x1 Mux"'
p32707
sS'DAQmxErrorPowerupStateNotSupported'
p32708
S'(-200663)'
p32709
sS'DAQmxErrorCantSetPropertyTaskNotRunning'
p32710
S'(-200972)'
p32711
sS'DAQmx_CO_Pulse_IdleState'
p32712
S'0x1170'
p32713
sS'DAQmxErrorPALResourceOwnedBySystem'
p32714
S'(-50100)'
p32715
ssS'unions'
p32716
(dp32717
sS'values'
p32718
(dp32719
g28086
I8993
sg28088
I-200186
sg28090
I4113
sg28092
I4115
sg28094
I4112
sg28096
I-200651
sg28098
I8905
sg28100
I-200584
sg28102
I6377
sg28104
I50411
sg28106
I-209801
sg28108
I-200233
sg28110
S'2575/2-Wire 95x1 Mux'
p32720
sg28112
I4247
sg28114
I-200143
sg28116
I-200194
sg28118
I6133
sg28120
I10185
sg28122
I-200094
sg28124
I4960
sg28126
I-200979
sg28128
I-200721
sg28130
I-200270
sg28132
I-200042
sg28134
I10109
sg28136
I-200051
sg28138
I8732
sg28140
I4676
sg28142
I-200616
sg28144
I8730
sg28146
I6204
sg28148
I-200722
sg28150
I6108
sg28152
I-200745
sg28154
I-200882
sg28156
I-200191
sg28158
I-200824
sg28160
I10205
sg28162
I-200507
sg28164
I-200669
sg28166
I-50408
sg28168
I-89135
sg28170
I-200837
sg28172
I-200915
sg28174
I-200201
sg28176
I-50400
sg28178
I-200163
sg28180
I-201053
sg28182
I-50006
sg28184
I209801
sg28186
I-200405
sg28188
I-200653
sg28190
I-200466
sg28192
I-200412
sg28194
I-200680
sg28196
I-200217
sg28198
I8726
sg28200
I-200564
sg28202
I8868
sg28204
I-200971
sg28206
I4472
sg28208
I-200005
sg28210
I6373
sg28212
I8943
sg28214
I50152
sg28216
I10279
sg28218
I-200961
sg28220
I-200686
sg28222
I-200312
sg28224
I-200485
sg28226
I-54011
sg28228
I8883
sg28230
I-200581
sg28232
I6372
sg28234
I6345
sg28236
I6347
sg28238
I6346
sg28240
I8577
sg28242
I-200131
sg28244
I8897
sg28246
I10270
sg28248
I-200528
sg28250
I6226
sg28252
I-200237
sg28254
I-200881
sg28256
I50004
sg28258
I-200277
sg28260
I-200834
sg28262
I10352
sg28264
I-200936
sg28266
I10183
sg28268
I50200
sg28270
I8722
sg28272
I50100
sg28274
I-200342
sg28276
I-50152
sg28278
I-200431
sg28280
I50000
sg28282
I-200034
sg28284
I10359
sg28286
I-200245
sg28288
I12550
sg28290
I-201029
sg28292
S'2576/2-Wire 64x1 Mux'
p32721
sg28294
I-200415
sg28296
I6369
sg28298
I8807
sg28300
I8682
sg28302
I-200283
sg28304
I-200863
sg28306
I-201059
sg28308
I-200214
sg28310
I6277
sg28312
I2389
sg28314
I-200630
sg28316
I10364
sg28318
I-201018
sg28320
I8916
sg28322
I8906
sg28324
I8892
sg28326
I8759
sg28328
I4981
sg28330
S'2585/1-Wire 10x1 Mux'
p32722
sg28332
I-200432
sg28334
I200022
sg28336
I-200406
sg28338
I-50260
sg28340
I-200649
sg28342
Nsg28344
I-200903
sg28346
I-50258
sg28348
I8891
sg28350
I10070
sg28352
I10361
sg28354
I-200382
sg28356
I8754
sg28358
I-200369
sg28360
S'1166/32-SPDT'
p32723
sg28362
I-50403
sg28364
I6300
sg28366
I-200543
sg28368
I-200424
sg28370
I8886
sg28372
I-50300
sg28374
I-200792
sg28376
I-200019
sg28378
I-200142
sg28380
I-50407
sg28382
I6338
sg28384
I10448
sg28386
S'2593/Dual 8x1 Mux'
p32724
sg28388
I8605
sg28390
L1L
sg28392
I-200464
sg28394
I-201079
sg28396
I-200224
sg28398
I6106
sg28400
I-200132
sg28402
I10132
sg28404
I-200525
sg28406
I10131
sg28408
S'2532/1-Wire Dual 4x64 Matrix'
p32725
sg28410
I4470
sg28412
I-50600
sg28414
I-201031
sg28416
I-200295
sg28418
I10273
sg28420
I-200390
sg28422
I50407
sg28424
I8750
sg28426
I-200826
sg28428
S'2584/1-Wire 15x1 Mux'
p32726
sg28430
I-200916
sg28432
I-200433
sg28434
I4864
sg28436
I-200367
sg28438
I6343
sg28440
I-201041
sg28442
I-200711
sg28444
I-200717
sg28446
I-200225
sg28448
I-200738
sg28450
I8866
sg28452
I8820
sg28454
S'2595/4x1 Mux'
p32727
sg28456
S'1193/32x1 Mux'
p32728
sg28458
I-200640
sg28460
I-200048
sg28462
I6310
sg28464
I-88716
sg28466
I10264
sg28468
I-200348
sg28470
I1939
sg28472
I-200159
sg28474
I6251
sg28476
I6441
sg28478
Nsg28480
I-200991
sg28482
I50404
sg28484
S'2576/2-Wire Octal 8x1 Mux'
p32729
sg28486
I6325
sg28488
I8705
sg28490
I-200749
sg28492
I-200024
sg28494
I-200808
sg28496
I-50301
sg28498
I-200571
sg28500
I-200222
sg28502
I-201033
sg28504
I-200446
sg28506
I-200311
sg28508
I8698
sg28510
I-89121
sg28512
I200025
sg28514
I-200003
sg28516
I-201016
sg28518
I10265
sg28520
I8706
sg28522
I8803
sg28524
I4629
sg28526
I-200811
sg28528
I-200692
sg28530
I-200308
sg28532
I-200998
sg28534
I-200461
sg28536
I8569
sg28538
I12531
sg28540
I-200589
sg28542
I-50206
sg28544
I10042
sg28546
I4726
sg28548
I8747
sg28550
I-200829
sg28552
I6445
sg28554
I8893
sg28556
I-200636
sg28558
I-50105
sg28560
I-50020
sg28562
I-89127
sg28564
I8749
sg28566
I-200862
sg28568
I-200244
sg28570
I6374
sg28572
I-200321
sg28574
I-50603
sg28576
I-200253
sg28578
I50103
sg28580
I-201083
sg28582
I8724
sg28584
I4656
sg28586
I-200273
sg28588
I-200472
sg28590
I-200469
sg28592
I50106
sg28594
L0L
sg28596
I-200145
sg28598
I-201086
sg28600
I-200948
sg28602
I5269
sg28604
I12538
sg28606
I10071
sg28608
I-201069
sg28610
I257
sg28612
I-200242
sg28614
I-200069
sg28616
I-201078
sg28618
I4625
sg28620
I-200740
sg28622
I-200551
sg28624
I6389
sg28626
S'2532/2-Wire 16x16 Matrix'
p32730
sg28628
I-200314
sg28630
I-200959
sg28632
I12491
sg28634
I4979
sg28636
I10085
sg28638
I-200505
sg28640
I-200271
sg28642
I-200933
sg28644
I-200276
sg28646
I-200119
sg28648
I10082
sg28650
I8564
sg28652
I-200035
sg28654
I-200568
sg28656
I-200622
sg28658
I-200007
sg28660
Nsg28662
I4657
sg28664
I-200483
sg28666
I-50011
sg28668
I8685
sg28670
S'1127/Independent'
p32731
sg28672
I-200387
sg28674
I-201084
sg28676
I8917
sg28678
I-200188
sg28680
I10430
sg28682
F-1.0
sg28684
I-200542
sg28686
I-201077
sg28688
I-200606
sg28690
I10095
sg28692
I-200654
sg28694
I6349
sg28696
I-200509
sg28698
I-200391
sg28700
I4992
sg28702
I8704
sg28704
I12484
sg28706
I8565
sg28708
I-200569
sg28710
I-89120
sg28712
I8766
sg28714
I-200643
sg28716
I-200153
sg28718
I8964
sg28720
I-200678
sg28722
I4647
sg28724
I10252
sg28726
I-200338
sg28728
I-200373
sg28730
I-200036
sg28732
I-200549
sg28734
I200003
sg28736
I-200363
sg28738
I-200015
sg28740
I12525
sg28742
I-200320
sg28744
Nsg28745
S'2530/1-Wire Quad 32x1 Mux'
p32732
sg28747
I-200666
sg28749
I-200839
sg28751
I-200374
sg28753
I-200523
sg28755
I-200286
sg28757
I-201055
sg28759
I10436
sg28761
I0
sg28763
I-200181
sg28765
I-200490
sg28767
S'2530/1-Wire 128x1 Mux'
p32733
sg28769
I10384
sg28771
I-200642
sg28773
I-200645
sg28775
S'1128/Independent'
p32734
sg28777
I-200210
sg28779
I-200459
sg28781
I-200532
sg28783
I-201095
sg28785
I200028
sg28787
I10269
sg28789
I1585
sg28791
I-200755
sg28793
I8737
sg28795
I-200771
sg28797
I12537
sg28799
I6177
sg28801
I50409
sg28803
I8574
sg28805
I10050
sg28807
I10151
sg28809
I12516
sg28811
I2069
sg28813
I8600
sg28815
I10153
sg28817
I-200331
sg28819
I-200330
sg28821
I-201062
sg28823
I8678
sg28825
I-200453
sg28827
I-200788
sg28829
I-200049
sg28831
I-200783
sg28833
I-54022
sg28835
S'2564/16-SPST'
p32735
sg28837
I8986
sg28839
I-50409
sg28841
I200042
sg28843
I-200457
sg28845
I200041
sg28847
I-200355
sg28849
I5989
sg28851
I-201080
sg28853
I-200050
sg28855
I1
sg28857
I-200629
sg28859
I6305
sg28861
I-200207
sg28863
I-200100
sg28865
I50008
sg28867
I-200823
sg28869
I-50604
sg28871
I4146
sg28873
I-200634
sg28875
I10353
sg28877
I8599
sg28879
I10103
sg28881
I10253
sg28883
I-200969
sg28885
I12522
sg28887
I-200176
sg28889
I12493
sg28891
I-200577
sg28893
I-201087
sg28895
I5137
sg28897
I-89123
sg28899
I200027
sg28901
I4484
sg28903
S'2530/4-Wire 32x1 Mux'
p32736
sg28905
I-200429
sg28907
I-200607
sg28909
I4872
sg28911
S'2527/4-Wire 16x1 Mux'
p32737
sg28913
I-200151
sg28915
I4865
sg28917
I-200700
sg28919
I200024
sg28921
I-200861
sg28923
I-200719
sg28925
I8668
sg28927
S'1130/2-Wire 128x1 Mux'
p32738
sg28929
I8970
sg28931
I10167
sg28933
I2130
sg28935
I-89138
sg28937
I-200099
sg28939
I-200790
sg28941
S'2576/2-Wire Dual 32x1 Mux'
p32739
sg28943
I-200760
sg28945
I-200797
sg28947
I-201014
sg28949
I-200874
sg28951
I8754
sg28953
I4710
sg28955
I-50404
sg28957
I4977
sg28959
I12548
sg28961
Nsg28962
I8700
sg28964
I-200632
sg28966
I-89130
sg28968
I8571
sg28970
S'1192/8-SPDT'
p32740
sg28972
I10292
sg28974
I8742
sg28976
I-201068
sg28978
I-200685
sg28980
I-200828
sg28982
I-200984
sg28984
I10447
sg28986
I6307
sg28988
I-50261
sg28990
I8997
sg28992
I6147
sg28994
I10425
sg28996
I6308
sg28998
I6449
sg29000
I-201049
sg29002
I-89145
sg29004
I8716
sg29006
S'2530/2-Wire Quad 16x1 Mux'
p32741
sg29008
S'1128/1-Wire 64x1 Mux'
p32742
sg29010
I-200695
sg29012
I-200761
sg29014
I1603
sg29016
I-89122
sg29018
I-201009
sg29020
I6166
sg29022
S'1129/2-Wire 16x16 Matrix'
p32743
sg29024
I328
sg29026
I10228
sg29028
I8721
sg29030
I1
sg29032
I12590
sg29034
I5015
sg29036
I-200964
sg29038
S'1193/Quad 4x1 Terminated Mux'
p32744
sg29040
I-200158
sg29042
I5911
sg29044
I8764
sg29046
I-200605
sg29048
I6134
sg29050
I12586
sg29052
I5172
sg29054
I-200973
sg29056
I-200522
sg29058
I-201061
sg29060
I-200047
sg29062
I-50410
sg29064
I4486
sg29066
I8744
sg29068
I-200157
sg29070
I-200219
sg29072
I-200857
sg29074
I-200258
sg29076
I-200618
sg29078
S'2501/2-Wire 4x6 Matrix'
p32745
sg29080
I10280
sg29082
I-50259
sg29084
I-200646
sg29086
I4403
sg29088
I-200752
sg29090
I-200498
sg29092
I200037
sg29094
I-200182
sg29096
I-200152
sg29098
S'1191/Quad 4x1 Mux'
p32746
sg29100
I9002
sg29102
I8788
sg29104
I10301
sg29106
I4980
sg29108
I-200578
sg29110
I4921
sg29112
I-201008
sg29114
I4193
sg29116
I10096
sg29118
I4880
sg29120
I6
sg29122
I1685
sg29124
I-200379
sg29126
I-200148
sg29128
I-200656
sg29130
S'1130/4-Wire 64x1 Mux'
p32747
sg29132
I-200560
sg29134
I-200756
sg29136
S'2599/2-SPDT'
p32748
sg29138
I8941
sg29140
I8920
sg29142
I5416
sg29144
Nsg29145
I200004
sg29147
I10143
sg29149
I-200626
sg29151
I10144
sg29153
I-200332
sg29155
I10145
sg29157
I10200
sg29159
I6316
sg29161
I4679
sg29163
I-200769
sg29165
I-50412
sg29167
I-200449
sg29169
I-200307
sg29171
I5216
sg29173
I1606
sg29175
I10300
sg29177
I-200160
sg29179
I10055
sg29181
S'2530/1-Wire 4x32 Matrix'
p32749
sg29183
I10086
sg29185
I98
sg29187
I6375
sg29189
I10428
sg29191
I-200173
sg29193
I-200305
sg29195
I-200062
sg29197
I4643
sg29199
I-200520
sg29201
I-200420
sg29203
S'2566/16-SPDT'
p32750
sg29205
I-201051
sg29207
S'1130/4-Wire Quad 16x1 Mux'
p32751
sg29209
I8597
sg29211
I1586
sg29213
I5013
sg29215
I10040
sg29217
I-200919
sg29219
I-200349
sg29221
I-50010
sg29223
I-200612
sg29225
I-200768
sg29227
I258
sg29229
I-200611
sg29231
I-200486
sg29233
I-200057
sg29235
I12574
sg29237
I-200541
sg29239
Nsg29241
S'2530/2-Wire Dual 32x1 Mux'
p32752
sg29243
I8681
sg29245
I-200762
sg29247
I-54021
sg29249
I-200734
sg29251
I50402
sg29253
I-200690
sg29255
I-200310
sg29257
I-200095
sg29259
I4985
sg29261
I3
sg29263
I5016
sg29265
I-200702
sg29267
I-200470
sg29269
I6165
sg29271
I-50550
sg29273
I-200574
sg29275
I8991
sg29277
I-200060
sg29279
I54022
sg29281
S'2575/2-Wire 98x1 Mux'
p32753
sg29283
I1945
sg29285
I-201022
sg29287
I-50352
sg29289
I-200586
sg29291
I-200538
sg29293
I-200031
sg29295
I10230
sg29297
I-200987
sg29299
I50012
sg29301
I-200844
sg29303
I-200121
sg29305
I-200753
sg29307
I50202
sg29309
I12490
sg29311
I5203
sg29313
S'2527/2-Wire 32x1 Mux'
p32754
sg29315
I-200300
sg29317
I-200026
sg29319
I-200958
sg29321
I307
sg29323
I6461
sg29325
I-89143
sg29327
I2433
sg29329
I-201070
sg29331
I-201050
sg29333
I4660
sg29335
I-200751
sg29337
I-200872
sg29339
I1601
sg29341
I-200345
sg29343
I-50106
sg29345
I8613
sg29347
I5123
sg29349
I10214
sg29351
I-200600
sg29353
I10424
sg29355
I-200303
sg29357
I-200120
sg29359
I5168
sg29361
I8890
sg29363
I6182
sg29365
I6247
sg29367
I-50150
sg29369
I-54012
sg29371
I1
sg29372
I12552
sg29374
I-200274
sg29376
I6319
sg29378
I-201026
sg29380
I6410
sg29382
I-200968
sg29384
I-200294
sg29386
I-200078
sg29388
I8753
sg29390
I200015
sg29392
I6125
sg29394
I8715
sg29396
I-200895
sg29398
S'2569/100-SPST'
p32755
sg29400
I2167
sg29402
I10134
sg29404
I-200357
sg29406
I10077
sg29408
I-200853
sg29410
I-200731
sg29412
I4932
sg29414
I5
sg29416
I-200912
sg29418
I-200275
sg29420
I-200419
sg29422
I-200530
sg29424
I-200741
sg29426
I-200234
sg29428
I-200993
sg29430
I8710
sg29432
I-200931
sg29434
I-200843
sg29436
I-200682
sg29438
I8701
sg29440
I-200178
sg29442
I10244
sg29444
I-200888
sg29446
I5159
sg29448
I-200479
sg29450
I-200592
sg29452
I-200481
sg29454
I12577
sg29456
I-200322
sg29458
I4150
sg29460
I-200491
sg29462
I12494
sg29464
I4646
sg29466
S'1190/Quad 4x1 Mux'
p32756
sg29468
I-200223
sg29470
I8702
sg29472
I4917
sg29474
I-201019
sg29476
I-200169
sg29478
I-200827
sg29480
S'1193/Quad 8x1 Mux'
p32757
sg29482
I-200864
sg29484
I-200423
sg29486
I-200906
sg29488
I4148
sg29490
I-200340
sg29492
I8694
sg29494
S'2503/1-Wire 48x1 Mux'
p32758
sg29496
I-200101
sg29498
I50019
sg29500
I5208
sg29502
I-200705
sg29504
I8712
sg29506
I10280
sg29508
I2
sg29510
I-200770
sg29512
I-50012
sg29514
I-200266
sg29516
I2
sg29517
I-200803
sg29519
S'2598/Dual Transfer'
p32759
sg29521
I2083
sg29523
I-50209
sg29525
S'1169/100-SPST'
p32760
sg29527
I-200455
sg29529
I8789
sg29531
S'2532/2-Wire 4x64 Matrix'
p32761
sg29533
I10092
sg29535
I10090
sg29537
I10091
sg29539
I4886
sg29541
I-209803
sg29543
I-50264
sg29545
I-200806
sg29547
I200043
sg29549
I-200725
sg29551
I10268
sg29553
I-200467
sg29555
I-200661
sg29557
I-200920
sg29559
Nsg29560
I-200010
sg29562
I2325
sg29564
I-201024
sg29566
I-200279
sg29568
I10072
sg29570
S'1160/16-SPDT'
p32762
sg29572
I8691
sg29574
I-201035
sg29576
I-200934
sg29578
I200018
sg29580
I5430
sg29582
I-200746
sg29584
I2100
sg29586
I10303
sg29588
I10323
sg29590
I-200439
sg29592
S'1129/2-Wire Quad 4x16 Matrix'
p32763
sg29594
I-200960
sg29596
I-200978
sg29598
I-200044
sg29600
I-200793
sg29602
I8860
sg29604
I-201003
sg29606
I8823
sg29608
I6380
sg29610
I-200558
sg29612
I-200397
sg29614
I-200514
sg29616
I-200501
sg29618
S'2527/Independent'
p32764
sg29620
I-200315
sg29622
I-200994
sg29624
I10307
sg29626
I-200704
sg29628
I104
sg29630
I50014
sg29632
I5122
sg29634
I-50000
sg29636
I-200202
sg29638
I8598
sg29640
I-200869
sg29642
I4662
sg29644
I-200633
sg29646
I-50800
sg29648
I327
sg29650
I-200297
sg29652
I-200590
sg29654
I6273
sg29656
I8763
sg29658
I-200712
sg29660
I10322
sg29662
I1424
sg29664
I-50008
sg29666
S'2503/2-Wire Dual 12x1 Mux'
p32765
sg29668
I10450
sg29670
I-200703
sg29672
I-200227
sg29674
I5154
sg29676
I-200445
sg29678
I13612
sg29680
I-200260
sg29682
I12481
sg29684
I-200660
sg29686
I6382
sg29688
I-200789
sg29690
I-200613
sg29692
I10437
sg29694
I8740
sg29696
I4723
sg29698
I-200928
sg29700
I10069
sg29702
I6393
sg29704
I-200077
sg29706
I12482
sg29708
I-200918
sg29710
I-89133
sg29712
I-200167
sg29714
I-201065
sg29716
I6448
sg29718
I12555
sg29720
I6139
sg29722
I-200773
sg29724
I200038
sg29726
S'1193/Independent'
p32766
sg29728
I5378
sg29730
I4935
sg29732
I50500
sg29734
I5701
sg29736
I50005
sg29738
I-50016
sg29740
I-201057
sg29742
I-200375
sg29744
I-200802
sg29746
I-200221
sg29748
I-200341
sg29750
S'1167/Independent'
p32767
sg29752
I-200593
sg29754
I-200140
sg29756
I-200820
sg29758
I-200052
sg29760
I-50108
sg29762
I8606
sg29764
I4968
sg29766
I-200801
sg29768
I4147
sg29770
I-200976
sg29772
I-200356
sg29774
I-89140
sg29776
I8671
sg29778
I8852
sg29780
I-50351
sg29782
I-200452
sg29784
I-200427
sg29786
I-200068
sg29788
I200012
sg29790
I-200865
sg29792
I10128
sg29794
I-50107
sg29796
I-200102
sg29798
I-200385
sg29800
I-200638
sg29802
I12539
sg29804
I8703
sg29806
I-200504
sg29808
S'1193/Dual 16x1 Mux'
p32768
sg29810
I8899
sg29812
I8693
sg29814
I1616
sg29816
I-200414
sg29818
I4867
sg29820
I-200527
sg29822
I10235
sg29824
I8974
sg29826
I-200556
sg29828
I-200921
sg29830
I-200017
sg29832
I-200728
sg29834
I8817
sg29836
I-200585
sg29838
I-200890
sg29840
I1607
sg29842
I-200189
sg29844
I8720
sg29846
I-200104
sg29848
I-200011
sg29850
I-200235
sg29852
I12528
sg29854
I6442
sg29856
I8735
sg29858
I9000
sg29860
I8992
sg29862
I50107
sg29864
I-50503
sg29866
I-200396
sg29868
I1617
sg29870
I50009
sg29872
I-50103
sg29874
I-201089
sg29876
I8855
sg29878
I-200907
sg29880
I2
sg29881
I6357
sg29883
I-200041
sg29885
I1
sg29886
I0
sg29887
I-200962
sg29889
I-201027
sg29891
I-200524
sg29893
I-200323
sg29895
I-200263
sg29897
I8672
sg29899
I-200074
sg29901
I6358
sg29903
S'1175/2-Wire 98x1 Mux'
p32769
sg29905
I-201052
sg29907
I-89128
sg29909
I-50302
sg29911
I10066
sg29913
I-200199
sg29915
I-200130
sg29917
I1605
sg29919
I-200620
sg29921
I-201037
sg29923
I6231
sg29925
I-200647
sg29927
I-200954
sg29929
I8762
sg29931
I-200644
sg29933
I-200086
sg29935
I-200172
sg29937
I10272
sg29939
I-200608
sg29941
I4965
sg29943
I8670
sg29945
I-200825
sg29947
I10073
sg29949
I-200766
sg29951
I1687
sg29953
I-200599
sg29955
I5703
sg29957
I-201011
sg29959
I6320
sg29961
I8921
sg29963
I-200076
sg29965
I-200344
sg29967
I10113
sg29969
I-200039
sg29971
I-200778
sg29973
I-200846
sg29975
I6313
sg29977
S'1130/2-Wire Octal 16x1 Mux'
p32770
sg29979
I8895
sg29981
I8696
sg29983
I-200125
sg29985
I12530
sg29987
I-200380
sg29989
I50001
sg29991
I-200850
sg29993
I8761
sg29995
I-200325
sg29997
I10239
sg29999
I-200997
sg30001
I-200856
sg30003
I6278
sg30005
I8669
sg30007
I4648
sg30009
I-200252
sg30011
I-89144
sg30013
I-200598
sg30015
I12483
sg30017
I10432
sg30019
I-200924
sg30021
I10053
sg30023
I-200107
sg30025
I10449
sg30027
I10451
sg30029
I-200246
sg30031
I-200990
sg30033
I-200657
sg30035
I-200723
sg30037
I8745
sg30039
I-200336
sg30041
I-200282
sg30043
S'2501/4-Wire 12x1 Mux'
p32771
sg30045
I-200932
sg30047
I8813
sg30049
I-200970
sg30051
I-200154
sg30053
I2320
sg30055
I-200122
sg30057
I10054
sg30059
I5176
sg30061
I-200941
sg30063
I-200256
sg30065
I10356
sg30067
I6446
sg30069
I-200393
sg30071
I8806
sg30073
I-50252
sg30075
I8882
sg30077
I-200999
sg30079
I-89149
sg30081
I-200482
sg30083
S'2501/1-Wire 48x1 Mux'
p32772
sg30085
I10160
sg30087
I-200579
sg30089
I-50175
sg30091
I5127
sg30093
I323
sg30095
I-201017
sg30097
I-200757
sg30099
I8804
sg30101
I-200897
sg30103
I-200758
sg30105
I8847
sg30107
I-200318
sg30109
I-200804
sg30111
I-89147
sg30113
I-200639
sg30115
I-200559
sg30117
I10373
sg30119
I-200177
sg30121
I-200343
sg30123
I-200995
sg30125
I-54023
sg30127
I-201005
sg30129
I50101
sg30131
I-200492
sg30133
I12583
sg30135
I-200046
sg30137
I-200149
sg30139
I8826
sg30141
I10354
sg30143
I-200940
sg30145
I1688
sg30147
I-200767
sg30149
I-50018
sg30151
I-200736
sg30153
I-200213
sg30155
I10254
sg30157
S'2532/1-Wire Dual 8x32 Matrix'
p32773
sg30159
I-88705
sg30161
I-200575
sg30163
I-200877
sg30165
I-200335
sg30167
I8661
sg30169
I10441
sg30171
I5984
sg30173
I-200929
sg30175
I6189
sg30177
I-200597
sg30179
I-200641
sg30181
I4976
sg30183
I-200904
sg30185
I-50406
sg30187
I4722
sg30189
I-200674
sg30191
I-200873
sg30193
I6322
sg30195
I5716
sg30197
I-201012
sg30199
I50007
sg30201
I-200885
sg30203
I10282
sg30205
I-200134
sg30207
I-200570
sg30209
I8663
sg30211
I8572
sg30213
I664
sg30215
I-200180
sg30217
I-200138
sg30219
I-200859
sg30221
I-200799
sg30223
I-50502
sg30225
I-200913
sg30227
I-200910
sg30229
I-50401
sg30231
I8864
sg30233
I-200506
sg30235
I512
sg30237
I-200784
sg30239
I-200518
sg30241
I4176
sg30243
I4711
sg30245
I-201054
sg30247
I-200008
sg30249
I50151
sg30251
I6131
sg30253
I12549
sg30255
I-200774
sg30257
S'2532/1-Wire 16x32 Matrix'
p32774
sg30259
I-201034
sg30261
I-200521
sg30263
I8596
sg30265
S'2527/1-Wire 64x1 Mux'
p32775
sg30267
I-88717
sg30269
I-200943
sg30271
I8723
sg30273
I-200545
sg30275
I6428
sg30277
I-201094
sg30279
S'1127/4-Wire 16x1 Mux'
p32776
sg30281
I-200554
sg30283
I-200014
sg30285
I2192
sg30287
I8972
sg30289
I-200477
sg30291
I200007
sg30293
I-200965
sg30295
I6253
sg30297
I-200889
sg30299
I12505
sg30301
I8863
sg30303
I-200289
sg30305
I-200809
sg30307
S'1194/Quad 4x1 Mux'
p32777
sg30309
I-200688
sg30311
I200039
sg30313
I-200037
sg30315
I825
sg30317
I-200659
sg30319
I-200510
sg30321
I-200526
sg30323
I-50205
sg30325
I-200791
sg30327
I8673
sg30329
I8746
sg30331
I322
sg30333
I200040
sg30335
I-200502
sg30337
S'2501/2-Wire 24x1 Mux'
p32778
sg30339
I659
sg30341
I8805
sg30343
S'2503/4-Wire 12x1 Mux'
p32779
sg30345
I-200795
sg30347
I-200733
sg30349
I50102
sg30351
I8909
sg30353
I-50013
sg30355
I-200187
sg30357
I-200027
sg30359
I6387
sg30361
I4
sg30363
I-200292
sg30365
I6330
sg30367
S'2567/Independent'
p32780
sg30369
I1604
sg30371
I-200442
sg30373
I6244
sg30375
I4931
sg30377
I8618
sg30379
I12584
sg30381
I-200777
sg30383
I6271
sg30385
I-200409
sg30387
I8821
sg30389
I200021
sg30391
I-200548
sg30393
I5124
sg30395
I-200029
sg30397
I-50353
sg30399
I-200868
sg30401
I8887
sg30403
I-201020
sg30405
I2307
sg30407
I-50602
sg30409
I308
sg30411
I200011
sg30413
I-200499
sg30415
I4407
sg30417
I-200411
sg30419
I-89150
sg30421
I-50350
sg30423
I-200072
sg30425
I-200922
sg30427
I4149
sg30429
I5988
sg30431
I-200259
sg30433
I-200708
sg30435
I12526
sg30437
I-200075
sg30439
I-200402
sg30441
Nsg30442
I50255
sg30444
I5161
sg30446
I-200517
sg30448
I-200354
sg30450
I4242
sg30452
I10210
sg30454
I-200063
sg30456
I-200813
sg30458
I5732
sg30460
I6284
sg30462
I10093
sg30464
I-200822
sg30466
I10242
sg30468
I-200699
sg30470
I-200110
sg30472
I-200291
sg30474
I-200547
sg30476
I2434
sg30478
I5912
sg30480
I-88708
sg30482
I10186
sg30484
I10125
sg30486
I8708
sg30488
S'1161/8-SPDT'
p32781
sg30490
I-200200
sg30492
I-50500
sg30494
I2177
sg30496
I-200566
sg30498
S'1163R/Octal 4x1 Mux'
p32782
sg30500
I8699
sg30502
I-200576
sg30504
I-88900
sg30506
I-50005
sg30508
I5156
sg30510
I200019
sg30512
I-200020
sg30514
I8602
sg30516
I10313
sg30518
I-200500
sg30520
I-50014
sg30522
I-200111
sg30524
I-200536
sg30526
I10181
sg30528
I-200886
sg30530
I-200603
sg30532
I10199
sg30534
I-200018
sg30536
I-200730
sg30538
S'1127/2-Wire 4x8 Matrix'
p32783
sg30540
I10208
sg30542
I-201028
sg30544
I10209
sg30546
I10099
sg30548
I-200108
sg30550
S'1129/2-Wire 4x64 Matrix'
p32784
sg30552
I4868
sg30554
I-50254
sg30556
S'2501/1-Wire 48x1 Amplified Mux'
p32785
sg30558
I-200677
sg30560
I1651
sg30562
I-50354
sg30564
I-200055
sg30566
I-200847
sg30568
I0
sg30569
I-200529
sg30571
I-200942
sg30573
I8885
sg30575
I-200974
sg30577
I1
sg30578
I-200539
sg30580
I-200268
sg30582
I12492
sg30584
I-200023
sg30586
I12536
sg30588
I-50501
sg30590
I-200914
sg30592
I-200249
sg30594
I-200193
sg30596
I50104
sg30598
I-200624
sg30600
I-200454
sg30602
I-200329
sg30604
S'2576/Independent'
p32786
sg30606
I280
sg30608
I-200902
sg30610
I-200992
sg30612
I-200930
sg30614
S'1130/1-Wire 8x32 Matrix'
p32787
sg30616
I-200488
sg30618
I12487
sg30620
I-200025
sg30622
I10256
sg30624
I-200226
sg30626
I1682
sg30628
I-200156
sg30630
I-200841
sg30632
I-200754
sg30634
I-200625
sg30636
I-201043
sg30638
I-201073
sg30640
I-200617
sg30642
S'2593/Independent'
p32788
sg30644
I-200996
sg30646
I-200377
sg30648
I-200619
sg30650
I4649
sg30652
I-200602
sg30654
S'1130/1-Wire 4x64 Matrix'
p32789
sg30656
I4966
sg30658
I4675
sg30660
I4982
sg30662
I10178
sg30664
I-201036
sg30666
I-50265
sg30668
I8767
sg30670
I4887
sg30672
I-200407
sg30674
I12556
sg30676
I-200718
sg30678
I2165
sg30680
I-200938
sg30682
I-54010
sg30684
I-200937
sg30686
S'1130/2-Wire Quad 32x1 Mux'
p32790
sg30688
I6248
sg30690
I10106
sg30692
I5140
sg30694
I10101
sg30696
I10390
sg30698
I6170
sg30700
I8912
sg30702
I-200604
sg30704
I200035
sg30706
I1412
sg30708
I-200440
sg30710
I-200562
sg30712
I-200475
sg30714
I-200925
sg30716
I-200171
sg30718
S'1195/Quad 4x1 Mux'
p32791
sg30720
I-200627
sg30722
I8768
sg30724
I10348
sg30726
I8999
sg30728
I-200977
sg30730
I8611
sg30732
I-200701
sg30734
I-201066
sg30736
I-50009
sg30738
I-200326
sg30740
I-200750
sg30742
I-200546
sg30744
I-200899
sg30746
I4658
sg30748
I-200852
sg30750
S'1128/2-Wire 32x1 Mux'
p32792
sg30752
I5
sg30753
S'1128/4-Wire 16x1 Mux'
p32793
sg30755
I4144
sg30757
S'1130/1-Wire Quad 64x1 Mux'
p32794
sg30759
I-50651
sg30761
I-50413
sg30763
I12515
sg30765
I-200496
sg30767
I-200028
sg30769
I6194
sg30771
I-200689
sg30773
I4243
sg30775
I-200371
sg30777
I8824
sg30779
I8616
sg30781
I-200981
sg30783
I10124
sg30785
I10171
sg30787
I-200926
sg30789
I-200428
sg30791
I8898
sg30793
I-200665
sg30795
I8913
sg30797
S'2532/1-Wire 8x64 Matrix'
p32795
sg30799
I-200155
sg30801
I4
sg30803
I8739
sg30805
I-50411
sg30807
I4465
sg30809
I5145
sg30811
I5264
sg30813
I2321
sg30815
S'2565/16-SPST'
p32796
sg30817
I8825
sg30819
I-200065
sg30821
I-200743
sg30823
I-200204
sg30825
I12551
sg30827
I8914
sg30829
I-200022
sg30831
I10284
sg30833
I6230
sg30835
I6188
sg30837
I10342
sg30839
I12540
sg30841
I-200693
sg30843
I-200637
sg30845
I12514
sg30847
I12513
sg30849
I6463
sg30851
S'2529/2-Wire 8x16 Matrix'
p32797
sg30853
I-200720
sg30855
I10192
sg30857
I-200876
sg30859
I-201021
sg30861
I8576
sg30863
I-200858
sg30865
I10186
sg30867
I200030
sg30869
I-201091
sg30871
I-200949
sg30873
I8758
sg30875
S'2532/1-Wire 4x128 Matrix'
p32798
sg30877
I-200553
sg30879
I-200410
sg30881
I8889
sg30883
I8867
sg30885
I-200447
sg30887
I1
sg30888
I10398
sg30890
I-200764
sg30892
I-200359
sg30894
I-200136
sg30896
I-200231
sg30898
I8734
sg30900
I-200030
sg30902
I10110
sg30904
I8751
sg30906
I10078
sg30908
I-200404
sg30910
I10311
sg30912
I-200840
sg30914
S'2529/2-Wire Dual 4x16 Matrix'
p32799
sg30916
I8568
sg30918
I-200184
sg30920
I-200388
sg30922
I-200334
sg30924
I-200901
sg30926
I-200422
sg30928
I8819
sg30930
I8666
sg30932
I6252
sg30934
I10123
sg30936
I10041
sg30938
I6306
sg30940
I8729
sg30942
I8994
sg30944
I-200168
sg30946
I-200416
sg30948
I10389
sg30950
S'2591/4x1 Mux'
p32800
sg30952
I10182
sg30954
I-200097
sg30956
I-50405
sg30958
I-200183
sg30960
I-200552
sg30962
I-200056
sg30964
I6332
sg30966
S'2593/16x1 Mux'
p32801
sg30968
I-201088
sg30970
S'2570/40-SPDT'
p32802
sg30972
I-200796
sg30974
I2361
sg30976
I-200535
sg30978
I50016
sg30980
I5136
sg30982
I-50257
sg30984
I-200071
sg30986
I2085
sg30988
I-201007
sg30990
I-200272
sg30992
I12547
sg30994
I-200697
sg30996
I8998
sg30998
I-200421
sg31000
Nsg31001
I-200212
sg31003
I-201002
sg31005
I10379
sg31007
I0
sg31009
I-200040
sg31011
I5719
sg31013
I10362
sg31015
I6392
sg31017
I8862
sg31019
I-200290
sg31021
I-200832
sg31023
I-200683
sg31025
I-200304
sg31027
I-201048
sg31029
I10107
sg31031
I8757
sg31033
I-200737
sg31035
I5153
sg31037
I-200952
sg31039
I-200032
sg31041
I200016
sg31043
I-200817
sg31045
I-200879
sg31047
I10171
sg31049
I-200512
sg31051
I-89126
sg31053
I-201044
sg31055
I0
sg31056
I-200798
sg31058
S'1130/1-Wire Octal 32x1 Mux'
p32803
sg31060
I6288
sg31062
I-50203
sg31064
I-200443
sg31066
I-201072
sg31068
I6187
sg31070
I-200462
sg31072
I-201058
sg31074
S'2594/4x1 Mux'
p32804
sg31076
I-200775
sg31078
I-200567
sg31080
I-200091
sg31082
I-50204
sg31084
I-200986
sg31086
I50258
sg31088
I-200655
sg31090
I0
sg31091
I-200426
sg31093
I-89137
sg31095
I-200724
sg31097
I10081
sg31099
I-200946
sg31101
I-200264
sg31103
I-200893
sg31105
I200017
sg31107
I8687
sg31109
I-200787
sg31111
I-200716
sg31113
I8942
sg31115
I10083
sg31117
I10433
sg31119
I50256
sg31121
I-200729
sg31123
I8989
sg31125
I-200092
sg31127
I-200262
sg31129
I-50017
sg31131
I5767
sg31133
I12585
sg31135
I-200448
sg31137
I-200360
sg31139
S'1130/Independent'
p32805
sg31141
I10043
sg31143
Nsg31145
I-201015
sg31147
I-200073
sg31149
S'2530/2-Wire 4x16 Matrix'
p32806
sg31151
I329
sg31153
I-200043
sg31155
I12511
sg31157
I-200785
sg31159
I4361
sg31161
I50551
sg31163
I6110
sg31165
I-201081
sg31167
I-200713
sg31169
I-200161
sg31171
I12507
sg31173
I8856
sg31175
I6179
sg31177
I2452
sg31179
I4641
sg31181
I8692
sg31183
I8752
sg31185
I-89129
sg31187
I-200588
sg31189
I-200650
sg31191
I6317
sg31193
I-200082
sg31195
I8725
sg31197
I8748
sg31199
I-200198
sg31201
I-200399
sg31203
S'2593/Dual 4x1 Terminated Mux'
p32807
sg31205
I-200392
sg31207
I5713
sg31209
I135
sg31211
I200036
sg31213
I-200098
sg31215
I-88715
sg31217
I-200066
sg31219
I5014
sg31221
I50105
sg31223
I-200851
sg31225
I-200128
sg31227
I-200565
sg31229
I6323
sg31231
I12486
sg31233
I-200216
sg31235
Nsg31236
I8786
sg31238
I3
sg31239
I12573
sg31241
I10304
sg31243
Nsg31244
I-200247
sg31246
I-200687
sg31248
I4869
sg31250
I-200137
sg31252
I-200352
sg31254
I-200489
sg31256
I-200807
sg31258
I-200601
sg31260
I50006
sg31262
I8741
sg31264
S'2503/2-Wire Quad 6x1 Mux'
p32808
sg31266
I-200836
sg31268
I6331
sg31270
I-200425
sg31272
I5189
sg31274
I-200739
sg31276
S'1193/Dual 8x1 Terminated Mux'
p32809
sg31278
I-54020
sg31280
I-200139
sg31282
I10227
sg31284
I50003
sg31286
I-200230
sg31288
I4969
sg31290
I10438
sg31292
I-200892
sg31294
I-200652
sg31296
I-209800
sg31298
S'1193/16x1 Terminated Mux'
p32810
sg31300
I6250
sg31302
I-200537
sg31304
I-200474
sg31306
I200013
sg31308
I-200494
sg31310
I-201046
sg31312
I-200175
sg31314
I-200254
sg31316
I-200239
sg31318
I-200898
sg31320
I5704
sg31322
I148
sg31324
I-200950
sg31326
I-200376
sg31328
I6415
sg31330
S'2532/1-Wire Sixteen 2x16 Matrix'
p32811
sg31332
I8617
sg31334
I-200515
sg31336
I50405
sg31338
I200034
sg31340
I-201071
sg31342
I-200141
sg31344
I-200727
sg31346
I-200848
sg31348
I5702
sg31350
I-200905
sg31352
I-200816
sg31354
I-200301
sg31356
I-200923
sg31358
I-201092
sg31360
I8714
sg31362
I2
sg31364
I12546
sg31366
I-201074
sg31368
I12506
sg31370
I-50303
sg31372
S'1130/1-Wire 256x1 Mux'
p32812
sg31374
I-89134
sg31376
I-50202
sg31378
I8690
sg31380
I-200691
sg31382
I-50200
sg31384
I5141
sg31386
I-50004
sg31388
I-200353
sg31390
I-200206
sg31392
S'2501/2-Wire Dual 12x1 Mux'
p32813
sg31394
I-200732
sg31396
I-200267
sg31398
I-200880
sg31400
I-54002
sg31402
S'2590/4x1 Mux'
p32814
sg31404
I6275
sg31406
I-200045
sg31408
I8582
sg31410
I-200631
sg31412
I-201056
sg31414
I8861
sg31416
I50403
sg31418
I-200980
sg31420
I6301
sg31422
I10065
sg31424
I-88710
sg31426
I50260
sg31428
I10237
sg31430
I8736
sg31432
I8615
sg31434
I-200615
sg31436
I10137
sg31438
S'2593/8x1 Terminated Mux'
p32815
sg31440
I-200053
sg31442
I-200248
sg31444
I-200004
sg31446
I-200381
sg31448
I10204
sg31450
I-201039
sg31452
I-200786
sg31454
I8755
sg31456
I-200519
sg31458
I-200838
sg31460
I50015
sg31462
I-200676
sg31464
I10241
sg31466
I10146
sg31468
I-50019
sg31470
I10116
sg31472
I200029
sg31474
I6241
sg31476
I-200364
sg31478
I-200673
sg31480
I5160
sg31482
I-200628
sg31484
I-200621
sg31486
I-200351
sg31488
S'2530/1-Wire Dual 64x1 Mux'
p32816
sg31490
I10172
sg31492
I-200126
sg31494
S'2597/6x1 Terminated Mux'
p32817
sg31496
I-200144
sg31498
I-200346
sg31500
I-200317
sg31502
I-200093
sg31504
I-200450
sg31506
I-200250
sg31508
I6459
sg31510
I-200190
sg31512
I200010
sg31514
I8607
sg31516
I-200672
sg31518
I6140
sg31520
I12512
sg31522
I-200800
sg31524
I6379
sg31526
I-200735
sg31528
I-200497
sg31530
S'2503/2-Wire 24x1 Mux'
p32818
sg31532
I-50250
sg31534
I-200228
sg31536
I10326
sg31538
I10267
sg31540
I-200240
sg31542
I-200465
sg31544
I10188
sg31546
I-200782
sg31548
I-200067
sg31550
I-200389
sg31552
I-200939
sg31554
S'1175/1-Wire 196x1 Mux'
p32819
sg31556
I-200944
sg31558
I-200591
sg31560
I8908
sg31562
I200032
sg31564
I833
sg31566
I12470
sg31568
I-50700
sg31570
I-50207
sg31572
S'1129/2-Wire Dual 8x16 Matrix'
p32820
sg31574
I336
sg31576
S'2586/10-SPST'
p32821
sg31578
I10310
sg31580
I12527
sg31582
I10200
sg31584
I4709
sg31586
I6276
sg31588
I-200681
sg31590
I-201000
sg31592
I-201063
sg31594
I50011
sg31596
I8683
sg31598
I-200957
sg31600
I10105
sg31602
I-200261
sg31604
I6130
sg31606
I-200478
sg31608
I-200744
sg31610
I-200109
sg31612
I10158
sg31614
I-201045
sg31616
I-201090
sg31618
I6304
sg31620
I-200269
sg31622
I-200418
sg31624
I-201042
sg31626
I4962
sg31628
I8570
sg31630
I8765
sg31632
I-200327
sg31634
I-200337
sg31636
I4244
sg31638
I-201082
sg31640
I-200118
sg31642
I-200833
sg31644
I-200236
sg31646
I8900
sg31648
I-200358
sg31650
S'1130/1-Wire Dual 128x1 Mux'
p32822
sg31652
I8667
sg31654
I-200664
sg31656
I-200135
sg31658
I200033
sg31660
I-200398
sg31662
I10164
sg31664
I324
sg31666
I-200170
sg31668
S'2527/1-Wire Dual 32x1 Mux'
p32823
sg31670
I-89139
sg31672
S'2501/2-Wire Quad 6x1 Mux'
p32824
sg31674
I-200112
sg31676
I6240
sg31678
I-89148
sg31680
I-200845
sg31682
I6105
sg31684
I-200302
sg31686
I-200883
sg31688
I4487
sg31690
I-200966
sg31692
I-201075
sg31694
S'2530/Independent'
p32825
sg31696
I4488
sg31698
I12509
sg31700
I8686
sg31702
I-200413
sg31704
I-50256
sg31706
I8910
sg31708
I-200508
sg31710
I661
sg31712
I-200557
sg31714
I8743
sg31716
I10278
sg31718
I-200333
sg31720
I6192
sg31722
I-200503
sg31724
I6318
sg31726
I-200133
sg31728
I-200835
sg31730
I-1
sg31732
I-200394
sg31734
I50013
sg31736
I-200609
sg31738
I-200365
sg31740
I-200123
sg31742
I8865
sg31744
I-200533
sg31746
I6391
sg31748
I-200368
sg31750
S'2532/2-Wire 8x32 Matrix'
p32826
sg31752
I-200763
sg31754
I10439
sg31756
I-200819
sg31758
S'1129/2-Wire 8x32 Matrix'
p32827
sg31760
I-201076
sg31762
I8612
sg31764
I8733
sg31766
I-200671
sg31768
I-200596
sg31770
I6283
sg31772
I10299
sg31774
I-200012
sg31776
S'2576/2-Wire Quad 16x1 Mux'
p32828
sg31778
I-200947
sg31780
I-200668
sg31782
I4663
sg31784
I-200257
sg31786
I-200059
sg31788
I-200309
sg31790
I-209805
sg31792
I1
sg31793
I8787
sg31795
I10157
sg31797
I5731
sg31799
S'2530/2-Wire 64x1 Mux'
p32829
sg31801
I12504
sg31803
I-200849
sg31805
I-201030
sg31807
I-200370
sg31809
I-50102
sg31811
I-200441
sg31813
I8884
sg31815
I8822
sg31817
I6376
sg31819
I-50262
sg31821
I-200776
sg31823
I-200900
sg31825
I2184
sg31827
I-200679
sg31829
I-201064
sg31831
I-201032
sg31833
I-200563
sg31835
I200020
sg31837
I-200166
sg31839
I-89142
sg31841
I-89146
sg31843
I-200561
sg31845
I-200675
sg31847
I209802
sg31849
I12529
sg31851
I-200195
sg31853
I-200463
sg31855
I-209802
sg31857
I-200350
sg31859
I-200831
sg31861
I-200896
sg31863
I12510
sg31865
I10289
sg31867
I6443
sg31869
I10434
sg31871
I-200451
sg31873
I200005
sg31875
I8995
sg31877
I-200871
sg31879
I10431
sg31881
I-200162
sg31883
I8894
sg31885
I80
sg31887
I-200555
sg31889
I12508
sg31891
I-200287
sg31893
I-201093
sg31895
I-200945
sg31897
I8620
sg31899
I8904
sg31901
I-200430
sg31903
I8769
sg31905
I-200436
sg31907
I-200772
sg31909
I50351
sg31911
I0
sg31912
I8918
sg31914
I-200694
sg31916
I-200854
sg31918
I-200710
sg31920
I8818
sg31922
I200044
sg31924
I-200511
sg31926
I2185
sg31928
I-200878
sg31930
I6126
sg31932
I8728
sg31934
I10427
sg31936
I-200386
sg31938
I8880
sg31940
S'2529/2-Wire 4x32 Matrix'
p32830
sg31942
I-200953
sg31944
I-200975
sg31946
S'1128/2-Wire 4x8 Matrix'
p32831
sg31948
I50406
sg31950
I5768
sg31952
I8689
sg31954
S'2576/2-Wire Sixteen 4x1 Mux'
p32832
sg31956
I10119
sg31958
I-200088
sg31960
I8609
sg31962
I-200531
sg31964
I6145
sg31966
I10219
sg31968
I6381
sg31970
I-200580
sg31972
I-200090
sg31974
I8731
sg31976
I-200103
sg31978
I8963
sg31980
I9001
sg31982
I6109
sg31984
S'2568/31-SPST'
p32833
sg31986
I-200460
sg31988
I-200870
sg31990
S'2530/4-Wire Dual 16x1 Mux'
p32834
sg31992
I10097
sg31994
I-200378
sg31996
I-200582
sg31998
I6412
sg32000
I-200860
sg32002
I-201047
sg32004
I4360
sg32006
I-89124
sg32008
I-200435
sg32010
S'2503/2-Wire 4x6 Matrix'
p32835
sg32012
I8718
sg32014
I-200400
sg32016
I10302
sg32018
I-200812
sg32020
I-200220
sg32022
I-200324
sg32024
S'1129/2-Wire Dual 4x32 Matrix'
p32836
sg32026
I2456
sg32028
I-200587
sg32030
I-50002
sg32032
I-200218
sg32034
I209800
sg32036
I-200493
sg32038
I0
sg32039
I-50251
sg32041
I6344
sg32043
I-200288
sg32045
I-89136
sg32047
I-200127
sg32049
I10080
sg32051
I-200667
sg32053
I10047
sg32055
I8985
sg32057
I8697
sg32059
I-200658
sg32061
I8684
sg32063
I-200513
sg32065
I-200473
sg32067
I-200366
sg32069
I10152
sg32071
I8756
sg32073
I50254
sg32075
I6378
sg32077
I-200316
sg32079
I4680
sg32081
I304
sg32083
I-200064
sg32085
I-200211
sg32087
I5120
sg32089
I-200780
sg32091
I-50253
sg32093
I-200079
sg32095
I10286
sg32097
I5143
sg32099
I6202
sg32101
I8971
sg32103
I-201013
sg32105
I-200265
sg32107
I50410
sg32109
I1
sg32110
I-200016
sg32112
I-201010
sg32114
S'2527/2-Wire Dual 16x1 Mux'
p32837
sg32116
I-200635
sg32118
I-200113
sg32120
I10271
sg32122
I-50101
sg32124
I6414
sg32126
I6129
sg32128
I100
sg32130
I12523
sg32132
I-200328
sg32134
I2068
sg32136
I-201067
sg32138
I5175
sg32140
I-200208
sg32142
I-50015
sg32144
I-200395
sg32146
I-200278
sg32148
I-88709
sg32150
I-200124
sg32152
I2099
sg32154
I6190
sg32156
I-200747
sg32158
I-200061
sg32160
S'1127/1-Wire 64x1 Mux'
p32838
sg32162
I8709
sg32164
I6168
sg32166
I-200434
sg32168
I4457
sg32170
I-200192
sg32172
I-200594
sg32174
I-200988
sg32176
I-200516
sg32178
I6314
sg32180
I200026
sg32182
I-200232
sg32184
I-200884
sg32186
I-200437
sg32188
I-200709
sg32190
I5155
sg32192
I8662
sg32194
I200008
sg32196
I-200794
sg32198
I-200070
sg32200
I-201023
sg32202
I-200347
sg32204
I8583
sg32206
I-200534
sg32208
I-200917
sg32210
I50408
sg32212
I6435
sg32214
I6227
sg32216
I-89132
sg32218
I8738
sg32220
I-200105
sg32222
I8923
sg32224
I-200887
sg32226
I-200706
sg32228
I-200281
sg32230
I-200810
sg32232
I-200241
sg32234
I8959
sg32236
I-201085
sg32238
I-200006
sg32240
I8896
sg32242
S'1130/2-Wire 4x32 Matrix'
p32839
sg32244
I50355
sg32246
I6427
sg32248
I8881
sg32250
I6444
sg32252
I-200408
sg32254
I-200573
sg32256
I289
sg32258
I-200572
sg32260
I200014
sg32262
I12553
sg32264
I10435
sg32266
I-201038
sg32268
I-200229
sg32270
I-1
sg32272
I-200726
sg32274
S'1175/2-Wire 95x1 Mux'
p32840
sg32276
I8713
sg32278
S'2596/Dual 6x1 Mux'
p32841
sg32280
I-200911
sg32282
I-200116
sg32284
I6132
sg32286
I-200648
sg32288
I1600
sg32290
I8922
sg32292
I10163
sg32294
I-54000
sg32296
I-89131
sg32298
I-201060
sg32300
I-200438
sg32302
I-200742
sg32304
I-200205
sg32306
I8996
sg32308
I-200759
sg32310
I-200361
sg32312
I6286
sg32314
I1
sg32315
I-200610
sg32317
I-200081
sg32319
I-200401
sg32321
I8603
sg32323
I-200894
sg32325
I-200372
sg32327
I8695
sg32329
I-50450
sg32331
I-200696
sg32333
I200009
sg32335
I8575
sg32337
I200031
sg32339
I4724
sg32341
I6287
sg32343
I8717
sg32345
I1608
sg32347
I-200150
sg32349
I-200983
sg32351
I6216
sg32353
I-200698
sg32355
I12488
sg32357
S'1127/2-Wire 32x1 Mux'
p32842
sg32359
I-89141
sg32361
I-200815
sg32363
I6124
sg32365
I-200748
sg32367
I-50650
sg32369
I-89125
sg32371
I10102
sg32373
I-200255
sg32375
I10100
sg32377
S'1130/1-Wire Sixteen 16x1 Mux'
p32843
sg32379
I6411
sg32381
I10045
sg32383
I-200989
sg32385
I-200362
sg32387
I-50001
sg32389
I5714
sg32391
I8727
sg32393
I-200215
sg32395
I-200544
sg32397
I10251
sg32399
I10440
sg32401
I-200623
sg32403
I1686
sg32405
I-50003
sg32407
I1793
sg32409
I-200495
sg32411
I6302
sg32413
I-200963
sg32415
I-50007
sg32417
I-200096
sg32419
I-200251
sg32421
S'2532/1-Wire Dual 16x16 Matrix'
p32844
sg32423
I10189
sg32425
I-200662
sg32427
I-200284
sg32429
I-201004
sg32431
I12588
sg32433
I-200484
sg32435
I5975
sg32437
I8958
sg32439
I10325
sg32441
I-200089
sg32443
I4885
sg32445
I325
sg32447
I-201025
sg32449
I-200927
sg32451
I6146
sg32453
I-200146
sg32455
I-50208
sg32457
I-200779
sg32459
I-50151
sg32461
I-200830
sg32463
I10187
sg32465
I50002
sg32467
I-200238
sg32469
I-200054
sg32471
I12582
sg32473
I10360
sg32475
I-200855
sg32477
I-200038
sg32479
I-200403
sg32481
I1
sg32483
I-200384
sg32485
I8711
sg32487
I-50601
sg32489
I10159
sg32491
I-200444
sg32493
I306
sg32495
I-54001
sg32497
I-200033
sg32499
I-200196
sg32501
I50010
sg32503
I-200818
sg32505
I4
sg32506
I5121
sg32508
I8604
sg32510
Nsg32511
I-200935
sg32513
I8679
sg32515
I-200179
sg32517
I-200614
sg32519
I4661
sg32521
I-200456
sg32523
I-200867
sg32525
I8719
sg32527
I-200383
sg32529
I6279
sg32531
Nsg32532
I8990
sg32534
I-201040
sg32536
I-200550
sg32538
I-200781
sg32540
I-200313
sg32542
I665
sg32544
I-200866
sg32546
I-200821
sg32548
I1602
sg32550
I-200306
sg32552
I6339
sg32554
I-200203
sg32556
I5967
sg32558
I-200842
sg32560
I10117
sg32562
I-200967
sg32564
I-200714
sg32566
S'2501/2-Wire 24x1 Amplified Mux'
p32845
sg32568
I6388
sg32570
I8688
sg32572
I-200583
sg32574
I6460
sg32576
I8857
sg32578
I-200339
sg32580
I-200765
sg32582
I8573
sg32584
I-200197
sg32586
I-200909
sg32588
I6413
sg32590
I-200595
sg32592
I-200951
sg32594
I5158
sg32596
I-50255
sg32598
I-200117
sg32600
I-200540
sg32602
I6112
sg32604
I-200417
sg32606
I-201006
sg32608
I10198
sg32610
I5011
sg32612
I-200185
sg32614
I8608
sg32616
I-200058
sg32618
I-200106
sg32620
S'2575/1-Wire 196x1 Mux'
p32846
sg32622
I-200875
sg32624
I1609
sg32626
I-201001
sg32628
I-200319
sg32630
I10179
sg32632
I-200293
sg32634
I-200243
sg32636
I50262
sg32638
I-200715
sg32640
I6438
sg32642
Nsg32644
I8680
sg32646
I12524
sg32648
I-200982
sg32650
I-200209
sg32652
I8760
sg32654
I8707
sg32656
L0L
sg32658
I8888
sg32660
I-50263
sg32662
I-50402
sg32664
I-200009
sg32666
I-50201
sg32668
I10388
sg32670
I8814
sg32672
I-200147
sg32674
I-200985
sg32676
I-200956
sg32678
I10150
sg32680
I-200670
sg32682
I-50104
sg32684
I-200814
sg32686
I-200908
sg32688
I10426
sg32690
I-200087
sg32692
I-200891
sg32694
I-200955
sg32696
I660
sg32698
I10184
sg32700
I2054
sg32702
I-200684
sg32704
S'2530/1-Wire 8x16 Matrix'
p32847
sg32706
S'2530/1-Wire Octal 16x1 Mux'
p32848
sg32708
I-200663
sg32710
I-200972
sg32712
I4464
sg32714
I-50100
ssS'fnmacros'
p32849
(dp32850
S'DAQmxFailed'
p32851
(S'((%s)<0)'
p32852
(lp32853
I0
atp32854
ssS'structs'
p32855
(dp32856
sS'types'
p32857
(dp32858
S'uInt64'
p32859
(lp32860
S'unsigned __int64'
p32861
asS'int32'
p32862
(lp32863
S'signed long'
p32864
asS'int16'
p32865
(lp32866
S'signed short'
p32867
asS'DAQmxDoneEventCallbackPtr'
p32868
(lp32869
S'int32'
p32870
a((S'taskHandle'
p32871
(lp32872
S'TaskHandle'
p32873
aNtp32874
(S'status'
p32875
(lp32876
S'int32'
p32877
aNtp32878
(S'callbackData'
p32879
(lp32880
S'void'
p32881
ag22
aNtp32882
tp32883
ag2545
ag22
asS'float64'
p32884
(lp32885
S'double'
p32886
asS'TaskHandle'
p32887
(lp32888
S'uInt32'
p32889
asS'bool32'
p32890
(lp32891
S'uInt32'
p32892
asS'uInt8'
p32893
(lp32894
S'unsigned char'
p32895
asS'int8'
p32896
(lp32897
S'signed char'
p32898
asS'DAQmxEveryNSamplesEventCallbackPtr'
p32899
(lp32900
S'int32'
p32901
a((S'taskHandle'
p32902
(lp32903
S'TaskHandle'
p32904
aNtp32905
(S'everyNsamplesEventType'
p32906
(lp32907
S'int32'
p32908
aNtp32909
(S'nSamples'
p32910
(lp32911
S'uInt32'
p32912
aNtp32913
(S'callbackData'
p32914
(lp32915
S'void'
p32916
ag22
aNtp32917
tp32918
ag2545
ag22
asS'uInt16'
p32919
(lp32920
S'unsigned short'
p32921
asS'int64'
p32922
(lp32923
S'__int64'
p32924
asS'uInt32'
p32925
(lp32926
S'unsigned long'
p32927
asS'float32'
p32928
(lp32929
S'float'
p32930
asS'DAQmxSignalEventCallbackPtr'
p32931
(lp32932
S'int32'
p32933
a((S'taskHandle'
p32934
(lp32935
S'TaskHandle'
p32936
aNtp32937
(S'signalID'
p32938
(lp32939
S'int32'
p32940
aNtp32941
(S'callbackData'
p32942
(lp32943
S'void'
p32944
ag22
aNtp32945
tp32946
ag2545
ag22
assssS'opts'
p32947
(dp32948
S'files'
p32949
(lp32950
S'NIDAQmx.h'
p32951
asS'replace'
p32952
(dp32953
g32951
Nsss.